org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test008() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test009() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0010() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0011() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0012() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0013() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    mockGregorianCalendar0.getFirstDayOfWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0014() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    mockGregorianCalendar0.getMinimalDaysInFirstWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0015() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    mockGregorianCalendar0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0017() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0018() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0019() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0020() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0021() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    mockGregorianCalendar0.getFirstDayOfWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0022() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    mockGregorianCalendar0.getMinimalDaysInFirstWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0023() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    mockGregorianCalendar0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0025() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    date0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Date.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0026() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0027() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0028() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0039() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0040() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0041() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0042() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    mockGregorianCalendar0.getFirstDayOfWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0043() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    mockGregorianCalendar0.getMinimalDaysInFirstWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0044() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    mockGregorianCalendar0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0046() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    date0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Date.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0047() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0048() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0049() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0050() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();
    Date date0 = mockGregorianCalendar0.getGregorianChange();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0159() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 1, 16, (-359), 1992, 3);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0170() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 1, 16, (-359), 1992, 3);
    String string0 = fastDateFormat0.format((Calendar) mockGregorianCalendar0);
    mockGregorianCalendar0.getMinimalDaysInFirstWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0171() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 1, 16, (-359), 1992, 3);
    String string0 = fastDateFormat0.format((Calendar) mockGregorianCalendar0);
    mockGregorianCalendar0.getFirstDayOfWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0172() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 1, 16, (-359), 1992, 3);
    String string0 = fastDateFormat0.format((Calendar) mockGregorianCalendar0);
    mockGregorianCalendar0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0273() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0274() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0275() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0276() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0277() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0278() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0279() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0285() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0286() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0287() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0288() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0289() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0290() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0298() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    fastDateFormat0.init();
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test0299() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    fastDateFormat0.init();
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test02100() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    fastDateFormat0.init();
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test02101() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    fastDateFormat0.init();
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test02102() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    fastDateFormat0.init();
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test02103() throws Throwable {
    Locale locale0 = Locale.forLanguageTag(""6"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);
    fastDateFormat0.init();
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04126() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04127() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04128() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04129() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04130() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04131() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04132() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04138() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04139() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04140() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04141() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04142() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04143() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04152() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04153() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04154() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04155() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04156() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test04157() throws Throwable {
    Locale locale0 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", locale0);
    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test05161() throws Throwable {
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test05163() throws Throwable {
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test05164() throws Throwable {
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test05165() throws Throwable {
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test05166() throws Throwable {
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test05172() throws Throwable {
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, timeZone0);
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test05173() throws Throwable {
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, timeZone0);
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test05174() throws Throwable {
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, timeZone0);
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test05175() throws Throwable {
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, timeZone0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06179() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06180() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06181() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06182() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06183() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06184() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06185() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06186() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06187() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06193() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06194() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06195() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06196() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06197() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06198() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06199() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06208() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    int int0 = fastDateFormat0.getMaxLengthEstimate();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06209() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    int int0 = fastDateFormat0.getMaxLengthEstimate();
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06210() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    int int0 = fastDateFormat0.getMaxLengthEstimate();
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06211() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    int int0 = fastDateFormat0.getMaxLengthEstimate();
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06212() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    int int0 = fastDateFormat0.getMaxLengthEstimate();
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06213() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    int int0 = fastDateFormat0.getMaxLengthEstimate();
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test06214() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);
    int int0 = fastDateFormat0.getMaxLengthEstimate();
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07218() throws Throwable {
    Locale locale0 = Locale.US;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07219() throws Throwable {
    Locale locale0 = Locale.US;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07220() throws Throwable {
    Locale locale0 = Locale.US;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07221() throws Throwable {
    Locale locale0 = Locale.US;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07222() throws Throwable {
    Locale locale0 = Locale.US;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07223() throws Throwable {
    Locale locale0 = Locale.US;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07224() throws Throwable {
    Locale locale0 = Locale.US;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07230() throws Throwable {
    Locale locale0 = Locale.US;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (TimeZone) null, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07231() throws Throwable {
    Locale locale0 = Locale.US;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (TimeZone) null, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07232() throws Throwable {
    Locale locale0 = Locale.US;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (TimeZone) null, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07233() throws Throwable {
    Locale locale0 = Locale.US;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (TimeZone) null, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07234() throws Throwable {
    Locale locale0 = Locale.US;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (TimeZone) null, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test07235() throws Throwable {
    Locale locale0 = Locale.US;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (TimeZone) null, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08239() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08240() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08241() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08242() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08243() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08244() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08245() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08246() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08248() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08249() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08250() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08251() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08257() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&'C"", timeZone0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08258() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&'C"", timeZone0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08259() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&'C"", timeZone0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08260() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&'C"", timeZone0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08261() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&'C"", timeZone0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08262() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&'C"", timeZone0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08263() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&'C"", timeZone0, locale0);
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08264() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&'C"", timeZone0, locale0);
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08265() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&'C"", timeZone0, locale0);
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test08266() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&'C"", timeZone0, locale0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10278() throws Throwable {
    Locale locale0 = Locale.ITALY;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10279() throws Throwable {
    Locale locale0 = Locale.ITALY;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10280() throws Throwable {
    Locale locale0 = Locale.ITALY;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10281() throws Throwable {
    Locale locale0 = Locale.ITALY;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10282() throws Throwable {
    Locale locale0 = Locale.ITALY;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10283() throws Throwable {
    Locale locale0 = Locale.ITALY;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10284() throws Throwable {
    Locale locale0 = Locale.ITALY;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10290() throws Throwable {
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&."", locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10291() throws Throwable {
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&."", locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10292() throws Throwable {
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&."", locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10293() throws Throwable {
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&."", locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10294() throws Throwable {
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&."", locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test10295() throws Throwable {
    Locale locale0 = Locale.ITALY;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""&."", locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14323() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14324() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14330() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14334() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14335() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);
    StringBuffer stringBuffer0 = new StringBuffer("""");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14336() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14337() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14345() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14350() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14351() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14352() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test14353() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15356() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15357() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15358() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15359() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15360() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15361() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15362() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15368() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15369() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15370() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15371() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15372() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15373() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15374() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15378() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15385() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);
    String string0 = fastDateFormat0.format((Date) mockDate0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15386() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);
    String string0 = fastDateFormat0.format((Date) mockDate0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15387() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);
    String string0 = fastDateFormat0.format((Date) mockDate0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15388() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);
    String string0 = fastDateFormat0.format((Date) mockDate0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15389() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);
    String string0 = fastDateFormat0.format((Date) mockDate0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15390() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);
    String string0 = fastDateFormat0.format((Date) mockDate0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test15391() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    Locale locale0 = Locale.GERMAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0, locale0);
    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);
    String string0 = fastDateFormat0.format((Date) mockDate0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16404() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16406() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16407() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16408() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16409() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16411() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16412() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16413() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16414() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16415() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    calendar0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16416() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    calendar0.getMinimalDaysInFirstWeek();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16417() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    calendar0.isLenient();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16418() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    calendar0.getFirstDayOfWeek();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16428() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDateFormat0.format(calendar0);
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16429() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDateFormat0.format(calendar0);
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16430() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDateFormat0.format(calendar0);
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16431() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDateFormat0.format(calendar0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16432() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDateFormat0.format(calendar0);
    calendar0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16433() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDateFormat0.format(calendar0);
    calendar0.getMinimalDaysInFirstWeek();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16434() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDateFormat0.format(calendar0);
    calendar0.isLenient();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test16435() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", (Locale) null);
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""");
    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();
    Calendar calendar0 = MockCalendar.getInstance(timeZone0);
    String string0 = fastDateFormat0.format(calendar0);
    calendar0.getFirstDayOfWeek();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test17447() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test17448() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test17449() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test17457() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((long) 3, stringBuffer0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test17461() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((long) 3, stringBuffer0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test17462() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((long) 3, stringBuffer0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test17463() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((long) 3, stringBuffer0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test17464() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance("""", timeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((long) 3, stringBuffer0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18474() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18475() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18476() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18477() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18478() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    calendar0.isLenient();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18479() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    calendar0.getFirstDayOfWeek();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18480() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    calendar0.getMinimalDaysInFirstWeek();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18481() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    calendar0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18482() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18483() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18484() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18495() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    mockSimpleDateFormat0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18496() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    mockSimpleDateFormat0.toLocalizedPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18497() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    mockSimpleDateFormat0.toPattern();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18498() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    calendar0.isLenient();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18499() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    calendar0.getFirstDayOfWeek();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18500() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    calendar0.getMinimalDaysInFirstWeek();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18501() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    calendar0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Calendar.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18502() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18503() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18504() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test18505() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();
    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""B:>]S[=_Pv8oQ"");
    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22533() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22534() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22535() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22536() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22537() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22538() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22539() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22540() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22541() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22542() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22543() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22544() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22545() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22551() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22552() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22553() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22554() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22555() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22556() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22557() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22558() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22559() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22560() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test22561() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, """");
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = new FastDateFormat("""", simpleTimeZone0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test23566() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3673, """");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test23567() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3673, """");
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test23568() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3673, """");
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test23569() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3673, """");
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test23570() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3673, """");
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test23571() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3673, """");
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24573() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24574() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24575() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24576() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24577() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24578() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24579() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    Locale locale0 = Locale.KOREA;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24580() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    Locale locale0 = Locale.KOREA;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24581() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    Locale locale0 = Locale.KOREA;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24582() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    Locale locale0 = Locale.KOREA;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24583() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    Locale locale0 = Locale.KOREA;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24584() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    Locale locale0 = Locale.KOREA;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test24585() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, ""org.apache.commons.lang3.time.FastDateFormat$TextField"");
    Locale locale0 = Locale.KOREA;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test29593() throws Throwable {
    Locale locale0 = Locale.CANADA;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test29594() throws Throwable {
    Locale locale0 = Locale.CANADA;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test29595() throws Throwable {
    Locale locale0 = Locale.CANADA;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test29596() throws Throwable {
    Locale locale0 = Locale.CANADA;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test29597() throws Throwable {
    Locale locale0 = Locale.CANADA;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test29598() throws Throwable {
    Locale locale0 = Locale.CANADA;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test29599() throws Throwable {
    Locale locale0 = Locale.CANADA;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test32605() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test32606() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test32607() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test32608() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test32609() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test32610() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test32611() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35623() throws Throwable {
    Locale locale0 = Locale.KOREAN;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35624() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35625() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35626() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35627() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35628() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35629() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35635() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    FastDateFormat fastDateFormat0 = new FastDateFormat(""9]Y~%Db~VyH"", (TimeZone) null, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35636() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    FastDateFormat fastDateFormat0 = new FastDateFormat(""9]Y~%Db~VyH"", (TimeZone) null, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35637() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    FastDateFormat fastDateFormat0 = new FastDateFormat(""9]Y~%Db~VyH"", (TimeZone) null, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35638() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    FastDateFormat fastDateFormat0 = new FastDateFormat(""9]Y~%Db~VyH"", (TimeZone) null, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35639() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    FastDateFormat fastDateFormat0 = new FastDateFormat(""9]Y~%Db~VyH"", (TimeZone) null, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35640() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    FastDateFormat fastDateFormat0 = new FastDateFormat(""9]Y~%Db~VyH"", (TimeZone) null, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test35644() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    FastDateFormat fastDateFormat0 = new FastDateFormat(""9]Y~%Db~VyH"", (TimeZone) null, locale0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1, 1, 0, 0, 3);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36646() throws Throwable {
    Locale locale0 = Locale.ROOT;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36647() throws Throwable {
    Locale locale0 = Locale.ROOT;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36648() throws Throwable {
    Locale locale0 = Locale.ROOT;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36649() throws Throwable {
    Locale locale0 = Locale.ROOT;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36650() throws Throwable {
    Locale locale0 = Locale.ROOT;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36651() throws Throwable {
    Locale locale0 = Locale.ROOT;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36652() throws Throwable {
    Locale locale0 = Locale.ROOT;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36658() throws Throwable {
    Locale locale0 = Locale.ROOT;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36659() throws Throwable {
    Locale locale0 = Locale.ROOT;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36660() throws Throwable {
    Locale locale0 = Locale.ROOT;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36661() throws Throwable {
    Locale locale0 = Locale.ROOT;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36662() throws Throwable {
    Locale locale0 = Locale.ROOT;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test36663() throws Throwable {
    Locale locale0 = Locale.ROOT;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38692() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38693() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38695() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.isDirect();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38696() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38697() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.hasArray();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38698() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.isReadOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38699() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.remaining();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38700() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.hasRemaining();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38701() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.position();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38702() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.limit();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38703() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.arrayOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38704() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38705() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    charBuffer0.capacity();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38707() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38709() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.isDirect();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38710() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38711() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.hasArray();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38712() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.isReadOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38713() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.remaining();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38714() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.hasRemaining();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38715() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.position();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38716() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.limit();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38717() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.arrayOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38718() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38719() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    charBuffer0.capacity();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38720() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38721() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38734() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    mockGregorianCalendar0.getMinimalDaysInFirstWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38735() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    mockGregorianCalendar0.getFirstDayOfWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38736() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    mockGregorianCalendar0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38738() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.isDirect();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38739() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38740() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.hasArray();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38741() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.isReadOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38742() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.remaining();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38743() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.hasRemaining();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38744() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.position();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38745() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.limit();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38746() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.arrayOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38747() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/CharBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38748() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    charBuffer0.capacity();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/nio/Buffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38749() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38750() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38751() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test38752() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);
    char[] charArray0 = new char[4];
    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);
    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);
    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39754() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39755() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39761() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39765() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39766() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39767() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39768() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39769() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39770() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39771() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39772() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39773() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39774() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39775() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39776() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39778() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39779() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39780() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39781() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39782() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39783() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39784() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39790() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39795() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39797() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    locale1.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39798() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    locale1.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39799() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    locale1.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39800() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    locale1.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39801() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    locale1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39802() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    locale1.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39803() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    locale1.equals((Object) locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39811() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39812() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39813() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39814() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39815() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39816() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39820() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    locale0.equals((Object) locale1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39829() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39834() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    string1.equals((Object) string0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/String.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39843() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39847() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    timeZone1.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39857() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39863() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39864() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    parsePosition0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39865() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    parsePosition0.getErrorIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39866() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    parsePosition0.getIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39875() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39876() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39877() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39878() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39879() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39880() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39884() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    parsePosition0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39885() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    parsePosition0.getErrorIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39886() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    parsePosition0.getIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39887() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    locale0.equals((Object) locale1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39890() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39893() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    locale1.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39894() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    locale1.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39895() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    locale1.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39896() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    locale1.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39897() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    locale1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39898() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    locale1.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39899() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    locale1.equals((Object) locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39900() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    string2.equals((Object) string1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/String.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39901() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    string2.equals((Object) string0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/String.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39902() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39903() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39904() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.toPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39905() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getPositivePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39906() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getNegativePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39907() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getNegativeSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39908() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getMultiplier();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39909() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getMinimumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39910() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.isParseBigDecimal();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39911() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getPositiveSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39912() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getGroupingSize();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39913() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getMinimumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39914() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.isParseIntegerOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39915() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.toLocalizedPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39916() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.isGroupingUsed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39917() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.isDecimalSeparatorAlwaysShown();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39918() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getMaximumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39919() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getRoundingMode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39920() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    decimalFormat0.getMaximumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39921() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39922() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39923() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39934() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39935() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39936() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39940() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39941() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39945() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39959() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39960() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39961() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39965() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39966() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39967() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    stringBuffer2.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39968() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    stringBuffer2.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39972() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39973() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39974() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    fieldPosition0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39975() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39976() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39977() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39994() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.toPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39995() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getPositivePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39996() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getNegativePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39997() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getNegativeSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39998() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getMultiplier();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test39999() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getMinimumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391000() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.isParseBigDecimal();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391001() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getPositiveSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391002() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getGroupingSize();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391003() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getMinimumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391004() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.isParseIntegerOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391005() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.toLocalizedPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391006() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.isGroupingUsed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391007() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.isDecimalSeparatorAlwaysShown();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391008() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getMaximumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391009() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getRoundingMode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391010() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    decimalFormat0.getMaximumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391011() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391012() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391013() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391017() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391018() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391019() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391020() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    fieldPosition0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391021() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391022() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391023() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    stringBuffer3.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391024() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    stringBuffer3.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391028() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391052() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.toPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391053() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getPositivePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391054() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getNegativePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391055() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getNegativeSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391056() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getMultiplier();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391057() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getMinimumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391058() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.isParseBigDecimal();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391059() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getPositiveSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391060() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getGroupingSize();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391061() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getMinimumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391062() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.isParseIntegerOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391063() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.toLocalizedPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391064() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.isGroupingUsed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391065() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.isDecimalSeparatorAlwaysShown();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391066() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getMaximumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391067() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getRoundingMode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391068() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    decimalFormat0.getMaximumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391069() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391070() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391071() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391075() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391076() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391077() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391078() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    fieldPosition0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391079() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391080() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391081() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    stringBuffer3.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391082() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    stringBuffer3.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391083() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    stringBuffer4.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391084() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    stringBuffer4.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391123() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.toPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391124() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getPositivePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391125() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getNegativePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391126() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getNegativeSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391127() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getMultiplier();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391128() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getMinimumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391129() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.isParseBigDecimal();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391130() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getPositiveSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391131() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getGroupingSize();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391132() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getMinimumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391133() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.isParseIntegerOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391134() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.toLocalizedPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391135() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.isGroupingUsed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391136() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.isDecimalSeparatorAlwaysShown();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391137() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getMaximumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391138() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getRoundingMode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391139() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    decimalFormat0.getMaximumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391140() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391141() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391142() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391146() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391147() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391148() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391149() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391150() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391151() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391152() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391153() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391154() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391155() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    fieldPosition0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391156() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391157() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391158() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    stringBuffer3.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391159() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    stringBuffer3.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391160() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    stringBuffer5.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391161() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    stringBuffer5.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test391168() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    ZoneId zoneId0 = timeZone0.toZoneId();
    boolean boolean0 = timeZone0.observesDaylightTime();
    String string0 = timeZone0.getDisplayName(locale0);
    boolean boolean1 = fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    String string1 = fastDateFormat0.getPattern();
    TimeZone timeZone1 = fastDateFormat0.getTimeZone();
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    Object object0 = fastDateFormat1.parseObject("""", parsePosition0);
    String string2 = locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    StringBuffer stringBuffer2 = stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer4 = stringBuffer3.append(""%#AZm[miAtF$[5E-"");
    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);
    locale0.equals((Object) locale1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401171() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401172() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401173() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401174() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401175() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401176() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401177() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401178() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401179() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401180() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401181() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401182() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401188() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401189() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401190() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401191() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401192() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401193() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401194() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401195() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401196() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test401197() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), ""$(@RsifXZVY_3`"");
    Locale locale0 = new Locale(""0|@e(WN#v="", """", ""0|@e(WN#v="");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test411201() throws Throwable {
    Locale locale0 = Locale.CHINESE;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test411202() throws Throwable {
    Locale locale0 = Locale.CHINESE;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test411203() throws Throwable {
    Locale locale0 = Locale.CHINESE;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test411204() throws Throwable {
    Locale locale0 = Locale.CHINESE;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test411205() throws Throwable {
    Locale locale0 = Locale.CHINESE;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test411206() throws Throwable {
    Locale locale0 = Locale.CHINESE;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test411207() throws Throwable {
    Locale locale0 = Locale.CHINESE;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test421209() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test421210() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey"");
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test431219() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    TimeZone timeZone0 = TimeZone.getDefault();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test431220() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    TimeZone timeZone0 = TimeZone.getDefault();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test431226() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    TimeZone timeZone0 = TimeZone.getDefault();
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test431227() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    TimeZone timeZone0 = TimeZone.getDefault();
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test431228() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    TimeZone timeZone0 = TimeZone.getDefault();
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test431229() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    TimeZone timeZone0 = TimeZone.getDefault();
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test431230() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    TimeZone timeZone0 = TimeZone.getDefault();
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test431231() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    TimeZone timeZone0 = TimeZone.getDefault();
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test431232() throws Throwable {
    Locale locale0 = Locale.ENGLISH;
    TimeZone timeZone0 = TimeZone.getDefault();
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451239() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451240() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451241() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451242() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451243() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451244() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451245() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451246() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451247() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451249() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451250() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451251() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451252() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451253() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451254() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451255() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451256() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451258() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451259() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451260() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451261() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451262() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451263() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451264() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451270() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451274() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/Long.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451276() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451277() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451278() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451279() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451280() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451281() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451282() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451283() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451284() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451285() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getMaximumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451286() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getMinimumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451287() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.isGroupingUsed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451288() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.isParseBigDecimal();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451289() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.isParseIntegerOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451290() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getGroupingSize();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451291() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getMaximumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451292() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.toLocalizedPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451293() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getNegativeSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451294() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getRoundingMode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451295() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getNegativePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451296() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getPositivePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451297() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getMultiplier();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451298() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getPositiveSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451299() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.toPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451300() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.getMinimumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451301() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    decimalFormat0.isDecimalSeparatorAlwaysShown();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451302() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451303() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451304() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451305() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451306() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451307() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451308() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451309() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451312() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451313() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451314() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451315() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451316() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451317() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451318() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getMaximumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451319() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getMinimumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451320() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.isGroupingUsed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451321() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.isParseBigDecimal();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451322() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.isParseIntegerOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451323() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getGroupingSize();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451324() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getMaximumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451325() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.toLocalizedPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451326() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getNegativeSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451327() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getRoundingMode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451328() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getNegativePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451329() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getPositivePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451330() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getMultiplier();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451331() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getPositiveSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451332() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.toPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451333() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.getMinimumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451334() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    decimalFormat0.isDecimalSeparatorAlwaysShown();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451335() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451336() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451337() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451338() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451339() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451340() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451341() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451342() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451347() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451348() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451349() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    stringBuffer2.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451350() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    stringBuffer2.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451351() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451361() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451362() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451363() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451364() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451365() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451366() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451367() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getMaximumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451368() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getMinimumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451369() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.isGroupingUsed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451370() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.isParseBigDecimal();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451371() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.isParseIntegerOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451372() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getGroupingSize();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451373() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getMaximumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451374() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.toLocalizedPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451375() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getNegativeSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451376() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getRoundingMode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451377() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getNegativePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451378() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getPositivePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451379() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getMultiplier();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451380() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getPositiveSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451381() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.toPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451382() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.getMinimumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451383() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    decimalFormat0.isDecimalSeparatorAlwaysShown();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451384() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451385() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451386() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451387() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451388() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451389() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451390() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451391() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    stringBuffer3.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451392() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    stringBuffer3.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451393() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451394() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451407() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    stringBuffer4.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451408() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    stringBuffer4.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451409() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451410() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451411() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451412() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451413() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451414() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451415() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451416() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getMaximumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451417() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getMinimumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451418() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.isGroupingUsed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451419() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.isParseBigDecimal();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451420() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.isParseIntegerOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451421() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getGroupingSize();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451422() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getMaximumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451423() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.toLocalizedPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451424() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getNegativeSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451425() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getRoundingMode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451426() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getNegativePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451427() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getPositivePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451428() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getMultiplier();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451429() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getPositiveSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451430() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.toPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451431() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.getMinimumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451432() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    decimalFormat0.isDecimalSeparatorAlwaysShown();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451433() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451434() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451435() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451436() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451437() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451438() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451439() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451441() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    mockGregorianCalendar0.getMinimalDaysInFirstWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451442() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    mockGregorianCalendar0.getFirstDayOfWeek();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451443() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    mockGregorianCalendar0.isLenient();
},ERROR,java.util.NoSuchElementException,[ERROR] - Focal method not found. No candidate methods found in the original class, analyzing both the name and the number of parameters.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451464() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451465() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    stringBuffer5.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451466() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    stringBuffer5.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451467() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451468() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451469() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451470() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451471() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451472() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451476() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getMaximumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451477() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getMinimumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451478() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.isGroupingUsed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451479() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.isParseBigDecimal();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451480() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.isParseIntegerOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451481() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getGroupingSize();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451482() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getMaximumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451483() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.toLocalizedPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451484() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getNegativeSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451485() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getRoundingMode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451486() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getNegativePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451487() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getPositivePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451488() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getMultiplier();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451489() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getPositiveSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451490() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.toPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451491() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.getMinimumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451492() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    decimalFormat0.isDecimalSeparatorAlwaysShown();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451493() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451494() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451495() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451496() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451497() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451498() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451499() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451529() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451530() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    stringBuffer5.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451531() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    stringBuffer5.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451532() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    stringBuffer6.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451533() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    stringBuffer6.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451534() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451535() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451536() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451537() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451538() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451539() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451543() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getMaximumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451544() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getMinimumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451545() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.isGroupingUsed();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451546() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.isParseBigDecimal();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451547() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.isParseIntegerOnly();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/NumberFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451548() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getGroupingSize();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451549() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getMaximumFractionDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451550() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.toLocalizedPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451551() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getNegativeSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451552() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getRoundingMode();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451553() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getNegativePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451554() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getPositivePrefix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451555() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getMultiplier();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451556() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getPositiveSuffix();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451557() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.toPattern();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451558() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.getMinimumIntegerDigits();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451559() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    decimalFormat0.isDecimalSeparatorAlwaysShown();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/DecimalFormat.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451560() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451561() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451562() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451563() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451564() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451565() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451566() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451573() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451574() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451575() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451576() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451577() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451578() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451579() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451586() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    String string2 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451587() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    String string2 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451588() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    String string2 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451589() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    String string2 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451590() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    String string2 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451591() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    String string2 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451592() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    String string2 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451593() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    String string2 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    string2.equals((Object) string1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/String.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test451594() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    TimeZone.setDefault(timeZone0);
    Locale locale0 = Locale.CANADA_FRENCH;
    String string0 = timeZone0.getDisplayName(false, 0, locale0);
    String string1 = timeZone0.getDisplayName(false, 0, locale0);
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);
    Long long0 = new Long(1L);
    boolean boolean0 = timeZone0.observesDaylightTime();
    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);
    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) ""GMT"");
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);
    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);
    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) ""GMT"");
    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);
    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);
    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);
    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);
    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);
    String string2 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);
    string2.equals((Object) string0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/String.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461595() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461596() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461597() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461598() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461599() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461600() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461606() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461607() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461608() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461609() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461610() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461614() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461615() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461616() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461617() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461618() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    parsePosition0.getIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461619() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    parsePosition0.getErrorIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461620() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    parsePosition0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461626() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461627() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461628() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461629() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461630() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461634() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    parsePosition0.getIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461635() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    parsePosition0.getErrorIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461636() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    parsePosition0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/ParsePosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461637() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461640() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461641() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461642() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    stringBuffer1.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461643() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    stringBuffer1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461653() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461654() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461655() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461656() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461657() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461661() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    stringBuffer0.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461662() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    stringBuffer0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461663() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    stringBuffer2.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461664() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    stringBuffer2.length();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/lang/StringBuffer.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461669() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461670() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461671() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461672() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461673() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461677() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461678() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461679() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461680() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461681() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461682() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461683() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461684() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461685() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461687() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    locale1.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461688() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    locale1.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461689() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    locale1.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461690() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    locale1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461691() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    locale1.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461692() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    locale1.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461693() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    locale1.equals((Object) locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461694() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList<java/util/Locale/LanguageRange>.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461695() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    linkedList0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461696() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedHashSet<java/util/Locale>.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461697() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    linkedHashSet0.contains(locale1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/HashSet.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461698() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    linkedHashSet0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/HashSet.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461699() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    linkedHashSet0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/HashSet.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461700() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461701() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    linkedHashSet0.contains(locale1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/HashSet.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461702() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    list0.contains(locale1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461703() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    linkedList0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461704() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    linkedHashSet0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/HashSet.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461705() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    linkedHashSet0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/HashSet.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461706() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461707() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461714() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461715() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461716() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461717() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461718() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461723() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461724() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    linkedHashSet0.contains(locale1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/HashSet.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461725() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    list0.contains(locale1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461726() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    linkedList0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461727() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    linkedHashSet0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/HashSet.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461728() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    linkedHashSet0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/HashSet.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461729() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461730() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461742() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461743() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461744() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461745() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461746() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461747() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    locale1.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461748() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    locale1.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461749() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    locale1.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461750() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    locale1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461751() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    locale1.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461752() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    locale1.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461755() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    locale1.equals((Object) locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461768() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    locale1.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461769() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    locale1.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461770() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    locale1.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461771() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    locale1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461772() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    locale1.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461773() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    locale1.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461777() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    locale1.equals((Object) locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461778() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461779() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    fieldPosition0.getBeginIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461780() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    fieldPosition0.getEndIndex();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461781() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    fieldPosition0.getField();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/FieldPosition.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461782() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);
},ERROR,java.lang.ClassCastException,class com.github.javaparser.ast.expr.VariableDeclarationExpr cannot be cast to class com.github.javaparser.ast.expr.MethodCallExpr (com.github.javaparser.ast.expr.VariableDeclarationExpr and com.github.javaparser.ast.expr.MethodCallExpr are in unnamed module of loader 'app')
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461797() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);
    String string0 = fastDateFormat3.format((Date) mockDate0);
    locale1.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461798() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);
    String string0 = fastDateFormat3.format((Date) mockDate0);
    locale1.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461799() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);
    String string0 = fastDateFormat3.format((Date) mockDate0);
    locale1.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461800() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);
    String string0 = fastDateFormat3.format((Date) mockDate0);
    locale1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461801() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);
    String string0 = fastDateFormat3.format((Date) mockDate0);
    locale1.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461802() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);
    String string0 = fastDateFormat3.format((Date) mockDate0);
    locale1.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test461806() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, """");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);
    StringBuffer stringBuffer0 = new StringBuffer("""");
    ParsePosition parsePosition0 = new ParsePosition((-2803));
    Object object0 = fastDateFormat0.parseObject(""YW*-M"", parsePosition0);
    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);
    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);
    fastDateFormat0.hashCode();
    Locale locale0 = Locale.GERMANY;
    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat("""", locale0);
    Locale locale1 = Locale.CHINA;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);
    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);
    Locale locale2 = Locale.lookup(linkedList0, list0);
    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance("""", (TimeZone) simpleTimeZone0, locale1);
    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);
    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());
    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);
    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);
    String string0 = fastDateFormat3.format((Date) mockDate0);
    locale1.equals((Object) locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test471816() throws Throwable {
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);
    fastDateFormat0.format((Object) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/text/Format.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test481829() throws Throwable {
    Locale locale0 = Locale.CANADA;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test481830() throws Throwable {
    Locale locale0 = Locale.CANADA;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test481831() throws Throwable {
    Locale locale0 = Locale.CANADA;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test481832() throws Throwable {
    Locale locale0 = Locale.CANADA;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test481833() throws Throwable {
    Locale locale0 = Locale.CANADA;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test481834() throws Throwable {
    Locale locale0 = Locale.CANADA;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test481838() throws Throwable {
    Locale locale0 = Locale.CANADA;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);
    SimpleTimeZone simpleTimeZone0 = null;
    simpleTimeZone0 = new SimpleTimeZone((-1), """", 2, 0, 0, 0, 1293, 1000, 1293, 3);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test491851() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1, locale0);
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test491852() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1, locale0);
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test491853() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1, locale0);
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test491854() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1, locale0);
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test491855() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1, locale0);
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test491856() throws Throwable {
    Locale locale0 = Locale.TRADITIONAL_CHINESE;
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1, locale0);
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501860() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501861() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501862() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501863() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501864() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501865() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501866() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501867() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList<java/util/Locale/LanguageRange>.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501868() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    linkedList0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501869() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList<java/util/Locale>.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501870() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    linkedList1.contains(locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501871() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    linkedList1.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501872() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501873() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    linkedList1.contains(locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501874() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    list0.contains(locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501875() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    linkedList0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501876() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    linkedList1.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501877() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501878() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501879() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    Locale locale1 = Locale.lookup(linkedList0, list0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501880() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    Locale locale1 = Locale.lookup(linkedList0, list0);
    linkedList1.contains(locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501881() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    Locale locale1 = Locale.lookup(linkedList0, list0);
    list0.contains(locale0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501882() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    Locale locale1 = Locale.lookup(linkedList0, list0);
    linkedList0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501883() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    Locale locale1 = Locale.lookup(linkedList0, list0);
    linkedList1.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/LinkedList.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501884() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    Locale locale1 = Locale.lookup(linkedList0, list0);
    list0.isEmpty();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501885() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    Locale locale1 = Locale.lookup(linkedList0, list0);
    list0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/List.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501886() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    Locale locale1 = Locale.lookup(linkedList0, list0);
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501887() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    Locale locale1 = Locale.lookup(linkedList0, list0);
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test501893() throws Throwable {
    String string0 = """";
    Locale locale0 = Locale.ENGLISH;
    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();
    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();
    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);
    Locale locale1 = Locale.lookup(linkedList0, list0);
    TimeZone timeZone0 = TimeZone.getTimeZone("""");
    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(2, 2, timeZone0);
    timeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test531900() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test531901() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test531902() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test531903() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test531904() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test531905() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test531906() throws Throwable {
    Locale locale0 = Locale.ITALIAN;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test551911() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.US;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test551912() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.US;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test551913() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.US;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test551914() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.US;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test551915() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.US;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test551916() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.US;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test551917() throws Throwable {
    TimeZone timeZone0 = TimeZone.getDefault();
    Locale locale0 = Locale.US;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571927() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571928() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    simpleTimeZone0.getRawOffset();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571929() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    simpleTimeZone0.getDSTSavings();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571930() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    simpleTimeZone0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571931() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    simpleTimeZone0.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571932() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    simpleTimeZone0.useDaylightTime();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/SimpleTimeZone.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571933() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    Locale locale0 = new Locale("""");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571934() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    Locale locale0 = new Locale("""");
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571935() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    Locale locale0 = new Locale("""");
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571936() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    Locale locale0 = new Locale("""");
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571937() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    Locale locale0 = new Locale("""");
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571938() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    Locale locale0 = new Locale("""");
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test571939() throws Throwable {
    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, """");
    Locale locale0 = new Locale("""");
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test611957() throws Throwable {
    Locale locale0 = Locale.GERMANY;
},ERROR,java.lang.IllegalStateException,[ERROR] - Unable to parse last statement as a MethodCallExpr or an ObjectCreationExpr statement.
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test611958() throws Throwable {
    Locale locale0 = Locale.GERMANY;
    locale0.getISO3Language();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test611959() throws Throwable {
    Locale locale0 = Locale.GERMANY;
    locale0.getVariant();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test611960() throws Throwable {
    Locale locale0 = Locale.GERMANY;
    locale0.getCountry();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test611961() throws Throwable {
    Locale locale0 = Locale.GERMANY;
    locale0.getLanguage();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test611962() throws Throwable {
    Locale locale0 = Locale.GERMANY;
    locale0.getISO3Country();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test611963() throws Throwable {
    Locale locale0 = Locale.GERMANY;
    locale0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test841991() throws Throwable {
    Locale locale0 = Locale.KOREAN;
    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, (TimeZone) null, locale0);
    Locale locale1 = fastDateFormat0.getLocale();
    locale1.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/Locale.java
org.apache.commons.lang3.time.FastDateFormat,@Test(timeout = 4000)
public void test861993() throws Throwable {
    TimeZone timeZone0 = TimeZone.getTimeZone(""k"");
    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(""k"", timeZone0);
    Locale locale0 = Locale.CANADA;
    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance("""", locale0);
    timeZone0.toZoneId();
    timeZone0.observesDaylightTime();
    FastDateFormat.getDateInstance(1);
    timeZone0.getDisplayName(locale0);
    fastDateFormat0.equals((Object) null);
    Locale locale1 = Locale.forLanguageTag("""");
    FastDateFormat fastDateFormat2 = FastDateFormat.getDateTimeInstance(3, 1, locale0);
    fastDateFormat1.getPattern();
    fastDateFormat1.getTimeZone();
    FastDateFormat.getDateInstance(3, timeZone0);
    ParsePosition parsePosition0 = new ParsePosition((-888));
    fastDateFormat2.parseObject("""", parsePosition0);
    locale1.getDisplayName();
    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);
    DecimalFormat decimalFormat0 = new DecimalFormat();
    StringBuffer stringBuffer0 = new StringBuffer("""");
    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);
    stringBuffer1.append(0);
    FieldPosition fieldPosition0 = new FieldPosition(945);
    StringBuffer stringBuffer2 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);
    stringBuffer2.append(""%#AZm[miAtF$[5E-"");
    fastDateFormat2.format((Date) mockDate0, stringBuffer2);
    fastDateFormat2.parseObject(""I+_diH4"", parsePosition0);
    TimeZone timeZone1 = TimeZone.getTimeZone(""Greenwich Mean Time"");
    timeZone1.getID();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Lang_38b/src/java/java/util/TimeZone.java
