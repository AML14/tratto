{
  "test10298" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10298() throws Throwable {\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"&.\", locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test10298"
  },
  "test721975" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test721975() throws Throwable {\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat.getInstance(\"z}FWDo.\", (TimeZone) null, locale0);\n}",
    "testName" : "test721975"
  },
  "test39833" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39833() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test39833"
  },
  "test39835" : {
    "methodSignature" : "public TimeZone getTimeZone()",
    "methodName" : "getTimeZone",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39835() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n}",
    "testName" : "test39835"
  },
  "test24586" : {
    "methodSignature" : "static synchronized String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
    "methodName" : "getTimeZoneDisplay",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test24586() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"org.apache.commons.lang3.time.FastDateFormat$TextField\");\n    Locale locale0 = Locale.KOREA;\n    FastDateFormat.getTimeZoneDisplay(simpleTimeZone0, true, 122, locale0);\n}",
    "testName" : "test24586"
  },
  "test591955" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test591955() throws Throwable {\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat.getInstance(\"-b>/gir%,\", locale0);\n}",
    "testName" : "test591955"
  },
  "test391143" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391143() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test391143"
  },
  "test391025" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391025() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    mockDate0.toString();\n}",
    "testName" : "test391025"
  },
  "test391026" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391026() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test391026"
  },
  "test391144" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391144() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test391144"
  },
  "test391145" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391145() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test391145"
  },
  "test39962" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39962() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test39962"
  },
  "test39964" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39964() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test39964"
  },
  "test391027" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391027() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    fastDateFormat0.equals((Object) fastDateFormat2);\n}",
    "testName" : "test391027"
  },
  "test39963" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39963() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test39963"
  },
  "test38733" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38733() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test38733"
  },
  "test39944" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39944() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.equals((Object) fastDateFormat2);\n}",
    "testName" : "test39944"
  },
  "test04160" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04160() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test04160"
  },
  "test39822" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39822() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n}",
    "testName" : "test39822"
  },
  "test39943" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39943() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test39943"
  },
  "test0016" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0016() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();\n    mockGregorianCalendar0.toString();\n}",
    "testName" : "test0016"
  },
  "test38737" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38737() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);\n    mockGregorianCalendar0.toString();\n}",
    "testName" : "test38737"
  },
  "test801984" : {
    "methodSignature" : "public static FastDateFormat getInstance()",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test801984() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance();\n}",
    "testName" : "test801984"
  },
  "test801983" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test801983() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    FastDateFormat fastDateFormat1 = FastDateFormat.getInstance();\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test801983"
  },
  "test431233" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test431233() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test431233"
  },
  "test431234" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test431234() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test431234"
  },
  "test551918" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test551918() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.US;\n    FastDateFormat.getInstance(\"<null>\", timeZone0, locale0);\n}",
    "testName" : "test551918"
  },
  "test06217" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06217() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test06217"
  },
  "test431235" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test431235() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test431235"
  },
  "test601956" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test601956() throws Throwable {\n    FastDateFormat.getInstance(\"ZzBMHX.Xs,:pO[wVvQ\");\n}",
    "testName" : "test601956"
  },
  "test33613" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33613() throws Throwable {\n    FastDateFormat.getDateInstance(1559);\n}",
    "testName" : "test33613"
  },
  "test39830" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39830() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test39830"
  },
  "test39832" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39832() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test39832"
  },
  "test39831" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39831() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test39831"
  },
  "test0024" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0024() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();\n    Date date0 = mockGregorianCalendar0.getGregorianChange();\n    mockGregorianCalendar0.toString();\n}",
    "testName" : "test0024"
  },
  "test39858" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39858() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat2.getPattern();\n}",
    "testName" : "test39858"
  },
  "test501894" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501894() throws Throwable {\n    String string0 = \"\";\n    Locale locale0 = Locale.ENGLISH;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);\n    Locale locale1 = Locale.lookup(linkedList0, list0);\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(2, 2, timeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test501894"
  },
  "test541908" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test541908() throws Throwable {\n    FastDateFormat.getInstance(\"@H(d*8qNRb\\u0001$;g;eW\");\n}",
    "testName" : "test541908"
  },
  "test39859" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39859() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat2.getMaxLengthEstimate();\n}",
    "testName" : "test39859"
  },
  "test451500" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451500() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);\n}",
    "testName" : "test451500"
  },
  "test04158" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04158() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test04158"
  },
  "test06216" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06216() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test06216"
  },
  "test04159" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04159() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test04159"
  },
  "test06215" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06215() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test06215"
  },
  "test0029" : {
    "methodSignature" : "public StringBuffer format(Date date, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0029() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();\n    Date date0 = mockGregorianCalendar0.getGregorianChange();\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"B:>]S[=_Pv8oQ\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);\n}",
    "testName" : "test0029"
  },
  "test671970" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test671970() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat.getInstance(\".L$D&HvPb\", timeZone0, locale0);\n}",
    "testName" : "test671970"
  },
  "test431221" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test431221() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0, locale0);\n}",
    "testName" : "test431221"
  },
  "test391164" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391164() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test391164"
  },
  "test391165" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391165() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    mockDate0.toString();\n}",
    "testName" : "test391165"
  },
  "test391162" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391162() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    fastDateFormat1.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test391162"
  },
  "test391163" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391163() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test391163"
  },
  "test37681" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37681() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test37681"
  },
  "test391169" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391169() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test391169"
  },
  "test37682" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37682() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test37682"
  },
  "test39861" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39861() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat2.equals((Object) fastDateFormat1);\n}",
    "testName" : "test39861"
  },
  "test391166" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391166() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test391166"
  },
  "test37683" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37683() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test37683"
  },
  "test39860" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39860() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat2.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test39860"
  },
  "test391167" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391167() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    fastDateFormat0.equals((Object) fastDateFormat2);\n}",
    "testName" : "test391167"
  },
  "test18485" : {
    "methodSignature" : "protected StringBuffer applyRules(Calendar calendar, StringBuffer buf)",
    "methodName" : "applyRules",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test18485() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"B:>]S[=_Pv8oQ\");\n    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);\n}",
    "testName" : "test18485"
  },
  "test501896" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501896() throws Throwable {\n    String string0 = \"\";\n    Locale locale0 = Locale.ENGLISH;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);\n    Locale locale1 = Locale.lookup(linkedList0, list0);\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(2, 2, timeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test501896"
  },
  "test39862" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39862() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    fastDateFormat2.equals((Object) fastDateFormat0);\n}",
    "testName" : "test39862"
  },
  "test501895" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501895() throws Throwable {\n    String string0 = \"\";\n    Locale locale0 = Locale.ENGLISH;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);\n    Locale locale1 = Locale.lookup(linkedList0, list0);\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(2, 2, timeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test501895"
  },
  "test501897" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501897() throws Throwable {\n    String string0 = \"\";\n    Locale locale0 = Locale.ENGLISH;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);\n    Locale locale1 = Locale.lookup(linkedList0, list0);\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(2, 2, timeZone0);\n    FastDateFormat.getDateInstance(73, timeZone0, locale0);\n}",
    "testName" : "test501897"
  },
  "test09276" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09276() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test09276"
  },
  "test39845" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39845() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test39845"
  },
  "test0036" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0036() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();\n    Date date0 = mockGregorianCalendar0.getGregorianChange();\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"B:>]S[=_Pv8oQ\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0036"
  },
  "test09277" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09277() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test09277"
  },
  "test11299" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11299() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"'L[d\");\n}",
    "testName" : "test11299"
  },
  "test39844" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39844() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test39844"
  },
  "test0037" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0037() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();\n    Date date0 = mockGregorianCalendar0.getGregorianChange();\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"B:>]S[=_Pv8oQ\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test0037"
  },
  "test0038" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0038() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();\n    Date date0 = mockGregorianCalendar0.getGregorianChange();\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"B:>]S[=_Pv8oQ\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0038"
  },
  "test09275" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09275() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test09275"
  },
  "test14325" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14325() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n}",
    "testName" : "test14325"
  },
  "test39846" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39846() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test39846"
  },
  "test641967" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test641967() throws Throwable {\n    Locale locale0 = Locale.ITALIAN;\n    FastDateFormat.getInstance(\"Tis`#pMDw.`n~_g|U\", locale0);\n}",
    "testName" : "test641967"
  },
  "test39849" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39849() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n}",
    "testName" : "test39849"
  },
  "test751978" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test751978() throws Throwable {\n    FastDateFormat.getInstance((String) null);\n}",
    "testName" : "test751978"
  },
  "test39848" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39848() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test39848"
  },
  "test39969" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39969() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    mockDate0.toString();\n}",
    "testName" : "test39969"
  },
  "test09270" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09270() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null);\n}",
    "testName" : "test09270"
  },
  "test04145" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04145() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test04145"
  },
  "test06203" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06203() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test06203"
  },
  "test04146" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04146() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test04146"
  },
  "test06202" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06202() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test06202"
  },
  "test04147" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04147() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test04147"
  },
  "test21532" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test21532() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    int[] intArray0 = new int[0];\n    fastDateFormat0.parseToken(\"u+drihRG.lY\\\"~6\", intArray0);\n}",
    "testName" : "test21532"
  },
  "test06201" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06201() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test06201"
  },
  "test04144" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04144() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test04144"
  },
  "test06200" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06200() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test06200"
  },
  "test18492" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test18492() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"B:>]S[=_Pv8oQ\");\n    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test18492"
  },
  "test18493" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test18493() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"B:>]S[=_Pv8oQ\");\n    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test18493"
  },
  "test18494" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test18494() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    Calendar calendar0 = mockSimpleDateFormat0.getCalendar();\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"B:>]S[=_Pv8oQ\");\n    StringBuffer stringBuffer1 = fastDateFormat0.applyRules(calendar0, stringBuffer0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test18494"
  },
  "test461804" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461804() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);\n    String string0 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.equals((Object) fastDateFormat0);\n}",
    "testName" : "test461804"
  },
  "test391170" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391170() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n    fastDateFormat1.equals((Object) fastDateFormat2);\n}",
    "testName" : "test391170"
  },
  "test461803" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461803() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);\n    String string0 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.equals((Object) fastDateFormat1);\n}",
    "testName" : "test461803"
  },
  "test501888" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test501888() throws Throwable {\n    String string0 = \"\";\n    Locale locale0 = Locale.ENGLISH;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedList1);\n    Locale locale1 = Locale.lookup(linkedList0, list0);\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(2, 2, timeZone0);\n}",
    "testName" : "test501888"
  },
  "test39971" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39971() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    fastDateFormat0.equals((Object) fastDateFormat2);\n}",
    "testName" : "test39971"
  },
  "test39970" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39970() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test39970"
  },
  "test14333" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14333() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test14333"
  },
  "test14331" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14331() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test14331"
  },
  "test14332" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14332() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test14332"
  },
  "test37676" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test37676() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    boolean boolean0 = fastDateFormat0.equals(fastDateFormat0);\n}",
    "testName" : "test37676"
  },
  "test14338" : {
    "methodSignature" : "public StringBuffer format(Date date, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14338() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n}",
    "testName" : "test14338"
  },
  "test39756" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39756() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n}",
    "testName" : "test39756"
  },
  "test611964" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test611964() throws Throwable {\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat.getInstance(\"YW*-M\", locale0);\n}",
    "testName" : "test611964"
  },
  "test451567" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451567() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n}",
    "testName" : "test451567"
  },
  "test451444" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451444() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n}",
    "testName" : "test451444"
  },
  "test451440" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451440() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    mockGregorianCalendar0.toString();\n}",
    "testName" : "test451440"
  },
  "test04133" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04133() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", locale0);\n}",
    "testName" : "test04133"
  },
  "test25589" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, TimeZone timeZone)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test25589() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat.getTimeInstance(1390, timeZone0);\n}",
    "testName" : "test25589"
  },
  "test461659" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461659() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461659"
  },
  "test401183" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test401183() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), \"$(@RsifXZVY_3`\");\n    Locale locale0 = new Locale(\"0|@e(WN#v=\", \"\", \"0|@e(WN#v=\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);\n}",
    "testName" : "test401183"
  },
  "test461658" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461658() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test461658"
  },
  "test461776" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461776() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat3.equals((Object) fastDateFormat2);\n}",
    "testName" : "test461776"
  },
  "test711974" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test711974() throws Throwable {\n    FastDateFormat.getInstance(\"G66}%5!O?u@7\");\n}",
    "testName" : "test711974"
  },
  "test34619" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34619() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test34619"
  },
  "test461775" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461775() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat3.equals((Object) fastDateFormat0);\n}",
    "testName" : "test461775"
  },
  "test491859" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491859() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test491859"
  },
  "test481824" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test481824() throws Throwable {\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n}",
    "testName" : "test481824"
  },
  "test491858" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491858() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test491858"
  },
  "test491857" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491857() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test491857"
  },
  "test34614" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34614() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n}",
    "testName" : "test34614"
  },
  "test39881" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39881() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    fastDateFormat1.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test39881"
  },
  "test39762" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39762() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test39762"
  },
  "test39883" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39883() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test39883"
  },
  "test461774" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461774() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat3.equals((Object) fastDateFormat1);\n}",
    "testName" : "test461774"
  },
  "test39882" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39882() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test39882"
  },
  "test16402" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16402() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test16402"
  },
  "test39764" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39764() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test39764"
  },
  "test16401" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16401() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test16401"
  },
  "test39763" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39763() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test39763"
  },
  "test14348" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14348() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test14348"
  },
  "test39867" : {
    "methodSignature" : "public Object parseObject(String source, ParsePosition pos)",
    "methodName" : "parseObject",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39867() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n}",
    "testName" : "test39867"
  },
  "test14349" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14349() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    mockDate0.toString();\n}",
    "testName" : "test14349"
  },
  "test16405" : {
    "methodSignature" : "public TimeZone getTimeZone()",
    "methodName" : "getTimeZone",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16405() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n}",
    "testName" : "test16405"
  },
  "test14346" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14346() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test14346"
  },
  "test14347" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test14347() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    MockDate mockDate0 = new MockDate(3, 89, 1, 4, 648);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test14347"
  },
  "test16403" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16403() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test16403"
  },
  "test771980" : {
    "methodSignature" : "public String format(long millis)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test771980() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    String string0 = fastDateFormat0.format((-1796L));\n}",
    "testName" : "test771980"
  },
  "test29600" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test29600() throws Throwable {\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat.getDateTimeInstance((-750), (-750), locale0);\n}",
    "testName" : "test29600"
  },
  "test391072" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391072() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test391072"
  },
  "test391073" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391073() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test391073"
  },
  "test461665" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461665() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n}",
    "testName" : "test461665"
  },
  "test391074" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391074() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test391074"
  },
  "test491846" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test491846() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(1, locale0);\n}",
    "testName" : "test491846"
  },
  "test461783" : {
    "methodSignature" : "public String format(Date date)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461783() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);\n    String string0 = fastDateFormat3.format((Date) mockDate0);\n}",
    "testName" : "test461783"
  },
  "test34621" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34621() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test34621"
  },
  "test34622" : {
    "methodSignature" : "public String format(Date date)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34622() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.format((Date) null);\n}",
    "testName" : "test34622"
  },
  "test411208" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test411208() throws Throwable {\n    Locale locale0 = Locale.CHINESE;\n    FastDateFormat.getDateTimeInstance(801, 2210, (TimeZone) null, locale0);\n}",
    "testName" : "test411208"
  },
  "test461660" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461660() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test461660"
  },
  "test581947" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test581947() throws Throwable {\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat.getInstance(\"cu+&Tf&53r^xfe!*`l@\", timeZone0);\n}",
    "testName" : "test581947"
  },
  "test16410" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16410() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n}",
    "testName" : "test16410"
  },
  "test34620" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34620() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test34620"
  },
  "test521899" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test521899() throws Throwable {\n    FastDateFormat.getInstance(\"und\");\n}",
    "testName" : "test521899"
  },
  "test421211" : {
    "methodSignature" : "public static synchronized FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test421211() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"org.apache.commons.lang3.time.FastDateFormat$TimeZoneDisplayKey\");\n    FastDateFormat.getTimeInstance((-978), timeZone0, (Locale) null);\n}",
    "testName" : "test421211"
  },
  "test16419" : {
    "methodSignature" : "public String format(Calendar calendar)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16419() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n    String string0 = fastDateFormat0.format(calendar0);\n}",
    "testName" : "test16419"
  },
  "test481837" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test481837() throws Throwable {\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test481837"
  },
  "test531907" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test531907() throws Throwable {\n    Locale locale0 = Locale.ITALIAN;\n    FastDateFormat.getInstance(\"htC+iAsdS2#%*>BG\", (TimeZone) null, locale0);\n}",
    "testName" : "test531907"
  },
  "test481836" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test481836() throws Throwable {\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test481836"
  },
  "test451542" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451542() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test451542"
  },
  "test451541" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451541() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test451541"
  },
  "test451540" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451540() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test451540"
  },
  "test511898" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test511898() throws Throwable {\n    FastDateFormat.getInstance(\"xY=@f&dA]Vt8U`&4|]\");\n}",
    "testName" : "test511898"
  },
  "test761979" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test761979() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\");\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    LinkedList<Locale> linkedList1 = new LinkedList<Locale>();\n    FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale.lookup(linkedList0, linkedList1);\n    FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getTimeInstance(2);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);\n    fastDateFormat1.format((Date) mockDate0);\n    fastDateFormat0.format((Object) mockSimpleDateFormat0, stringBuffer1, fieldPosition0);\n}",
    "testName" : "test761979"
  },
  "test651968" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test651968() throws Throwable {\n    Locale locale0 = Locale.FRENCH;\n    FastDateFormat.getInstance(\"w$RV7HWI \", locale0);\n}",
    "testName" : "test651968"
  },
  "test391087" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391087() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    fastDateFormat0.equals((Object) fastDateFormat2);\n}",
    "testName" : "test391087"
  },
  "test391088" : {
    "methodSignature" : "public StringBuffer format(Date date, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391088() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    StringBuffer stringBuffer5 = fastDateFormat1.format((Date) mockDate0, stringBuffer3);\n}",
    "testName" : "test391088"
  },
  "test461676" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461676() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test461676"
  },
  "test391085" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391085() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    mockDate0.toString();\n}",
    "testName" : "test391085"
  },
  "test391086" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391086() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer4 = stringBuffer3.append(\"%#AZm[miAtF$[5E-\");\n    fastDateFormat0.equals((Object) fastDateFormat1);\n}",
    "testName" : "test391086"
  },
  "test461794" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461794() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);\n    String string0 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.getPattern();\n}",
    "testName" : "test461794"
  },
  "test461793" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461793() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);\n    String string0 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.getMaxLengthEstimate();\n}",
    "testName" : "test461793"
  },
  "test461675" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461675() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461675"
  },
  "test461796" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461796() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);\n    String string0 = fastDateFormat3.format((Date) mockDate0);\n    mockDate0.toString();\n}",
    "testName" : "test461796"
  },
  "test461674" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461674() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test461674"
  },
  "test461795" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461795() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);\n    String string0 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461795"
  },
  "test39785" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39785() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n}",
    "testName" : "test39785"
  },
  "test39889" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39889() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    fastDateFormat1.equals((Object) fastDateFormat2);\n}",
    "testName" : "test39889"
  },
  "test16427" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16427() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n    String string0 = fastDateFormat0.format(calendar0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test16427"
  },
  "test39888" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39888() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test39888"
  },
  "test16426" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16426() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n    String string0 = fastDateFormat0.format(calendar0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test16426"
  },
  "test16425" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16425() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\");\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    Calendar calendar0 = MockCalendar.getInstance(timeZone0);\n    String string0 = fastDateFormat0.format(calendar0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test16425"
  },
  "test26590" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test26590() throws Throwable {\n    FastDateFormat.getTimeInstance(518, (Locale) null);\n}",
    "testName" : "test26590"
  },
  "test22546" : {
    "methodSignature" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "FastDateFormat",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22546() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, \"\");\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", simpleTimeZone0, locale0);\n}",
    "testName" : "test22546"
  },
  "test08268" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08268() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"&'C\", timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test08268"
  },
  "test08269" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08269() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"&'C\", timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test08269"
  },
  "test08267" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08267() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"&'C\", timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test08267"
  },
  "test30601" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test30601() throws Throwable {\n    FastDateFormat.getDateTimeInstance(11, 3);\n}",
    "testName" : "test30601"
  },
  "test401198" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test401198() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), \"$(@RsifXZVY_3`\");\n    Locale locale0 = new Locale(\"0|@e(WN#v=\", \"\", \"0|@e(WN#v=\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test401198"
  },
  "test401199" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test401199() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), \"$(@RsifXZVY_3`\");\n    Locale locale0 = new Locale(\"0|@e(WN#v=\", \"\", \"0|@e(WN#v=\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test401199"
  },
  "test481835" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test481835() throws Throwable {\n    Locale locale0 = Locale.CANADA;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test481835"
  },
  "test831990" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test831990() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(1);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1, (-2571), 1713, 1, 1, 20);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    fastDateFormat0.format((Object) mockGregorianCalendar0, (StringBuffer) null, fieldPosition0);\n}",
    "testName" : "test831990"
  },
  "test35630" : {
    "methodSignature" : "protected FastDateFormat(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "FastDateFormat",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35630() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"9]Y~%Db~VyH\", (TimeZone) null, locale0);\n}",
    "testName" : "test35630"
  },
  "test08252" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08252() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"&'C\", timeZone0, locale0);\n}",
    "testName" : "test08252"
  },
  "test11304" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11304() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"'L[d\");\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test11304"
  },
  "test11306" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11306() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"'L[d\");\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test11306"
  },
  "test11305" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11305() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"'L[d\");\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test11305"
  },
  "test03122" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03122() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    int[] intArray0 = new int[7];\n    String string0 = fastDateFormat0.parseToken(\"Urk}#\", intArray0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test03122"
  },
  "test571940" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test571940() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(408, \"\");\n    Locale locale0 = new Locale(\"\");\n    FastDateFormat.getInstance(\"];fP>%Q\\\"w\", (TimeZone) simpleTimeZone0, locale0);\n}",
    "testName" : "test571940"
  },
  "test03123" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03123() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    int[] intArray0 = new int[7];\n    String string0 = fastDateFormat0.parseToken(\"Urk}#\", intArray0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test03123"
  },
  "test03124" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03124() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    int[] intArray0 = new int[7];\n    String string0 = fastDateFormat0.parseToken(\"Urk}#\", intArray0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test03124"
  },
  "test621965" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test621965() throws Throwable {\n    FastDateFormat.getInstance(\"#@:VG&p4(\");\n}",
    "testName" : "test621965"
  },
  "test22562" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22562() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, \"\");\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", simpleTimeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test22562"
  },
  "test03115" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03115() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    int[] intArray0 = new int[7];\n    String string0 = fastDateFormat0.parseToken(\"Urk}#\", intArray0);\n}",
    "testName" : "test03115"
  },
  "test461611" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461611() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test461611"
  },
  "test461731" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461731() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n}",
    "testName" : "test461731"
  },
  "test461613" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461613() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test461613"
  },
  "test461612" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461612() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461612"
  },
  "test821988" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test821988() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    String string0 = fastDateFormat0.toString();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test821988"
  },
  "test821989" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test821989() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    String string0 = fastDateFormat0.toString();\n}",
    "testName" : "test821989"
  },
  "test35641" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35641() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"9]Y~%Db~VyH\", (TimeZone) null, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test35641"
  },
  "test03112" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03112() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test03112"
  },
  "test03113" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03113() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test03113"
  },
  "test451475" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451475() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test451475"
  },
  "test03114" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03114() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test03114"
  },
  "test06188" : {
    "methodSignature" : "public static synchronized FastDateFormat getTimeInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06188() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, timeZone0, locale0);\n}",
    "testName" : "test06188"
  },
  "test451473" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451473() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test451473"
  },
  "test08247" : {
    "methodSignature" : "public TimeZone getTimeZone()",
    "methodName" : "getTimeZone",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08247() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n}",
    "testName" : "test08247"
  },
  "test22565" : {
    "methodSignature" : "public Object parseObject(String source, ParsePosition pos)",
    "methodName" : "parseObject",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22565() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, \"\");\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", simpleTimeZone0, locale0);\n    fastDateFormat0.parseObject(\"2;Og@Nt\", (ParsePosition) null);\n}",
    "testName" : "test22565"
  },
  "test451474" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451474() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test451474"
  },
  "test461739" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461739() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    fastDateFormat2.getMaxLengthEstimate();\n}",
    "testName" : "test461739"
  },
  "test22564" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22564() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, \"\");\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", simpleTimeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test22564"
  },
  "test22563" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22563() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3, \"\");\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"\", simpleTimeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test22563"
  },
  "test461621" : {
    "methodSignature" : "public Object parseObject(String source, ParsePosition pos)",
    "methodName" : "parseObject",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461621() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n}",
    "testName" : "test461621"
  },
  "test39791" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39791() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test39791"
  },
  "test03107" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03107() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0);\n}",
    "testName" : "test03107"
  },
  "test39793" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39793() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test39793"
  },
  "test701973" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test701973() throws Throwable {\n    FastDateFormat.getInstance(\"9GIgE-\");\n}",
    "testName" : "test701973"
  },
  "test15363" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15363() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n}",
    "testName" : "test15363"
  },
  "test39792" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39792() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test39792"
  },
  "test461741" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461741() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    fastDateFormat2.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461741"
  },
  "test461740" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461740() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    fastDateFormat2.getPattern();\n}",
    "testName" : "test461740"
  },
  "test27591" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test27591() throws Throwable {\n    FastDateFormat.getTimeInstance((-438));\n}",
    "testName" : "test27591"
  },
  "test661969" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test661969() throws Throwable {\n    FastDateFormat.getInstance(\"sP`u+I ,=U*\");\n}",
    "testName" : "test661969"
  },
  "test451584" : {
    "methodSignature" : "static synchronized String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
    "methodName" : "getTimeZoneDisplay",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451584() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    String string2 = FastDateFormat.getTimeZoneDisplay(timeZone0, false, 1, locale0);\n}",
    "testName" : "test451584"
  },
  "test451583" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451583() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test451583"
  },
  "test451582" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451582() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    fastDateFormat1.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test451582"
  },
  "test451581" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451581() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test451581"
  },
  "test451580" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451580() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    Long long0 = new Long(1L);\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    DecimalFormat decimalFormat0 = (DecimalFormat) NumberFormat.getPercentInstance(locale0);\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"GMT\");\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0);\n    StringBuffer stringBuffer1 = decimalFormat0.format(0.0, stringBuffer0, fieldPosition0);\n    StringBuffer stringBuffer2 = stringBuffer0.append((CharSequence) \"GMT\");\n    StringBuffer stringBuffer3 = stringBuffer1.insert(0, true);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(timeZone0);\n    StringBuffer stringBuffer4 = stringBuffer1.append((Object) mockGregorianCalendar0);\n    StringBuffer stringBuffer5 = fastDateFormat0.format((Object) long0, stringBuffer1, fieldPosition0);\n    StringBuffer stringBuffer6 = fastDateFormat0.format((Object) long0, stringBuffer5, fieldPosition0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateInstance(2, timeZone0, locale0);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test451580"
  },
  "test006" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test006() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test006"
  },
  "test007" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test007() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test007"
  },
  "test781981" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test781981() throws Throwable {\n    FastDateFormat.getInstance(\"\\\"\\\"v!j.#\");\n}",
    "testName" : "test781981"
  },
  "test461633" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461633() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test461633"
  },
  "test461754" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461754() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    fastDateFormat2.equals((Object) fastDateFormat0);\n}",
    "testName" : "test461754"
  },
  "test005" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test005() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test005"
  },
  "test461632" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461632() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461632"
  },
  "test461753" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461753() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    fastDateFormat2.equals((Object) fastDateFormat1);\n}",
    "testName" : "test461753"
  },
  "test461756" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461756() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n}",
    "testName" : "test461756"
  },
  "test31604" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test31604() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat.getDateInstance((-2650), timeZone0);\n}",
    "testName" : "test31604"
  },
  "test401200" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test401200() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone((-1907), \"$(@RsifXZVY_3`\");\n    Locale locale0 = new Locale(\"0|@e(WN#v=\", \"\", \"0|@e(WN#v=\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, (TimeZone) simpleTimeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test401200"
  },
  "test15375" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15375() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test15375"
  },
  "test461631" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461631() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test461631"
  },
  "test15379" : {
    "methodSignature" : "public String format(Date date)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15379() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n}",
    "testName" : "test15379"
  },
  "test35645" : {
    "methodSignature" : "public StringBuffer format(Calendar calendar, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35645() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"9]Y~%Db~VyH\", (TimeZone) null, locale0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(1, 1, 0, 0, 3);\n    fastDateFormat0.format((Calendar) mockGregorianCalendar0, (StringBuffer) null);\n}",
    "testName" : "test35645"
  },
  "test15377" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15377() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test15377"
  },
  "test35643" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35643() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"9]Y~%Db~VyH\", (TimeZone) null, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test35643"
  },
  "test15376" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15376() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test15376"
  },
  "test35642" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test35642() throws Throwable {\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = new FastDateFormat(\"9]Y~%Db~VyH\", (TimeZone) null, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test35642"
  },
  "test12307" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12307() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 1, (TimeZone) null);\n}",
    "testName" : "test12307"
  },
  "test000" : {
    "methodSignature" : "public static FastDateFormat getInstance()",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n}",
    "testName" : "test000"
  },
  "test461644" : {
    "methodSignature" : "public StringBuffer format(long millis, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461644() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n}",
    "testName" : "test461644"
  },
  "test461765" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461765() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat3.getMaxLengthEstimate();\n}",
    "testName" : "test461765"
  },
  "test731976" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test731976() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    FastDateFormat.getInstance(\"C8Ktk@{OLOnR\", timeZone0);\n}",
    "testName" : "test731976"
  },
  "test461767" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461767() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat3.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461767"
  },
  "test461766" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461766() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    fastDateFormat3.getPattern();\n}",
    "testName" : "test461766"
  },
  "test691972" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test691972() throws Throwable {\n    ZoneId zoneId0 = ZoneId.systemDefault();\n    TimeZone timeZone0 = TimeZone.getTimeZone(zoneId0);\n    FastDateFormat.getInstance(\"#%F=JFk6A5Dbi1LAQ\", timeZone0);\n}",
    "testName" : "test691972"
  },
  "test0167" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0167() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 1, 16, (-359), 1992, 3);\n    String string0 = fastDateFormat0.format((Calendar) mockGregorianCalendar0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0167"
  },
  "test12312" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12312() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 1, (TimeZone) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test12312"
  },
  "test0168" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0168() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 1, 16, (-359), 1992, 3);\n    String string0 = fastDateFormat0.format((Calendar) mockGregorianCalendar0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0168"
  },
  "test0169" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0169() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 1, 16, (-359), 1992, 3);\n    String string0 = fastDateFormat0.format((Calendar) mockGregorianCalendar0);\n    mockGregorianCalendar0.toString();\n}",
    "testName" : "test0169"
  },
  "test12314" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12314() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 1, (TimeZone) null);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test12314"
  },
  "test851992" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test851992() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, (TimeZone) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test851992"
  },
  "test12313" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test12313() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(1, 1, (TimeZone) null);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test12313"
  },
  "test0045" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0045() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    MockGregorianCalendar mockGregorianCalendar0 = (MockGregorianCalendar) mockSimpleDateFormat0.getCalendar();\n    Date date0 = mockGregorianCalendar0.getGregorianChange();\n    StringBuffer stringBuffer0 = new StringBuffer((CharSequence) \"B:>]S[=_Pv8oQ\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format(date0, stringBuffer0);\n    mockGregorianCalendar0.toString();\n}",
    "testName" : "test0045"
  },
  "test0166" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0166() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 1, 16, (-359), 1992, 3);\n    String string0 = fastDateFormat0.format((Calendar) mockGregorianCalendar0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test0166"
  },
  "test23572" : {
    "methodSignature" : "static synchronized String getTimeZoneDisplay(TimeZone tz, boolean daylight, int style, Locale locale)",
    "methodName" : "getTimeZoneDisplay",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23572() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(3673, \"\");\n    FastDateFormat.getTimeZoneDisplay(simpleTimeZone0, true, 3673, (Locale) null);\n}",
    "testName" : "test23572"
  },
  "test461805" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461805() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);\n    String string0 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat3.equals((Object) fastDateFormat2);\n}",
    "testName" : "test461805"
  },
  "test461807" : {
    "methodSignature" : "public StringBuffer format(Object obj, StringBuffer toAppendTo, FieldPosition pos)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461807() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    Locale locale2 = Locale.lookup(linkedList0, list0);\n    FastDateFormat fastDateFormat2 = FastDateFormat.getInstance(\"\", (TimeZone) simpleTimeZone0, locale1);\n    FastDateFormat fastDateFormat3 = FastDateFormat.getDateInstance(0, locale1);\n    Format.Field format_Field0 = mock(Format.Field.class, new ViolatedAssumptionAnswer());\n    FieldPosition fieldPosition0 = new FieldPosition(format_Field0, 2);\n    MockDate mockDate0 = new MockDate(1, 221, 2250, (-2050), 116);\n    String string0 = fastDateFormat3.format((Date) mockDate0);\n    fastDateFormat0.format((Object) mockSimpleDateFormat0, stringBuffer1, fieldPosition0);\n}",
    "testName" : "test461807"
  },
  "test02106" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02106() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.init();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test02106"
  },
  "test02105" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02105() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.init();\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test02105"
  },
  "test02104" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02104() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.init();\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test02104"
  },
  "test17450" : {
    "methodSignature" : "public StringBuffer format(long millis, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17450() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((long) 3, stringBuffer0);\n}",
    "testName" : "test17450"
  },
  "test15393" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15393() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test15393"
  },
  "test15392" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15392() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test15392"
  },
  "test0280" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, Locale locale)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0280() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n}",
    "testName" : "test0280"
  },
  "test0160" : {
    "methodSignature" : "public String format(Calendar calendar)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0160() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance();\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar((-1), 1, 16, (-359), 1992, 3);\n    String string0 = fastDateFormat0.format((Calendar) mockGregorianCalendar0);\n}",
    "testName" : "test0160"
  },
  "test15395" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15395() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    mockDate0.toString();\n}",
    "testName" : "test15395"
  },
  "test19514" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test19514() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n    int[] intArray0 = new int[5];\n    fastDateFormat0.parseToken(\"\", intArray0);\n}",
    "testName" : "test19514"
  },
  "test15394" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test15394() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    Locale locale0 = Locale.GERMAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    MockDate mockDate0 = new MockDate((-2848), 1, 284, (-2305), (-2305), 1916);\n    String string0 = fastDateFormat0.format((Date) mockDate0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test15394"
  },
  "test17458" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17458() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((long) 3, stringBuffer0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test17458"
  },
  "test36653" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36653() throws Throwable {\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n}",
    "testName" : "test36653"
  },
  "test17459" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17459() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((long) 3, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test17459"
  },
  "test28592" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test28592() throws Throwable {\n    FastDateFormat.getDateTimeInstance(276, 276, (TimeZone) null);\n}",
    "testName" : "test28592"
  },
  "test441236" : {
    "methodSignature" : "public static synchronized FastDateFormat getDateInstance(int style, TimeZone timeZone, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test441236() throws Throwable {\n    FastDateFormat.getDateInstance(65, (TimeZone) null, (Locale) null);\n}",
    "testName" : "test441236"
  },
  "test07237" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07237() throws Throwable {\n    Locale locale0 = Locale.US;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test07237"
  },
  "test811987" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test811987() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test811987"
  },
  "test07236" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07236() throws Throwable {\n    Locale locale0 = Locale.US;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test07236"
  },
  "test07238" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07238() throws Throwable {\n    Locale locale0 = Locale.US;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test07238"
  },
  "test811986" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test811986() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    Locale locale0 = Locale.KOREAN;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0, locale0);\n    int int0 = fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test811986"
  },
  "test05176" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05176() throws Throwable {\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, timeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test05176"
  },
  "test05178" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05178() throws Throwable {\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, timeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test05178"
  },
  "test451273" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451273() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test451273"
  },
  "test05177" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05177() throws Throwable {\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, timeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test05177"
  },
  "test451271" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451271() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test451271"
  },
  "test451272" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451272() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test451272"
  },
  "test17460" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test17460() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", timeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((long) 3, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test17460"
  },
  "test0291" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0291() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test0291"
  },
  "test0292" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0292() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test0292"
  },
  "test0293" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0293() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test0293"
  },
  "test0294" : {
    "methodSignature" : "protected void init()",
    "methodName" : "init",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0294() throws Throwable {\n    Locale locale0 = Locale.forLanguageTag(\"6\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, locale0);\n    fastDateFormat0.init();\n}",
    "testName" : "test0294"
  },
  "test36664" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36664() throws Throwable {\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test36664"
  },
  "test38723" : {
    "methodSignature" : "public StringBuffer format(Calendar calendar, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38723() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);\n}",
    "testName" : "test38723"
  },
  "test05162" : {
    "methodSignature" : "public TimeZone getTimeZone()",
    "methodName" : "getTimeZone",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05162() throws Throwable {\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n}",
    "testName" : "test05162"
  },
  "test791982" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test791982() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    Locale locale0 = Locale.JAPANESE;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(0, (TimeZone) simpleTimeZone0, locale0);\n    boolean boolean0 = fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test791982"
  },
  "test39937" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39937() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test39937"
  },
  "test681971" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test681971() throws Throwable {\n    Locale locale0 = Locale.FRANCE;\n    FastDateFormat.getInstance(\">WK6e]DBk\", locale0);\n}",
    "testName" : "test681971"
  },
  "test39818" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39818() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test39818"
  },
  "test39939" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39939() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test39939"
  },
  "test20515" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20515() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n}",
    "testName" : "test20515"
  },
  "test39817" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39817() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    fastDateFormat1.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test39817"
  },
  "test39938" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39938() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test39938"
  },
  "test07225" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07225() throws Throwable {\n    Locale locale0 = Locale.US;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (TimeZone) null, locale0);\n}",
    "testName" : "test07225"
  },
  "test39819" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39819() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test39819"
  },
  "test451265" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test451265() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getDefault();\n    TimeZone.setDefault(timeZone0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    String string0 = timeZone0.getDisplayName(false, 0, locale0);\n    String string1 = timeZone0.getDisplayName(false, 0, locale0);\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, timeZone0);\n}",
    "testName" : "test451265"
  },
  "test05167" : {
    "methodSignature" : "public static FastDateFormat getTimeInstance(int style, TimeZone timeZone)",
    "methodName" : "getTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05167() throws Throwable {\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat();\n    TimeZone timeZone0 = mockSimpleDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat0 = FastDateFormat.getTimeInstance(3, timeZone0);\n}",
    "testName" : "test05167"
  },
  "test461708" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, TimeZone timeZone)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461708() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n}",
    "testName" : "test461708"
  },
  "test32612" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, Locale locale)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test32612() throws Throwable {\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat.getDateInstance(43, locale0);\n}",
    "testName" : "test32612"
  },
  "test10285" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10285() throws Throwable {\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"&.\", locale0);\n}",
    "testName" : "test10285"
  },
  "test38731" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38731() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test38731"
  },
  "test39821" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39821() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test39821"
  },
  "test39942" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39942() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    mockDate0.toString();\n}",
    "testName" : "test39942"
  },
  "test561926" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test561926() throws Throwable {\n    Locale locale0 = Locale.TRADITIONAL_CHINESE;\n    FastDateFormat.getInstance(\"gl#+/t~.LgR_d%q\", locale0);\n}",
    "testName" : "test561926"
  },
  "test38732" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test38732() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    MockGregorianCalendar mockGregorianCalendar0 = new MockGregorianCalendar(0, 1, (-2177), 0, 0, 54);\n    char[] charArray0 = new char[4];\n    CharBuffer charBuffer0 = CharBuffer.wrap(charArray0);\n    StringBuffer stringBuffer0 = new StringBuffer(charBuffer0);\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Calendar) mockGregorianCalendar0, stringBuffer0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test38732"
  },
  "test13315" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13315() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) null);\n}",
    "testName" : "test13315"
  },
  "test39924" : {
    "methodSignature" : "public StringBuffer format(Date date, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39924() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n}",
    "testName" : "test39924"
  },
  "test39804" : {
    "methodSignature" : "public static FastDateFormat getDateTimeInstance(int dateStyle, int timeStyle, Locale locale)",
    "methodName" : "getDateTimeInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test39804() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n}",
    "testName" : "test39804"
  },
  "test20523" : {
    "methodSignature" : "protected String parseToken(String pattern, int[] indexRef)",
    "methodName" : "parseToken",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20523() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    int[] intArray0 = new int[6];\n    fastDateFormat0.parseToken((String) null, intArray0);\n}",
    "testName" : "test20523"
  },
  "test20521" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20521() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test20521"
  },
  "test20522" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20522() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test20522"
  },
  "test20520" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test20520() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test20520"
  },
  "test461719" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461719() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    fastDateFormat1.getPattern();\n}",
    "testName" : "test461719"
  },
  "test461721" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461721() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    fastDateFormat1.getMaxLengthEstimate();\n}",
    "testName" : "test461721"
  },
  "test461720" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461720() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    fastDateFormat1.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test461720"
  },
  "test461601" : {
    "methodSignature" : "public static FastDateFormat getDateInstance(int style, TimeZone timeZone)",
    "methodName" : "getDateInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461601() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n}",
    "testName" : "test461601"
  },
  "test461722" : {
    "methodSignature" : "public boolean equals(Object obj)",
    "methodName" : "equals",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test461722() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) simpleTimeZone0);\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    ParsePosition parsePosition0 = new ParsePosition((-2803));\n    Object object0 = fastDateFormat0.parseObject(\"YW*-M\", parsePosition0);\n    StringBuffer stringBuffer1 = stringBuffer0.append((Object) null);\n    StringBuffer stringBuffer2 = fastDateFormat0.format(45L, stringBuffer0);\n    fastDateFormat0.hashCode();\n    Locale locale0 = Locale.GERMANY;\n    MockSimpleDateFormat mockSimpleDateFormat0 = new MockSimpleDateFormat(\"\", locale0);\n    Locale locale1 = Locale.CHINA;\n    LinkedList<Locale.LanguageRange> linkedList0 = new LinkedList<Locale.LanguageRange>();\n    LinkedHashSet<Locale> linkedHashSet0 = new LinkedHashSet<Locale>();\n    List<Locale> list0 = Locale.filter((List<Locale.LanguageRange>) linkedList0, (Collection<Locale>) linkedHashSet0);\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 0, (TimeZone) simpleTimeZone0);\n    fastDateFormat1.equals((Object) fastDateFormat0);\n}",
    "testName" : "test461722"
  },
  "test391014" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391014() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test391014"
  },
  "test741977" : {
    "methodSignature" : "public static synchronized FastDateFormat getInstance(String pattern, TimeZone timeZone, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test741977() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    Locale locale0 = Locale.ENGLISH;\n    FastDateFormat.getInstance(\"AL+YIJ6T*8\\\"x\", (TimeZone) simpleTimeZone0, locale0);\n}",
    "testName" : "test741977"
  },
  "test391015" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391015() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test391015"
  },
  "test16396" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, Locale locale)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test16396() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"\", (Locale) null);\n}",
    "testName" : "test16396"
  },
  "test631966" : {
    "methodSignature" : "public static FastDateFormat getInstance(String pattern, TimeZone timeZone)",
    "methodName" : "getInstance",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test631966() throws Throwable {\n    SimpleTimeZone simpleTimeZone0 = new SimpleTimeZone(0, \"\");\n    FastDateFormat.getInstance(\":Uhxdjbv\", (TimeZone) simpleTimeZone0);\n}",
    "testName" : "test631966"
  },
  "test13321" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13321() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) null);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test13321"
  },
  "test13322" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13322() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) null);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test13322"
  },
  "test36667" : {
    "methodSignature" : "public StringBuffer format(long millis, StringBuffer buf)",
    "methodName" : "format",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36667() throws Throwable {\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    fastDateFormat0.format((-2437L), (StringBuffer) null);\n}",
    "testName" : "test36667"
  },
  "test10296" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10296() throws Throwable {\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"&.\", locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test10296"
  },
  "test36666" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36666() throws Throwable {\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test36666"
  },
  "test391016" : {
    "methodSignature" : "public int getMaxLengthEstimate()",
    "methodName" : "getMaxLengthEstimate",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test391016() throws Throwable {\n    TimeZone timeZone0 = TimeZone.getTimeZone(\"k\");\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"k\", timeZone0);\n    Locale locale0 = Locale.CANADA;\n    ZoneId zoneId0 = timeZone0.toZoneId();\n    boolean boolean0 = timeZone0.observesDaylightTime();\n    String string0 = timeZone0.getDisplayName(locale0);\n    boolean boolean1 = fastDateFormat0.equals((Object) null);\n    Locale locale1 = Locale.forLanguageTag(\"\");\n    FastDateFormat fastDateFormat1 = FastDateFormat.getDateTimeInstance(3, 1, locale0);\n    String string1 = fastDateFormat0.getPattern();\n    TimeZone timeZone1 = fastDateFormat0.getTimeZone();\n    FastDateFormat fastDateFormat2 = FastDateFormat.getDateInstance(3, timeZone0);\n    ParsePosition parsePosition0 = new ParsePosition((-888));\n    Object object0 = fastDateFormat1.parseObject(\"\", parsePosition0);\n    String string2 = locale1.getDisplayName();\n    MockDate mockDate0 = new MockDate(2, 1, 2, 3, (-888), 0);\n    DecimalFormat decimalFormat0 = new DecimalFormat();\n    StringBuffer stringBuffer0 = new StringBuffer(\"\");\n    StringBuffer stringBuffer1 = fastDateFormat0.format((Date) mockDate0, stringBuffer0);\n    StringBuffer stringBuffer2 = stringBuffer1.append(0);\n    FieldPosition fieldPosition0 = new FieldPosition(945);\n    StringBuffer stringBuffer3 = decimalFormat0.format((-1837L), stringBuffer1, fieldPosition0);\n    fastDateFormat0.getMaxLengthEstimate();\n}",
    "testName" : "test391016"
  },
  "test10297" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test10297() throws Throwable {\n    Locale locale0 = Locale.ITALY;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getInstance(\"&.\", locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test10297"
  },
  "test13320" : {
    "methodSignature" : "public boolean getTimeZoneOverridesCalendar()",
    "methodName" : "getTimeZoneOverridesCalendar",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test13320() throws Throwable {\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateInstance(0, (TimeZone) null);\n    fastDateFormat0.getTimeZoneOverridesCalendar();\n}",
    "testName" : "test13320"
  },
  "test36665" : {
    "methodSignature" : "public String getPattern()",
    "methodName" : "getPattern",
    "className" : "org.apache.commons.lang3.time.FastDateFormat",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test36665() throws Throwable {\n    Locale locale0 = Locale.ROOT;\n    FastDateFormat fastDateFormat0 = FastDateFormat.getDateTimeInstance(0, 0, locale0);\n    fastDateFormat0.getPattern();\n}",
    "testName" : "test36665"
  }
}