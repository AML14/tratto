project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.stubVoid((Object) ""K,8K\""(:g&z4VhOoB"");
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test011,"public void test011() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.stub(""Long"");
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Class<MockSettingsImpl> class0 = MockSettingsImpl.class;
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    // Undeclared exception!
    try {
        mockitoCore0.mock(class0, (MockSettings) mockSettingsImpl0, true);
        fail(""Expecting exception: IncompatibleClassChangeError"");
    } catch (IncompatibleClassChangeError e) {
        //
        // Expected non-static field org.mockito.cglib.proxy.Enhancer.serialVersionUID
        //
        verifyException(""org.mockito.cglib.proxy.Enhancer"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    ClonesArguments clonesArguments0 = new ClonesArguments();
    Stubber stubber0 = mockitoCore0.doAnswer(clonesArguments0);
    assertNotNull(stubber0);
}",1,
project,0,test044,"public void test044() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object object0 = new Object();
    // Undeclared exception!
    try {
        mockitoCore0.when(object0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.getLastInvocation();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.mockito.internal.MockitoCore"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    mockitoCore0.validateMockitoUsage();
}",0,
project,0,test077,"public void test077() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.stub();
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    Only only0 = new Only();
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.verify((Object) only0, (VerificationMode) only0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.verify((Object) null, (VerificationMode) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Invocation[] invocationArray0 = new Invocation[0];
    mockitoCore0.reset(invocationArray0);
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Invocation[] invocationArray0 = new Invocation[1];
    // Undeclared exception!
    try {
        mockitoCore0.reset(invocationArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[1];
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1313,"public void test1313() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[2];
    objectArray0[0] = (Object) mockitoCore0;
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1414,"public void test1414() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions((Object[]) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1515,"public void test1515() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[0];
    // Undeclared exception!
    try {
        mockitoCore0.verifyNoMoreInteractions(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1616,"public void test1616() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    // Undeclared exception!
    try {
        mockitoCore0.inOrder((Object[]) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",1,
project,0,test1717,"public void test1717() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[2];
    // Undeclared exception!
    try {
        mockitoCore0.inOrder(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[0];
    // Undeclared exception!
    try {
        mockitoCore0.inOrder(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    MockitoCore mockitoCore0 = new MockitoCore();
    Object[] objectArray0 = new Object[2];
    objectArray0[0] = (Object) mockitoCore0;
    // Undeclared exception!
    try {
        mockitoCore0.inOrder(objectArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
