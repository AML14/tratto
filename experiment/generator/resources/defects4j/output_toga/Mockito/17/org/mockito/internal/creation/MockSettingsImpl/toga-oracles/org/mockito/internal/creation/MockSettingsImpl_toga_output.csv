project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    MockSettingsImpl mockSettingsImpl1 = (MockSettingsImpl) mockSettingsImpl0.serializable();
    boolean boolean0 = mockSettingsImpl1.isSerializable();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test011,"public void test011() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    MockSettings mockSettings0 = mockSettingsImpl0.name("""");
    assertSame(mockSettings0, mockSettingsImpl0);
}",0,
project,0,test022,"public void test022() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    Class<?>[] classArray0 = mockSettingsImpl0.getExtraInterfaces();
    assertNull(classArray0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    MockSettings mockSettings0 = mockSettingsImpl0.spiedInstance((Object) null);
    assertSame(mockSettingsImpl0, mockSettings0);
}",0,
project,0,test044,"public void test044() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    ClonesArguments clonesArguments0 = new ClonesArguments();
    MockSettings mockSettings0 = mockSettingsImpl0.defaultAnswer(clonesArguments0);
    assertSame(mockSettings0, mockSettingsImpl0);
}",0,
project,0,test055,"public void test055() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    Class<Integer> class0 = Integer.class;
    mockSettingsImpl0.initiateMockName(class0);
}",0,
project,0,test066,"public void test066() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    Answer<Object> answer0 = mockSettingsImpl0.getDefaultAnswer();
    assertNull(answer0);
}",0,
project,0,test077,"public void test077() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    Object object0 = mockSettingsImpl0.getSpiedInstance();
    assertNull(object0);
}",0,
project,0,test088,"public void test088() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    MockName mockName0 = mockSettingsImpl0.getMockName();
    assertNull(mockName0);
}",0,
project,0,test099,"public void test099() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    // Undeclared exception!
    try {
        mockSettingsImpl0.extraInterfaces((Class<?>[]) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    Class<Object>[] classArray0 = (Class<Object>[]) Array.newInstance(Class.class, 0);
    // Undeclared exception!
    try {
        mockSettingsImpl0.extraInterfaces(classArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    Class<Integer>[] classArray0 = (Class<Integer>[]) Array.newInstance(Class.class, 1);
    // Undeclared exception!
    try {
        mockSettingsImpl0.extraInterfaces(classArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    Class<String>[] classArray0 = (Class<String>[]) Array.newInstance(Class.class, 1);
    Class<String> class0 = String.class;
    classArray0[0] = class0;
    // Undeclared exception!
    try {
        mockSettingsImpl0.extraInterfaces(classArray0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    boolean boolean0 = mockSettingsImpl0.isSerializable();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1414,"public void test1414() throws Throwable {
    MockSettingsImpl mockSettingsImpl0 = new MockSettingsImpl();
    Class<Annotation>[] classArray0 = (Class<Annotation>[]) Array.newInstance(Class.class, 2);
    Class<Annotation> class0 = Annotation.class;
    classArray0[0] = class0;
    classArray0[1] = classArray0[0];
    mockSettingsImpl0.extraInterfaces(classArray0);
    boolean boolean0 = mockSettingsImpl0.isSerializable();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
