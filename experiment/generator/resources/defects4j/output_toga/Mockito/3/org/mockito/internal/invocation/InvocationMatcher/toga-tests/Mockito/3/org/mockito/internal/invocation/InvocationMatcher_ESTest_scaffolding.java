/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun Nov 05 00:59:04 GMT 2023
 */

package org.mockito.internal.invocation;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class InvocationMatcher_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.mockito.internal.invocation.InvocationMatcher"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/Users/elliottzackrone/IdeaProjects/defects4jprefix"); 
    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/vv/c7q6vm8920vc7d5p_87011w40000gn/T/"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(InvocationMatcher_ESTest_scaffolding.class.getClassLoader() ,
      "org.mockito.internal.matchers.ContainsExtraTypeInformation",
      "org.hamcrest.StringDescription",
      "net.bytebuddy.matcher.CollectionSizeMatcher",
      "net.bytebuddy.dynamic.scaffold.BridgeMethodResolver$Simple$ConflictHandler",
      "org.mockito.invocation.Location",
      "org.mockito.internal.invocation.InvocationMatcher",
      "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker",
      "net.bytebuddy.implementation.attribute.TypeAttributeAppender$ForSuperType",
      "net.bytebuddy.dynamic.scaffold.MethodLookupEngine",
      "net.bytebuddy.matcher.EqualityMatcher",
      "net.bytebuddy.matcher.ElementMatcher$Junction$Disjunction",
      "net.bytebuddy.description.annotation.AnnotationList",
      "org.mockito.internal.exceptions.stacktrace.StackTraceFilter",
      "org.mockito.exceptions.misusing.NotAMockException",
      "net.bytebuddy.NamingStrategy$Unbound",
      "net.bytebuddy.NamingStrategy$Unbound$Default",
      "net.bytebuddy.description.method.MethodList",
      "net.bytebuddy.matcher.StringMatcher$Mode",
      "net.bytebuddy.matcher.ModifierMatcher",
      "org.hamcrest.core.SubstringMatcher",
      "net.bytebuddy.dynamic.DynamicType$Builder",
      "net.bytebuddy.matcher.MethodSortMatcher",
      "net.bytebuddy.matcher.FilterableList$Empty",
      "org.mockito.internal.invocation.ArgumentsProcessor",
      "net.bytebuddy.dynamic.scaffold.subclass.ConstructorStrategy",
      "org.mockito.internal.configuration.GlobalConfiguration",
      "org.mockito.plugins.MockMaker",
      "net.bytebuddy.matcher.MethodReturnTypeMatcher",
      "net.bytebuddy.description.field.FieldList",
      "org.mockito.exceptions.misusing.MockitoConfigurationException",
      "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter",
      "net.bytebuddy.implementation.auxiliary.AuxiliaryType$NamingStrategy$SuffixingRandom",
      "net.bytebuddy.NamingStrategy",
      "org.hamcrest.BaseDescription",
      "net.bytebuddy.dynamic.scaffold.BridgeMethodResolver$Simple$ConflictHandler$Default$3",
      "net.bytebuddy.dynamic.scaffold.BridgeMethodResolver$Simple$ConflictHandler$Default$2",
      "net.bytebuddy.matcher.ElementMatcher$Junction$AbstractBase",
      "net.bytebuddy.dynamic.scaffold.BridgeMethodResolver$Simple$ConflictHandler$Default$1",
      "net.bytebuddy.matcher.LatentMethodMatcher",
      "net.bytebuddy.description.ModifierReviewable",
      "net.bytebuddy.utility.RandomString",
      "net.bytebuddy.implementation.attribute.FieldAttributeAppender$NoOp",
      "org.mockito.plugins.PluginSwitch",
      "net.bytebuddy.dynamic.scaffold.MethodLookupEngine$Factory",
      "net.bytebuddy.utility.ByteBuddyCommons",
      "net.bytebuddy.matcher.StringMatcher$Mode$1",
      "org.mockito.stubbing.Answer",
      "org.hamcrest.BaseMatcher",
      "net.bytebuddy.matcher.StringMatcher$Mode$2",
      "net.bytebuddy.implementation.attribute.MethodAttributeAppender$NoOp",
      "org.mockito.invocation.InvocationOnMock",
      "org.mockito.internal.util.collections.Iterables",
      "net.bytebuddy.matcher.StringMatcher$Mode$3",
      "org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
      "net.bytebuddy.matcher.StringMatcher$Mode$4",
      "net.bytebuddy.matcher.StringMatcher$Mode$5",
      "net.bytebuddy.matcher.StringMatcher$Mode$6",
      "net.bytebuddy.matcher.StringMatcher$Mode$7",
      "net.bytebuddy.description.type.PackageDescription",
      "net.bytebuddy.matcher.StringMatcher$Mode$8",
      "net.bytebuddy.matcher.StringMatcher$Mode$9",
      "net.bytebuddy.description.ModifierReviewable$AbstractModifierReviewable",
      "net.bytebuddy.asm.ClassVisitorWrapper",
      "net.bytebuddy.matcher.NegatingMatcher",
      "org.mockito.invocation.MockHandler",
      "net.bytebuddy.dynamic.scaffold.FieldRegistry",
      "net.bytebuddy.description.annotation.AnnotationDescription",
      "org.mockito.internal.creation.bytebuddy.CachingMockBytecodeGenerator",
      "org.mockito.configuration.IMockitoConfiguration",
      "net.bytebuddy.dynamic.scaffold.BridgeMethodResolver$Simple$BridgeTarget",
      "net.bytebuddy.description.type.DeclaredInType",
      "net.bytebuddy.dynamic.scaffold.BridgeMethodResolver$Factory",
      "net.bytebuddy.matcher.DeclaringTypeMatcher",
      "net.bytebuddy.implementation.attribute.TypeAttributeAppender$NoOp",
      "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner",
      "net.bytebuddy.dynamic.scaffold.BridgeMethodResolver$Simple$Factory",
      "org.mockito.internal.matchers.Equals",
      "net.bytebuddy.matcher.ModifierMatcher$Mode",
      "org.hamcrest.Matcher",
      "net.bytebuddy.dynamic.scaffold.inline.MethodRebaseResolver$MethodNameTransformer",
      "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default",
      "net.bytebuddy.dynamic.DynamicType$Builder$FieldAnnotationTarget",
      "net.bytebuddy.matcher.FilterableList",
      "net.bytebuddy.ByteBuddy$Definable",
      "net.bytebuddy.matcher.MethodSortMatcher$Sort",
      "org.mockito.internal.creation.bytebuddy.MockBytecodeGenerator",
      "org.mockito.internal.configuration.plugins.PluginRegistry",
      "org.mockito.configuration.AnnotationEngine",
      "org.mockito.invocation.Invocation",
      "net.bytebuddy.implementation.attribute.AnnotationAppender",
      "net.bytebuddy.ByteBuddy",
      "org.mockito.internal.stubbing.StubbedInvocationMatcher",
      "org.mockito.configuration.DefaultMockitoConfiguration",
      "org.mockito.internal.creation.instance.InstantiationException",
      "net.bytebuddy.dynamic.scaffold.MethodRegistry",
      "net.bytebuddy.NamingStrategy$SuffixingRandom$BaseNameResolver",
      "org.mockito.ArgumentMatcher",
      "org.hamcrest.core.StringContains",
      "org.mockito.internal.configuration.plugins.PluginLoader",
      "net.bytebuddy.implementation.attribute.TypeAttributeAppender",
      "net.bytebuddy.description.method.MethodDescription",
      "net.bytebuddy.implementation.attribute.MethodAttributeAppender",
      "net.bytebuddy.description.type.TypeList",
      "net.bytebuddy.matcher.MethodParameterMatcher",
      "net.bytebuddy.dynamic.scaffold.BridgeMethodResolver$Simple$ConflictHandler$Default",
      "net.bytebuddy.implementation.attribute.FieldAttributeAppender",
      "org.mockito.invocation.StubInfo",
      "net.bytebuddy.implementation.attribute.MethodAttributeAppender$Factory",
      "net.bytebuddy.matcher.MethodSortMatcher$Sort$6",
      "net.bytebuddy.matcher.MethodSortMatcher$Sort$5",
      "net.bytebuddy.ByteBuddy$Definable$Undefined",
      "net.bytebuddy.matcher.MethodSortMatcher$Sort$4",
      "net.bytebuddy.matcher.MethodSortMatcher$Sort$3",
      "org.hamcrest.TypeSafeMatcher",
      "org.mockito.internal.configuration.plugins.Plugins",
      "net.bytebuddy.matcher.MethodSortMatcher$Sort$2",
      "net.bytebuddy.matcher.MethodSortMatcher$Sort$1",
      "org.hamcrest.text.IsEqualIgnoringCase",
      "net.bytebuddy.matcher.NameMatcher",
      "net.bytebuddy.matcher.ElementMatcher$Junction",
      "net.bytebuddy.description.type.TypeDescription$AbstractTypeDescription",
      "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
      "org.mockito.plugins.StackTraceCleanerProvider",
      "net.bytebuddy.description.type.TypeDescription",
      "org.hamcrest.SelfDescribing",
      "net.bytebuddy.description.annotation.AnnotatedCodeElement",
      "net.bytebuddy.ClassFileVersion",
      "net.bytebuddy.dynamic.scaffold.MethodRegistry$Prepared",
      "net.bytebuddy.description.type.TypeList$Empty",
      "net.bytebuddy.matcher.StringMatcher",
      "org.hamcrest.internal.ReflectiveTypeFinder",
      "org.mockito.internal.invocation.CapturesArgumensFromInvocation",
      "org.mockito.exceptions.PrintableInvocation",
      "org.mockito.mock.MockName",
      "net.bytebuddy.implementation.Implementation",
      "net.bytebuddy.implementation.attribute.AnnotationAppender$Target",
      "net.bytebuddy.description.ByteCodeElement",
      "org.mockito.invocation.DescribedInvocation",
      "org.mockito.internal.configuration.ClassPathLoader",
      "org.mockito.exceptions.base.MockitoException",
      "net.bytebuddy.matcher.NullMatcher",
      "net.bytebuddy.dynamic.scaffold.MethodLookupEngine$Default$Factory",
      "net.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod",
      "org.hamcrest.Description",
      "net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction",
      "net.bytebuddy.asm.ClassVisitorWrapper$Chain",
      "net.bytebuddy.description.type.TypeDescription$ForLoadedType",
      "net.bytebuddy.dynamic.loading.ClassLoadingStrategy",
      "org.mockito.exceptions.stacktrace.StackTraceCleaner",
      "org.mockito.internal.util.MockUtil",
      "org.mockito.internal.configuration.plugins.PluginFinder",
      "net.bytebuddy.matcher.ElementMatcher",
      "net.bytebuddy.matcher.ElementMatchers",
      "net.bytebuddy.implementation.attribute.FieldAttributeAppender$Factory",
      "net.bytebuddy.implementation.auxiliary.AuxiliaryType$NamingStrategy",
      "org.mockito.internal.matchers.MatchersPrinter",
      "net.bytebuddy.description.NamedElement",
      "org.mockito.internal.reporting.PrintSettings"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.mockito.invocation.Invocation", false, InvocationMatcher_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(InvocationMatcher_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.mockito.internal.invocation.InvocationMatcher",
      "org.hamcrest.BaseMatcher",
      "org.hamcrest.internal.ReflectiveTypeFinder",
      "org.hamcrest.TypeSafeMatcher",
      "org.hamcrest.text.IsEqualIgnoringWhiteSpace",
      "org.mockito.internal.invocation.SerializableMethod",
      "org.mockito.internal.invocation.realmethod.DefaultRealMethod",
      "org.mockito.internal.invocation.realmethod.CleanTraceRealMethod",
      "org.mockito.internal.invocation.InvocationImpl",
      "org.hamcrest.text.StringContainsInOrder",
      "org.mockito.internal.invocation.ArgumentsProcessor",
      "org.hamcrest.TypeSafeDiagnosingMatcher",
      "org.hamcrest.object.IsEventFrom",
      "org.hamcrest.core.SubstringMatcher",
      "org.hamcrest.core.StringStartsWith",
      "org.mockito.internal.stubbing.StubbedInvocationMatcher",
      "org.hamcrest.text.IsEqualIgnoringCase",
      "org.hamcrest.number.BigDecimalCloseTo",
      "org.hamcrest.core.StringContains",
      "org.hamcrest.number.IsCloseTo",
      "org.hamcrest.DiagnosingMatcher",
      "org.hamcrest.core.IsInstanceOf",
      "org.hamcrest.core.StringEndsWith",
      "org.hamcrest.core.IsAnything",
      "org.hamcrest.xml.HasXPath$1",
      "org.hamcrest.xml.HasXPath",
      "org.hamcrest.beans.HasProperty",
      "org.hamcrest.core.IsNot",
      "org.mockito.ArgumentMatcher",
      "org.mockito.internal.matchers.Equals",
      "org.mockito.internal.matchers.LocalizedMatcher",
      "org.mockito.internal.debugging.LocationImpl",
      "org.mockito.internal.configuration.plugins.PluginRegistry",
      "org.mockito.internal.configuration.plugins.PluginLoader",
      "org.mockito.internal.configuration.plugins.DefaultPluginSwitch",
      "org.mockito.internal.configuration.plugins.PluginFinder",
      "org.mockito.internal.util.collections.Iterables",
      "org.mockito.internal.creation.bytebuddy.ByteBuddyMockMaker",
      "org.mockito.internal.creation.bytebuddy.CachingMockBytecodeGenerator",
      "org.mockito.internal.creation.bytebuddy.MockBytecodeGenerator",
      "net.bytebuddy.ByteBuddy",
      "net.bytebuddy.ClassFileVersion",
      "net.bytebuddy.utility.ByteBuddyCommons",
      "net.bytebuddy.NamingStrategy$Unbound$Default",
      "net.bytebuddy.implementation.auxiliary.AuxiliaryType$NamingStrategy$SuffixingRandom",
      "net.bytebuddy.utility.RandomString",
      "net.bytebuddy.matcher.FilterableList$Empty",
      "net.bytebuddy.description.type.TypeList$Empty",
      "net.bytebuddy.matcher.ElementMatchers",
      "net.bytebuddy.matcher.ElementMatcher$Junction$AbstractBase",
      "net.bytebuddy.matcher.NameMatcher",
      "net.bytebuddy.matcher.StringMatcher",
      "net.bytebuddy.matcher.StringMatcher$Mode",
      "net.bytebuddy.matcher.MethodParameterMatcher",
      "net.bytebuddy.matcher.CollectionSizeMatcher",
      "net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction",
      "net.bytebuddy.description.ModifierReviewable$AbstractModifierReviewable",
      "net.bytebuddy.description.type.TypeDescription$AbstractTypeDescription",
      "net.bytebuddy.description.type.TypeDescription$ForLoadedType",
      "net.bytebuddy.matcher.EqualityMatcher",
      "net.bytebuddy.matcher.MethodReturnTypeMatcher",
      "net.bytebuddy.matcher.DeclaringTypeMatcher",
      "net.bytebuddy.matcher.ModifierMatcher",
      "net.bytebuddy.matcher.ModifierMatcher$Mode",
      "net.bytebuddy.matcher.MethodSortMatcher",
      "net.bytebuddy.matcher.MethodSortMatcher$Sort",
      "net.bytebuddy.matcher.NegatingMatcher",
      "net.bytebuddy.matcher.ElementMatcher$Junction$Disjunction",
      "net.bytebuddy.dynamic.scaffold.BridgeMethodResolver$Simple$ConflictHandler$Default",
      "net.bytebuddy.dynamic.scaffold.BridgeMethodResolver$Simple$Factory",
      "net.bytebuddy.asm.ClassVisitorWrapper$Chain",
      "net.bytebuddy.dynamic.scaffold.MethodRegistry$Default",
      "net.bytebuddy.ByteBuddy$Definable$Undefined",
      "net.bytebuddy.implementation.attribute.TypeAttributeAppender$NoOp",
      "net.bytebuddy.dynamic.scaffold.MethodLookupEngine$Default$Factory",
      "net.bytebuddy.implementation.attribute.FieldAttributeAppender$NoOp",
      "net.bytebuddy.implementation.attribute.MethodAttributeAppender$NoOp",
      "net.bytebuddy.implementation.attribute.MethodAttributeAppender$ForInstrumentedMethod",
      "net.bytebuddy.implementation.attribute.TypeAttributeAppender$ForSuperType",
      "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleanerProvider",
      "org.mockito.internal.configuration.plugins.Plugins",
      "org.mockito.internal.exceptions.stacktrace.DefaultStackTraceCleaner",
      "org.mockito.internal.exceptions.stacktrace.StackTraceFilter",
      "org.hamcrest.FeatureMatcher",
      "org.hamcrest.object.HasToString",
      "org.hamcrest.core.IsEqual",
      "org.hamcrest.core.AllOf",
      "org.mockito.internal.reporting.PrintSettings",
      "org.mockito.internal.matchers.MatchersPrinter",
      "org.mockito.internal.util.MockUtil",
      "org.mockito.exceptions.base.MockitoException",
      "org.mockito.exceptions.misusing.NotAMockException",
      "org.mockito.internal.exceptions.stacktrace.ConditionalStackTraceFilter",
      "org.mockito.internal.configuration.GlobalConfiguration",
      "org.mockito.configuration.DefaultMockitoConfiguration",
      "org.mockito.internal.configuration.ClassPathLoader",
      "org.hamcrest.core.IsNull",
      "org.mockito.internal.stubbing.defaultanswers.GloballyConfiguredAnswer",
      "org.mockito.internal.stubbing.defaultanswers.ReturnsSmartNulls",
      "org.mockito.internal.stubbing.defaultanswers.ReturnsMoreEmptyValues",
      "org.mockito.internal.stubbing.defaultanswers.ReturnsEmptyValues",
      "org.mockito.internal.util.ObjectMethodsGuru",
      "org.mockito.internal.stubbing.defaultanswers.ReturnsMocks",
      "org.mockito.internal.MockitoCore",
      "org.mockito.exceptions.Reporter",
      "org.mockito.internal.progress.ThreadSafeMockingProgress",
      "org.mockito.internal.stubbing.defaultanswers.ReturnsDeepStubs",
      "org.mockito.internal.stubbing.answers.CallsRealMethods",
      "org.mockito.Answers",
      "org.hamcrest.core.ShortcutCombination",
      "org.hamcrest.core.AnyOf",
      "org.hamcrest.text.IsEmptyString",
      "org.hamcrest.number.OrderingComparison",
      "org.mockito.internal.matchers.VarargCapturingMatcher",
      "org.mockito.internal.invocation.StubInfoImpl",
      "org.hamcrest.core.Is",
      "org.hamcrest.collection.IsIn",
      "org.hamcrest.BaseDescription",
      "org.hamcrest.StringDescription",
      "org.hamcrest.beans.SamePropertyValuesAs",
      "org.hamcrest.beans.PropertyUtil",
      "org.hamcrest.core.CombinableMatcher",
      "org.hamcrest.Description$NullDescription",
      "org.hamcrest.beans.SamePropertyValuesAs$PropertyMatcher",
      "org.hamcrest.core.IsSame",
      "org.mockito.internal.matchers.CapturingMatcher",
      "org.hamcrest.core.DescribedAs",
      "org.hamcrest.beans.HasPropertyWithValue$2",
      "org.hamcrest.beans.HasPropertyWithValue",
      "org.hamcrest.internal.SelfDescribingValueIterator",
      "org.hamcrest.Description",
      "org.hamcrest.collection.IsArray",
      "org.hamcrest.collection.IsEmptyIterable",
      "org.hamcrest.internal.SelfDescribingValue",
      "org.hamcrest.collection.IsEmptyCollection",
      "org.hamcrest.collection.IsMapContaining",
      "org.hamcrest.collection.IsIterableWithSize",
      "org.hamcrest.collection.IsArrayWithSize"
    );
  }
}
