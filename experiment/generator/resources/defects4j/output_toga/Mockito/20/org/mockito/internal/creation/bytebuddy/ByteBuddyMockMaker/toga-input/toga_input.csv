focal_method,test_prefix,docstring
"public void resetMock(Object mock, MockHandler newHandler, MockCreationSettings settings) {
    ((MockMethodInterceptor.MockAccess) mock).setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(newHandler), settings));
}","public void test00() throws Throwable {
    ByteBuddyMockMaker byteBuddyMockMaker0 = new ByteBuddyMockMaker();
    MockSettingsImpl<Integer> mockSettingsImpl0 = new MockSettingsImpl<Integer>();
    // Undeclared exception!
    try {
        byteBuddyMockMaker0.resetMock((Object) null, (MockHandler) null, mockSettingsImpl0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",""
"public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
    if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
        throw new MockitoException(""Serialization across classloaders not yet supported with ByteBuddyMockMaker"");
    }
    Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(settings.getTypeToMock(), settings.getExtraInterfaces());
    T mockInstance = null;
    try {
        mockInstance = classInstantiator.instantiate(mockedProxyType);
        MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
        mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
        return ensureMockIsAssignableToMockedType(settings, mockInstance);
    } catch (ClassCastException cce) {
        throw new MockitoException(join(""ClassCastException occurred while creating the mockito mock :"", ""  class to mock : "" + describeClass(mockedProxyType), ""  created class : "" + describeClass(settings.getTypeToMock()), ""  proxy instance class : "" + describeClass(mockInstance), ""  instance creation by : "" + classInstantiator.getClass().getSimpleName(), """", ""You might experience classloading issues, please ask the mockito mailing-list."", """"), cce);
    } catch (org.mockito.internal.creation.instance.InstantiationException e) {
        throw new MockitoException(""Unable to create mock instance of type '"" + mockedProxyType.getSuperclass().getSimpleName() + ""'"", e);
    }
}","public void test11() throws Throwable {
    ByteBuddyMockMaker byteBuddyMockMaker0 = new ByteBuddyMockMaker();
    MockSettingsImpl<ClassInstantiator.UsingObjenesis> mockSettingsImpl0 = new MockSettingsImpl<ClassInstantiator.UsingObjenesis>();
    // Undeclared exception!
    try {
        byteBuddyMockMaker0.createMock((MockCreationSettings<ClassInstantiator.UsingObjenesis>) mockSettingsImpl0, (MockHandler) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.mockito.internal.creation.bytebuddy.CachingMockBytecodeGenerator"", e);
    }
}",""
"public <T> T createMock(MockCreationSettings<T> settings, MockHandler handler) {
    if (settings.getSerializableMode() == SerializableMode.ACROSS_CLASSLOADERS) {
        throw new MockitoException(""Serialization across classloaders not yet supported with ByteBuddyMockMaker"");
    }
    Class<? extends T> mockedProxyType = cachingMockBytecodeGenerator.get(settings.getTypeToMock(), settings.getExtraInterfaces());
    T mockInstance = null;
    try {
        mockInstance = classInstantiator.instantiate(mockedProxyType);
        MockMethodInterceptor.MockAccess mockAccess = (MockMethodInterceptor.MockAccess) mockInstance;
        mockAccess.setMockitoInterceptor(new MockMethodInterceptor(asInternalMockHandler(handler), settings));
        return ensureMockIsAssignableToMockedType(settings, mockInstance);
    } catch (ClassCastException cce) {
        throw new MockitoException(join(""ClassCastException occurred while creating the mockito mock :"", ""  class to mock : "" + describeClass(mockedProxyType), ""  created class : "" + describeClass(settings.getTypeToMock()), ""  proxy instance class : "" + describeClass(mockInstance), ""  instance creation by : "" + classInstantiator.getClass().getSimpleName(), """", ""You might experience classloading issues, please ask the mockito mailing-list."", """"), cce);
    } catch (org.mockito.internal.creation.instance.InstantiationException e) {
        throw new MockitoException(""Unable to create mock instance of type '"" + mockedProxyType.getSuperclass().getSimpleName() + ""'"", e);
    }
}","public void test22() throws Throwable {
    ByteBuddyMockMaker byteBuddyMockMaker0 = new ByteBuddyMockMaker();
    MockSettingsImpl<Object> mockSettingsImpl0 = new MockSettingsImpl<Object>();
    SerializableMode serializableMode0 = SerializableMode.ACROSS_CLASSLOADERS;
    mockSettingsImpl0.serializable(serializableMode0);
    // Undeclared exception!
    try {
        byteBuddyMockMaker0.createMock((MockCreationSettings<Object>) mockSettingsImpl0, (MockHandler) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",""
"public MockHandler getHandler(Object mock) {
    if (!(mock instanceof MockMethodInterceptor.MockAccess)) {
        return null;
    }
    return ((MockMethodInterceptor.MockAccess) mock).getMockitoInterceptor().getMockHandler();
}","public void test33() throws Throwable {
    ByteBuddyMockMaker byteBuddyMockMaker0 = new ByteBuddyMockMaker();
    MockSettingsImpl<ClassInstantiator.UsingObjenesis> mockSettingsImpl0 = new MockSettingsImpl<ClassInstantiator.UsingObjenesis>();
    MockHandler mockHandler0 = byteBuddyMockMaker0.getHandler(mockSettingsImpl0);
    assertNull(mockHandler0);
}",""
