project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2093L, 2093L, (VerificationMode) null, true);
    long long0 = verificationOverTimeImpl0.getDuration();
    assertEquals(2093L, long0);
}",0,"assertEquals(0, long0)"
project,0,test01,"public void test01() throws Throwable {
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(2093L, 2093L, (VerificationMode) null, true);
    long long0 = verificationOverTimeImpl0.getDuration();
    assertEquals(2093L, verificationOverTimeImpl0.getPollingPeriod());
}",0,
project,0,test12,"public void test12() throws Throwable {
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1L), (-1L), (VerificationMode) null, false);
    verificationOverTimeImpl0.getDelegate();
    assertEquals((-1L), verificationOverTimeImpl0.getPollingPeriod());
}",0,"assertEquals(0, verificationOverTimeImpl0.getPollingPeriod())"
project,0,test13,"public void test13() throws Throwable {
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-1L), (-1L), (VerificationMode) null, false);
    verificationOverTimeImpl0.getDelegate();
    assertEquals((-1L), verificationOverTimeImpl0.getDuration());
}",0,"assertEquals(0, verificationOverTimeImpl0.getDuration())"
project,0,test24,"public void test24() throws Throwable {
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-968L), (-968L), (VerificationMode) null, false);
    long long0 = verificationOverTimeImpl0.getPollingPeriod();
    assertEquals((-968L), long0);
}",0,"assertEquals(0, long0)"
project,0,test25,"public void test25() throws Throwable {
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl((-968L), (-968L), (VerificationMode) null, false);
    long long0 = verificationOverTimeImpl0.getPollingPeriod();
    assertEquals((-968L), verificationOverTimeImpl0.getDuration());
}",0,"assertEquals(0, verificationOverTimeImpl0.getDuration())"
project,0,test36,"public void test36() throws Throwable {
    After after0 = new After(0L, (-1257L), (VerificationMode) null);
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, after0, false);
    // Undeclared exception!
    verificationOverTimeImpl0.verify((VerificationData) null);
}",1,
project,0,test47,"public void test47() throws Throwable {
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(360L, 360L, (VerificationMode) null, true);
    // Undeclared exception!
    try {
        verificationOverTimeImpl0.verify((VerificationData) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""org.mockito.internal.verification.VerificationOverTimeImpl"", e);
    }
}",1,
project,0,test58,"public void test58() throws Throwable {
    AtMost atMost0 = new AtMost(37);
    Timer timer0 = new Timer(37);
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, atMost0, false, timer0);
    boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(atMost0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test69,"public void test69() throws Throwable {
    Timer timer0 = new Timer(0L);
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, (VerificationMode) null, false, timer0);
    boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure((VerificationMode) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test710,"public void test710() throws Throwable {
    NoMoreInteractions noMoreInteractions0 = new NoMoreInteractions();
    Timer timer0 = new Timer(0L);
    VerificationOverTimeImpl verificationOverTimeImpl0 = new VerificationOverTimeImpl(0L, 0L, noMoreInteractions0, true, timer0);
    boolean boolean0 = verificationOverTimeImpl0.canRecoverFromFailure(noMoreInteractions0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
