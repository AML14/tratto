project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables((AbstractCompiler) null);
    // Undeclared exception!
    try {
        flowSensitiveInlineVariables0.process((Node) null, (Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeTraversal"", e);
    }
}",0,
project,0,test11,"public void test11() throws Throwable {
    FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables((AbstractCompiler) null);
    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, flowSensitiveInlineVariables0);
    flowSensitiveInlineVariables0.exitScope(nodeTraversal0);
    assertEquals(0, nodeTraversal0.getLineNumber());
}",0,"assertEquals(0, nodeTraversal0.getLineNumber())"
project,0,test22,"public void test22() throws Throwable {
    FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables((AbstractCompiler) null);
    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, flowSensitiveInlineVariables0);
    flowSensitiveInlineVariables0.visit(nodeTraversal0, (Node) null, (Node) null);
    assertEquals(0, nodeTraversal0.getLineNumber());
}",0,"assertEquals(0, nodeTraversal0.getLineNumber())"
project,0,test33,"public void test33() throws Throwable {
    FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables((AbstractCompiler) null);
    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, flowSensitiveInlineVariables0);
    flowSensitiveInlineVariables0.enterScope(nodeTraversal0);
    assertEquals(0, nodeTraversal0.getLineNumber());
}",0,"assertEquals(0, nodeTraversal0.getLineNumber())"
