{
  "test1213" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(1900);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    NumberLiteral numberLiteral0 = new NumberLiteral((double) 54);\n    astRoot0.addChildrenToBack(numberLiteral0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"fs3><Jkx .IDUFs\", config0, errorCollector0);\n    node0.hasOneChild();\n}",
    "testName" : "test1213"
  },
  "test2543" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2543() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"-iUJ\", true);\n    Scope scope0 = new Scope(9, 16);\n    scope0.addChildToFront(astRoot0);\n    astRoot0.addChild(scope0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    Set<String> set0 = locale0.getUnicodeLocaleAttributes();\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"-iUJ\", config0, toolErrorReporter0);\n}",
    "testName" : "test2543"
  },
  "test1214" : {
    "methodSignature" : "public int getSourcePosition()",
    "methodName" : "getSourcePosition",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1214() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(1900);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    NumberLiteral numberLiteral0 = new NumberLiteral((double) 54);\n    astRoot0.addChildrenToBack(numberLiteral0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"fs3><Jkx .IDUFs\", config0, errorCollector0);\n    node0.getSourcePosition();\n}",
    "testName" : "test1214"
  },
  "test2029" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2029() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Token.CommentType token_CommentType0 = Token.CommentType.LINE;\n    Comment comment0 = new Comment(14, 6, token_CommentType0, \"E\");\n    astRoot0.addComment(comment0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"E\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"E\", config0, errorCollector0);\n    node0.isFromExterns();\n}",
    "testName" : "test2029"
  },
  "test3756" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3756() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ReturnStatement returnStatement0 = new ReturnStatement();\n    astRoot0.addChildrenToBack(returnStatement0);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"x.n6yg\\t\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test3756"
  },
  "test1215" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1215() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(1900);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    NumberLiteral numberLiteral0 = new NumberLiteral((double) 54);\n    astRoot0.addChildrenToBack(numberLiteral0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"fs3><Jkx .IDUFs\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test1215"
  },
  "test1011" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LabeledStatement labeledStatement0 = new LabeledStatement(15);\n    astRoot0.addChild(labeledStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Label label0 = new Label((-1845), 20);\n    labeledStatement0.addLabel(label0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"error reporter\", config0, (ErrorReporter) null);\n}",
    "testName" : "test1011"
  },
  "test3554" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3554() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectLiteral objectLiteral0 = new ObjectLiteral();\n    ObjectProperty objectProperty0 = new ObjectProperty((-633));\n    objectLiteral0.addElement(objectProperty0);\n    astRoot0.addChildrenToBack(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"|:P-Xb!DDXgcB<-m%s\", false);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"|:P-Xb!DDXgcB<-m%s\", config0, errorCollector0);\n}",
    "testName" : "test3554"
  },
  "test4564" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4564() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", true);\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(26, 4);\n    astRoot0.addChild(expressionStatement0);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    Set<String> set0 = locale0.getUnicodeLocaleAttributes();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(set0, set0, true, config_LanguageMode0, true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, toolErrorReporter0);\n}",
    "testName" : "test4564"
  },
  "test033" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    EmptyExpression emptyExpression0 = new EmptyExpression(242, (-849));\n    astRoot0.addChild(emptyExpression0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"i{vwlid assignmePt 'aret\", config0, (ErrorReporter) null);\n    node0.getLength();\n}",
    "testName" : "test033"
  },
  "test1418" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1418() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    WhileLoop whileLoop0 = new WhileLoop(20);\n    astRoot0.addChild(whileLoop0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"v(p,^W~`a\", config0, (ErrorReporter) null);\n}",
    "testName" : "test1418"
  },
  "test034" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    EmptyExpression emptyExpression0 = new EmptyExpression(242, (-849));\n    astRoot0.addChild(emptyExpression0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"i{vwlid assignmePt 'aret\", config0, (ErrorReporter) null);\n    node0.getType();\n}",
    "testName" : "test034"
  },
  "test078" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    WithStatement withStatement0 = new WithStatement();\n    astRoot0.addChild(withStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, treeSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"identifier is a reserved word\", config0, toolErrorReporter0);\n}",
    "testName" : "test078"
  },
  "test2947" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2947() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    BreakStatement breakStatement0 = new BreakStatement(0);\n    astRoot0.addChild(breakStatement0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"9u4*PA}=+2o55vgrtv)\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test2947"
  },
  "test1216" : {
    "methodSignature" : "public boolean isScript()",
    "methodName" : "isScript",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(1900);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    NumberLiteral numberLiteral0 = new NumberLiteral((double) 54);\n    astRoot0.addChildrenToBack(numberLiteral0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"fs3><Jkx .IDUFs\", config0, errorCollector0);\n    node0.isScript();\n}",
    "testName" : "test1216"
  },
  "test2745" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2745() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ArrayLiteral arrayLiteral0 = new ArrayLiteral(2);\n    SwitchCase switchCase0 = new SwitchCase(1);\n    switchCase0.addStatement(arrayLiteral0);\n    astRoot0.addChildrenToBack(switchCase0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"destructuring assignment forbidden\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test2745"
  },
  "test3958" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3958() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    StringLiteral stringLiteral0 = new StringLiteral(2);\n    stringLiteral0.setValue(\"v\");\n    astRoot0.addChildrenToBack(stringLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"v\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test3958"
  },
  "test1928" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1928() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment(1, 2, token_CommentType0, \"Unsupported syntax: \");\n    astRoot0.addComment(comment0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, treeSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"Unsupported syntax: \", config0, toolErrorReporter0);\n    node0.getType();\n}",
    "testName" : "test1928"
  },
  "test3352" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3352() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LabeledStatement labeledStatement0 = new LabeledStatement(15);\n    astRoot0.addChild(labeledStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"error reporter\", config0, (ErrorReporter) null);\n}",
    "testName" : "test3352"
  },
  "test4362" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4362() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChild(variableDeclaration0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"}M3Yq{Pq_\", config0, (ErrorReporter) null);\n    node0.getLength();\n}",
    "testName" : "test4362"
  },
  "test3150" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3150() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name((-652));\n    ContinueStatement continueStatement0 = new ContinueStatement(name0);\n    astRoot0.addChild(continueStatement0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"3BARk \", config0, (ErrorReporter) null);\n}",
    "testName" : "test3150"
  },
  "test4160" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4160() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SwitchCase switchCase0 = new SwitchCase();\n    astRoot0.addChildrenToBack(switchCase0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"Unsupported syntax: \", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test4160"
  },
  "test2236" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2236() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectLiteral objectLiteral0 = new ObjectLiteral(10);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment(9, 44, token_CommentType0, \"CONTINUE\");\n    objectLiteral0.setJsDocNode(comment0);\n    astRoot0.addChildrenToBack(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"CONTINUE\", config0, toolErrorReporter0);\n    node0.getType();\n}",
    "testName" : "test2236"
  },
  "test2235" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2235() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectLiteral objectLiteral0 = new ObjectLiteral(10);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment(9, 44, token_CommentType0, \"CONTINUE\");\n    objectLiteral0.setJsDocNode(comment0);\n    astRoot0.addChildrenToBack(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"CONTINUE\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test2235"
  },
  "test3049" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3049() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ContinueStatement continueStatement0 = new ContinueStatement(1, 15);\n    astRoot0.addChild(continueStatement0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test3049"
  },
  "test1622" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1622() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"F?6K=\", true);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    UnaryExpression unaryExpression0 = new UnaryExpression(0, 16, astRoot0);\n    astRoot0.addChildrenToBack(unaryExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"F?6K=\", config0, errorCollector0);\n}",
    "testName" : "test1622"
  },
  "test2237" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2237() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectLiteral objectLiteral0 = new ObjectLiteral(10);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment(9, 44, token_CommentType0, \"CONTINUE\");\n    objectLiteral0.setJsDocNode(comment0);\n    astRoot0.addChildrenToBack(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"CONTINUE\", config0, toolErrorReporter0);\n    node0.getChildCount();\n}",
    "testName" : "test2237"
  },
  "test4059" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4059() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(1875);\n    SwitchCase switchCase0 = new SwitchCase(2, 4095);\n    switchCase0.setExpression(astRoot0);\n    astRoot0.addChildrenToBack(switchCase0);\n    JSDocInfo jSDocInfo0 = new JSDocInfo();\n    Set<String> set0 = jSDocInfo0.getSuppressions();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(set0, set0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"c5\", config0, errorCollector0);\n}",
    "testName" : "test4059"
  },
  "test3048" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3048() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ContinueStatement continueStatement0 = new ContinueStatement(1, 15);\n    astRoot0.addChild(continueStatement0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, errorCollector0);\n    node0.isFromExterns();\n}",
    "testName" : "test3048"
  },
  "test022" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    DoLoop doLoop0 = new DoLoop(2);\n    astRoot0.addChildrenToBack(doLoop0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, (String) null, config0, (ErrorReporter) null);\n}",
    "testName" : "test022"
  },
  "test1825" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1825() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    FunctionNode functionNode0 = new FunctionNode(1);\n    astRoot0.addChildrenToBack(functionNode0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"-iUJ\", config0, toolErrorReporter0);\n    node0.getChildCount();\n}",
    "testName" : "test1825"
  },
  "test067" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ObjectProperty objectProperty0 = new ObjectProperty(1970);\n    astRoot0.addChildrenToBack(objectProperty0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \".K>+v?gaX\", config0, errorCollector0);\n}",
    "testName" : "test067"
  },
  "test1826" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1826() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    FunctionNode functionNode0 = new FunctionNode(1);\n    astRoot0.addChildrenToBack(functionNode0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"-iUJ\", config0, toolErrorReporter0);\n    node0.getType();\n}",
    "testName" : "test1826"
  },
  "test1824" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1824() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    FunctionNode functionNode0 = new FunctionNode(1);\n    astRoot0.addChildrenToBack(functionNode0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"-iUJ\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test1824"
  },
  "test2030" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2030() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Token.CommentType token_CommentType0 = Token.CommentType.LINE;\n    Comment comment0 = new Comment(14, 6, token_CommentType0, \"E\");\n    astRoot0.addComment(comment0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"E\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"E\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test2030"
  },
  "test2031" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2031() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Token.CommentType token_CommentType0 = Token.CommentType.LINE;\n    Comment comment0 = new Comment(14, 6, token_CommentType0, \"E\");\n    astRoot0.addComment(comment0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"E\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"E\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test2031"
  },
  "test3655" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3655() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral(15);\n    regExpLiteral0.setValue(\"^xUb$V!\");\n    astRoot0.addChildrenToBack(regExpLiteral0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"^xUb$V!\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test3655"
  },
  "test2644" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2644() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectLiteral objectLiteral0 = new ObjectLiteral();\n    ObjectProperty objectProperty0 = new ObjectProperty(22, 22);\n    objectLiteral0.addElement(objectProperty0);\n    astRoot0.addChildrenToBack(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, (String) null, config0, (ErrorReporter) null);\n}",
    "testName" : "test2644"
  },
  "test2441" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2441() throws Throwable {\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    AstRoot astRoot0 = new AstRoot(2294);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\\n * @\", config0, (ErrorReporter) null);\n    node0.getCharno();\n}",
    "testName" : "test2441"
  },
  "test3453" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3453() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name(51, 54);\n    name0.setIdentifier(\"extends\");\n    FunctionNode functionNode0 = new FunctionNode(20, name0);\n    astRoot0.addChildrenToBack(functionNode0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"extends\", config0, errorCollector0);\n}",
    "testName" : "test3453"
  },
  "test2440" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2440() throws Throwable {\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    AstRoot astRoot0 = new AstRoot(2294);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\\n * @\", config0, (ErrorReporter) null);\n    node0.getLength();\n}",
    "testName" : "test2440"
  },
  "test1112" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"-iUJ\", true);\n    NewExpression newExpression0 = new NewExpression(22, 0);\n    astRoot0.addChild(newExpression0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"-iUJ\", config0, toolErrorReporter0);\n}",
    "testName" : "test1112"
  },
  "test2442" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2442() throws Throwable {\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    AstRoot astRoot0 = new AstRoot(2294);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\\n * @\", config0, (ErrorReporter) null);\n    node0.getType();\n}",
    "testName" : "test2442"
  },
  "test011" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"-iUJ\", true);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ParenthesizedExpression parenthesizedExpression0 = new ParenthesizedExpression();\n    astRoot0.addChildrenToBack(parenthesizedExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"K-&\", config0, errorCollector0);\n}",
    "testName" : "test011"
  },
  "test056" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    ElementGet elementGet0 = new ElementGet();\n    astRoot0.addChildrenToBack(elementGet0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"sp^%6,!5z \", config0, (ErrorReporter) null);\n}",
    "testName" : "test056"
  },
  "test1519" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1519() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block(8);\n    astRoot0.addChildrenToBack(block0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, (ErrorReporter) null);\n    node0.getLength();\n}",
    "testName" : "test1519"
  },
  "test3857" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3857() throws Throwable {\n    ReturnStatement returnStatement0 = new ReturnStatement();\n    AstRoot astRoot0 = new AstRoot(23);\n    astRoot0.addChildrenToBack(returnStatement0);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    returnStatement0.setReturnValue(astRoot0);\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, (String) null, config0, toolErrorReporter0);\n}",
    "testName" : "test3857"
  },
  "test1317" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1317() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(astRoot0, true);\n    astRoot0.addChild(expressionStatement0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"XU_/q`&E[n1^#\", config0, (ErrorReporter) null);\n}",
    "testName" : "test1317"
  },
  "test2846" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2846() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ArrayLiteral arrayLiteral0 = new ArrayLiteral(2);\n    arrayLiteral0.addElement(astRoot0);\n    astRoot0.addChildrenToBack(arrayLiteral0);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"M3Yq{q_\", true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"M3Yq{q_\", config0, toolErrorReporter0);\n}",
    "testName" : "test2846"
  },
  "test3251" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3251() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name(51, 54);\n    name0.setIdentifier(\"vp,^W~`a\");\n    FunctionNode functionNode0 = new FunctionNode(14, name0);\n    functionNode0.addParam(name0);\n    astRoot0.addChildrenToBack(functionNode0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"vp,^W~`a\", config0, errorCollector0);\n}",
    "testName" : "test3251"
  },
  "test4463" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4463() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"-iUJ\", false);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    FunctionCall functionCall0 = new FunctionCall(8, 14);\n    astRoot0.addChild(functionCall0);\n    Set<String> set0 = locale0.getUnicodeLocaleAttributes();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"-iUJ\", config0, toolErrorReporter0);\n}",
    "testName" : "test4463"
  },
  "test4261" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4261() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChild(variableDeclaration0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"Z.+[wt<8^]GI_2~~\", config0, (ErrorReporter) null);\n    node0.getLength();\n}",
    "testName" : "test4261"
  },
  "test1520" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1520() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block(8);\n    astRoot0.addChildrenToBack(block0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, (ErrorReporter) null);\n    node0.getType();\n}",
    "testName" : "test1520"
  },
  "test1521" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1521() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block(8);\n    astRoot0.addChildrenToBack(block0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, (ErrorReporter) null);\n    node0.hasChildren();\n}",
    "testName" : "test1521"
  },
  "test2133" : {
    "methodSignature" : "public boolean isScript()",
    "methodName" : "isScript",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2133() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;\n    Comment comment0 = new Comment(14, 6, token_CommentType0, \"E\");\n    astRoot0.addComment(comment0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"E\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"E\", config0, errorCollector0);\n    node0.isScript();\n}",
    "testName" : "test2133"
  },
  "test2132" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2132() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;\n    Comment comment0 = new Comment(14, 6, token_CommentType0, \"E\");\n    astRoot0.addComment(comment0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"E\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"E\", config0, errorCollector0);\n    node0.isFromExterns();\n}",
    "testName" : "test2132"
  },
  "test2134" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2134() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;\n    Comment comment0 = new Comment(14, 6, token_CommentType0, \"E\");\n    astRoot0.addComment(comment0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"E\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"E\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test2134"
  },
  "test000" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ConditionalExpression conditionalExpression0 = new ConditionalExpression(5);\n    astRoot0.addChild(conditionalExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"error reporter\", config0, errorCollector0);\n}",
    "testName" : "test000"
  },
  "test045" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(21, 10);\n    astRoot0.addChildrenToBack(arrayComprehensionLoop0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, (String) null, config0, (ErrorReporter) null);\n}",
    "testName" : "test045"
  },
  "test089" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    ForLoop forLoop0 = new ForLoop(24);\n    astRoot0.addChild(forLoop0);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"n\", config0, errorCollector0);\n}",
    "testName" : "test089"
  },
  "test1927" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1927() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment(1, 2, token_CommentType0, \"Unsupported syntax: \");\n    astRoot0.addComment(comment0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, treeSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"Unsupported syntax: \", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test1927"
  },
  "test2339" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2339() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name(35, 3, \"JO\");\n    name0.setLineno(1488);\n    PropertyGet propertyGet0 = new PropertyGet(name0, name0, 8);\n    astRoot0.addChildrenToBack(propertyGet0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"JO\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test2339"
  },
  "test1723" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1723() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ThrowStatement throwStatement0 = new ThrowStatement(14, astRoot0);\n    astRoot0.addChildrenToBack(throwStatement0);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"invalid increment target\", true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"v(p,^W~`a\", config0, toolErrorReporter0);\n}",
    "testName" : "test1723"
  },
  "test2338" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2338() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name(35, 3, \"JO\");\n    name0.setLineno(1488);\n    PropertyGet propertyGet0 = new PropertyGet(name0, name0, 8);\n    astRoot0.addChildrenToBack(propertyGet0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"JO\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test2338"
  },
  "test0910" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectLiteral objectLiteral0 = new ObjectLiteral();\n    ObjectProperty objectProperty0 = new ObjectProperty(21);\n    objectProperty0.setIsSetter();\n    objectLiteral0.addElement(objectProperty0);\n    astRoot0.addChildrenToBack(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"[zw3U#1oc43\\\"Rk\", config0, errorCollector0);\n}",
    "testName" : "test0910"
  }
}