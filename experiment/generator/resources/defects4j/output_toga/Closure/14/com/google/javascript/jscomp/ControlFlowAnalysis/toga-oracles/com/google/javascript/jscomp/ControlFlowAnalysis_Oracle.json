[ {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isQuotedString()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isGetterDef()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node1.isGetterDef())",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "ControlFlowGraph<Node> getCfg()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(controlFlowGraph0)",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isWhile()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node1.isWhile())",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isBlock()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isFromExterns()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.isFromExterns())",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1212"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isIf()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isIf())",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isIn()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isIn())",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isAnd()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isAnd())",
  "exception" : "",
  "testName" : "test1818"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1919"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2121"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isGetProp()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isGetProp())",
  "exception" : "",
  "testName" : "test2323"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2424"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isInc()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2525"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2626"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2727"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2828"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2929"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3030"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isFunction()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isFunction())",
  "exception" : "",
  "testName" : "test3131"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3232"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "static Node computeFollowNode(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3333"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "static Node computeFollowNode(Node node, ControlFlowAnalysis cfa)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3434"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "static Node computeFollowNode(Node node, ControlFlowAnalysis cfa)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(node0, node2)",
  "exception" : "",
  "testName" : "test3535"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isWhile()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3536"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3637"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3738"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3839"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isNew()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.isNew())",
  "exception" : "",
  "testName" : "test3940"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public static boolean isBreakTarget(Node target, String label)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4041"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public static boolean isBreakTarget(Node target, String label)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test4142"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4243"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public static boolean mayThrowException(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test4344"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public void process(Node externs, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4445"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isOptionalArg()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isOptionalArg())",
  "exception" : "",
  "testName" : "test4546"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public static boolean mayThrowException(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test4647"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public boolean isEmpty()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isEmpty())",
  "exception" : "",
  "testName" : "test4748"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public static boolean mayThrowException(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test4849"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public static boolean mayThrowException(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test4950"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public static boolean isBreakTarget(Node target, String label)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5051"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public static boolean isBreakTarget(Node target, String label)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5152"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public static boolean isBreakTarget(Node target, String label)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5253"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "public static boolean isBreakTarget(Node target, String label)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5354"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "static boolean isContinueStructure(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test5455"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "static boolean isContinueStructure(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test5556"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "static boolean isContinueStructure(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test5657"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "static Node getExceptionHandler(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5758"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "static Node getExceptionHandler(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5859"
}, {
  "className" : "com.google.javascript.jscomp.ControlFlowAnalysis",
  "methodSignature" : "static Node getExceptionHandler(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5960"
} ]