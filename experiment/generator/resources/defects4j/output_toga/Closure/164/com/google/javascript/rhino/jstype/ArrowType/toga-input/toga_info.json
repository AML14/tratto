{
  "test1014" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1014() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"already specified useForNull\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    Node node0 = Node.newString(1, \"Unknown class name\");\n    Node node1 = new Node(1, node0, node0, node0, node0);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType0.isSubtype(arrowType1);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test1014"
  },
  "test1015" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1015() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"already specified useForNull\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    Node node0 = Node.newString(1, \"Unknown class name\");\n    Node node1 = new Node(1, node0, node0, node0, node0);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType0.isSubtype(arrowType1);\n    errorFunctionType0.isReturnTypeInferred();\n}",
    "testName" : "test1015"
  },
  "test2029" : {
    "methodSignature" : "public boolean equals(Object jsType)",
    "methodName" : "equals",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2029() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ArrowType arrowType1 = new ArrowType(jSTypeRegistry0, (Node) null, arrowType0, true);\n    arrowType1.hashCode();\n    arrowType1.equals((Object) arrowType0);\n}",
    "testName" : "test2029"
  },
  "test1116" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1116() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"W2JoTp4|YTwH\");\n    JSType[] jSTypeArray0 = new JSType[1];\n    jSTypeArray0[0] = (JSType) errorFunctionType0;\n    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.isSubtype(arrowType1);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test1116"
  },
  "test1013" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1013() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"already specified useForNull\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    Node node0 = Node.newString(1, \"Unknown class name\");\n    Node node1 = new Node(1, node0, node0, node0, node0);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType0.isSubtype(arrowType1);\n}",
    "testName" : "test1013"
  },
  "test1319" : {
    "methodSignature" : "public boolean isNoType()",
    "methodName" : "isNoType",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1319() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    JSType jSType0 = JSType.getLeastSupertype((JSType) arrowType0, (JSType) arrowType0);\n    jSType0.isNoType();\n}",
    "testName" : "test1319"
  },
  "test012" : {
    "methodSignature" : "public TernaryValue testForEquality(JSType that)",
    "methodName" : "testForEquality",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"9?:g:zS~,yOWV<_\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    arrowType0.testForEquality(errorFunctionType0);\n}",
    "testName" : "test012"
  },
  "test034" : {
    "methodSignature" : "public JSType getLeastSupertype(JSType that)",
    "methodName" : "getLeastSupertype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"GG:s`\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    arrowType0.getLeastSupertype(errorFunctionType0);\n}",
    "testName" : "test034"
  },
  "test056" : {
    "methodSignature" : "public <T> T visit(Visitor<T> visitor)",
    "methodName" : "visit",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    arrowType0.visit((Visitor<IndexedType>) null);\n}",
    "testName" : "test056"
  },
  "test078" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSType[] jSTypeArray0 = new JSType[1];\n    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    boolean boolean0 = arrowType0.isSubtype(arrowType0);\n}",
    "testName" : "test078"
  },
  "test1117" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1117() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"W2JoTp4|YTwH\");\n    JSType[] jSTypeArray0 = new JSType[1];\n    jSTypeArray0[0] = (JSType) errorFunctionType0;\n    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.isSubtype(arrowType1);\n}",
    "testName" : "test1117"
  },
  "test1218" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1218() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    boolean boolean0 = arrowType0.isSubtype(arrowType0);\n}",
    "testName" : "test1218"
  },
  "test1928" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1928() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    arrowType0.returnType = null;\n    arrowType0.hashCode();\n}",
    "testName" : "test1928"
  },
  "test1421" : {
    "methodSignature" : "boolean hasEqualParameters(ArrowType that)",
    "methodName" : "hasEqualParameters",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1421() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    Node node0 = Node.newString(\"Not declared as a constructor\", 0, 1);\n    Node node1 = new Node(0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node1, noResolvedType0);\n    boolean boolean0 = arrowType0.hasEqualParameters(arrowType0);\n}",
    "testName" : "test1421"
  },
  "test2433" : {
    "methodSignature" : "boolean hasUnknownParamsOrReturn()",
    "methodName" : "hasUnknownParamsOrReturn",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2433() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSType[] jSTypeArray0 = new JSType[1];\n    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n}",
    "testName" : "test2433"
  },
  "test1522" : {
    "methodSignature" : "boolean hasEqualParameters(ArrowType that)",
    "methodName" : "hasEqualParameters",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1522() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"S#AI-o'u91%9~:\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    Node node0 = Node.newString(\"Unknown class name\", 0, 1);\n    Node node1 = new Node(0, node0, node0, node0, node0, 4095, 50);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType0.hasEqualParameters(arrowType1);\n}",
    "testName" : "test1522"
  },
  "test2535" : {
    "methodSignature" : "boolean hasUnknownParamsOrReturn()",
    "methodName" : "hasUnknownParamsOrReturn",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2535() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"W2JoTp4|YTwH\");\n    JSType[] jSTypeArray0 = new JSType[1];\n    jSTypeArray0[0] = (JSType) errorFunctionType0;\n    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n}",
    "testName" : "test2535"
  },
  "test1523" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1523() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"S#AI-o'u91%9~:\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    Node node0 = Node.newString(\"Unknown class name\", 0, 1);\n    Node node1 = new Node(0, node0, node0, node0, node0, 4095, 50);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType0.hasEqualParameters(arrowType1);\n    errorFunctionType0.isReturnTypeInferred();\n}",
    "testName" : "test1523"
  },
  "test2534" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2534() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"W2JoTp4|YTwH\");\n    errorFunctionType0.isReturnTypeInferred();\n}",
    "testName" : "test2534"
  },
  "test2231" : {
    "methodSignature" : "public final boolean isResolved()",
    "methodName" : "isResolved",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2231() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    Node node0 = Node.newString(\"Not declared as a constructor\", 0, 1);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0, noResolvedType0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a type name\");\n    arrowType0.resolveInternal((ErrorReporter) null, errorFunctionType0);\n    noResolvedType0.isResolved();\n}",
    "testName" : "test2231"
  },
  "test1420" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1420() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    Node node0 = Node.newString(\"Not declared as a constructor\", 0, 1);\n    Node node1 = new Node(0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node1, noResolvedType0);\n    boolean boolean0 = arrowType0.hasEqualParameters(arrowType0);\n    noResolvedType0.isReturnTypeInferred();\n}",
    "testName" : "test1420"
  },
  "test2332" : {
    "methodSignature" : "JSType resolveInternal(ErrorReporter t, StaticScope<JSType> scope)",
    "methodName" : "resolveInternal",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2332() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    Node node0 = Node.newString(\"Not declared as a constructor\", 0, 1);\n    Node node1 = new Node(0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node1, noResolvedType0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a type name\");\n    arrowType0.resolveInternal((ErrorReporter) null, errorFunctionType0);\n}",
    "testName" : "test2332"
  },
  "test000" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"ASSIGN_URSH\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    arrowType0.returnType = null;\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n    errorFunctionType0.isReturnTypeInferred();\n}",
    "testName" : "test000"
  },
  "test0912" : {
    "methodSignature" : "static JSType getLeastSupertype(JSType thisType, JSType thatType)",
    "methodName" : "getLeastSupertype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0912() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    JSType jSType0 = JSType.getLeastSupertype((JSType) arrowType1, (JSType) arrowType0);\n}",
    "testName" : "test0912"
  },
  "test1726" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1726() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    Node node0 = Node.newString(\"Not declared as a constructor\", 0, 1);\n    Node node1 = new Node(0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node1, noResolvedType0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a type name\");\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.hasEqualParameters(arrowType1);\n    errorFunctionType0.isReturnTypeInferred();\n}",
    "testName" : "test1726"
  },
  "test001" : {
    "methodSignature" : "boolean hasUnknownParamsOrReturn()",
    "methodName" : "hasUnknownParamsOrReturn",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"ASSIGN_URSH\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    arrowType0.returnType = null;\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n}",
    "testName" : "test001"
  },
  "test023" : {
    "methodSignature" : "public TypePair getTypesUnderShallowEquality(JSType that)",
    "methodName" : "getTypesUnderShallowEquality",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    arrowType0.getTypesUnderShallowEquality(errorFunctionType0);\n}",
    "testName" : "test023"
  },
  "test045" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    arrowType0.toString();\n}",
    "testName" : "test045"
  },
  "test067" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    NoType noType0 = (NoType) arrowType0.getRestrictedTypeGivenToBooleanOutcome(false);\n    noType0.isReturnTypeInferred();\n}",
    "testName" : "test067"
  },
  "test089" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ArrowType arrowType1 = new ArrowType(jSTypeRegistry0, (Node) null, arrowType0);\n    boolean boolean0 = arrowType1.isSubtype(arrowType0);\n}",
    "testName" : "test089"
  },
  "test2738" : {
    "methodSignature" : "boolean hasUnknownParamsOrReturn()",
    "methodName" : "hasUnknownParamsOrReturn",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2738() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"W2JoTp4|YTwH\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n}",
    "testName" : "test2738"
  },
  "test1827" : {
    "methodSignature" : "public boolean equals(Object jsType)",
    "methodName" : "equals",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1827() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ArrowType arrowType1 = new ArrowType(jSTypeRegistry0, (Node) null, arrowType0);\n    boolean boolean0 = arrowType1.equals(arrowType0);\n}",
    "testName" : "test1827"
  },
  "test2636" : {
    "methodSignature" : "boolean hasUnknownParamsOrReturn()",
    "methodName" : "hasUnknownParamsOrReturn",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2636() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n}",
    "testName" : "test2636"
  },
  "test1624" : {
    "methodSignature" : "boolean hasEqualParameters(ArrowType that)",
    "methodName" : "hasEqualParameters",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1624() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry((ErrorReporter) null, true);\n    ArrowType arrowType1 = jSTypeRegistry1.createArrowType((Node) null);\n    boolean boolean0 = arrowType0.hasEqualParameters(arrowType1);\n}",
    "testName" : "test1624"
  },
  "test0910" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    JSType jSType0 = JSType.getLeastSupertype((JSType) arrowType1, (JSType) arrowType0);\n    errorFunctionType0.isReturnTypeInferred();\n}",
    "testName" : "test0910"
  },
  "test2737" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2737() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"W2JoTp4|YTwH\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test2737"
  },
  "test0911" : {
    "methodSignature" : "public boolean equals(Object jsType)",
    "methodName" : "equals",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    JSType jSType0 = JSType.getLeastSupertype((JSType) arrowType1, (JSType) arrowType0);\n    jSType0.equals((Object) arrowType0);\n}",
    "testName" : "test0911"
  },
  "test1725" : {
    "methodSignature" : "boolean hasEqualParameters(ArrowType that)",
    "methodName" : "hasEqualParameters",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1725() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    Node node0 = Node.newString(\"Not declared as a constructor\", 0, 1);\n    Node node1 = new Node(0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node1, noResolvedType0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a type name\");\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.hasEqualParameters(arrowType1);\n}",
    "testName" : "test1725"
  },
  "test2130" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2130() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    Node node0 = Node.newString(\"Not declared as a constructor\", 0, 1);\n    Node node1 = new Node(0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node1, noResolvedType0);\n    arrowType0.hashCode();\n    noResolvedType0.isReturnTypeInferred();\n}",
    "testName" : "test2130"
  }
}