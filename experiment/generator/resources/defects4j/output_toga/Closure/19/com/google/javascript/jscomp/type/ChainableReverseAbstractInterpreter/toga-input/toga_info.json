{
  "test1212" : {
    "methodSignature" : "JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue)",
    "methodName" : "getRestrictedByTypeOfResult",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ParameterizedType parameterizedType0 = jSTypeRegistry0.createParameterizedType((ObjectType) null, (JSType) null);\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(parameterizedType0, \"Not declared as a constructor\", false);\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue)",
    "methodName" : "getRestrictedByTypeOfResult",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseNoObjectType();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    JSType jSType1 = closureReverseAbstractInterpreter0.getRestrictedByTypeOfResult(jSType0, \"function\", false);\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "protected void declareNameInScope(FlowScope scope, Node node, JSType type)",
    "methodName" : "declareNameInScope",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();\n    Node node0 = Node.newString(\"Unknown class name\");\n    semanticReverseAbstractInterpreter0.declareNameInScope((FlowScope) null, node0, objectType0);\n}",
    "testName" : "test3434"
  },
  "test5656" : {
    "methodSignature" : "public final boolean isNominalConstructor()",
    "methodName" : "isNominalConstructor",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5656() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult((JSType) null, \"boolean\", true);\n    jSType0.isNominalConstructor();\n}",
    "testName" : "test5656"
  },
  "test2424" : {
    "methodSignature" : "public final boolean isFunctionType()",
    "methodName" : "isFunctionType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseBooleanType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(jSType0);\n    jSType1.isFunctionType();\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue)",
    "methodName" : "getRestrictedByTypeOfResult",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(jSType0, \"function\", true);\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public boolean matchesObjectContext()",
    "methodName" : "matchesObjectContext",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.UNKNOWN_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(jSType0, \"undefined\", true);\n    jSType1.matchesObjectContext();\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "protected void declareNameInScope(FlowScope scope, Node node, JSType type)",
    "methodName" : "declareNameInScope",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    Node node0 = new Node(33);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.declareNameInScope((FlowScope) null, node0, (JSType) null);\n}",
    "testName" : "test3232"
  },
  "test5454" : {
    "methodSignature" : "JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue)",
    "methodName" : "getRestrictedByTypeOfResult",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5454() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult((JSType) null, \"function\", true);\n}",
    "testName" : "test5454"
  },
  "test2222" : {
    "methodSignature" : "public boolean isNoResolvedType()",
    "methodName" : "isNoResolvedType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.TYPE_ERROR_FUNCTION_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(jSType0);\n    jSType1.isNoResolvedType();\n}",
    "testName" : "test2222"
  },
  "test033" : {
    "methodSignature" : "protected final JSType getRestrictedWithoutNull(JSType type)",
    "methodName" : "getRestrictedWithoutNull",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseNullType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(jSType0);\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public boolean isBooleanValueType()",
    "methodName" : "isBooleanValueType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.ALL_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(jSType0);\n    jSType1.isBooleanValueType();\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    Node node0 = new Node(496);\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    FlowScope flowScope0 = closureReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "public JSType caseUnionType(UnionType type)",
    "methodName" : "caseUnionType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);\n    Node.newNumber(0.0);\n    UnionType unionType0 = mock(UnionType.class, new ViolatedAssumptionAnswer());\n    doReturn((Iterable) null).when(unionType0).getAlternates();\n    modificationVisitor0.caseUnionType(unionType0);\n}",
    "testName" : "test3838"
  },
  "test2828" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    Node node0 = new Node((-359));\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.append(closureReverseAbstractInterpreter0);\n    FlowScope flowScope0 = semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseAllType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(jSType0, \"Unknown class name\", true);\n    jSType1.isInterface();\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();\n    semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(objectType0, \"function\", false);\n    objectType0.hasCachedValues();\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
    "methodName" : "getRestrictedWithoutUndefined",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    Node node0 = Node.newNumber((-2801.9986874646775));\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseStringType();\n    EnumType enumType0 = jSTypeRegistry0.createEnumType(\"Named type with empty name component\", node0, jSType0);\n    EnumElementType enumElementType0 = enumType0.getElementsType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(enumElementType0);\n}",
    "testName" : "test3636"
  },
  "test2626" : {
    "methodSignature" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
    "methodName" : "getRestrictedWithoutUndefined",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.NULL_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(jSType0);\n}",
    "testName" : "test2626"
  },
  "test4242" : {
    "methodSignature" : "public boolean isNoObjectType()",
    "methodName" : "isNoObjectType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseNoObjectType();\n    Node node0 = Node.newString(0, \"WB@ur8'6S^h\");\n    EnumType enumType0 = jSTypeRegistry0.createEnumType(\"Named type with empty name component\", node0, jSType0);\n    EnumElementType enumElementType0 = enumType0.getElementsType();\n    JSType jSType1 = jSTypeRegistry0.createOptionalNullableType(enumElementType0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    JSType jSType2 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(jSType1, \"Unknown class name\", false);\n    jSType2.isNoObjectType();\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "protected JSType getTypeIfRefinable(Node node, FlowScope scope)",
    "methodName" : "getTypeIfRefinable",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    Node node0 = new Node((-359));\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getTypeIfRefinable(node0, (FlowScope) null);\n}",
    "testName" : "test3030"
  },
  "test5252" : {
    "methodSignature" : "JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue)",
    "methodName" : "getRestrictedByTypeOfResult",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5252() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult((JSType) null, \"number\", true);\n}",
    "testName" : "test5252"
  },
  "test2020" : {
    "methodSignature" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
    "methodName" : "getRestrictedWithoutUndefined",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.OBJECT_NUMBER_STRING_BOOLEAN;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(jSType0);\n}",
    "testName" : "test2020"
  },
  "test4040" : {
    "methodSignature" : "public boolean isEnumType()",
    "methodName" : "isEnumType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0, true);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);\n    JSType jSType0 = modificationVisitor0.caseStringType();\n    EnumType enumType0 = jSTypeRegistry0.createEnumType(\"Named type with empty name component\", (Node) null, jSType0);\n    EnumElementType enumElementType0 = enumType0.getElementsType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(enumElementType0);\n    jSType1.isEnumType();\n}",
    "testName" : "test4040"
  },
  "test5050" : {
    "methodSignature" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
    "methodName" : "getRestrictedWithoutUndefined",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5050() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined((JSType) null);\n}",
    "testName" : "test5050"
  },
  "test022" : {
    "methodSignature" : "public boolean isBooleanValueType()",
    "methodName" : "isBooleanValueType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.NO_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(jSType0);\n    jSType1.isBooleanValueType();\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public boolean isRecordType()",
    "methodName" : "isRecordType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.U2U_FUNCTION_TYPE;\n    FunctionType functionType0 = (FunctionType) jSTypeRegistry0.getNativeType(jSTypeNative0);\n    ParameterizedType parameterizedType0 = jSTypeRegistry0.createParameterizedType(functionType0, functionType0);\n    ParameterizedType parameterizedType1 = (ParameterizedType) semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(parameterizedType0);\n    parameterizedType1.isRecordType();\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
    "methodName" : "getRestrictedWithoutUndefined",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    ParameterizedType parameterizedType0 = jSTypeRegistry0.createParameterizedType((ObjectType) null, (JSType) null);\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(parameterizedType0);\n}",
    "testName" : "test1818"
  },
  "test5757" : {
    "methodSignature" : "JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue)",
    "methodName" : "getRestrictedByTypeOfResult",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5757() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult((JSType) null, \"string\", true);\n}",
    "testName" : "test5757"
  },
  "test2323" : {
    "methodSignature" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
    "methodName" : "getRestrictedWithoutUndefined",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.NUMBER_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(jSType0);\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public boolean isFunctionPrototypeType()",
    "methodName" : "isFunctionPrototypeType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseNoType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(jSType0, \"Not declared as a type name\", false);\n    jSType1.isFunctionPrototypeType();\n}",
    "testName" : "test1313"
  },
  "test4545" : {
    "methodSignature" : "public boolean isEnumType()",
    "methodName" : "isEnumType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseNoObjectType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(jSType0, \"object\", true);\n    jSType1.isEnumType();\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "protected final JSType getRestrictedWithoutUndefined(JSType type)",
    "methodName" : "getRestrictedWithoutUndefined",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    Node node0 = new Node(33, 33, 33);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseVoidType();\n    EnumType enumType0 = jSTypeRegistry0.createEnumType(\"@geXDYjahV\", node0, jSType0);\n    EnumElementType enumElementType0 = enumType0.getElementsType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(enumElementType0);\n}",
    "testName" : "test3535"
  },
  "test5555" : {
    "methodSignature" : "JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue)",
    "methodName" : "getRestrictedByTypeOfResult",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5555() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult((JSType) null, \"^+1[0&,kz\", true);\n}",
    "testName" : "test5555"
  },
  "test2121" : {
    "methodSignature" : "public final boolean isEnumElementType()",
    "methodName" : "isEnumElementType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseAllType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(jSType0);\n    jSType1.isEnumElementType();\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public boolean isNoType()",
    "methodName" : "isNoType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.CHECKED_UNKNOWN_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"com.google.common.base.Predicates$CompositionPredicate\", 1, 3586);\n    EnumType enumType0 = jSTypeRegistry0.createEnumType(\"com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter$RestrictByTypeOfResultVisitor\", node0, jSType0);\n    EnumElementType enumElementType0 = enumType0.getElementsType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(enumElementType0, \"Not declared as a type name\", true);\n    jSType1.isNoType();\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    JSType jSType0 = jSTypeRegistry0.createNamedType(\"Named type with empty name component\", \"Unknown class name\", 1, 1);\n    UnknownType unknownType0 = (UnknownType) semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(jSType0, \"Named type with empty name component\", false);\n    unknownType0.hasCachedValues();\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "protected void declareNameInScope(FlowScope scope, Node node, JSType type)",
    "methodName" : "declareNameInScope",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    Node node0 = new Node(38);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.declareNameInScope((FlowScope) null, node0, (JSType) null);\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public final boolean isFunctionType()",
    "methodName" : "isFunctionType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseUnknownType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(jSType0);\n    jSType1.isFunctionType();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public boolean isRecordType()",
    "methodName" : "isRecordType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseBooleanType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(jSType0);\n    jSType1.isRecordType();\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public final boolean isResolved()",
    "methodName" : "isResolved",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.NULL_VOID;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(jSType0);\n    JSType jSType2 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(jSType1);\n    jSType2.isResolved();\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public ChainableReverseAbstractInterpreter append(ChainableReverseAbstractInterpreter lastLink)",
    "methodName" : "append",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    closureReverseAbstractInterpreter0.append(semanticReverseAbstractInterpreter0);\n    semanticReverseAbstractInterpreter0.append(closureReverseAbstractInterpreter0);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public boolean isNullType()",
    "methodName" : "isNullType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseNumberType();\n    JSType jSType1 = jSTypeRegistry0.getGreatestSubtypeWithProperty(jSType0, \"P]I7G7D~`h\");\n    JSType jSType2 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(jSType1);\n    jSType2.isNullType();\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();\n    semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(objectType0, \"function\", true);\n    objectType0.hasCachedValues();\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public boolean isNoObjectType()",
    "methodName" : "isNoObjectType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();\n    Node node0 = Node.newString(\"Unknown class name\", 0, 1);\n    EnumType enumType0 = jSTypeRegistry0.createEnumType(\"Not declared as a constructor\", node0, objectType0);\n    EnumElementType enumElementType0 = enumType0.getElementsType();\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(enumElementType0);\n    jSType0.isNoObjectType();\n}",
    "testName" : "test3939"
  },
  "test2525" : {
    "methodSignature" : "public boolean isRecordType()",
    "methodName" : "isRecordType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseNoObjectType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(jSType0);\n    jSType1.isRecordType();\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public ChainableReverseAbstractInterpreter getFirst()",
    "methodName" : "getFirst",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ChainableReverseAbstractInterpreter chainableReverseAbstractInterpreter0 = semanticReverseAbstractInterpreter0.getFirst();\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue)",
    "methodName" : "getRestrictedByTypeOfResult",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.U2U_FUNCTION_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(jSType0, \"Unknown class name\", false);\n}",
    "testName" : "test4747"
  },
  "test3737" : {
    "methodSignature" : "public boolean isNumberValueType()",
    "methodName" : "isNumberValueType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);\n    Node node0 = Node.newNumber((-2801.9986874646775));\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry1);\n    JSType jSType0 = modificationVisitor0.caseStringType();\n    EnumType enumType0 = jSTypeRegistry1.createEnumType(\"Named type with empty name component\", node0, jSType0);\n    EnumElementType enumElementType0 = enumType0.getElementsType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(enumElementType0);\n    jSType1.isNumberValueType();\n}",
    "testName" : "test3737"
  },
  "test5353" : {
    "methodSignature" : "JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue)",
    "methodName" : "getRestrictedByTypeOfResult",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5353() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult((JSType) null, (String) null, false);\n}",
    "testName" : "test5353"
  },
  "test4141" : {
    "methodSignature" : "JSType getRestrictedByTypeOfResult(JSType type, String value, boolean resultEqualsValue)",
    "methodName" : "getRestrictedByTypeOfResult",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();\n    Node node0 = Node.newString(\"Unknown class name\", 0, 1);\n    EnumType enumType0 = jSTypeRegistry0.createEnumType(\"Not declared as a constructor\", node0, objectType0);\n    EnumElementType enumElementType0 = enumType0.getElementsType();\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getRestrictedByTypeOfResult(enumElementType0, \"Unknown class name\", false);\n}",
    "testName" : "test4141"
  },
  "test3131" : {
    "methodSignature" : "protected JSType getTypeIfRefinable(Node node, FlowScope scope)",
    "methodName" : "getTypeIfRefinable",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    Node node0 = new Node(38, 38, 38);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getTypeIfRefinable(node0, (FlowScope) null);\n}",
    "testName" : "test3131"
  },
  "test5151" : {
    "methodSignature" : "protected final JSType getRestrictedWithoutNull(JSType type)",
    "methodName" : "getRestrictedWithoutNull",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5151() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull((JSType) null);\n}",
    "testName" : "test5151"
  },
  "test000" : {
    "methodSignature" : "public String getDisplayName()",
    "methodName" : "getDisplayName",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseNumberType();\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(jSType0);\n    jSType1.getDisplayName();\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public boolean isEnumType()",
    "methodName" : "isEnumType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseNoObjectType();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(jSType0);\n    jSType1.isEnumType();\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public boolean isAllType()",
    "methodName" : "isAllType",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();\n    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();\n    JSType jSType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs(objectType0, (JSType) objectType0, (List<JSType>) linkedList0);\n    JSType jSType1 = semanticReverseAbstractInterpreter0.getRestrictedWithoutNull(jSType0);\n    jSType1.isAllType();\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "protected JSType getTypeIfRefinable(Node node, FlowScope scope)",
    "methodName" : "getTypeIfRefinable",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    Node node0 = Node.newNumber((double) 33);\n    Node node1 = new Node(33, node0, node0, 49, 48);\n    JSType jSType0 = semanticReverseAbstractInterpreter0.getTypeIfRefinable(node1, (FlowScope) null);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public boolean hasReferenceName()",
    "methodName" : "hasReferenceName",
    "className" : "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseUnknownType();\n    UnknownType unknownType0 = (UnknownType) semanticReverseAbstractInterpreter0.getRestrictedWithoutUndefined(jSType0);\n    unknownType0.hasReferenceName();\n}",
    "testName" : "test1919"
  }
}