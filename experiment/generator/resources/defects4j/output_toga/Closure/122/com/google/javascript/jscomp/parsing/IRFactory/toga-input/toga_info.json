{
  "test2027" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2027() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral();\n    astRoot0.addChildToFront(regExpLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"~{iXlu~0\", true);\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"~{iXlu~0\", config0, (ErrorReporter) null);\n}",
    "testName" : "test2027"
  },
  "test2942" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2942() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    AstRoot astRoot0 = new AstRoot();\n    FunctionNode functionNode0 = new FunctionNode();\n    functionNode0.setFunctionType(2);\n    astRoot0.addChildToFront(functionNode0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"#-yuX5NDX0O/z\", true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"#-yuX5NDX0O/z\", config0, toolErrorReporter0);\n}",
    "testName" : "test2942"
  },
  "test1215" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1215() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Locale locale0 = Locale.GERMANY;\n    Set<String> set0 = locale0.getUnicodeLocaleAttributes();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);\n    Scope scope0 = new Scope(98);\n    astRoot0.addChildToFront(scope0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"$C2gvjig67;,j;F_%!\", false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"out of rangeHincrement\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test1215"
  },
  "test1012" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(astRoot0, true);\n    astRoot0.addChildToFront(expressionStatement0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", true);\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"!8vOs[}\", config0, errorCollector0);\n}",
    "testName" : "test1012"
  },
  "test2740" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2740() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ContinueStatement continueStatement0 = new ContinueStatement(23);\n    astRoot0.addChildrenToFront(continueStatement0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"ft/88ipDggHDU.\", false);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"ft/88ipDggHDU.\", config0, (ErrorReporter) null);\n    node0.getLength();\n}",
    "testName" : "test2740"
  },
  "test3752" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3752() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(astRoot0);\n    astRoot0.addChildrenToFront(expressionStatement0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\".sOZ$kAVC@isD[?\\\"x\", true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \".sOZ$kAVC@isD[?\\\"x\", config0, (ErrorReporter) null);\n}",
    "testName" : "test3752"
  },
  "test033" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    AstRoot astRoot0 = new AstRoot();\n    EmptyExpression emptyExpression0 = new EmptyExpression();\n    astRoot0.addChildToFront(emptyExpression0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", false);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, (String) null, config0, toolErrorReporter0);\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);\n    AstRoot astRoot0 = new AstRoot();\n    ForLoop forLoop0 = new ForLoop(14, 4);\n    astRoot0.addChildToFront(forLoop0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"AV>tQ[Lr\", true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"AV>tQ[Lr\", config0, toolErrorReporter0);\n}",
    "testName" : "test077"
  },
  "test1418" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1418() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block(85);\n    astRoot0.addChildToFront(block0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"!@djS5N\", false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"%3<T>34*X4[2[[^Z\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test1418"
  },
  "test1419" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1419() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block(85);\n    astRoot0.addChildToFront(block0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"!@djS5N\", false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"%3<T>34*X4[2[[^Z\", config0, errorCollector0);\n    node0.hasOneChild();\n}",
    "testName" : "test1419"
  },
  "test1216" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1216() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Locale locale0 = Locale.GERMANY;\n    Set<String> set0 = locale0.getUnicodeLocaleAttributes();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);\n    Scope scope0 = new Scope(98);\n    astRoot0.addChildToFront(scope0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"$C2gvjig67;,j;F_%!\", false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"out of rangeHincrement\", config0, errorCollector0);\n    node0.hasOneChild();\n}",
    "testName" : "test1216"
  },
  "test2229" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2229() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;\n    Comment comment0 = new Comment(22, 26, token_CommentType0, \"identifier is a reservUd word\");\n    astRoot0.addComment(comment0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"identifier is a reservUd word\", true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"identifier is a reservUd word\", config0, (ErrorReporter) null);\n    node0.getLength();\n}",
    "testName" : "test2229"
  },
  "test3550" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3550() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);\n    AstRoot astRoot0 = new AstRoot();\n    NewExpression newExpression0 = new NewExpression();\n    astRoot0.addChildToFront(newExpression0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, toolErrorReporter0);\n}",
    "testName" : "test3550"
  },
  "test2434" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2434() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    AstRoot astRoot0 = new AstRoot((-7));\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration(16);\n    astRoot0.addChildToFront(variableDeclaration0);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\\n * @\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test2434"
  },
  "test2433" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2433() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    AstRoot astRoot0 = new AstRoot((-7));\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration(16);\n    astRoot0.addChildToFront(variableDeclaration0);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\\n * @\", config0, toolErrorReporter0);\n    node0.hasChildren();\n}",
    "testName" : "test2433"
  },
  "test1621" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1621() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    AstRoot astRoot0 = new AstRoot();\n    ObjectProperty objectProperty0 = new ObjectProperty();\n    astRoot0.addChildToFront(objectProperty0);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"pow\", config0, toolErrorReporter0);\n}",
    "testName" : "test1621"
  },
  "test3246" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3246() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ObjectLiteral objectLiteral0 = new ObjectLiteral();\n    astRoot0.addChildToFront(objectLiteral0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"I%W}S~,Rm0___K:O8r\", true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"I%W}S~,Rm0___K:O8r\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test3246"
  },
  "test3245" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3245() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ObjectLiteral objectLiteral0 = new ObjectLiteral();\n    astRoot0.addChildToFront(objectLiteral0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"I%W}S~,Rm0___K:O8r\", true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"I%W}S~,Rm0___K:O8r\", config0, toolErrorReporter0);\n    node0.isFromExterns();\n}",
    "testName" : "test3245"
  },
  "test022" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    DoLoop doLoop0 = new DoLoop(8, 24);\n    astRoot0.addChildToFront(doLoop0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    WithStatement withStatement0 = new WithStatement();\n    astRoot0.addChildToFront(withStatement0);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"case\", config0, toolErrorReporter0);\n}",
    "testName" : "test066"
  },
  "test3449" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3449() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChildToFront(variableDeclaration0);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"equalsIgnoreCase\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test3449"
  },
  "test1823" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1823() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    FunctionNode functionNode0 = new FunctionNode();\n    astRoot0.addChildToFront(functionNode0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\")]Wr^5\", true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \")]Wr^5\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test1823"
  },
  "test2638" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2638() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    BreakStatement breakStatement0 = new BreakStatement(15);\n    astRoot0.addChildToFront(breakStatement0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\".sOZ$kAVC@isD[?\\\"x\", true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \".sOZ$kAVC@isD[?\\\"x\", config0, (ErrorReporter) null);\n    node0.getLength();\n}",
    "testName" : "test2638"
  },
  "test1824" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1824() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    FunctionNode functionNode0 = new FunctionNode();\n    astRoot0.addChildToFront(functionNode0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\")]Wr^5\", true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \")]Wr^5\", config0, toolErrorReporter0);\n    node0.isFromExterns();\n}",
    "testName" : "test1824"
  },
  "test2637" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2637() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    BreakStatement breakStatement0 = new BreakStatement(15);\n    astRoot0.addChildToFront(breakStatement0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\".sOZ$kAVC@isD[?\\\"x\", true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \".sOZ$kAVC@isD[?\\\"x\", config0, (ErrorReporter) null);\n    node0.isFromExterns();\n}",
    "testName" : "test2637"
  },
  "test2230" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2230() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;\n    Comment comment0 = new Comment(22, 26, token_CommentType0, \"identifier is a reservUd word\");\n    astRoot0.addComment(comment0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"identifier is a reservUd word\", true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"identifier is a reservUd word\", config0, (ErrorReporter) null);\n    node0.isFromExterns();\n}",
    "testName" : "test2230"
  },
  "test3043" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3043() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    LabeledStatement labeledStatement0 = new LabeledStatement(1, 20);\n    astRoot0.addChildrenToFront(labeledStatement0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, (String) null, config0, errorCollector0);\n}",
    "testName" : "test3043"
  },
  "test1113" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1113() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    AstRoot astRoot0 = new AstRoot();\n    EmptyStatement emptyStatement0 = new EmptyStatement(0);\n    astRoot0.addChildToFront(emptyStatement0);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"com.google.common.collect.AbstractMapBasedMultimap$WrappedList\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test1113"
  },
  "test2841" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2841() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop(1);\n    astRoot0.addChildToFront(arrayComprehensionLoop0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, errorCollector0);\n}",
    "testName" : "test2841"
  },
  "test1114" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1114() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(hashSet0, hashSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    AstRoot astRoot0 = new AstRoot();\n    EmptyStatement emptyStatement0 = new EmptyStatement(0);\n    astRoot0.addChildToFront(emptyStatement0);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"com.google.common.collect.AbstractMapBasedMultimap$WrappedList\", config0, toolErrorReporter0);\n    node0.hasChildren();\n}",
    "testName" : "test1114"
  },
  "test2128" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2128() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Token.CommentType token_CommentType0 = Token.CommentType.HTML;\n    Comment comment0 = new Comment(22, 26, token_CommentType0, \"idetifier is a reservUd word\");\n    astRoot0.addComment(comment0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"idetifier is a reservUd word\", false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"idetifier is a reservUd word\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test2128"
  },
  "test3651" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3651() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    FunctionCall functionCall0 = new FunctionCall();\n    astRoot0.addChildToFront(functionCall0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, errorCollector0);\n}",
    "testName" : "test3651"
  },
  "test011" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ParenthesizedExpression parenthesizedExpression0 = new ParenthesizedExpression(astRoot0);\n    astRoot0.addChildToFront(parenthesizedExpression0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"UoY_Dq3oVoJjL:\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"oE?S`,Zd\", config0, errorCollector0);\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    InfixExpression infixExpression0 = new InfixExpression(13, astRoot0, astRoot0, 18);\n    astRoot0.addChildToFront(infixExpression0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"/* @\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, treeSet0, true, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"/* @\", config0, errorCollector0);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    NumberLiteral numberLiteral0 = new NumberLiteral(18, 0);\n    astRoot0.addChildToFront(numberLiteral0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"9I]$=!;o*T:8~P\\\"\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"-8\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test099"
  },
  "test1317" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1317() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    WhileLoop whileLoop0 = new WhileLoop(2, (-1987));\n    astRoot0.addChildrenToFront(whileLoop0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, (String) null, config0, (ErrorReporter) null);\n}",
    "testName" : "test1317"
  },
  "test1520" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1520() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Name name0 = new Name(5, \"%3<T>34*X4[2[[^Z\");\n    FunctionNode functionNode0 = new FunctionNode((-354), name0);\n    astRoot0.addChildToFront(functionNode0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"com.google.javascript.rhino.head.tools.shell.Environment\", false);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, treeSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"com.google.javascript.rhino.head.tools.shell.Environment\", config0, toolErrorReporter0);\n}",
    "testName" : "test1520"
  },
  "test3347" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3347() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SwitchCase switchCase0 = new SwitchCase(25, 3);\n    astRoot0.addChildToFront(switchCase0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test3347"
  },
  "test2535" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2535() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ArrayLiteral arrayLiteral0 = new ArrayLiteral(20, 20);\n    astRoot0.addChildToFront(arrayLiteral0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"Type annotations are not allowed here. Are you missing parentheses?\", false);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, treeSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"Type annotations are not allowed here. Are you missing parentheses?\", config0, (ErrorReporter) null);\n    node0.getLength();\n}",
    "testName" : "test2535"
  },
  "test3348" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3348() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SwitchCase switchCase0 = new SwitchCase(25, 3);\n    astRoot0.addChildToFront(switchCase0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, errorCollector0);\n    node0.isFromExterns();\n}",
    "testName" : "test3348"
  },
  "test2331" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2331() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    XmlElemRef xmlElemRef0 = new XmlElemRef();\n    Token.CommentType token_CommentType0 = Token.CommentType.LINE;\n    Comment comment0 = new Comment(2, 0, token_CommentType0, \"com.google.common.collect.Iterators$MergingIterator\");\n    xmlElemRef0.setJsDocNode(comment0);\n    Name name0 = new Name(22, \"com.google.common.collect.Iterators$MergingIterator\");\n    PropertyGet propertyGet0 = new PropertyGet(xmlElemRef0, name0);\n    astRoot0.addChildToFront(propertyGet0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"M(.T>w=ni.$\", true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"OUXYW(5q_,WfLU{4r\", config0, toolErrorReporter0);\n    node0.isFromExterns();\n}",
    "testName" : "test2331"
  },
  "test3144" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3144() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Name name0 = new Name();\n    astRoot0.addChildToFront(name0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile((String) null, true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, (String) null, config0, (ErrorReporter) null);\n}",
    "testName" : "test3144"
  },
  "test2332" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2332() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    XmlElemRef xmlElemRef0 = new XmlElemRef();\n    Token.CommentType token_CommentType0 = Token.CommentType.LINE;\n    Comment comment0 = new Comment(2, 0, token_CommentType0, \"com.google.common.collect.Iterators$MergingIterator\");\n    xmlElemRef0.setJsDocNode(comment0);\n    Name name0 = new Name(22, \"com.google.common.collect.Iterators$MergingIterator\");\n    PropertyGet propertyGet0 = new PropertyGet(xmlElemRef0, name0);\n    astRoot0.addChildToFront(propertyGet0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"M(.T>w=ni.$\", true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"OUXYW(5q_,WfLU{4r\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test2332"
  },
  "test000" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ConditionalExpression conditionalExpression0 = new ConditionalExpression();\n    astRoot0.addChildToFront(conditionalExpression0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"Sd$Uz</G_q>.r)wvl_a\", true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"#-yuX5NDX0O/z\", config0, (ErrorReporter) null);\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    HashSet<String> hashSet0 = new HashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);\n    AstRoot astRoot0 = new AstRoot(33);\n    ElementGet elementGet0 = new ElementGet(astRoot0, astRoot0);\n    astRoot0.addChildToFront(elementGet0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\">6.cG(jlY\\\"oINT9dr3\", false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"com.google.javascript.rhino.JSDocInfo$TypePosition\", config0, errorCollector0);\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Label label0 = new Label(135);\n    astRoot0.addChildToFront(label0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", false);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, errorCollector0);\n}",
    "testName" : "test088"
  },
  "test2739" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2739() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ContinueStatement continueStatement0 = new ContinueStatement(23);\n    astRoot0.addChildrenToFront(continueStatement0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"ft/88ipDggHDU.\", false);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"ft/88ipDggHDU.\", config0, (ErrorReporter) null);\n    node0.hasOneChild();\n}",
    "testName" : "test2739"
  },
  "test1925" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1925() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment(2, 1, token_CommentType0, \"invalid assignment target\");\n    astRoot0.addComment(comment0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"invalid assignment target\", true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"invalid assignment target\", config0, toolErrorReporter0);\n    node0.getLength();\n}",
    "testName" : "test1925"
  },
  "test1926" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1926() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment(2, 1, token_CommentType0, \"invalid assignment target\");\n    astRoot0.addComment(comment0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"invalid assignment target\", true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"invalid assignment target\", config0, toolErrorReporter0);\n    node0.isFromExterns();\n}",
    "testName" : "test1926"
  },
  "test1722" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1722() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ThrowStatement throwStatement0 = new ThrowStatement(5);\n    astRoot0.addChildToBack(throwStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\".sOZ$kAVC@isD[?\\\"x\", true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \".sOZ$kAVC@isD[?\\\"x\", config0, (ErrorReporter) null);\n}",
    "testName" : "test1722"
  },
  "test2536" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2536() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ArrayLiteral arrayLiteral0 = new ArrayLiteral(20, 20);\n    astRoot0.addChildToFront(arrayLiteral0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"Type annotations are not allowed here. Are you missing parentheses?\", false);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, treeSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"Type annotations are not allowed here. Are you missing parentheses?\", config0, (ErrorReporter) null);\n    node0.hasChildren();\n}",
    "testName" : "test2536"
  },
  "test0910" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    NumberLiteral numberLiteral0 = new NumberLiteral(18, 0);\n    astRoot0.addChildToFront(numberLiteral0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"9I]$=!;o*T:8~P\\\"\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"-8\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test0910"
  },
  "test0911" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    NumberLiteral numberLiteral0 = new NumberLiteral(18, 0);\n    astRoot0.addChildToFront(numberLiteral0);\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"9I]$=!;o*T:8~P\\\"\", true);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"-8\", config0, errorCollector0);\n    node0.isFromExterns();\n}",
    "testName" : "test0911"
  }
}