{
  "test1213" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LabeledStatement labeledStatement0 = new LabeledStatement(2);\n    Label label0 = new Label();\n    labeledStatement0.addLabel(label0);\n    astRoot0.addChild(labeledStatement0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n}",
    "testName" : "test1213"
  },
  "test2425" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2425() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block();\n    InfixExpression infixExpression0 = new InfixExpression(15, block0, block0, 303);\n    astRoot0.addChild(infixExpression0);\n    astRoot0.setLineno(4);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"`{7pbC2(mJ7W@>N@=\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test2425"
  },
  "test4446" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4446() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    IfStatement ifStatement0 = new IfStatement(24, 26);\n    InfixExpression infixExpression0 = new InfixExpression(10, ifStatement0, ifStatement0, (-844));\n    astRoot0.addChild(infixExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \";)[wOU~KvQrDfu\", (Config) null, errorCollector0);\n}",
    "testName" : "test4446"
  },
  "test3436" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3436() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectLiteral objectLiteral0 = new ObjectLiteral();\n    ObjectProperty objectProperty0 = new ObjectProperty();\n    objectLiteral0.addElement(objectProperty0);\n    astRoot0.addChild(objectLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config config0 = new Config(treeSet0, treeSet0, true, true, true);\n    IRFactory.transformTree(astRoot0, \"msg.arg.isnt.array\", config0, errorCollector0);\n}",
    "testName" : "test3436"
  },
  "test1011" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    NewExpression newExpression0 = new NewExpression();\n    astRoot0.addChild(newExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"WU-VF'>Rr/m\", (Config) null, errorCollector0);\n}",
    "testName" : "test1011"
  },
  "test2223" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2223() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    JSDocInfo jSDocInfo0 = new JSDocInfo();\n    Set<String> set0 = jSDocInfo0.getSuppressions();\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment((-675), 22, token_CommentType0, \"-}HZltGhcg2!N\");\n    astRoot0.addComment(comment0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config config0 = new Config(set0, treeSet0, false, true, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    IRFactory.transformTree(astRoot0, \"Catch clauses are not supported\", config0, toolErrorReporter0);\n    Node node0 = IRFactory.transformTree(astRoot0, \"Catch clauses are not supported\", config0, toolErrorReporter0);\n    node0.getType();\n}",
    "testName" : "test2223"
  },
  "test4244" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4244() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChild(variableDeclaration0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, false, false);\n    Node node0 = IRFactory.transformTree(astRoot0, \"[\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test4244"
  },
  "test3234" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3234() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectLiteral objectLiteral0 = new ObjectLiteral();\n    astRoot0.addChild(objectLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, false, false);\n    Node node0 = IRFactory.transformTree(astRoot0, \"com.google.javascript.jscomp.zarsing.IRFactory\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test3234"
  },
  "test034" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    DoLoop doLoop0 = new DoLoop(13, (-876));\n    astRoot0.addChild(doLoop0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"/>=]1YtKY'?/ciA'\", (Config) null, errorCollector0);\n}",
    "testName" : "test034"
  },
  "test078" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    FunctionNode functionNode0 = new FunctionNode();\n    NumberLiteral numberLiteral0 = new NumberLiteral();\n    functionNode0.addParam(numberLiteral0);\n    astRoot0.addChild(functionNode0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n}",
    "testName" : "test078"
  },
  "test1617" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ForInLoop forInLoop0 = new ForInLoop(15, 3);\n    astRoot0.addChild(forInLoop0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"us4%'\", (Config) null, errorCollector0);\n}",
    "testName" : "test1617"
  },
  "test2628" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2628() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Scope scope0 = new Scope();\n    scope0.addChildToBack(astRoot0);\n    astRoot0.addChild(scope0);\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, true, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \")&wHQAIv%%um,\", config0, errorCollector0);\n}",
    "testName" : "test2628"
  },
  "test1415" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    PropertyGet propertyGet0 = new PropertyGet();\n    astRoot0.addChild(propertyGet0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"setters are not supported in Internet Explorer\", (Config) null, errorCollector0);\n}",
    "testName" : "test1415"
  },
  "test2426" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2426() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block();\n    InfixExpression infixExpression0 = new InfixExpression(15, block0, block0, 303);\n    astRoot0.addChild(infixExpression0);\n    astRoot0.setLineno(4);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"`{7pbC2(mJ7W@>N@=\", (Config) null, errorCollector0);\n    node0.getLineno();\n}",
    "testName" : "test2426"
  },
  "test4648" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4648() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    InfixExpression infixExpression0 = new InfixExpression(13, astRoot0, astRoot0, 4);\n    astRoot0.addChild(infixExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config config0 = new Config(treeSet0, treeSet0, true, false, true);\n    IRFactory.transformTree(astRoot0, \"msg.jsdoc.incompat.type\", config0, errorCollector0);\n}",
    "testName" : "test4648"
  },
  "test3638" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3638() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral(1, 3);\n    regExpLiteral0.setFlags(\"\");\n    regExpLiteral0.setValue(\"\");\n    astRoot0.addChild(regExpLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test3638"
  },
  "test5254" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5254() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(astRoot0, true);\n    astRoot0.addChild(expressionStatement0);\n    IRFactory.transformTree(astRoot0, (String) null, (Config) null, (ErrorReporter) null);\n}",
    "testName" : "test5254"
  },
  "test2021" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral(1, 3);\n    regExpLiteral0.setValue(\"\");\n    astRoot0.addChild(regExpLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test2021"
  },
  "test4042" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4042() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SwitchCase switchCase0 = new SwitchCase(15, 4);\n    astRoot0.addChild(switchCase0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test4042"
  },
  "test3032" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3032() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name();\n    FunctionNode functionNode0 = new FunctionNode(26, name0);\n    astRoot0.addChild(functionNode0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"9Nz,XOh8{*tdm\", (Config) null, errorCollector0);\n}",
    "testName" : "test3032"
  },
  "test5052" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5052() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SwitchStatement switchStatement0 = new SwitchStatement();\n    InfixExpression infixExpression0 = new InfixExpression(20, astRoot0, switchStatement0, 15);\n    astRoot0.addChild(infixExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (String) null, (Config) null, errorCollector0);\n}",
    "testName" : "test5052"
  },
  "test2830" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2830() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ContinueStatement continueStatement0 = new ContinueStatement();\n    astRoot0.addChild(continueStatement0);\n    Node node0 = IRFactory.transformTree(astRoot0, \"I/hjDd1\", (Config) null, (ErrorReporter) null);\n    node0.getType();\n}",
    "testName" : "test2830"
  },
  "test3840" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3840() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ReturnStatement returnStatement0 = new ReturnStatement(4, 120, astRoot0);\n    astRoot0.addChild(returnStatement0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"Ol\", (Config) null, errorCollector0);\n}",
    "testName" : "test3840"
  },
  "test4850" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4850() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    InfixExpression infixExpression0 = new InfixExpression(16, astRoot0, astRoot0, 7);\n    astRoot0.addChild(infixExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n}",
    "testName" : "test4850"
  },
  "test023" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectProperty objectProperty0 = new ObjectProperty(20);\n    astRoot0.addChild(objectProperty0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"J*s,9ya+ssu8?*\", (Config) null, errorCollector0);\n}",
    "testName" : "test023"
  },
  "test067" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    WhileLoop whileLoop0 = new WhileLoop(159);\n    astRoot0.addChild(whileLoop0);\n    IRFactory.transformTree(astRoot0, (String) null, (Config) null, (ErrorReporter) null);\n}",
    "testName" : "test067"
  },
  "test1819" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ConditionalExpression conditionalExpression0 = new ConditionalExpression(2921);\n    astRoot0.addChild(conditionalExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n}",
    "testName" : "test1819"
  },
  "test2324" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2324() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK;\n    Comment comment0 = new Comment(4, 3, token_CommentType0, \"vXZ[7Sb-y)~#i5!yw\");\n    astRoot0.setJsDocNode(comment0);\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, true, true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"vXZ[7Sb-y)~#i5!yw\", config0, toolErrorReporter0);\n    node0.getType();\n}",
    "testName" : "test2324"
  },
  "test4547" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4547() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    CatchClause catchClause0 = new CatchClause(21, 8);\n    InfixExpression infixExpression0 = new InfixExpression(11, catchClause0, astRoot0, 1);\n    astRoot0.addChild(infixExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n}",
    "testName" : "test4547"
  },
  "test3335" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3335() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectLiteral objectLiteral0 = new ObjectLiteral();\n    ObjectProperty objectProperty0 = new ObjectProperty();\n    objectLiteral0.addElement(objectProperty0);\n    astRoot0.addChild(objectLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, false, false);\n    IRFactory.transformTree(astRoot0, \"com.google.javascript.jscomp.zarsing.IRFactory\", config0, errorCollector0);\n}",
    "testName" : "test3335"
  },
  "test1314" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    BreakStatement breakStatement0 = new BreakStatement(16);\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(breakStatement0, false);\n    astRoot0.addChild(expressionStatement0);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Node node0 = IRFactory.transformTree(astRoot0, \"getters are not supported in Internet Explorer\", (Config) null, toolErrorReporter0);\n    node0.getType();\n}",
    "testName" : "test1314"
  },
  "test2122" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2122() throws Throwable {\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    AstRoot astRoot0 = new AstRoot();\n    Token.CommentType token_CommentType0 = Token.CommentType.LINE;\n    Comment comment0 = new Comment(21, 146, token_CommentType0, \"0m\");\n    astRoot0.addComment(comment0);\n    Node node0 = IRFactory.transformTree(astRoot0, \"0m\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test2122"
  },
  "test4345" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4345() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    VariableInitializer variableInitializer0 = new VariableInitializer(18, 116);\n    variableDeclaration0.addVariable(variableInitializer0);\n    astRoot0.addChild(variableDeclaration0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, false, false);\n    IRFactory.transformTree(astRoot0, \"[\", config0, errorCollector0);\n}",
    "testName" : "test4345"
  },
  "test3133" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3133() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    LabeledStatement labeledStatement0 = new LabeledStatement(1);\n    astRoot0.addChild(labeledStatement0);\n    IRFactory.transformTree(astRoot0, \"ZL:gG%\", (Config) null, (ErrorReporter) null);\n}",
    "testName" : "test3133"
  },
  "test1112" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    StringLiteral stringLiteral0 = new StringLiteral();\n    astRoot0.addChild(stringLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n}",
    "testName" : "test1112"
  },
  "test012" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ArrayLiteral arrayLiteral0 = new ArrayLiteral();\n    arrayLiteral0.setIsDestructuring(true);\n    astRoot0.addChild(arrayLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"@T]aIJ*nj]O\", (Config) null, errorCollector0);\n}",
    "testName" : "test012"
  },
  "test056" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block();\n    InfixExpression infixExpression0 = new InfixExpression(22, block0, block0, (-1500));\n    astRoot0.addChild(infixExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test056"
  },
  "test3739" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3739() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ReturnStatement returnStatement0 = new ReturnStatement();\n    astRoot0.addChild(returnStatement0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"invalid increment target\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test3739"
  },
  "test1718" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ForLoop forLoop0 = new ForLoop(4, 2);\n    astRoot0.addChild(forLoop0);\n    IRFactory.transformTree(astRoot0, \"vXZ[7>Xb-y)hhi5!yw\", (Config) null, (ErrorReporter) null);\n}",
    "testName" : "test1718"
  },
  "test2729" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2729() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ArrayLiteral arrayLiteral0 = new ArrayLiteral();\n    astRoot0.addChild(arrayLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test2729"
  },
  "test4749" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4749() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SwitchStatement switchStatement0 = new SwitchStatement();\n    InfixExpression infixExpression0 = new InfixExpression(14, switchStatement0, switchStatement0, 49);\n    astRoot0.addChild(infixExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n}",
    "testName" : "test4749"
  },
  "test3537" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3537() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral(2, 10);\n    regExpLiteral0.setFlags(\"e&#gB~\");\n    regExpLiteral0.setValue(\"1q\");\n    astRoot0.addChild(regExpLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"1q\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test3537"
  },
  "test1516" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    WithStatement withStatement0 = new WithStatement(154);\n    astRoot0.addChild(withStatement0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n}",
    "testName" : "test1516"
  },
  "test2527" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2527() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block();\n    InfixExpression infixExpression0 = new InfixExpression(9, block0, block0, 2);\n    astRoot0.addChild(infixExpression0);\n    Node node0 = IRFactory.transformTree(astRoot0, \"\\n\\nSubtree2: \", (Config) null, (ErrorReporter) null);\n    node0.getType();\n}",
    "testName" : "test2527"
  },
  "test4143" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4143() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChild(variableDeclaration0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, true, true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"Scope.Var \", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test4143"
  },
  "test5153" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test5153() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    FunctionCall functionCall0 = new FunctionCall();\n    astRoot0.addChildrenToBack(functionCall0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"_xeK;98I+4\", (Config) null, errorCollector0);\n}",
    "testName" : "test5153"
  },
  "test3941" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3941() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SwitchCase switchCase0 = new SwitchCase(7);\n    switchCase0.setExpression(astRoot0);\n    astRoot0.addChild(switchCase0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"&;3L?w_H08g0o8\", (Config) null, errorCollector0);\n}",
    "testName" : "test3941"
  },
  "test2931" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2931() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name(16);\n    ContinueStatement continueStatement0 = new ContinueStatement(name0);\n    astRoot0.addChild(continueStatement0);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, toolErrorReporter0);\n}",
    "testName" : "test2931"
  },
  "test4951" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4951() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block();\n    InfixExpression infixExpression0 = new InfixExpression(17, block0, block0, 11);\n    astRoot0.addChild(infixExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"_c_\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test4951"
  },
  "test000" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    EmptyExpression emptyExpression0 = new EmptyExpression();\n    astRoot0.addChild(emptyExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"U(`A#\", (Config) null, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test000"
  },
  "test001" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    EmptyExpression emptyExpression0 = new EmptyExpression();\n    astRoot0.addChild(emptyExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"U(`A#\", (Config) null, errorCollector0);\n    node0.hasOneChild();\n}",
    "testName" : "test001"
  },
  "test045" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ElementGet elementGet0 = new ElementGet();\n    astRoot0.addChild(elementGet0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n}",
    "testName" : "test045"
  },
  "test089" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ParenthesizedExpression parenthesizedExpression0 = new ParenthesizedExpression(2);\n    astRoot0.addChild(parenthesizedExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"\", (Config) null, errorCollector0);\n}",
    "testName" : "test089"
  },
  "test1920" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1920() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Label label0 = new Label();\n    Jump jump0 = new Jump();\n    InfixExpression infixExpression0 = new InfixExpression(12, jump0, label0, 121);\n    astRoot0.addChild(infixExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"Not declared as a type name\", (Config) null, errorCollector0);\n}",
    "testName" : "test1920"
  },
  "test0910" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ThrowStatement throwStatement0 = new ThrowStatement(astRoot0);\n    astRoot0.addChild(throwStatement0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"msg.end.annotation.expected\", (Config) null, errorCollector0);\n}",
    "testName" : "test0910"
  }
}