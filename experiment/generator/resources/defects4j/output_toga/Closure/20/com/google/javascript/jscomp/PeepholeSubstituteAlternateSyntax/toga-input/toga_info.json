{
  "test1212" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Node node0 = new Node(106);\n    Node node1 = new Node(115, node0, node0);\n    node1.replaceChild(node0, node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1212"
  },
  "test2225" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2225() throws Throwable {\n    Node node0 = new Node(49);\n    Node node1 = new Node(132, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2225"
  },
  "test3236" : {
    "methodSignature" : "boolean areMatchingExits(Node nodeThis, Node nodeThat)",
    "methodName" : "areMatchingExits",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3236() throws Throwable {\n    Node node0 = new Node(101, 101, 101);\n    Node node1 = new Node(4, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.areMatchingExits(node1, node1);\n}",
    "testName" : "test3236"
  },
  "test4248" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4248() throws Throwable {\n    Node node0 = Node.newNumber((double) 26);\n    Node node1 = new Node(26, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test4248"
  },
  "test2226" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2226() throws Throwable {\n    Node node0 = new Node(49);\n    Node node1 = new Node(132, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node2.hasOneChild();\n}",
    "testName" : "test2226"
  },
  "test1010" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Node node0 = Node.newNumber(65.25581514511606);\n    Node node1 = new Node(30, node0, node0);\n    Compiler compiler0 = new Compiler();\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1010"
  },
  "test2022" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2022() throws Throwable {\n    Node node0 = new Node(49, 49, 49);\n    Node node1 = new Node(110, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node2.getCharno();\n}",
    "testName" : "test2022"
  },
  "test3034" : {
    "methodSignature" : "boolean isExceptionPossible(Node n)",
    "methodName" : "isExceptionPossible",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3034() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(125, 125, 125);\n    peepholeSubstituteAlternateSyntax0.isExceptionPossible(node0);\n}",
    "testName" : "test3034"
  },
  "test033" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node0 = Node.newNumber(4.67371955799455);\n    Node node1 = new Node(44, node0, node0);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Node node0 = new Node(115);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Node node0 = new Node(85);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = new Node(41, node0, node0, node0, node0, 1, 30);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1616"
  },
  "test1617" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    Node node0 = new Node(85);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = new Node(41, node0, node0, node0, node0, 1, 30);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node2.getLineno();\n}",
    "testName" : "test1617"
  },
  "test1414" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Node node0 = new Node((-913));\n    Node node1 = new Node(37, node0, node0);\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();\n    compiler0.initOptions(compilerOptions0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n    node2.getType();\n}",
    "testName" : "test1414"
  },
  "test3438" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3438() throws Throwable {\n    Node node0 = new Node(45, 45, 45);\n    Node node1 = new Node(26, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3438"
  },
  "test2428" : {
    "methodSignature" : "boolean isPure(Node n)",
    "methodName" : "isPure",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2428() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure((Node) null);\n}",
    "testName" : "test2428"
  },
  "test4045" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4045() throws Throwable {\n    Node node0 = new Node(26);\n    node0.addChildToFront(node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test4045"
  },
  "test2021" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    Node node0 = new Node(49, 49, 49);\n    Node node1 = new Node(110, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2021"
  },
  "test2832" : {
    "methodSignature" : "boolean areMatchingExits(Node nodeThis, Node nodeThat)",
    "methodName" : "areMatchingExits",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2832() throws Throwable {\n    Node node0 = Node.newString(\"com.moXgle.common.colle\\t.Re`ularImmutableMap$TerminalEntry\");\n    Node node1 = new Node(4, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.areMatchingExits(node1, node1);\n}",
    "testName" : "test2832"
  },
  "test3843" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3843() throws Throwable {\n    Node node0 = new Node(14);\n    Node node1 = new Node(26, node0, node0);\n    Node node2 = new Node(108, node1, node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);\n}",
    "testName" : "test3843"
  },
  "test4854" : {
    "methodSignature" : "public boolean isName()",
    "methodName" : "isName",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4854() throws Throwable {\n    Node node0 = new Node(63);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isName();\n}",
    "testName" : "test4854"
  },
  "test3640" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3640() throws Throwable {\n    Node node0 = new Node(63);\n    Node node1 = Node.newNumber((double) 0);\n    Node node2 = new Node(108, node1, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);\n}",
    "testName" : "test3640"
  },
  "test2630" : {
    "methodSignature" : "boolean isPure(Node n)",
    "methodName" : "isPure",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2630() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(30);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);\n}",
    "testName" : "test2630"
  },
  "test3641" : {
    "methodSignature" : "public boolean isIf()",
    "methodName" : "isIf",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3641() throws Throwable {\n    Node node0 = new Node(63);\n    Node node1 = Node.newNumber((double) 0);\n    Node node2 = new Node(108, node1, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);\n    node3.isIf();\n}",
    "testName" : "test3641"
  },
  "test4652" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4652() throws Throwable {\n    Node node0 = Node.newString(63, \"GK^Q.\");\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = new Node(63, node0, node0);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test4652"
  },
  "test022" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(43, 43, 43);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(114);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test066"
  },
  "test1819" : {
    "methodSignature" : "public boolean isFalse()",
    "methodName" : "isFalse",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Compiler compiler0 = new Compiler();\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    Node node0 = new Node(38);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isFalse();\n}",
    "testName" : "test1819"
  },
  "test4450" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4450() throws Throwable {\n    Node node0 = new Node((-891));\n    Node node1 = new Node(37, node0, node0);\n    Compiler compiler0 = new Compiler();\n    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED;\n    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test4450"
  },
  "test4349" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4349() throws Throwable {\n    Node node0 = new Node(15);\n    Node node1 = new Node(30, node0, node0, node0, 12, 2);\n    Compiler compiler0 = new Compiler();\n    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED_OBFUSCATED;\n    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test4349"
  },
  "test1313" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Node node0 = new Node(37, 37, 37);\n    Compiler compiler0 = new Compiler();\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1313"
  },
  "test3337" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3337() throws Throwable {\n    Node node0 = new Node(12, 12, 12);\n    Node node1 = new Node(26, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3337"
  },
  "test4147" : {
    "methodSignature" : "public boolean isAnd()",
    "methodName" : "isAnd",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4147() throws Throwable {\n    Node node0 = new Node(101, 101, 101);\n    SyntheticAst syntheticAst0 = new SyntheticAst(\"151w8 cNpDxf\\\"e;%n&/\");\n    Compiler compiler0 = new Compiler();\n    Node node1 = syntheticAst0.getAstRoot(compiler0);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node2 = new Node(26, node0, node0);\n    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);\n    node3.isAnd();\n}",
    "testName" : "test4147"
  },
  "test1111" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Node node0 = new Node(106);\n    Node node1 = new Node(115, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1111"
  },
  "test2124" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2124() throws Throwable {\n    Node node0 = new Node(49);\n    Node node1 = new Node(105, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node2.getType();\n}",
    "testName" : "test2124"
  },
  "test2123" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2123() throws Throwable {\n    Node node0 = new Node(49);\n    Node node1 = new Node(105, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2123"
  },
  "test3135" : {
    "methodSignature" : "boolean areMatchingExits(Node nodeThis, Node nodeThat)",
    "methodName" : "areMatchingExits",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3135() throws Throwable {\n    Node node0 = new Node(4);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.areMatchingExits(node0, node0);\n}",
    "testName" : "test3135"
  },
  "test4146" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4146() throws Throwable {\n    Node node0 = new Node(101, 101, 101);\n    SyntheticAst syntheticAst0 = new SyntheticAst(\"151w8 cNpDxf\\\"e;%n&/\");\n    Compiler compiler0 = new Compiler();\n    Node node1 = syntheticAst0.getAstRoot(compiler0);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node2 = new Node(26, node0, node0);\n    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);\n}",
    "testName" : "test4146"
  },
  "test011" : {
    "methodSignature" : "public boolean isVar()",
    "methodName" : "isVar",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Node node0 = new Node(14);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isVar();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(113);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Node node0 = new Node(4);\n    Node node1 = new Node(4095, node0, node0);\n    Compiler compiler0 = new Compiler();\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test099"
  },
  "test2529" : {
    "methodSignature" : "boolean isPure(Node n)",
    "methodName" : "isPure",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2529() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(144);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);\n}",
    "testName" : "test2529"
  },
  "test1718" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    Node node0 = new Node(125, 125, 125);\n    Node node1 = new Node(125, node0, node0, node0, 38, 30);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1718"
  },
  "test2327" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2327() throws Throwable {\n    Node node0 = new Node(49);\n    Node node1 = Node.newNumber((double) 45);\n    Node node2 = new Node(16, node0, node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2327"
  },
  "test1515" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Node node0 = new Node(85);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1515"
  },
  "test3539" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3539() throws Throwable {\n    Node node0 = new Node(46, 46, 46);\n    Node node1 = new Node(26, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3539"
  },
  "test2731" : {
    "methodSignature" : "boolean isPure(Node n)",
    "methodName" : "isPure",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2731() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(125, 125, 125);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);\n}",
    "testName" : "test2731"
  },
  "test3742" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3742() throws Throwable {\n    Node node0 = new Node(28, 28, 28);\n    Node node1 = new Node(46, 45, 54);\n    Node node2 = new Node(108, node1, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);\n}",
    "testName" : "test3742"
  },
  "test4955" : {
    "methodSignature" : "static boolean containsUnicodeEscape(String s)",
    "methodName" : "containsUnicodeEscape",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4955() throws Throwable {\n    boolean boolean0 = PeepholeSubstituteAlternateSyntax.containsUnicodeEscape(\"\\\\u\");\n}",
    "testName" : "test4955"
  },
  "test4753" : {
    "methodSignature" : "public boolean isGetterDef()",
    "methodName" : "isGetterDef",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4753() throws Throwable {\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(63, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n    node2.isGetterDef();\n}",
    "testName" : "test4753"
  },
  "test000" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(4, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Node node0 = new Node(100);\n    Node node1 = new Node(98, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(130);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test088"
  },
  "test1920" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1920() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED;\n    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    Node node0 = Node.newString(38, \"NT4\", 38, 38);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1920"
  },
  "test2933" : {
    "methodSignature" : "boolean areMatchingExits(Node nodeThis, Node nodeThat)",
    "methodName" : "areMatchingExits",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2933() throws Throwable {\n    Node node0 = new Node(49);\n    Node node1 = new Node(132, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.areMatchingExits(node0, node0);\n}",
    "testName" : "test2933"
  },
  "test3944" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3944() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(98, 98, 98);\n    Node node1 = new Node(98, node0, node0, node0, 38, 37);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3944"
  },
  "test4551" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4551() throws Throwable {\n    Node node0 = new Node(49, 49, 49);\n    Node node1 = new Node(44, node0, node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test4551"
  }
}