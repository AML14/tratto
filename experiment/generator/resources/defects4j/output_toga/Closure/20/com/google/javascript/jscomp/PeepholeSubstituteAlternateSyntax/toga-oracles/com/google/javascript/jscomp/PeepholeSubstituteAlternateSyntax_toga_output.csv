project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Node node0 = Node.newString("""");
    Node node1 = new Node(4, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    Node node0 = new Node(14);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isVar());
}",0,assertTrue(node1.isVar())
project,0,test022,"public void test022() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(43, 43, 43);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node0 = Node.newNumber(4.67371955799455);
    Node node1 = new Node(44, node0, node0);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertSame(node2, node1);
}",0,
project,0,test044,"public void test044() throws Throwable {
    Node node0 = new Node(100);
    Node node1 = new Node(98, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(113);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(114);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    Node node0 = new Node(115);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(130);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    Node node0 = new Node(4);
    Node node1 = new Node(4095, node0, node0);
    Compiler compiler0 = new Compiler();
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertNull(node2);
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    Node node0 = Node.newNumber(65.25581514511606);
    Node node1 = new Node(30, node0, node0);
    Compiler compiler0 = new Compiler();
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertEquals(50, Node.FREE_CALL);
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    Node node0 = new Node(106);
    Node node1 = new Node(115, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    Node node0 = new Node(106);
    Node node1 = new Node(115, node0, node0);
    node1.replaceChild(node0, node1);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    Node node0 = new Node(37, 37, 37);
    Compiler compiler0 = new Compiler();
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    Node node0 = new Node((-913));
    Node node1 = new Node(37, node0, node0);
    Compiler compiler0 = new Compiler();
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.initOptions(compilerOptions0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertEquals(37, node2.getType());
}",0,"assertEquals(1, node2.getType())"
project,0,test1515,"public void test1515() throws Throwable {
    Node node0 = new Node(85);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertSame(node0, node1);
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    Node node0 = new Node(85);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = new Node(41, node0, node0, node0, node0, 1, 30);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertNotNull(node2);
}",0,
project,0,test1617,"public void test1617() throws Throwable {
    Node node0 = new Node(85);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = new Node(41, node0, node0, node0, node0, 1, 30);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals((-1), node2.getLineno());
}",0,
project,0,test1718,"public void test1718() throws Throwable {
    Node node0 = new Node(125, 125, 125);
    Node node1 = new Node(125, node0, node0, node0, 38, 30);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertEquals(35, Node.PARENTHESIZED_PROP);
}",0,
project,0,test1819,"public void test1819() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Compiler compiler0 = new Compiler();
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node0 = new Node(38);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isFalse());
}",0,assertTrue(node1.isFalse())
project,0,test1920,"public void test1920() throws Throwable {
    Compiler compiler0 = new Compiler();
    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED;
    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node0 = Node.newString(38, ""NT4"", 38, 38);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals(1, Node.FLAG_GLOBAL_STATE_UNMODIFIED);
}",0,
project,0,test2021,"public void test2021() throws Throwable {
    Node node0 = new Node(49, 49, 49);
    Node node1 = new Node(110, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertNotNull(node2);
}",0,
project,0,test2022,"public void test2022() throws Throwable {
    Node node0 = new Node(49, 49, 49);
    Node node1 = new Node(110, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals(49, node2.getCharno());
}",0,
project,0,test2123,"public void test2123() throws Throwable {
    Node node0 = new Node(49);
    Node node1 = new Node(105, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertNotNull(node2);
}",0,
project,0,test2124,"public void test2124() throws Throwable {
    Node node0 = new Node(49);
    Node node1 = new Node(105, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals(49, node2.getType());
}",0,"assertEquals(0, node2.getType())"
project,0,test2225,"public void test2225() throws Throwable {
    Node node0 = new Node(49);
    Node node1 = new Node(132, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertNotNull(node2);
}",0,
project,0,test2226,"public void test2226() throws Throwable {
    Node node0 = new Node(49);
    Node node1 = new Node(132, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node2.hasOneChild());
}",0,assertFalse(node2.hasOneChild())
project,0,test2327,"public void test2327() throws Throwable {
    Node node0 = new Node(49);
    Node node1 = Node.newNumber((double) 45);
    Node node2 = new Node(16, node0, node1);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test2428,"public void test2428() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure((Node) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2529,"public void test2529() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(144);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2630,"public void test2630() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(30);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2731,"public void test2731() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(125, 125, 125);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2832,"public void test2832() throws Throwable {
    Node node0 = Node.newString(""com.moXgle.common.colle\t.Re`ularImmutableMap$TerminalEntry"");
    Node node1 = new Node(4, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.areMatchingExits(node1, node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2933,"public void test2933() throws Throwable {
    Node node0 = new Node(49);
    Node node1 = new Node(132, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.areMatchingExits(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3034,"public void test3034() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(125, 125, 125);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.isExceptionPossible(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test3135,"public void test3135() throws Throwable {
    Node node0 = new Node(4);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.areMatchingExits(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3236,"public void test3236() throws Throwable {
    Node node0 = new Node(101, 101, 101);
    Node node1 = new Node(4, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.areMatchingExits(node1, node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.ControlFlowAnalysis"", e);
    }
}",0,
project,0,test3337,"public void test3337() throws Throwable {
    Node node0 = new Node(12, 12, 12);
    Node node1 = new Node(26, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test3438,"public void test3438() throws Throwable {
    Node node0 = new Node(45, 45, 45);
    Node node1 = new Node(26, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test3539,"public void test3539() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    Node node1 = new Node(26, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test3640,"public void test3640() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = Node.newNumber((double) 0);
    Node node2 = new Node(108, node1, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);
    assertNotNull(node3);
}",0,
project,0,test3641,"public void test3641() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = Node.newNumber((double) 0);
    Node node2 = new Node(108, node1, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);
    assertTrue(node3.isIf());
}",0,assertTrue(node3.isIf())
project,0,test3742,"public void test3742() throws Throwable {
    Node node0 = new Node(28, 28, 28);
    Node node1 = new Node(46, 45, 54);
    Node node2 = new Node(108, node1, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);
    assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
}",0,
project,0,test3843,"public void test3843() throws Throwable {
    Node node0 = new Node(14);
    Node node1 = new Node(26, node0, node0);
    Node node2 = new Node(108, node1, node1);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test3944,"public void test3944() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(98, 98, 98);
    Node node1 = new Node(98, node0, node0, node0, 38, 37);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test4045,"public void test4045() throws Throwable {
    Node node0 = new Node(26);
    node0.addChildToFront(node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test4146,"public void test4146() throws Throwable {
    Node node0 = new Node(101, 101, 101);
    SyntheticAst syntheticAst0 = new SyntheticAst(""151w8 cNpDxf\""e;%n&/"");
    Compiler compiler0 = new Compiler();
    Node node1 = syntheticAst0.getAstRoot(compiler0);
    node0.addChildToBack(node1);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node2 = new Node(26, node0, node0);
    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);
    assertNotNull(node3);
}",0,
project,0,test4147,"public void test4147() throws Throwable {
    Node node0 = new Node(101, 101, 101);
    SyntheticAst syntheticAst0 = new SyntheticAst(""151w8 cNpDxf\""e;%n&/"");
    Compiler compiler0 = new Compiler();
    Node node1 = syntheticAst0.getAstRoot(compiler0);
    node0.addChildToBack(node1);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node2 = new Node(26, node0, node0);
    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node2);
    assertFalse(node3.isAnd());
}",0,assertTrue(node3.isAnd())
project,0,test4248,"public void test4248() throws Throwable {
    Node node0 = Node.newNumber((double) 26);
    Node node1 = new Node(26, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test4349,"public void test4349() throws Throwable {
    Node node0 = new Node(15);
    Node node1 = new Node(30, node0, node0, node0, 12, 2);
    Compiler compiler0 = new Compiler();
    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED_OBFUSCATED;
    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertEquals(48, Node.DIRECTIVES);
}",0,
project,0,test4450,"public void test4450() throws Throwable {
    Node node0 = new Node((-891));
    Node node1 = new Node(37, node0, node0);
    Compiler compiler0 = new Compiler();
    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED;
    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test4551,"public void test4551() throws Throwable {
    Node node0 = new Node(49, 49, 49);
    Node node1 = new Node(44, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test4652,"public void test4652() throws Throwable {
    Node node0 = Node.newString(63, ""GK^Q."");
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = new Node(63, node0, node0);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
}",0,
project,0,test4753,"public void test4753() throws Throwable {
    Node node0 = Node.newString("""");
    Node node1 = new Node(63, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertFalse(node2.isGetterDef());
}",0,assertTrue(node2.isGetterDef())
project,0,test4854,"public void test4854() throws Throwable {
    Node node0 = new Node(63);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isName());
}",0,assertTrue(node1.isName())
project,0,test4955,"public void test4955() throws Throwable {
    boolean boolean0 = PeepholeSubstituteAlternateSyntax.containsUnicodeEscape(""\\u"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
