/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 05:21:46 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.Normalize;
import com.google.javascript.jscomp.PreprocessorSymbolTable;
import com.google.javascript.jscomp.ScopedAliases;
import com.google.javascript.rhino.Node;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ScopedAliases_ESTest extends ScopedAliases_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        CompilerOptions.AliasTransformationHandler compilerOptions_AliasTransformationHandler0 = CompilerOptions.NULL_ALIAS_TRANSFORMATION_HANDLER;
        Node node0 = new Node(770, 770, 770);
        Compiler compiler0 = new Compiler();
        PreprocessorSymbolTable preprocessorSymbolTable0 = new PreprocessorSymbolTable(node0);
        ScopedAliases scopedAliases0 = new ScopedAliases(compiler0, preprocessorSymbolTable0, compilerOptions_AliasTransformationHandler0);
        scopedAliases0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        CompilerOptions.AliasTransformationHandler compilerOptions_AliasTransformationHandler0 = CompilerOptions.NULL_ALIAS_TRANSFORMATION_HANDLER;
        Compiler compiler0 = new Compiler();
        Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "");
        node0.addChildToBack(node0);
        PreprocessorSymbolTable preprocessorSymbolTable0 = new PreprocessorSymbolTable(node0);
        ScopedAliases scopedAliases0 = new ScopedAliases(compiler0, preprocessorSymbolTable0, compilerOptions_AliasTransformationHandler0);
        scopedAliases0.hotSwapScript(node0, node0);
    }
}
