{
  "test1213" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    Node node0 = new Node(115, 115, 115);\n    Node node1 = new Node(4, 25, 11);\n    node1.addChildAfter(node0, node0);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1213"
  },
  "test2224" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2224() throws Throwable {\n    Node node0 = new Node(26, 26, 26);\n    Node node1 = new Node(14, node0, node0, node0);\n    node1.setType(100);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2224"
  },
  "test1314" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    Node node0 = new Node(26);\n    Node node1 = new Node(12, node0, node0, node0, node0, 40, 1);\n    node0.addChildrenToFront(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1314"
  },
  "test2325" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2325() throws Throwable {\n    Node node0 = new Node(130, 130, 130);\n    Node node1 = new Node(26, node0, node0, node0, node0, (-3), 12);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2325"
  },
  "test1011" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    Node node0 = new Node(113);\n    Node node1 = new Node(4, 25, 11);\n    node1.addChildAfter(node0, node0);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1011"
  },
  "test2022" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2022() throws Throwable {\n    Node node0 = new Node(130, 130, 130);\n    Node node1 = new Node(100, node0, node0, node0);\n    node0.addChildrenToFront(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2022"
  },
  "test1112" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    Node node0 = new Node(110, 110, 110);\n    Node node1 = new Node(4, 29, 0);\n    node0.addChildrenToFront(node1);\n    Node node2 = Node.newNumber((double) (-1), 1, 2);\n    node1.addChildrenToBack(node2);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node3 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1112"
  },
  "test2123" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2123() throws Throwable {\n    Node node0 = new Node(26);\n    Node node1 = new Node((-1), node0, 1, 29);\n    node1.setType(101);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2123"
  },
  "test011" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Node node0 = new Node(0, 0, 0);\n    Node node1 = new Node(26, node0, 15, 4);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test011"
  },
  "test012" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    Node node0 = new Node(0, 0, 0);\n    Node node1 = new Node(26, node0, 15, 4);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n    node2.getType();\n}",
    "testName" : "test012"
  },
  "test034" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    Node node0 = new Node(114, 114, 114);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test034"
  },
  "test056" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    Node node0 = new Node(30);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Compiler compiler0 = new Compiler();\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(nodeTraversal0);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test056"
  },
  "test078" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    Node node0 = new Node(113);\n    Node node1 = new Node(4, 25, 11);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test078"
  },
  "test1617" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    Node node0 = new Node(26);\n    Node node1 = new Node(46, node0, node0, node0, 38, 5);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1617"
  },
  "test2628" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2628() throws Throwable {\n    Node node0 = new Node(130);\n    Node node1 = Node.newNumber((double) 0);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2628"
  },
  "test1718" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    Node node0 = new Node(108);\n    Node node1 = Node.newNumber((double) 2);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Compiler compiler0 = new Compiler();\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(nodeTraversal0);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1718"
  },
  "test2729" : {
    "methodSignature" : "public boolean isLocalResultCall()",
    "methodName" : "isLocalResultCall",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2729() throws Throwable {\n    Node node0 = new Node(30);\n    node0.addChildToBack(node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Compiler compiler0 = new Compiler();\n    compiler0.setNormalized();\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(nodeTraversal0);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isLocalResultCall();\n}",
    "testName" : "test2729"
  },
  "test1415" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    Node node0 = new Node(26);\n    Node node1 = new Node(13, node0);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1415"
  },
  "test2426" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2426() throws Throwable {\n    Node node0 = new Node(26, 26, 26);\n    Node node1 = new Node(14, node0, node0, node0);\n    Node node2 = Node.newNumber((double) 39, 40, 114);\n    node1.addChildToBack(node2);\n    node1.setType(100);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2426"
  },
  "test1516" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    Node node0 = new Node(26);\n    Node node1 = new Node(46, node0, node0, node0, 38, 5);\n    node1.setType(45);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1516"
  },
  "test2527" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2527() throws Throwable {\n    Node node0 = new Node(98, 98, 98);\n    node0.addChildrenToFront(node0);\n    Node node1 = new Node(35);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2527"
  },
  "test3032" : {
    "methodSignature" : "static boolean containsUnicodeEscape(String s)",
    "methodName" : "containsUnicodeEscape",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3032() throws Throwable {\n    boolean boolean0 = PeepholeSubstituteAlternateSyntax.containsUnicodeEscape(\"k[j\\\\u\");\n}",
    "testName" : "test3032"
  },
  "test2830" : {
    "methodSignature" : "public boolean isOnlyModifiesThisCall()",
    "methodName" : "isOnlyModifiesThisCall",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2830() throws Throwable {\n    Node node0 = new Node(37, 37, 37);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Compiler compiler0 = new Compiler();\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(nodeTraversal0);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isOnlyModifiesThisCall();\n}",
    "testName" : "test2830"
  },
  "test2931" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2931() throws Throwable {\n    Node node0 = new Node(37);\n    node0.addChildToBack(node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Compiler compiler0 = new Compiler();\n    compiler0.setNormalized();\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(nodeTraversal0);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2931"
  },
  "test1820" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1820() throws Throwable {\n    Node node0 = new Node((-2));\n    Node node1 = new Node(108, node0, (-1), 1);\n    node1.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1820"
  },
  "test000" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Node node0 = new Node(0, 0, 0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test000"
  },
  "test023" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    Node node0 = new Node(113);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test023"
  },
  "test045" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    Node node0 = new Node(115, 115, 115);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test045"
  },
  "test067" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    Node node0 = new Node(30, 30, 30);\n    Node node1 = new Node(4, node0, 4, 8);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test067"
  },
  "test089" : {
    "methodSignature" : "public boolean isNoSideEffectsCall()",
    "methodName" : "isNoSideEffectsCall",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    Node node0 = new Node(105, 105, 105);\n    Node node1 = new Node(4, 25, 11);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n    node2.isNoSideEffectsCall();\n}",
    "testName" : "test089"
  },
  "test1921" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1921() throws Throwable {\n    Node node0 = new Node(26, 26, 26);\n    node0.addChildToBack(node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1921"
  },
  "test0910" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    Node node0 = new Node(132, 132, 132);\n    Node node1 = new Node(4, 29, 0);\n    node0.addChildrenToFront(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test0910"
  },
  "test1719" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1719() throws Throwable {\n    Node node0 = new Node(108);\n    Node node1 = Node.newNumber((double) 2);\n    node0.addChildToBack(node1);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();\n    Compiler compiler0 = new Compiler();\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(nodeTraversal0);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node2.hasChildren();\n}",
    "testName" : "test1719"
  }
}