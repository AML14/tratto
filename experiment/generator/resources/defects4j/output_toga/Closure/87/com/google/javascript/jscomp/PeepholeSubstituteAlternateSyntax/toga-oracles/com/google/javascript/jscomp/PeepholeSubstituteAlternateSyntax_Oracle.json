[ {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test012"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test023"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test034"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test045"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test056"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test067"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test078"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public boolean isNoSideEffectsCall()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.isNoSideEffectsCall())",
  "exception" : "",
  "testName" : "test089"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0910"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1011"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1112"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1213"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1314"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1415"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1516"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1617"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1718"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.hasChildren())",
  "exception" : "",
  "testName" : "test1719"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1820"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1921"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2022"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2123"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2224"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2325"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2426"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2527"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2628"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public boolean isLocalResultCall()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node1.isLocalResultCall())",
  "exception" : "",
  "testName" : "test2729"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public boolean isOnlyModifiesThisCall()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isOnlyModifiesThisCall())",
  "exception" : "",
  "testName" : "test2830"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "public Node optimizeSubtree(Node node)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2931"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
  "methodSignature" : "static boolean containsUnicodeEscape(String s)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test3032"
} ]