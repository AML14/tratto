{
  "test1212" : {
    "methodSignature" : "void addArrayList(Node firstInList)",
    "methodName" : "addArrayList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    Node node0 = new Node(85, 85, 85);\n    codeGenerator0.addArrayList(node0);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "static String escapeToDoubleQuotedJsString(String s)",
    "methodName" : "escapeToDoubleQuotedJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(\"QbR]>3Lryt+un/^n\");\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "void addList(Node firstInList, boolean isArrayOrFunctionArgument, Context lhsContext)",
    "methodName" : "addList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Node node0 = new Node(97, 97, 97);\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;\n    codeGenerator0.addList(node0, false, codeGenerator_Context0);\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "static String escapeToDoubleQuotedJsString(String s)",
    "methodName" : "escapeToDoubleQuotedJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(\"g</scriptyx-hd&l\");\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "static boolean isSimpleNumber(String s)",
    "methodName" : "isSimpleNumber",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    boolean boolean0 = CodeGenerator.isSimpleNumber(\"ts$?9[ D3(7Zr!~c\");\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "static String escapeToDoubleQuotedJsString(String s)",
    "methodName" : "escapeToDoubleQuotedJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(\"<!-->-s\");\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "static double getSimpleNumber(String s)",
    "methodName" : "getSimpleNumber",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    double double0 = CodeGenerator.getSimpleNumber(\"\");\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "static String regexpEscape(String s)",
    "methodName" : "regexpEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    String string0 = CodeGenerator.regexpEscape(\"<np->-s\");\n}",
    "testName" : "test2222"
  },
  "test011" : {
    "methodSignature" : "void addList(Node firstInList)",
    "methodName" : "addList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Node node0 = new Node(41);\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addList(node0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "static String escapeToDoubleQuotedJsString(String s)",
    "methodName" : "escapeToDoubleQuotedJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(\"on\\u0018\\u00E7\\u0007 \\u0003(\\u000B2$.google.protobuf.UninterpretedOption\\\":\\n\\fOptimizeMode\\u0012\\t\\n\\u0005SPEED\\u0010\\u0001\\u0012\\r\\n\\tCODE_SIZE\\u0010\\u0002\\u0012\\u0010\\n\\fLITE_RUNTIME\\u0010\\u0003*\\t\\b\\u00E8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\"\\u00B8\\u0001\\n\\u000EMessageOptions\\u0012&\\n\\u0017message_set_wire_format\\u0018\\u0001 \\u0001(\\b:\\u0005false\\u0012.\\n\\u001Fno_standard_descriptor_accessor\\u0018\\u0002 \\u0001(\\b:\\u0005false\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00E7\\u0007 \\u0003(\\u000B2$.google.protobuf.UninterpretedOption*\\t\\b\\u00E8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\"\\u0094\\u0002\\n\\fFieldOptions\\u0012:\\n\\u0005ctype\\u0018\\u0001 \\u0001(\\u000E2#.google.protobuf.FieldOptions.CType:\\u0006STRING\\u0012\\u000E\\n\\u0006packed\\u0018\\u0002 \\u0001(\\b\\u0012\\u0019\");\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "void addList(Node firstInList, boolean isArrayOrFunctionArgument)",
    "methodName" : "addList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addList((Node) null, false);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "void addAllSiblings(Node n)",
    "methodName" : "addAllSiblings",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Charset charset0 = Charset.defaultCharset();\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);\n    codeGenerator0.addAllSiblings((Node) null);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "static double getSimpleNumber(String s)",
    "methodName" : "getSimpleNumber",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    double double0 = CodeGenerator.getSimpleNumber(\"9,/*l'+\");\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "void addJsString(String s)",
    "methodName" : "addJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addJsString(\"Bad binary operator \\\"%s\\\": expected 2 arguments but got %s\");\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "static String identifierEscape(String s)",
    "methodName" : "identifierEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    String string0 = CodeGenerator.identifierEscape(\"com.google.javascript.jscomp.DiagnosticGroup\");\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "static String escapeToDoubleQuotedJsString(String s)",
    "methodName" : "escapeToDoubleQuotedJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(\"\\n\\ndeprecated\\u0018\\u0003 \\u0001(\\b:\\u0005false\\u0012\\u001C\\n\\u0014experimental_map_key\\u0018\\t \\u0001(\\t\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00E7\\u0007 \\u0003(\\u000B2$.google.protobuf.UninterpretedOption\\\"/\\n\\u0005CType\\u0012\\n\\n\\u0006STRING\\u0010\\u0000\\u0012\\b\\n\\u0004CORD\\u0010\\u0001\\u0012\\u0010\\n\\fSTRING_PIECE\\u0010\\u0002*\\t\\b\\u00E8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\"]\\n\\u000BEnumOptions\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00E7\\u0007 \\u0003(\\u000B2$.google.protobuf.UninterpretedOption*\\t\\b\\u00E8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\"b\\n\\u0010EnumValueOptions\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00E7\\u0007 \\u0003(\\u000B2$.google.protobuf.UninterpretedOption*\\t\\b\\u00E8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\"`\\n\\u000EServiceOptions\\u0012C\\n\");\n}",
    "testName" : "test1717"
  },
  "test1414" : {
    "methodSignature" : "void addAllSiblings(Node n)",
    "methodName" : "addAllSiblings",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Node node0 = new Node(1020);\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addAllSiblings(node0);\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "static String regexpEscape(String s, CharsetEncoder outputCharsetEncoder)",
    "methodName" : "regexpEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    Charset charset0 = Charset.defaultCharset();\n    CharsetEncoder charsetEncoder0 = charset0.newEncoder();\n    String string0 = CodeGenerator.regexpEscape(\"zg2\", charsetEncoder0);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "void addJsString(String s)",
    "methodName" : "addJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addJsString(\"5!=QA'C\");\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "static String identifierEscape(String s)",
    "methodName" : "identifierEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    String string0 = CodeGenerator.identifierEscape(\"\\n\\ndeprecated\\u0018\\u0003 \\u0001(\\b:\\u0005false\\u0012\\u001C\\n\\u0014experimental_map_key\\u0018\\t \\u0001(\\t\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00E7\\u0007 \\u0003(\\u000B2$.google.protobuf.UninterpretedOption\\\"/\\n\\u0005CType\\u0012\\n\\n\\u0006STRING\\u0010\\u0000\\u0012\\b\\n\\u0004CORD\\u0010\\u0001\\u0012\\u0010\\n\\fSTRING_PIECE\\u0010\\u0002*\\t\\b\\u00E8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\"]\\n\\u000BEnumOptions\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00E7\\u0007 \\u0003(\\u000B2$.google.protobuf.UninterpretedOption*\\t\\b\\u00E8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\"b\\n\\u0010EnumValueOptions\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00E7\\u0007 \\u0003(\\u000B2$.google.protobuf.UninterpretedOption*\\t\\b\\u00E8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\"`\\n\\u000EServiceOptions\\u0012C\\n\");\n}",
    "testName" : "test2626"
  },
  "test2020" : {
    "methodSignature" : "static String regexpEscape(String s)",
    "methodName" : "regexpEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    String string0 = CodeGenerator.regexpEscape(\"~>HA<!--5\");\n}",
    "testName" : "test2020"
  },
  "test000" : {
    "methodSignature" : "void addList(Node firstInList, boolean isArrayOrFunctionArgument, Context lhsContext)",
    "methodName" : "addList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Node node0 = new Node(51);\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;\n    codeGenerator0.addList(node0, true, codeGenerator_Context0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void tagAsStrict()",
    "methodName" : "tagAsStrict",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.tagAsStrict();\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "void addCaseBody(Node caseBody)",
    "methodName" : "addCaseBody",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addCaseBody((Node) null);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "CodeGenerator(CodeConsumer consumer, Charset outputCharset)",
    "methodName" : "CodeGenerator",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Charset charset0 = Charset.forName(\"default\");\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "static double getSimpleNumber(String s)",
    "methodName" : "getSimpleNumber",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    double double0 = CodeGenerator.getSimpleNumber(\"8\");\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "void addJsString(String s)",
    "methodName" : "addJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addJsString(\"`j;T!yoElE<!--y-b?\");\n}",
    "testName" : "test1818"
  },
  "test1919" : {
    "methodSignature" : "static String escapeToDoubleQuotedJsString(String s)",
    "methodName" : "escapeToDoubleQuotedJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(\"_(]]>PY1wRdl%\");\n}",
    "testName" : "test1919"
  }
}