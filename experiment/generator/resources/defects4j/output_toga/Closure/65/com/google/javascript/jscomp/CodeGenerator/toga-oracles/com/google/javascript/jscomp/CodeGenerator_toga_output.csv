project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Node node0 = new Node(51);
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
    // Undeclared exception!
    try {
        codeGenerator0.addList(node0, true, codeGenerator_Context0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    Node node0 = new Node(41);
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.addList(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",1,
project,0,test022,"public void test022() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.tagAsStrict();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(""on\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption\"":\n\fOptimizeMode\u0012\t\n\u0005SPEED\u0010\u0001\u0012\r\n\tCODE_SIZE\u0010\u0002\u0012\u0010\n\fLITE_RUNTIME\u0010\u0003*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""\u00B8\u0001\n\u000EMessageOptions\u0012&\n\u0017message_set_wire_format\u0018\u0001 \u0001(\b:\u0005false\u0012.\n\u001Fno_standard_descriptor_accessor\u0018\u0002 \u0001(\b:\u0005false\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""\u0094\u0002\n\fFieldOptions\u0012:\n\u0005ctype\u0018\u0001 \u0001(\u000E2#.google.protobuf.FieldOptions.CType:\u0006STRING\u0012\u000E\n\u0006packed\u0018\u0002 \u0001(\b\u0012\u0019"");
    assertEquals(""\""on\\u0018\\u00e7\\u0007 \\u0003(\\u000b2$.google.protobuf.UninterpretedOption\\\"":\\n\\u000cOptimizeMode\\u0012\\t\\n\\u0005SPEED\\u0010\\u0001\\u0012\\r\\n\\tCODE_SIZE\\u0010\\u0002\\u0012\\u0010\\n\\u000cLITE_RUNTIME\\u0010\\u0003*\\t\\u0008\\u00e8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\""\\u00b8\\u0001\\n\\u000eMessageOptions\\u0012&\\n\\u0017message_set_wire_format\\u0018\\u0001 \\u0001(\\u0008:\\u0005false\\u0012.\\n\\u001fno_standard_descriptor_accessor\\u0018\\u0002 \\u0001(\\u0008:\\u0005false\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00e7\\u0007 \\u0003(\\u000b2$.google.protobuf.UninterpretedOption*\\t\\u0008\\u00e8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\""\\u0094\\u0002\\n\\u000cFieldOptions\\u0012:\\n\\u0005ctype\\u0018\\u0001 \\u0001(\\u000e2#.google.protobuf.FieldOptions.CType:\\u0006STRING\\u0012\\u000e\\n\\u0006packed\\u0018\\u0002 \\u0001(\\u0008\\u0012\\u0019\"""", string0);
}",0,assertNotNull(string0)
project,0,test044,"public void test044() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.addCaseBody((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    codeGenerator0.addList((Node) null, false);
}",0,
project,0,test066,"public void test066() throws Throwable {
    Charset charset0 = Charset.forName(""default"");
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);
}",0,
project,0,test077,"public void test077() throws Throwable {
    Charset charset0 = Charset.defaultCharset();
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);
    codeGenerator0.addAllSiblings((Node) null);
}",0,
project,0,test088,"public void test088() throws Throwable {
    double double0 = CodeGenerator.getSimpleNumber(""8"");
    assertEquals(8.0, double0, 0.01);
}",0,
project,0,test099,"public void test099() throws Throwable {
    double double0 = CodeGenerator.getSimpleNumber(""9,/*l'+"");
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    boolean boolean0 = CodeGenerator.isSimpleNumber(""ts$?9[ D3(7Zr!~c"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1111,"public void test1111() throws Throwable {
    double double0 = CodeGenerator.getSimpleNumber("""");
    assertEquals(Double.NaN, double0, 0.01);
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    Node node0 = new Node(85, 85, 85);
    // Undeclared exception!
    try {
        codeGenerator0.addArrayList(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    Node node0 = new Node(97, 97, 97);
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
    // Undeclared exception!
    try {
        codeGenerator0.addList(node0, false, codeGenerator_Context0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    Node node0 = new Node(1020);
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.addAllSiblings(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test1515,"public void test1515() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.addJsString(""5!=QA'C"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.addJsString(""Bad binary operator \""%s\"": expected 2 arguments but got %s"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(""\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012\u001C\n\u0014experimental_map_key\u0018\t \u0001(\t\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption\""/\n\u0005CType\u0012\n\n\u0006STRING\u0010\u0000\u0012\b\n\u0004CORD\u0010\u0001\u0012\u0010\n\fSTRING_PIECE\u0010\u0002*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""]\n\u000BEnumOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""b\n\u0010EnumValueOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""`\n\u000EServiceOptions\u0012C\n"");
    assertEquals(""\""\\n\\ndeprecated\\u0018\\u0003 \\u0001(\\u0008:\\u0005false\\u0012\\u001c\\n\\u0014experimental_map_key\\u0018\\t \\u0001(\\t\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00e7\\u0007 \\u0003(\\u000b2$.google.protobuf.UninterpretedOption\\\""/\\n\\u0005CType\\u0012\\n\\n\\u0006STRING\\u0010\\0\\u0012\\u0008\\n\\u0004CORD\\u0010\\u0001\\u0012\\u0010\\n\\u000cSTRING_PIECE\\u0010\\u0002*\\t\\u0008\\u00e8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\""]\\n\\u000bEnumOptions\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00e7\\u0007 \\u0003(\\u000b2$.google.protobuf.UninterpretedOption*\\t\\u0008\\u00e8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\""b\\n\\u0010EnumValueOptions\\u0012C\\n\\u0014uninterpreted_option\\u0018\\u00e7\\u0007 \\u0003(\\u000b2$.google.protobuf.UninterpretedOption*\\t\\u0008\\u00e8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\\\""`\\n\\u000eServiceOptions\\u0012C\\n\"""", string0);
}",0,assertNotNull(string0)
project,0,test1818,"public void test1818() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.addJsString(""`j;T!yoElE<!--y-b?"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(""_(]]>PY1wRdl%"");
    assertEquals(""\""_(]]\\>PY1wRdl%\\u007f\"""", string0);
}",0,assertNotNull(string0)
project,0,test2020,"public void test2020() throws Throwable {
    String string0 = CodeGenerator.regexpEscape(""~>HA<!--5"");
    assertEquals(""/~>HA<\\!--5/"", string0);
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(""<!-->-s"");
    assertEquals(""\""<\\!--\\>-s\"""", string0);
}",0,assertNotNull(string0)
project,0,test2222,"public void test2222() throws Throwable {
    String string0 = CodeGenerator.regexpEscape(""<np->-s"");
    assertEquals(""/<np->-s/"", string0);
}",0,
project,0,test2323,"public void test2323() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(""QbR]>3Lryt+un/^n"");
    assertEquals(""\""QbR]>3Lryt+un/^n\"""", string0);
}",0,assertNotNull(string0)
project,0,test2424,"public void test2424() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(""g</scriptyx-hd&l"");
    assertEquals(""\""g<\\/scriptyx-hd&l\"""", string0);
}",0,assertNotNull(string0)
project,0,test2525,"public void test2525() throws Throwable {
    Charset charset0 = Charset.defaultCharset();
    CharsetEncoder charsetEncoder0 = charset0.newEncoder();
    String string0 = CodeGenerator.regexpEscape(""zg2"", charsetEncoder0);
    assertEquals(""/zg2/"", string0);
}",0,assertNotNull(string0)
project,0,test2626,"public void test2626() throws Throwable {
    String string0 = CodeGenerator.identifierEscape(""\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012\u001C\n\u0014experimental_map_key\u0018\t \u0001(\t\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption\""/\n\u0005CType\u0012\n\n\u0006STRING\u0010\u0000\u0012\b\n\u0004CORD\u0010\u0001\u0012\u0010\n\fSTRING_PIECE\u0010\u0002*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""]\n\u000BEnumOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""b\n\u0010EnumValueOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""`\n\u000EServiceOptions\u0012C\n"");
    assertEquals(""\\u000a\\u000adeprecated\\u0018\\u0003 \\u0001(\\u0008:\\u0005false\\u0012\\u001c\\u000a\\u0014experimental_map_key\\u0018\\u0009 \\u0001(\\u0009\\u0012C\\u000a\\u0014uninterpreted_option\\u0018\\u00e7\\u0007 \\u0003(\\u000b2$.google.protobuf.UninterpretedOption\""/\\u000a\\u0005CType\\u0012\\u000a\\u000a\\u0006STRING\\u0010\\u0000\\u0012\\u0008\\u000a\\u0004CORD\\u0010\\u0001\\u0012\\u0010\\u000a\\u000cSTRING_PIECE\\u0010\\u0002*\\u0009\\u0008\\u00e8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\""]\\u000a\\u000bEnumOptions\\u0012C\\u000a\\u0014uninterpreted_option\\u0018\\u00e7\\u0007 \\u0003(\\u000b2$.google.protobuf.UninterpretedOption*\\u0009\\u0008\\u00e8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\""b\\u000a\\u0010EnumValueOptions\\u0012C\\u000a\\u0014uninterpreted_option\\u0018\\u00e7\\u0007 \\u0003(\\u000b2$.google.protobuf.UninterpretedOption*\\u0009\\u0008\\u00e8\\u0007\\u0010\\u0080\\u0080\\u0080\\u0080\\u0002\""`\\u000a\\u000eServiceOptions\\u0012C\\u000a"", string0);
}",0,
project,0,test2727,"public void test2727() throws Throwable {
    String string0 = CodeGenerator.identifierEscape(""com.google.javascript.jscomp.DiagnosticGroup"");
    assertEquals(""com.google.javascript.jscomp.DiagnosticGroup"", string0);
}",0,
