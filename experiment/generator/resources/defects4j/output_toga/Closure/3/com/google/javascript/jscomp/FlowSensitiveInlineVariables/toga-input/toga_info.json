{
  "test00" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.FlowSensitiveInlineVariables",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables(compiler0);\n    flowSensitiveInlineVariables0.process((Node) null, (Node) null);\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public String getSourceName()",
    "methodName" : "getSourceName",
    "className" : "com.google.javascript.jscomp.FlowSensitiveInlineVariables",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, flowSensitiveInlineVariables0);\n    flowSensitiveInlineVariables0.exitScope(nodeTraversal0);\n    nodeTraversal0.getSourceName();\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "public String getSourceName()",
    "methodName" : "getSourceName",
    "className" : "com.google.javascript.jscomp.FlowSensitiveInlineVariables",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, flowSensitiveInlineVariables0);\n    flowSensitiveInlineVariables0.visit(nodeTraversal0, (Node) null, (Node) null);\n    nodeTraversal0.getSourceName();\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "public String getSourceName()",
    "methodName" : "getSourceName",
    "className" : "com.google.javascript.jscomp.FlowSensitiveInlineVariables",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FlowSensitiveInlineVariables flowSensitiveInlineVariables0 = new FlowSensitiveInlineVariables(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, flowSensitiveInlineVariables0);\n    flowSensitiveInlineVariables0.enterScope(nodeTraversal0);\n    nodeTraversal0.getSourceName();\n}",
    "testName" : "test33"
  }
}