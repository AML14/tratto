project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test00,"public void test00() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSCompiler_emptyFn() {  return function() {}}"");
    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);
    functionRewriter0.process(node0, node0);
    assertEquals(4, Node.ENUM_PROP);
}",0,
project,0,test11,"public void test11() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSCompiler_identityF() {  return function(JSCompiler_identityFn_value) {return JSCompiler_identityFn_value}}"");
    compiler0.parseSyntheticCode(""X|w!wX<\t~G&LpgmSZs"");
    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);
    functionRewriter0.process(node0, node0);
    assertEquals(1, Node.LEFT);
}",0,
project,0,test22,"public void test22() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""function JSCompiler_set(JSCompiler_set_name) {  return function(JSCompiler_set_value) {this[JSCompiler_set_name] = JSCompiler_set_value}}"", ""function JSCompiler_set(JSCompiler_set_name) {  return function(JSCompiler_set_value) {this[JSCompiler_set_name] = JSCompiler_set_value}}"");
    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);
    functionRewriter0.process(node0, node0);
    assertEquals(16, Node.FLAG_LOCAL_RESULTS);
}",0,
project,0,test33,"public void test33() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""function JSCompiler_get(JSCompiler_get_name) {  return function() {return this[JSCompiler_get_name]}}"", ""function JSCompiler_get(JSCompiler_get_name) {  return function() {return this[JSCompiler_get_name]}}"");
    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);
    functionRewriter0.process(node0, node0);
    assertEquals(2, Node.POST_FLAG);
}",0,
project,0,test44,"public void test44() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""function JSCompiler_identityF() {  return function(JSAompiler_identityFn_value) {return JSCompi.er_identityFn_value}}"", ""function JSCompiler_identityF() {  return function(JSAompiler_identityFn_value) {return JSCompi.er_identityFn_value}}"");
    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);
    functionRewriter0.process(node0, node0);
    assertEquals(4095, Node.MAX_COLUMN_NUMBER);
}",0,
project,0,test55,"public void test55() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""function JSCompiler_identityFn() {  return function(JSComiler_identityFn_value) {return JSCompiler_identityFn_value}}"", ""function JSCompiler_identityFn() {  return function(JSComiler_identityFn_value) {return JSCompiler_identityFn_value}}"");
    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);
    functionRewriter0.process(node0, node0);
    assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
}",0,
