{
  "test00" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.FunctionRewriter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"function JSCompiler_emptyFn() {  return function() {}}\");\n    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);\n    functionRewriter0.process(node0, node0);\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.FunctionRewriter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"function JSCompiler_identityF() {  return function(JSCompiler_identityFn_value) {return JSCompiler_identityFn_value}}\");\n    compiler0.parseSyntheticCode(\"X|w!wX<\\t~G&LpgmSZs\");\n    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);\n    functionRewriter0.process(node0, node0);\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.FunctionRewriter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"function JSCompiler_set(JSCompiler_set_name) {  return function(JSCompiler_set_value) {this[JSCompiler_set_name] = JSCompiler_set_value}}\", \"function JSCompiler_set(JSCompiler_set_name) {  return function(JSCompiler_set_value) {this[JSCompiler_set_name] = JSCompiler_set_value}}\");\n    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);\n    functionRewriter0.process(node0, node0);\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.FunctionRewriter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"function JSCompiler_get(JSCompiler_get_name) {  return function() {return this[JSCompiler_get_name]}}\", \"function JSCompiler_get(JSCompiler_get_name) {  return function() {return this[JSCompiler_get_name]}}\");\n    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);\n    functionRewriter0.process(node0, node0);\n}",
    "testName" : "test33"
  },
  "test44" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.FunctionRewriter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"function JSCompiler_identityF() {  return function(JSAompiler_identityFn_value) {return JSCompi.er_identityFn_value}}\", \"function JSCompiler_identityF() {  return function(JSAompiler_identityFn_value) {return JSCompi.er_identityFn_value}}\");\n    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);\n    functionRewriter0.process(node0, node0);\n}",
    "testName" : "test44"
  },
  "test55" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.FunctionRewriter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test55() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"function JSCompiler_identityFn() {  return function(JSComiler_identityFn_value) {return JSCompiler_identityFn_value}}\", \"function JSCompiler_identityFn() {  return function(JSComiler_identityFn_value) {return JSCompiler_identityFn_value}}\");\n    FunctionRewriter functionRewriter0 = new FunctionRewriter(compiler0);\n    functionRewriter0.process(node0, node0);\n}",
    "testName" : "test55"
  }
}