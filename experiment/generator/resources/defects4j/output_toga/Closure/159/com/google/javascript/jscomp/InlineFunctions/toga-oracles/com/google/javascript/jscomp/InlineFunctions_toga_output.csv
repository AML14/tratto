project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Compiler compiler0 = new Compiler();
    Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();
    InlineFunctions inlineFunctions0 = new InlineFunctions(compiler0, supplier0, false, false, false);
    inlineFunctions0.enableSpecialization((SpecializeModule.SpecializationState) null);
}",0,
project,0,test022,"public void test022() throws Throwable {
    InlineFunctions inlineFunctions0 = null;
    try {
        inlineFunctions0 = new InlineFunctions((AbstractCompiler) null, (Supplier<String>) null, false, false, false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    Compiler compiler0 = new Compiler();
    InlineFunctions inlineFunctions0 = null;
    try {
        inlineFunctions0 = new InlineFunctions(compiler0, (Supplier<String>) null, false, false, false);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    Compiler compiler0 = new Compiler();
    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED_OBFUSCATED;
    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);
    Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();
    InlineFunctions inlineFunctions0 = new InlineFunctions(compiler0, supplier0, false, false, false);
    Node node0 = Node.newString(""M"");
    inlineFunctions0.process(node0, node0);
    assertEquals(22, Node.TARGETBLOCK_PROP);
}",0,
project,0,test055,"public void test055() throws Throwable {
    Compiler compiler0 = new Compiler();
    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED_OBFUSCATED;
    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);
    Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();
    InlineFunctions inlineFunctions0 = new InlineFunctions(compiler0, supplier0, true, true, true);
    Node node0 = compiler0.parseTestCode(""aB()"");
    // Undeclared exception!
    try {
        inlineFunctions0.process(node0, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // null
        //   Node(SCRIPT):  [testcode] :1:0
        // [source unknown]
        //   Parent: NULL
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    Node node0 = Node.newNumber(Double.NEGATIVE_INFINITY);
    // Undeclared exception!
    try {
        InlineFunctions.isCandidateUsage(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    Node node0 = new Node(38, 38, 38);
    Node node1 = new Node(118, node0, node0, node0);
    boolean boolean0 = InlineFunctions.isCandidateUsage(node0);
    assertTrue(boolean0);
}",0,
project,0,test088,"public void test088() throws Throwable {
    Node node0 = new Node(38);
    Node node1 = new Node(2, node0, node0, node0);
    boolean boolean0 = InlineFunctions.isCandidateUsage(node0);
    assertFalse(boolean0);
}",0,
project,0,test099,"public void test099() throws Throwable {
    Node node0 = new Node(38);
    Node node1 = new Node(105, node0, node0, node0);
    boolean boolean0 = InlineFunctions.isCandidateUsage(node0);
    assertTrue(boolean0);
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    Node node0 = new Node(38, 38, 38);
    Node node1 = new Node(37, node0, node0, node0);
    boolean boolean0 = InlineFunctions.isCandidateUsage(node0);
    assertTrue(boolean0);
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    Compiler compiler0 = new Compiler();
    Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();
    InlineFunctions inlineFunctions0 = new InlineFunctions(compiler0, supplier0, false, false, false);
    inlineFunctions0.trimCanidatesUsingOnCost();
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    Compiler compiler0 = new Compiler();
    Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();
    InlineFunctions inlineFunctions0 = new InlineFunctions(compiler0, supplier0, false, false, false);
    inlineFunctions0.removeInlinedFunctions();
}",0,
