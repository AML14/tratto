{
  "test1212" : {
    "methodSignature" : "void removeInlinedFunctions()",
    "methodName" : "removeInlinedFunctions",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();\n    InlineFunctions inlineFunctions0 = new InlineFunctions(compiler0, supplier0, false, false, false);\n    inlineFunctions0.removeInlinedFunctions();\n}",
    "testName" : "test1212"
  },
  "test1010" : {
    "methodSignature" : "static boolean isCandidateUsage(Node name)",
    "methodName" : "isCandidateUsage",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Node node0 = new Node(38, 38, 38);\n    Node node1 = new Node(37, node0, node0, node0);\n    boolean boolean0 = InlineFunctions.isCandidateUsage(node0);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "void trimCanidatesUsingOnCost()",
    "methodName" : "trimCanidatesUsingOnCost",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();\n    InlineFunctions inlineFunctions0 = new InlineFunctions(compiler0, supplier0, false, false, false);\n    inlineFunctions0.trimCanidatesUsingOnCost();\n}",
    "testName" : "test1111"
  },
  "test000" : {
    "methodSignature" : "public void enableSpecialization(SpecializeModule.SpecializationState specializationState)",
    "methodName" : "enableSpecialization",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();\n    InlineFunctions inlineFunctions0 = new InlineFunctions(compiler0, supplier0, false, false, false);\n    inlineFunctions0.enableSpecialization((SpecializeModule.SpecializationState) null);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "InlineFunctions(AbstractCompiler compiler, Supplier<String> safeNameIdSupplier, boolean inlineGlobalFunctions, boolean inlineLocalFunctions, boolean blockFunctionInliningEnabled)",
    "methodName" : "InlineFunctions",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    InlineFunctions inlineFunctions0 = null;\n    inlineFunctions0 = new InlineFunctions((AbstractCompiler) null, (Supplier<String>) null, false, false, false);\n}",
    "testName" : "test022"
  },
  "test033" : {
    "methodSignature" : "InlineFunctions(AbstractCompiler compiler, Supplier<String> safeNameIdSupplier, boolean inlineGlobalFunctions, boolean inlineLocalFunctions, boolean blockFunctionInliningEnabled)",
    "methodName" : "InlineFunctions",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    InlineFunctions inlineFunctions0 = null;\n    inlineFunctions0 = new InlineFunctions(compiler0, (Supplier<String>) null, false, false, false);\n}",
    "testName" : "test033"
  },
  "test044" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED_OBFUSCATED;\n    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);\n    Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();\n    InlineFunctions inlineFunctions0 = new InlineFunctions(compiler0, supplier0, false, false, false);\n    Node node0 = Node.newString(\"M\");\n    inlineFunctions0.process(node0, node0);\n}",
    "testName" : "test044"
  },
  "test055" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED_OBFUSCATED;\n    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);\n    Supplier<String> supplier0 = compiler0.getUniqueNameIdSupplier();\n    InlineFunctions inlineFunctions0 = new InlineFunctions(compiler0, supplier0, true, true, true);\n    Node node0 = compiler0.parseTestCode(\"aB()\");\n    inlineFunctions0.process(node0, node0);\n}",
    "testName" : "test055"
  },
  "test066" : {
    "methodSignature" : "static boolean isCandidateUsage(Node name)",
    "methodName" : "isCandidateUsage",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Node node0 = Node.newNumber(Double.NEGATIVE_INFINITY);\n    InlineFunctions.isCandidateUsage(node0);\n}",
    "testName" : "test066"
  },
  "test077" : {
    "methodSignature" : "static boolean isCandidateUsage(Node name)",
    "methodName" : "isCandidateUsage",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Node node0 = new Node(38, 38, 38);\n    Node node1 = new Node(118, node0, node0, node0);\n    boolean boolean0 = InlineFunctions.isCandidateUsage(node0);\n}",
    "testName" : "test077"
  },
  "test088" : {
    "methodSignature" : "static boolean isCandidateUsage(Node name)",
    "methodName" : "isCandidateUsage",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Node node0 = new Node(38);\n    Node node1 = new Node(2, node0, node0, node0);\n    boolean boolean0 = InlineFunctions.isCandidateUsage(node0);\n}",
    "testName" : "test088"
  },
  "test099" : {
    "methodSignature" : "static boolean isCandidateUsage(Node name)",
    "methodName" : "isCandidateUsage",
    "className" : "com.google.javascript.jscomp.InlineFunctions",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Node node0 = new Node(38);\n    Node node1 = new Node(105, node0, node0, node0);\n    boolean boolean0 = InlineFunctions.isCandidateUsage(node0);\n}",
    "testName" : "test099"
  }
}