[ {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node0.getType())",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isSyntheticBlock()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.isSyntheticBlock())",
  "exception" : "",
  "testName" : "test0001"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node parseInputs()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0002"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String toSource(final JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0013"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String[] toSourceArray()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0024"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String toSource()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0035"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0046"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test0047"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String[] toSourceArray(final JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0058"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void init(JSSourceFile[] externs, JSModule[] modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0069"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void resetUniqueNameId()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00710"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "CssRenamingMap getCssRenamingMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00912"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean hasRegExpGlobalReferences()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test01013"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void setState(IntermediateState state)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01114"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void disableThreads()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01215"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01316"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void rebuildInputsFromModules()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01417"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean precheck()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test01518"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "ControlFlowGraph<Node> computeCFG()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01619"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "VariableMap getPropertyMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01720"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node parseSyntheticCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01821"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void processDefines()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01922"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallableWithLargeStack(final Callable<T> callable)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(renameVars0)",
  "exception" : "",
  "testName" : "test02023"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public LanguageMode languageMode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02124"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void setCssRenamingMap(CssRenamingMap map)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02225"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02326"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "VariableMap getVariableMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(variableMap0)",
  "exception" : "",
  "testName" : "test02427"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "FunctionInformationMap getFunctionalInformationMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02528"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void parse()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02629"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Supplier<String> getUniqueNameIdSupplier()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(supplier0)",
  "exception" : "",
  "testName" : "test02730"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "SymbolTable buildKnownSymbolTable()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02831"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void recordFunctionInformation()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02932"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "List<CompilerInput> getExternsInOrder()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03033"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "String toSource(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(string0)",
  "exception" : "",
  "testName" : "test03134"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03135"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "JSModuleGraph getModuleGraph()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03236"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public SourceMap getSourceMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03337"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03438"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Node getRoot()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03539"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "List<CompilerInput> getInputsForTesting()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03640"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(JSSourceFile extern, JSModule[] modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03741"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void removeChangeHandler(CodeChangeHandler handler)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03842"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void setHasRegExpGlobalReferences(boolean references)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03943"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public JSError[] getMessages()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04044"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "List<CompilerInput> getExternsForTesting()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(list0)",
  "exception" : "",
  "testName" : "test04145"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void removeTryCatchFinally()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04246"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Scope getTopScope()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(scope0)",
  "exception" : "",
  "testName" : "test04347"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "ReferenceMap getGlobalVarReferences()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04448"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node parseInputs()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05054"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test05055"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public ErrorManager getErrorManager()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05156"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test05157"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test05258"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05259"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test05360"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.hasErrors())",
  "exception" : "",
  "testName" : "test05461"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compileModules(List<JSSourceFile> externs, List<JSModule> modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05462"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test05563"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compileModules(List<JSSourceFile> externs, List<JSModule> modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05564"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isExtern()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05665"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test05766"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05767"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05868"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compileModules(List<JSSourceFile> externs, List<JSModule> modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05969"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06070"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06171"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06272"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06373"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06474"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void setPassConfig(PassConfig passes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06575"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void setPassConfig(PassConfig passes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06676"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isExtern()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(jSSourceFile0.isExtern())",
  "exception" : "",
  "testName" : "test06777"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test06778"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void stripCode(Set<String> stripTypes, Set<String> stripNameSuffixes, Set<String> stripTypePrefixes, Set<String> stripNamePrefixes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06879"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void optimize()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06980"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void endPass()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07081"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void stripCode(Set<String> stripTypes, Set<String> stripNameSuffixes, Set<String> stripTypePrefixes, Set<String> stripNamePrefixes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07182"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean areNodesEqualForInlining(Node n1, Node n2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07283"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "protected void removeExternInput(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07384"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test07485"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public CompilerInput newExternInput(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07586"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public CompilerInput newExternInput(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07687"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void addIncrementalSourceAst(JsAst ast)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07788"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test07889"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node0.getChildCount())",
  "exception" : "",
  "testName" : "test07990"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean replaceIncrementalSourceAst(JsAst ast)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07991"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public ErrorManager getErrorManager()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08092"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08093"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test08194"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public ReverseAbstractInterpreter getReverseAbstractInterpreter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(reverseAbstractInterpreter0)",
  "exception" : "",
  "testName" : "test08195"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test08296"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "TypeValidator getTypeValidator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08297"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test08398"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean isInliningForbidden()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test088103"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test088104"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test089105"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean acceptEcmaScript5()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test089106"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, jSError0.getCharno())",
  "exception" : "",
  "testName" : "test090107"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void throwInternalError(String message, Exception cause)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test091108"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test092109"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Region getSourceRegion(String sourceName, int lineNumber)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test093110"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test094111"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Region getSourceRegion(String sourceName, int lineNumber)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(region0)",
  "exception" : "",
  "testName" : "test095112"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test095113"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node getNodeForCodeInsertion(JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test096114"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String getSourceFileName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(node0.getSourceFileName())",
  "exception" : "",
  "testName" : "test097115"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test097116"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getSourcePosition()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test097117"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node getNodeForCodeInsertion(JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test098118"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node getNodeForCodeInsertion(JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099119"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String getAstDotGraph() throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test100120"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test101121"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String getAstDotGraph() throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test101122"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test102123"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test103124"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104125"
} ]