focal_method,test_prefix,docstring
"static boolean isNegativeZero(double x) {
    return x == 0.0 && Math.copySign(1, x) == -1.0;
}","public void test00() throws Throwable {
    boolean boolean0 = CodeConsumer.isNegativeZero((-1.0));
    assertFalse(boolean0);
}",""
"static boolean isNegativeZero(double x) {
    return x == 0.0 && Math.copySign(1, x) == -1.0;
}","public void test11() throws Throwable {
    boolean boolean0 = CodeConsumer.isNegativeZero(0.0);
    assertFalse(boolean0);
}",""
"static boolean isWordChar(char ch) {
    return (ch == '_' || ch == '$' || Character.isLetterOrDigit(ch));
}","public void test22() throws Throwable {
    boolean boolean0 = CodeConsumer.isWordChar('_');
    assertTrue(boolean0);
}",""
"static boolean isWordChar(char ch) {
    return (ch == '_' || ch == '$' || Character.isLetterOrDigit(ch));
}","public void test33() throws Throwable {
    boolean boolean0 = CodeConsumer.isWordChar('I');
    assertTrue(boolean0);
}",""
"static boolean isWordChar(char ch) {
    return (ch == '_' || ch == '$' || Character.isLetterOrDigit(ch));
}","public void test44() throws Throwable {
    boolean boolean0 = CodeConsumer.isWordChar('$');
    assertTrue(boolean0);
}",""
"static boolean isWordChar(char ch) {
    return (ch == '_' || ch == '$' || Character.isLetterOrDigit(ch));
}","public void test55() throws Throwable {
    boolean boolean0 = CodeConsumer.isWordChar('*');
    assertFalse(boolean0);
}",""
