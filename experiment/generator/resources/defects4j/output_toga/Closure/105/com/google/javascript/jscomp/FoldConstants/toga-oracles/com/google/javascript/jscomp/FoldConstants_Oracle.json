[ {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0001"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void process(Node externs, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0012"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "boolean hasBreakOrContinue(Node n)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0023"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0034"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0045"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void traverse(Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0056"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0067"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.hasOneChild())",
  "exception" : "",
  "testName" : "test0078"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0089"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00910"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01011"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01112"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01213"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getLineno())",
  "exception" : "",
  "testName" : "test01314"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getCharno())",
  "exception" : "",
  "testName" : "test01315"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01416"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01517"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01618"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01719"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01820"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01921"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02022"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02123"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02224"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02325"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02426"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean isOptionalArg()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node2.isOptionalArg())",
  "exception" : "",
  "testName" : "test02527"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean isUnscopedQualifiedName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node2.isUnscopedQualifiedName())",
  "exception" : "",
  "testName" : "test02628"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02729"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02830"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02931"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03032"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03133"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03234"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03335"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03436"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03638"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03639"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.hasOneChild())",
  "exception" : "",
  "testName" : "test03740"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node0.getChildCount())",
  "exception" : "",
  "testName" : "test03741"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03842"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03943"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04044"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04145"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "boolean tryFoldHookIf(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04246"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04347"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryMinimizeIf(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04448"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryMinimizeIf(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04549"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04650"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04751"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test04852"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04953"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05054"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05155"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05256"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05357"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05458"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05559"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldLeftChildAdd(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05660"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.hasOneChild())",
  "exception" : "",
  "testName" : "test05761"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05862"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test05963"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06064"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldArithmetic(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06165"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldArithmetic(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06266"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldArithmetic(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06367"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldArithmetic(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06468"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06569"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldBitAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06670"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean isUnscopedQualifiedName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.isUnscopedQualifiedName())",
  "exception" : "",
  "testName" : "test06771"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldBitAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06872"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.hasErrors())",
  "exception" : "",
  "testName" : "test06973"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test06974"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean isSyntheticBlock()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isSyntheticBlock())",
  "exception" : "",
  "testName" : "test07075"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07176"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test07177"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07278"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07279"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07380"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07481"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test07482"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.hasErrors())",
  "exception" : "",
  "testName" : "test07583"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test07584"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldShift(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07685"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node1.hasChildren())",
  "exception" : "",
  "testName" : "test07786"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean isNoSideEffectsCall()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isNoSideEffectsCall())",
  "exception" : "",
  "testName" : "test07887"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07988"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08089"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08190"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean isUnscopedQualifiedName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node1.isUnscopedQualifiedName())",
  "exception" : "",
  "testName" : "test08291"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08392"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08493"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08594"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08695"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08796"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08897"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08998"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09099"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean isSyntheticBlock()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test091100"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test092101"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test093102"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test094103"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public boolean isNoSideEffectsCall()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isNoSideEffectsCall())",
  "exception" : "",
  "testName" : "test095104"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldStringIndexOf(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test096105"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldStringJoin(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test097106"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldGetElem(NodeTraversal t, Node n, Node left, Node right, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test098107"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node0.getCharno())",
  "exception" : "",
  "testName" : "test099108"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test100109"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test101110"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test102111"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test103112"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104113"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test105114"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test106115"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "static boolean containsUnicodeEscape(String s)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test107116"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldWhile(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test108117"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test109118"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldFor(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test110119"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldDo(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test111120"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryFoldDo(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test112121"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryMinimizeCondition(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test113122"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node1.getCharno())",
  "exception" : "",
  "testName" : "test114123"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node1.getLineno())",
  "exception" : "",
  "testName" : "test114124"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryMinimizeIf(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test115125"
}, {
  "className" : "com.google.javascript.jscomp.FoldConstants",
  "methodSignature" : "void tryMinimizeIf(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test116126"
} ]