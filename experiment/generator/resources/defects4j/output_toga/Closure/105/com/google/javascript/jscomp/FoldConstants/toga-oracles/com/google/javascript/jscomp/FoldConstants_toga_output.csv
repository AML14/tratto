project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""~1^]xH:vR?zrGN"");
    Node node1 = new Node(29);
    node1.addChildToFront(node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node1, node0);
    assertEquals(1, compiler0.getErrorCount());
}",0,
project,0,test0001,"public void test0001() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""~1^]xH:vR?zrGN"");
    Node node1 = new Node(29);
    node1.addChildToFront(node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node1, node0);
    assertTrue(compiler0.hasErrors());
}",1,
project,0,test0012,"public void test0012() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.process((Node) null, (Node) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // null
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test0023,"public void test0023() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.hasBreakOrContinue((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil$MatchNodeType"", e);
    }
}",0,
project,0,test0034,"public void test0034() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = new Node(661);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node1 = new Node(32, node0, node0, node0, 967, 115);
    foldConstants0.visit(nodeTraversal0, node1, node0);
    assertEquals(36, Node.OPT_ARG_NAME);
}",0,
project,0,test0045,"public void test0045() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((double) 661, 661, 661);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node1 = new Node(32, node0, node0, node0, 24, 1);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node1, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test0056,"public void test0056() throws Throwable {
    FoldConstants foldConstants0 = new FoldConstants((AbstractCompiler) null);
    Node node0 = Node.newString(""rfo^0AJV+Bf0iZ5MVW"", 2389, 2389);
    Node node1 = Node.newString(32, ""rfo^0AJV+Bf0iZ5MVW"");
    node1.addChildrenToBack(node0);
    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, foldConstants0);
    // Undeclared exception!
    try {
        nodeTraversal0.traverse(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeTraversal"", e);
    }
}",1,
project,0,test0067,"public void test0067() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((double) 100, 100, 100);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node1 = new Node(26, node0, node0, node0);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node1, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test0078,"public void test0078() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = new Node(89, 89, 89);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node1 = new Node(27, node0, node0, node0, 33, 43);
    foldConstants0.visit(nodeTraversal0, node1, node0);
    assertFalse(node0.hasOneChild());
}",0,assertFalse(node0.hasOneChild())
project,0,test0089,"public void test0089() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((double) 89, 89, 89);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node1 = new Node(27, node0, node0, node0, 33, 43);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node1, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test00910,"public void test00910() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((double) 952, 952, 952);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node1 = new Node(30, node0, node0, node0, 3, 16);
    foldConstants0.visit(nodeTraversal0, node1, node1);
    assertEquals(4095, Node.COLUMN_MASK);
}",0,
project,0,test01011,"public void test01011() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""JSC_INDEX_OUT_OF_BOUNDS_ERROR"", ""JSC_INDEX_OUT_OF_BOUNDS_ERROR"");
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) foldConstants0);
    assertEquals(1, Node.LEFT);
}",0,
project,0,test01112,"public void test01112() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""JSCcINDEX_OUT_OFBO!NDS_ERR["", ""Array index out of ounds: {0}"");
    Node node1 = compiler0.parseSyntheticCode(""J$R_"", ""J$R_"");
    Node node2 = new Node(98, node0, node1, node1, 1, 29);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertEquals(2, Node.BREAK_PROP);
}",0,
project,0,test01213,"public void test01213() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""L5h?}~]/eN*3P}UO"");
    Node node1 = Node.newNumber((double) 46, 1, 9);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node2 = new Node(114, node0, node1, node1);
    // Undeclared exception!
    try {
        foldConstants0.visit((NodeTraversal) null, node2, node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.FoldConstants"", e);
    }
}",0,
project,0,test01314,"public void test01314() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nL3wO ok,;%KU?tj"");
    Node node1 = Node.newNumber((double) 33, 78, 27);
    Node node2 = new Node(113, node1, node1, node0, 31, 43);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node2);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertEquals(31, node2.getLineno());
}",0,"assertEquals(0, node2.getLineno())"
project,0,test01315,"public void test01315() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nL3wO ok,;%KU?tj"");
    Node node1 = Node.newNumber((double) 33, 78, 27);
    Node node2 = new Node(113, node1, node1, node0, 31, 43);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node2);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertEquals(43, node2.getCharno());
}",0,"assertEquals(0, node2.getCharno())"
project,0,test01416,"public void test01416() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    Node node1 = Node.newString(""y"", 30, 9);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    Node node2 = compiler0.parseSyntheticCode(""y"", ""y"");
    Node node3 = new Node(115, node2, node1, node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit(nodeTraversal0, node3, node1);
    assertEquals(11, Node.USES_PROP);
}",0,
project,0,test01517,"public void test01517() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""OBJECT_NUMBER_STRING_BOOLEAN"", ""OBJECT_NUMBER_STRING_BOOLEAN"");
    Node node1 = compiler0.parseSyntheticCode(""wgoo7.pro2ide"", ""OBJECT_NUMBER_STRING_BOOLEAN"");
    Node node2 = new Node(101, node0, node1, node1, 9, 29);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node1);
    assertEquals(1, Node.LEFT);
}",0,
project,0,test01618,"public void test01618() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""Object"", ""Object"");
    Node node1 = compiler0.parseSyntheticCode(""wgoo7.pro2ide"", ""Object"");
    Node node2 = new Node(100, node0, node1, node1, 9, 29);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node2);
    assertEquals(16, Node.SOURCENAME_PROP);
}",0,
project,0,test01719,"public void test01719() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nL3wO ok,%KU?tj"");
    Node node1 = Node.newNumber(1631.3981567077049, 124, 4);
    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);
    Node node2 = new Node(9, node1, node0, node0, 1, 43);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertFalse(node2.hasOneChild());
}",0,
project,0,test01820,"public void test01820() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    Node node1 = Node.newString("""", 7, 29);
    Node node2 = new Node(11, node0, node1);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertEquals(1, Node.LEFT);
}",0,
project,0,test01921,"public void test01921() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    Node node1 = compiler0.parseSyntheticCode(""=Z"", ""Y&g_I3OY"");
    Node node2 = new Node(19, node0, node0, node1, 45, 23);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit(nodeTraversal0, node2, node2);
    assertEquals((-2), Node.OBJECT_IDS_PROP);
}",0,
project,0,test02022,"public void test02022() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(63, 63, 63);
    Node node1 = Node.newString(""com.google.protobuf.DescriptorProtos$FieldOptions"");
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node2 = new Node(20, node0, node0, node1);
    foldConstants0.visit((NodeTraversal) null, node2, (Node) null);
    assertEquals(34, Node.PARENTHESIZED_PROP);
}",0,
project,0,test02123,"public void test02123() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nL3wO ok,;%KU?tj"");
    Node node1 = Node.newNumber((double) 33, 50, 27);
    Node node2 = new Node(33, node1, node1, node0, 31, 43);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node2);
    assertEquals(29, Node.VAR_ARGS_NAME);
}",0,
project,0,test02224,"public void test02224() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""ad LHS for assignent: "", ""ad LHS for assignent: "");
    Node node1 = Node.newString(""ad LHS for assignent: "", 38, 13);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node2 = new Node(37, node1, node1, node0, 11, (-3));
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, (Node) null);
    assertEquals(6, Node.TEMP_PROP);
}",0,
project,0,test02325,"public void test02325() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""JSC_INVALID_GETELEM_INDEX_ERROR"");
    Node node1 = Node.newNumber((double) 16, (-2), 15);
    Node node2 = new Node(86, node0, node0, node1, 47, 2);
    CompilerOptions compilerOptions0 = compiler0.createDefaultOptions();
    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertEquals(1, Node.SPECIALCALL_EVAL);
}",0,
project,0,test02426,"public void test02426() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""%{6p[j0 EB|;//V6`U"", ""%{6p[j0 EB|;//V6`U"");
    Node node1 = compiler0.parseSyntheticCode(""@_}R^g{|y*S#0"", ""@_}R^g{|y*S#0"");
    Node node2 = new Node(14, node1, node0, node1, node0, 47, 8);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node1);
    assertEquals(16, Node.SOURCENAME_PROP);
}",0,
project,0,test02527,"public void test02527() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newString(""nXvAuOQrc\""CY\""1#(nX*"");
    Node node1 = new Node(34, 11, 29);
    Node node2 = new Node(88, node0, node1, node1, 8, 0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertFalse(node2.isOptionalArg());
}",0,assertFalse(node2.isOptionalArg())
project,0,test02628,"public void test02628() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = new Node(919);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(""aliasExternals"", ""aliasExternals"");
    Node node1 = compiler0.parse(jSSourceFile0);
    Node node2 = new Node(21, node0, node0, node1, 32, 8367);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertFalse(node2.isUnscopedQualifiedName());
}",0,assertFalse(node2.isUnscopedQualifiedName())
project,0,test02729,"public void test02729() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""$0"", ""*@U{7EAQl0\""mjQ"");
    Node node1 = new Node((-1431), 0, 9);
    Node node2 = new Node(16, node0, node1, node1, 2, 21);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit((NodeTraversal) null, node2, node0);
    assertEquals(18, Node.SPECIAL_PROP_PROP);
}",0,
project,0,test02830,"public void test02830() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(63, 63, 63);
    Node node1 = Node.newString(""com.google.protobuf.DescriptorProtos$FieldOptions"");
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node2 = new Node(21, node1, node0, node0, 2, 0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node2);
    assertEquals(7, Node.LOCAL_PROP);
}",0,
project,0,test02931,"public void test02931() throws Throwable {
    Compiler compiler0 = new Compiler();
    FindExportableNodes findExportableNodes0 = new FindExportableNodes(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, findExportableNodes0, (ScopeCreator) null);
    Node node0 = Node.newNumber((double) 43, 46, 6);
    Node node1 = Node.newNumber((double) 4);
    Node node2 = new Node(22, node0, node0, node1, 4095, 4095);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node2, node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test03032,"public void test03032() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(63, 63, 63);
    Node node1 = Node.newString(""G|hF3j)QgrO"");
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node2 = new Node(23, node0, node1);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertEquals(35, Node.QUOTED_PROP);
}",0,
project,0,test03133,"public void test03133() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""YP<lKyt1]Px="");
    Node node1 = Node.newNumber((-1122.0114), 31, (-2145755970));
    Node node2 = new Node(14, node1, node0, node0, 32, (-1830));
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node1);
    assertEquals(0, Node.BOTH);
}",0,
project,0,test03234,"public void test03234() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nLn3wOok,;%KU?tj"");
    Node node1 = Node.newNumber((double) 13, 43, 4);
    Node node2 = new Node(16, node0, node1);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node1);
    assertEquals(30, Node.SKIP_INDEXES_PROP);
}",0,
project,0,test03335,"public void test03335() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""JSC_INVALID_GETELEM_INDEX_ERROR"");
    Node node1 = Node.newNumber((double) 16, (-2), 15);
    Node node2 = new Node(12, node0, node0, node1, 47, 2);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertEquals(21, Node.LOCALCOUNT_PROP);
}",0,
project,0,test03436,"public void test03436() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nL3wO ok,;%KU?tj"");
    Node node1 = Node.newNumber((double) 13, 43, 4);
    Node node2 = new Node(13, node1, node1, node0, 958, 114);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertEquals(20, Node.FINALLY_PROP);
}",0,
project,0,test03638,"public void test03638() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""B1],N"", ""B1],N"");
    Node node1 = new Node(31, node0, node0, node0, 21, 9);
    node0.addChildrenToFront(node1);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node0, node1);
    assertTrue(node0.hasChildren());
}",0,
project,0,test03639,"public void test03639() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""B1],N"", ""B1],N"");
    Node node1 = new Node(31, node0, node0, node0, 21, 9);
    node0.addChildrenToFront(node1);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node0, node1);
    assertTrue(node0.hasOneChild());
}",0,
project,0,test03740,"public void test03740() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node0 = compiler0.parseTestCode(""JSC_SHIFT_AMOUNT_OUT_OF_BOUNDS"");
    foldConstants0.tryFoldBlock(nodeTraversal0, node0, node0);
    assertFalse(node0.hasOneChild());
}",0,assertFalse(node0.hasOneChild())
project,0,test03741,"public void test03741() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node0 = compiler0.parseTestCode(""JSC_SHIFT_AMOUNT_OUT_OF_BOUNDS"");
    foldConstants0.tryFoldBlock(nodeTraversal0, node0, node0);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(0, node0.getChildCount())"
project,0,test03842,"public void test03842() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""A~^]a]"", ""+im}H+{=X{5<"");
    foldConstants0.visit((NodeTraversal) null, node0, (Node) null);
    assertEquals(0, Node.BOTH);
}",0,
project,0,test03943,"public void test03943() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""nX%?uOQrc\""CY\""1!(nX*"", ""nX%?uOQrc\""CY\""1!(nX*"");
    Node node1 = new Node(132, node0, node0, node0, (-3584), 0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node0, node0);
    assertEquals(1, Node.LEFT);
}",0,
project,0,test04044,"public void test04044() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    Node node1 = Node.newString(""y"", 30, 9);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    Node node2 = compiler0.parseSyntheticCode(""y"", ""y"");
    Node node3 = new Node(108, node2, node1, node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node3, node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test04145,"public void test04145() throws Throwable {
    Node node0 = Node.newString("""");
    Node node1 = Node.newNumber((double) 16, (-2), 15);
    Node node2 = new Node(108, node0, node0, node1, 47, 44);
    FoldConstants foldConstants0 = new FoldConstants((AbstractCompiler) null);
    Compiler compiler0 = new Compiler();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node2, node1);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: IF 47 of NUMBER 16.0
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test04246,"public void test04246() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode((String) null, ""Unexpected const change.\n  name: "");
    Node node1 = new Node(17, 7, 23);
    Node node2 = new Node(13, node0, node0, node1, (-3), 25);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldHookIf((NodeTraversal) null, node2, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test04347,"public void test04347() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""JSC_INVLID_GETELEM_IDEk_ERROR"");
    Node node1 = Node.newNumber((double) 16, (-2), 15);
    Node node2 = new Node(98, node0, node0, node1, 47, 2);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node2, node2);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test04448,"public void test04448() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    Node node1 = Node.newString(""4"", 30, 23);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    Node node2 = compiler0.parseSyntheticCode(""4"", ""4"");
    Node node3 = new Node(112, node2, node1, node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.tryMinimizeIf(nodeTraversal0, node3, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test04549,"public void test04549() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""Bad LS for assignmen: "", ""Bad LS for assignmen: "");
    Node node1 = Node.newString(""Bad LS for assignmen: "", 38, 13);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node2 = new Node(26, node1, node0, 48, 21);
    foldConstants0.tryMinimizeIf((NodeTraversal) null, node2, node0);
    assertEquals(4, Node.ENUM_PROP);
}",0,
project,0,test04650,"public void test04650() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node0 = new Node(4);
    Node node1 = new Node(38);
    node0.addChildToFront(node1);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node0, node0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // NAME is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test04751,"public void test04751() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node0 = new Node(4);
    node0.addChildToFront(node0);
    foldConstants0.visit(nodeTraversal0, node0, node0);
    assertEquals(45, Node.IS_VAR_ARGS_PARAM);
}",0,
project,0,test04852,"public void test04852() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Sez'1/_>]a"");
    Node node0 = new Node(122, 122, 122);
    SyntheticAst syntheticAst0 = new SyntheticAst(""Sez'1/_>]a"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node1 = syntheticAst0.getAstRoot(compiler0);
    node0.addChildrenToBack(node1);
    Node node2 = new Node(4, node0, node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit((NodeTraversal) null, node2, node1);
    assertFalse(node2.hasMoreThanOneChild());
}",0,assertTrue(node2.hasMoreThanOneChild())
project,0,test04953,"public void test04953() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((-2.147483648E9));
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldAndOr(nodeTraversal0, node0, node0, node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test05054,"public void test05054() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString("""");
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldAndOr(nodeTraversal0, node0, node0, node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test05155,"public void test05155() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""com.google.common.coll2c.Immutablet$ArrayImmutabliSet"", 45, 82);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node1 = new Node(100);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldAndOr((NodeTraversal) null, node1, node0, node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test05256,"public void test05256() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nL3wO ok,;%KU?tj"");
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    File file0 = MockFile.createTempFile(""+8hb[9J(5_f#(~Rb>_J"", ""@Q|RhYK"");
    SourceFile.OnDisk sourceFile_OnDisk0 = new SourceFile.OnDisk(file0);
    JsAst jsAst0 = new JsAst(sourceFile_OnDisk0);
    Node node1 = jsAst0.getAstRoot(compiler0);
    foldConstants0.tryFoldAndOr(nodeTraversal0, node0, node1, node0, node0);
    assertEquals(2, Node.RIGHT);
}",0,
project,0,test05357,"public void test05357() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString("""");
    Node node1 = new Node(108, node0, node0, node0, 47, 44);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, syntacticScopeCreator0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldAndOr(nodeTraversal0, node1, node1, node0, node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test05458,"public void test05458() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nL3wO ok,;%KU?tj"");
    Node node1 = new Node(113, node0, node0, node0, 31, 43);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    File file0 = MockFile.createTempFile(""+8hb[9J(5_f#(~Rb>_J"", ""@Q|RhYK"");
    SourceFile.OnDisk sourceFile_OnDisk0 = new SourceFile.OnDisk(file0);
    JsAst jsAst0 = new JsAst(sourceFile_OnDisk0);
    Node node2 = jsAst0.getAstRoot(compiler0);
    foldConstants0.tryFoldAndOr(nodeTraversal0, node0, node2, node0, node1);
    assertEquals(19, Node.LABEL_PROP);
}",0,
project,0,test05559,"public void test05559() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    Node node1 = Node.newString(""j"", 30, 39);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    Node node2 = compiler0.parseSyntheticCode(""j"", ""j"");
    Node node3 = new Node(115, node2, node1, node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.tryFoldAndOr(nodeTraversal0, node3, node3, node1, node3);
    assertEquals(42, Node.NO_SIDE_EFFECTS_CALL);
}",0,
project,0,test05660,"public void test05660() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);
    Node node0 = Node.newNumber((double) 834, 834, 834);
    foldConstants0.tryFoldLeftChildAdd(nodeTraversal0, node0, node0, node0, node0);
    assertEquals(1, Node.SPECIALCALL_EVAL);
}",0,
project,0,test05761,"public void test05761() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((double) 661, 661, 661);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node1 = new Node(21, node0);
    foldConstants0.tryFoldLeftChildAdd(nodeTraversal0, node0, node1, node0, node1);
    assertTrue(node1.hasOneChild());
}",0,assertTrue(node1.hasOneChild())
project,0,test05862,"public void test05862() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSType[] jSTypeArray0 = new JSType[4];
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();
    jSTypeArray0[3] = (JSType) objectType0;
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    foldConstants0.tryFoldAdd(nodeTraversal0, node0, node0, node0, node0);
    assertEquals((-1), Node.CATCH_SCOPE_PROP);
}",0,
project,0,test05963,"public void test05963() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""gAu_4\"""", ""gAu_4\"""");
    Node node1 = Node.newString(""gAu_4\"""", 38, 13);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldAdd(nodeTraversal0, node0, node0, node1, node0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test06064,"public void test06064() throws Throwable {
    Compiler compiler0 = new Compiler();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    Node node0 = Node.newString(40, ""Y&g_I3OY"", 40, 40);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldAdd(nodeTraversal0, node0, node0, node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test06165,"public void test06165() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);
    Node node0 = Node.newNumber((double) 856, 856, 856);
    Node node1 = new Node(4, node0);
    foldConstants0.tryFoldArithmetic(nodeTraversal0, node1, node0, node1, node1);
    assertEquals(15, Node.CASEARRAY_PROP);
}",0,
project,0,test06266,"public void test06266() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);
    Node node0 = Node.newNumber((double) 856, 856, 856);
    Node node1 = new Node(21, node0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldArithmetic(nodeTraversal0, node1, node0, node0, node1);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // node is not a child
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test06367,"public void test06367() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);
    Node node0 = Node.newNumber((double) 856, 856, 856);
    Node node1 = new Node(24, node0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldArithmetic(nodeTraversal0, node1, node0, node0, node1);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // node is not a child
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test06468,"public void test06468() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((double) 100, 100, 100);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldArithmetic(nodeTraversal0, node0, node0, node0, node0);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown arithmetic operator
        //
        verifyException(""com.google.javascript.jscomp.FoldConstants"", e);
    }
}",0,
project,0,test06569,"public void test06569() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nL3wO ok,%KU?tj"");
    Node node1 = Node.newNumber(1631.3981567077049, 124, 4);
    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);
    Node node2 = Node.newNumber((-458.11));
    Node node3 = new Node(9, node1, node2, node2, 1, 43);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit(nodeTraversal0, node3, node0);
    assertEquals(0, Node.LABEL_ID_PROP);
}",0,
project,0,test06670,"public void test06670() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((-2.1474836492406154E9));
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldBitAndOr(nodeTraversal0, node0, node0, node0, node0);
    assertEquals(9, Node.FIXUPS_PROP);
}",0,
project,0,test06771,"public void test06771() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber(4.294967296E9);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldBitAndOr(nodeTraversal0, node0, node0, node0, node0);
    assertFalse(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test06872,"public void test06872() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((-2.147483648E9));
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldBitAndOr(nodeTraversal0, node0, node0, node0, node0);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown bitwise operator
        //
        verifyException(""com.google.javascript.jscomp.FoldConstants"", e);
    }
}",0,
project,0,test06973,"public void test06973() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) (-3568), (-3568), 70);
    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);
    Node node1 = Node.newNumber((-3392.08727231292));
    Node node2 = new Node(18, node1, node0, node0, 1936, 49);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertTrue(compiler0.hasErrors());
}",0,assertTrue(compiler0.hasErrors())
project,0,test06974,"public void test06974() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) (-3568), (-3568), 70);
    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);
    Node node1 = Node.newNumber((-3392.08727231292));
    Node node2 = new Node(18, node1, node0, node0, 1936, 49);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit(nodeTraversal0, node2, node0);
    assertEquals(1, compiler0.getErrorCount());
}",0,"assertEquals(0, compiler0.getErrorCount())"
project,0,test07075,"public void test07075() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((double) 100, 100, 100);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node1 = new Node(27, node0, node0, node0, 33, 43);
    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node1, node0);
    assertFalse(node0.isSyntheticBlock());
}",0,assertTrue(node0.isSyntheticBlock())
project,0,test07176,"public void test07176() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((-2.147483648937212E9));
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node0, node0);
    assertTrue(compiler0.hasErrors());
}",1,
project,0,test07177,"public void test07177() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((-2.147483648937212E9));
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node0, node0);
    assertEquals(1, compiler0.getErrorCount());
}",0,"assertEquals(0, compiler0.getErrorCount())"
project,0,test07278,"public void test07278() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber(2.147483647738228E9, 1, 31);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    foldConstants0.tryFoldShift(nodeTraversal0, (Node) null, node0, node0, node0);
    assertEquals(1, compiler0.getErrorCount());
}",0,
project,0,test07279,"public void test07279() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber(2.147483647738228E9, 1, 31);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    foldConstants0.tryFoldShift(nodeTraversal0, (Node) null, node0, node0, node0);
    assertTrue(compiler0.hasErrors());
}",1,
project,0,test07380,"public void test07380() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) (-3568), (-3568), 70);
    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);
    Node node1 = Node.newNumber((double) 2, 34, 2022);
    Node node2 = new Node(18, node0, node1, node1, 1936, 49);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node2, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test07481,"public void test07481() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) 661, 661, 661);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node0, node0);
    assertTrue(compiler0.hasErrors());
}",1,
project,0,test07482,"public void test07482() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) 661, 661, 661);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node0, node0);
    assertEquals(1, compiler0.getErrorCount());
}",0,"assertEquals(0, compiler0.getErrorCount())"
project,0,test07583,"public void test07583() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) (-3568), (-3568), 70);
    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);
    Node node1 = Node.newNumber((double) 2, 34, 2022);
    Node node2 = Node.newNumber((-3392.08727231292));
    Node node3 = new Node(18, node2, node1, node1, 1936, 49);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit(nodeTraversal0, node3, node0);
    assertTrue(compiler0.hasErrors());
}",0,assertTrue(compiler0.hasErrors())
project,0,test07584,"public void test07584() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) (-3568), (-3568), 70);
    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);
    Node node1 = Node.newNumber((double) 2, 34, 2022);
    Node node2 = Node.newNumber((-3392.08727231292));
    Node node3 = new Node(18, node2, node1, node1, 1936, 49);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.visit(nodeTraversal0, node3, node0);
    assertEquals(1, compiler0.getErrorCount());
}",0,"assertEquals(0, compiler0.getErrorCount())"
project,0,test07685,"public void test07685() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) 22, 19, (-4658));
    CompilerOptions compilerOptions0 = compiler0.options_;
    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node0, node0);
        fail(""Expecting exception: AssertionError"");
    } catch (AssertionError e) {
        //
        // Unknown shift operator: number
        //
    }
}",0,
project,0,test07786,"public void test07786() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Sez'1M/_>]a"");
    Node node0 = Node.newString(122, ""Sez'1M/_>]a"");
    SyntheticAst syntheticAst0 = new SyntheticAst(""Sez'1M/_>]a"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node1 = syntheticAst0.getAstRoot(compiler0);
    node0.addChildrenToBack(node1);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.tryFoldComparison((NodeTraversal) null, node1, node0, node0, node1);
    assertFalse(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test07887,"public void test07887() throws Throwable {
    Node node0 = Node.newString(122, ""O3Sez'1M/_>]a"");
    Compiler compiler0 = new Compiler();
    node0.addChildrenToBack(node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.tryFoldComparison((NodeTraversal) null, node0, node0, node0, node0);
    assertFalse(node0.isNoSideEffectsCall());
}",0,assertTrue(node0.isNoSideEffectsCall())
project,0,test07988,"public void test07988() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    Node node1 = new Node(38);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node1, node0, node0);
    assertEquals(35, Node.QUOTED_PROP);
}",0,
project,0,test08089,"public void test08089() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(41);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node0, node0, node0);
    assertEquals(22, Node.TARGETBLOCK_PROP);
}",0,
project,0,test08190,"public void test08190() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node0 = Node.newString(42, ""t]NA4'fAl["");
    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node0, node0, node0);
    assertEquals(29, Node.VAR_ARGS_NAME);
}",0,
project,0,test08291,"public void test08291() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(63, 63, 0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node1 = new Node(43, node0, 5, 43);
    foldConstants0.tryFoldComparison((NodeTraversal) null, node0, node1, node1, node1);
    assertFalse(node1.isUnscopedQualifiedName());
}",0,assertFalse(node1.isUnscopedQualifiedName())
project,0,test08392,"public void test08392() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);
    Node node0 = Node.newNumber((double) 141, 141, 141);
    Node node1 = new Node(44, node0, node0, node0, 22, 24);
    foldConstants0.tryFoldComparison(nodeTraversal0, node1, node1, node1, node0);
    assertEquals(12, Node.REGEXP_PROP);
}",0,
project,0,test08493,"public void test08493() throws Throwable {
    Node node0 = Node.newString(122, ""O3Sez'1M/_>]a"");
    Compiler compiler0 = new Compiler();
    node0.addChildrenToBack(node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node1 = Node.newString(34, ""X*D*{:C3g@WJX6f306N"", 1, (-1840));
    foldConstants0.tryFoldComparison((NodeTraversal) null, node0, node0, node1, node0);
    assertEquals(16, Node.SOURCENAME_PROP);
}",0,
project,0,test08594,"public void test08594() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Sez'1M/_>]a"");
    Node node0 = Node.newString(122, ""Sez'1M/_>]a"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node1 = new Node(29, node0, node0, 22, 2);
    node0.addChildrenToBack(node1);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.tryFoldComparison((NodeTraversal) null, node1, node0, node1, node0);
    assertEquals(35, Node.QUOTED_PROP);
}",0,
project,0,test08695,"public void test08695() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""0"");
    Node node1 = new Node(44);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldComparison(nodeTraversal0, node1, node1, node0, node0);
    assertEquals(35, Node.QUOTED_PROP);
}",0,
project,0,test08796,"public void test08796() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newString(""B1]6,N"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node0, node0, node0);
    assertEquals(29, Node.JSDOC_INFO_PROP);
}",0,
project,0,test08897,"public void test08897() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nL3wO ok,;%KU?tj"");
    Node node1 = Node.newNumber((double) 13, 43, 4);
    Node node2 = new Node(13, node1, node1, node0, 958, 114);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryMinimizeCondition(nodeTraversal0, node0, node2);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node2, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test08998,"public void test08998() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""com.google.javascript.jscomp.CrossModuleMethodMotion$IdGenerator"");
    Node node1 = Node.newNumber((-3388.865365999262), 115, (-1780));
    Node node2 = new Node(15, node0, node1, node1, 1109, 44);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    CodingConventionAnnotator codingConventionAnnotator0 = new CodingConventionAnnotator(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, codingConventionAnnotator0, (ScopeCreator) null);
    foldConstants0.tryMinimizeCondition(nodeTraversal0, node0, node2);
    // Undeclared exception!
    try {
        foldConstants0.visit(nodeTraversal0, node2, node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test09099,"public void test09099() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) 661, 661, 661);
    Node node1 = new Node(16);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldComparison(nodeTraversal0, node1, node0, node0, node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test091100,"public void test091100() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) 661, 661, 661);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node0, node0, node0);
    assertFalse(node0.isSyntheticBlock());
}",0,
project,0,test092101,"public void test092101() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newNumber((double) 661, 661, 661);
    Node node1 = new Node(13);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldComparison(nodeTraversal0, node1, node0, node0, node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test093102,"public void test093102() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""com.google.common.collect.ImmutableSet$ArrayImmutableSet"", ""com.google.common.collect.ImmutableSet$ArrayImmutableSet"");
    Node node1 = Node.newNumber((double) 25, 26, 29);
    Node node2 = new Node(15, node0, node1, node1, 38, 44);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    RemoveConstantExpressions.RemoveConstantRValuesCallback removeConstantExpressions_RemoveConstantRValuesCallback0 = new RemoveConstantExpressions.RemoveConstantRValuesCallback();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, removeConstantExpressions_RemoveConstantRValuesCallback0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldComparison(nodeTraversal0, node2, node1, node1, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // node is not a child
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test094103,"public void test094103() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    Node node1 = Node.newString(""Unknown class name"", 4, 11);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    Node node2 = new Node(38);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldComparison(nodeTraversal0, node0, node2, node1, node1);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // NAME is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test095104,"public void test095104() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    Node node0 = Node.newString(14, ""IsExtension"");
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node1 = new Node(33);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    foldConstants0.tryFoldStringIndexOf(nodeTraversal0, node0, node1, node0, node1);
    assertFalse(node1.isNoSideEffectsCall());
}",0,assertTrue(node1.isNoSideEffectsCall())
project,0,test096105,"public void test096105() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    Node node0 = Node.newString(""IsExtension"", 14, 14);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node1 = new Node(33);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldStringIndexOf(nodeTraversal0, node0, node1, node0, node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.FoldConstants"", e);
    }
}",0,
project,0,test097106,"public void test097106() throws Throwable {
    Compiler compiler0 = new Compiler();
    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);
    Node node0 = Node.newString(14, ""IsExtension"");
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node1 = new Node(33);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);
    foldConstants0.tryFoldStringJoin(nodeTraversal0, node1, node1, node0, node1);
    assertEquals(8, Node.CODEOFFSET_PROP);
}",0,
project,0,test098107,"public void test098107() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(63, 63, 0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.tryFoldGetElem((NodeTraversal) null, node0, node0, node0, node0);
    assertEquals(2, Node.ATTRIBUTE_FLAG);
}",0,
project,0,test099108,"public void test099108() throws Throwable {
    Compiler compiler0 = new Compiler();
    DeadAssignmentsElimination deadAssignmentsElimination0 = new DeadAssignmentsElimination(compiler0);
    Node node0 = Node.newString("""", (-2726), 22);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, deadAssignmentsElimination0);
    Node node1 = compiler0.parseSyntheticCode(""cKQ:d';dH@*"", """");
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.tryFoldGetProp(nodeTraversal0, node1, node0, node1, node1);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test100109,"public void test100109() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseTestCode(""PK"");
    foldConstants0.tryFoldRegularExpressionConstructor((NodeTraversal) null, node0, node0);
    assertEquals(19, Node.LABEL_PROP);
}",0,
project,0,test101110,"public void test101110() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nL3wO ok,;%KU?tj"");
    Node node1 = Node.newNumber((double) 33, 78, 27);
    Node node2 = new Node(113, node1, node1, node0, 31, 43);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldRegularExpressionConstructor(nodeTraversal0, node2, node2);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // node is not a child
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test102111,"public void test102111() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newNumber((double) 704, 650, 650);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    Node node1 = compiler0.parseSyntheticCode(""$0"", ""$0"");
    Node node2 = Node.newString(""$0"");
    Node node3 = new Node(2, node0, node2, node1, 0, 20);
    foldConstants0.tryFoldRegularExpressionConstructor(nodeTraversal0, node3, node2);
    assertEquals((-2), Node.OBJECT_IDS_PROP);
}",0,
project,0,test103112,"public void test103112() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSType[] jSTypeArray0 = new JSType[4];
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();
    jSTypeArray0[3] = (JSType) objectType0;
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    foldConstants0.tryFoldRegularExpressionConstructor(nodeTraversal0, node0, node0);
    assertEquals(49, Node.LAST_PROP);
}",0,
project,0,test104113,"public void test104113() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = Node.newString(""nXvAuOQrc\""CY\""1#(nX*"");
    Node node1 = new Node(34, 11, 29);
    Node node2 = new Node(88, node0, node1, node1, 8, 0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryFoldRegularExpressionConstructor(nodeTraversal0, node2, node1);
    assertEquals(4, Node.DESCENDANTS_FLAG);
}",0,
project,0,test105114,"public void test105114() throws Throwable {
    Compiler compiler0 = new Compiler();
    DeadAssignmentsElimination deadAssignmentsElimination0 = new DeadAssignmentsElimination(compiler0);
    Node node0 = Node.newString("""", (-2726), 22);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, deadAssignmentsElimination0);
    Node node1 = compiler0.parseSyntheticCode(""cKQ:d';dH@*"", """");
    Node node2 = new Node(1431655764, node1, node0, node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    foldConstants0.tryFoldRegularExpressionConstructor(nodeTraversal0, node2, node2);
    assertEquals(30, Node.SKIP_INDEXES_PROP);
}",0,
project,0,test106115,"public void test106115() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Sez'1M/_>]a"");
    Node node0 = Node.newString(""Sez'1M/_>]a"", 122, 122);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    String string0 = ""v\\u%*[Ze$Si\\"";
    Node node1 = Node.newString(29, string0, 9, 29);
    Node node2 = new Node(30, node1, node1, node0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldRegularExpressionConstructor((NodeTraversal) null, node2, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test107116,"public void test107116() throws Throwable {
    String string0 = ""\\u"";
    boolean boolean0 = FoldConstants.containsUnicodeEscape(string0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test108117,"public void test108117() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""nX%?OQrc\""CY\""1!(nX*"", ""nX%?OQrc\""CY\""1!(nX*"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldWhile(nodeTraversal0, node0, node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test109118,"public void test109118() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""4L1nLuwO ok,;%KU?tj"");
    Node node1 = compiler0.parseSyntheticCode(""4L1nL3wO ok,;%KU?tj"", ""4L1nLuwO ok,;%KU?tj"");
    Node node2 = new Node(113, node1, node1, node0, 31, 43);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.visit(nodeTraversal0, node2, node2);
    assertEquals(8, Node.CODEOFFSET_PROP);
}",0,
project,0,test110119,"public void test110119() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""OBJECT_NUMBER_STRING_BOOLEAN"", ""OBJECT_NUMBER_STRING_BOOLEAN"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldFor(nodeTraversal0, node0, node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test111120,"public void test111120() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(63, 63, 63);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldDo((NodeTraversal) null, node0, (Node) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test112121,"public void test112121() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    MethodCheck methodCheck0 = new MethodCheck((AbstractCompiler) null, checkLevel0);
    NodeTraversal.Callback nodeTraversal_Callback0 = methodCheck0.getActingCallback();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, nodeTraversal_Callback0);
    Node node1 = new Node(114);
    FoldConstants foldConstants0 = new FoldConstants((AbstractCompiler) null);
    // Undeclared exception!
    try {
        foldConstants0.tryFoldDo(nodeTraversal0, node1, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test113122,"public void test113122() throws Throwable {
    Compiler compiler0 = new Compiler();
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node0 = compiler0.parseSyntheticCode(""OBJECT_NUMBER_STRING_BOOLEAN"", ""OBJECT_NUMBER_STRING_BOOLEAN"");
    Node node1 = new Node(100, node0, node0, node0, 9, 29);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);
    foldConstants0.tryMinimizeCondition(nodeTraversal0, node1, node1);
    assertEquals(1, Node.DECR_FLAG);
}",0,
project,0,test114123,"public void test114123() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString("""");
    Node node1 = new Node(101, node0, node0, node0, 49, 42);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    foldConstants0.tryMinimizeCondition(nodeTraversal0, node1, node0);
    assertEquals(42, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
project,0,test114124,"public void test114124() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString("""");
    Node node1 = new Node(101, node0, node0, node0, 49, 42);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);
    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    foldConstants0.tryMinimizeCondition(nodeTraversal0, node1, node0);
    assertEquals(49, node1.getLineno());
}",0,"assertEquals(0, node1.getLineno())"
project,0,test115125,"public void test115125() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""Bad LS for assignmen: "");
    Node node1 = Node.newString(""Bad LS for assignmen: "", 38, 13);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node2 = new Node(26, node1, node0, 48, 21);
    foldConstants0.tryMinimizeIf((NodeTraversal) null, node2, node0);
    assertEquals(35, Node.QUOTED_PROP);
}",0,
project,0,test116126,"public void test116126() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""Bad LS for assignmen: "", ""Bad LS for assignmen: "");
    Node node1 = Node.newString(""Bad LS for assignmen: "", 38, 13);
    FoldConstants foldConstants0 = new FoldConstants(compiler0);
    Node node2 = new Node(26, node1, node0, 48, 21);
    node0.addChildrenToBack(node2);
    foldConstants0.tryMinimizeIf((NodeTraversal) null, node2, node0);
    assertEquals((-1), Node.CATCH_SCOPE_PROP);
}",0,
