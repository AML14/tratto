{
  "test08493" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08493() throws Throwable {\n    Node node0 = Node.newString(122, \"O3Sez'1M/_>]a\");\n    Compiler compiler0 = new Compiler();\n    node0.addChildrenToBack(node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node1 = Node.newString(34, \"X*D*{:C3g@WJX6f306N\", 1, (-1840));\n    foldConstants0.tryFoldComparison((NodeTraversal) null, node0, node0, node1, node0);\n}",
    "testName" : "test08493"
  },
  "test0000" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"~1^]xH:vR?zrGN\");\n    Node node1 = new Node(29);\n    node1.addChildToFront(node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test0000"
  },
  "test0001" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0001() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"~1^]xH:vR?zrGN\");\n    Node node1 = new Node(29);\n    node1.addChildToFront(node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test0001"
  },
  "test0089" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0089() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((double) 89, 89, 89);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node1 = new Node(27, node0, node0, node0, 33, 43);\n    foldConstants0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test0089"
  },
  "test08897" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08897() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nL3wO ok,;%KU?tj\");\n    Node node1 = Node.newNumber((double) 13, 43, 4);\n    Node node2 = new Node(13, node1, node1, node0, 958, 114);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryMinimizeCondition(nodeTraversal0, node0, node2);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n}",
    "testName" : "test08897"
  },
  "test04852" : {
    "methodSignature" : "public boolean hasMoreThanOneChild()",
    "methodName" : "hasMoreThanOneChild",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04852() throws Throwable {\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Sez'1/_>]a\");\n    Node node0 = new Node(122, 122, 122);\n    SyntheticAst syntheticAst0 = new SyntheticAst(\"Sez'1/_>]a\");\n    Compiler compiler0 = new Compiler(mockPrintStream0);\n    Node node1 = syntheticAst0.getAstRoot(compiler0);\n    node0.addChildrenToBack(node1);\n    Node node2 = new Node(4, node0, node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit((NodeTraversal) null, node2, node1);\n    node2.hasMoreThanOneChild();\n}",
    "testName" : "test04852"
  },
  "test104113" : {
    "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldRegularExpressionConstructor",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104113() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newString(\"nXvAuOQrc\\\"CY\\\"1#(nX*\");\n    Node node1 = new Node(34, 11, 29);\n    Node node2 = new Node(88, node0, node1, node1, 8, 0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldRegularExpressionConstructor(nodeTraversal0, node2, node1);\n}",
    "testName" : "test104113"
  },
  "test05660" : {
    "methodSignature" : "void tryFoldLeftChildAdd(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldLeftChildAdd",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05660() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);\n    Node node0 = Node.newNumber((double) 834, 834, 834);\n    foldConstants0.tryFoldLeftChildAdd(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test05660"
  },
  "test07685" : {
    "methodSignature" : "void tryFoldShift(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldShift",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07685() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) 22, 19, (-4658));\n    CompilerOptions compilerOptions0 = compiler0.options_;\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test07685"
  },
  "test06872" : {
    "methodSignature" : "void tryFoldBitAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldBitAndOr",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06872() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((-2.147483648E9));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldBitAndOr(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test06872"
  },
  "test01213" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01213() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"L5h?}~]/eN*3P}UO\");\n    Node node1 = Node.newNumber((double) 46, 1, 9);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node2 = new Node(114, node0, node1, node1);\n    foldConstants0.visit((NodeTraversal) null, node2, node1);\n}",
    "testName" : "test01213"
  },
  "test03638" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03638() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"B1],N\", \"B1],N\");\n    Node node1 = new Node(31, node0, node0, node0, 21, 9);\n    node0.addChildrenToFront(node1);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node0, node1);\n    node0.hasChildren();\n}",
    "testName" : "test03638"
  },
  "test03639" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03639() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"B1],N\", \"B1],N\");\n    Node node1 = new Node(31, node0, node0, node0, 21, 9);\n    node0.addChildrenToFront(node1);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node0, node1);\n    node0.hasOneChild();\n}",
    "testName" : "test03639"
  },
  "test04448" : {
    "methodSignature" : "void tryMinimizeIf(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryMinimizeIf",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04448() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    Node node1 = Node.newString(\"4\", 30, 23);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    Node node2 = compiler0.parseSyntheticCode(\"4\", \"4\");\n    Node node3 = new Node(112, node2, node1, node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryMinimizeIf(nodeTraversal0, node3, node0);\n}",
    "testName" : "test04448"
  },
  "test02426" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02426() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"%{6p[j0 EB|;//V6`U\", \"%{6p[j0 EB|;//V6`U\");\n    Node node1 = compiler0.parseSyntheticCode(\"@_}R^g{|y*S#0\", \"@_}R^g{|y*S#0\");\n    Node node2 = new Node(14, node1, node0, node1, node0, 47, 8);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node1);\n}",
    "testName" : "test02426"
  },
  "test01618" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01618() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"Object\", \"Object\");\n    Node node1 = compiler0.parseSyntheticCode(\"wgoo7.pro2ide\", \"Object\");\n    Node node2 = new Node(100, node0, node1, node1, 9, 29);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node2);\n}",
    "testName" : "test01618"
  },
  "test097106" : {
    "methodSignature" : "void tryFoldStringJoin(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldStringJoin",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097106() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);\n    Node node0 = Node.newString(14, \"IsExtension\");\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node1 = new Node(33);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);\n    foldConstants0.tryFoldStringJoin(nodeTraversal0, node1, node1, node0, node1);\n}",
    "testName" : "test097106"
  },
  "test08089" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08089() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(41);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test08089"
  },
  "test06064" : {
    "methodSignature" : "void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldAdd",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06064() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    Node node0 = Node.newString(40, \"Y&g_I3OY\", 40, 40);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldAdd(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test06064"
  },
  "test0012" : {
    "methodSignature" : "public void process(Node externs, Node jsRoot)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0012() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.process((Node) null, (Node) null);\n}",
    "testName" : "test0012"
  },
  "test05256" : {
    "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldAndOr",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05256() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nL3wO ok,;%KU?tj\");\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    File file0 = MockFile.createTempFile(\"+8hb[9J(5_f#(~Rb>_J\", \"@Q|RhYK\");\n    SourceFile.OnDisk sourceFile_OnDisk0 = new SourceFile.OnDisk(file0);\n    JsAst jsAst0 = new JsAst(sourceFile_OnDisk0);\n    Node node1 = jsAst0.getAstRoot(compiler0);\n    foldConstants0.tryFoldAndOr(nodeTraversal0, node0, node1, node0, node0);\n}",
    "testName" : "test05256"
  },
  "test03234" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03234() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nLn3wOok,;%KU?tj\");\n    Node node1 = Node.newNumber((double) 13, 43, 4);\n    Node node2 = new Node(16, node0, node1);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node1);\n}",
    "testName" : "test03234"
  },
  "test06468" : {
    "methodSignature" : "void tryFoldArithmetic(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldArithmetic",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06468() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((double) 100, 100, 100);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldArithmetic(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test06468"
  },
  "test107116" : {
    "methodSignature" : "static boolean containsUnicodeEscape(String s)",
    "methodName" : "containsUnicodeEscape",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107116() throws Throwable {\n    String string0 = \"\\\\u\";\n    boolean boolean0 = FoldConstants.containsUnicodeEscape(string0);\n}",
    "testName" : "test107116"
  },
  "test04044" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04044() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    Node node1 = Node.newString(\"y\", 30, 9);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    Node node2 = compiler0.parseSyntheticCode(\"y\", \"y\");\n    Node node3 = new Node(108, node2, node1, node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node3, node1);\n}",
    "testName" : "test04044"
  },
  "test07279" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07279() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber(2.147483647738228E9, 1, 31);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);\n    foldConstants0.tryFoldShift(nodeTraversal0, (Node) null, node0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test07279"
  },
  "test02022" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02022() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(63, 63, 63);\n    Node node1 = Node.newString(\"com.google.protobuf.DescriptorProtos$FieldOptions\");\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node2 = new Node(20, node0, node0, node1);\n    foldConstants0.visit((NodeTraversal) null, node2, (Node) null);\n}",
    "testName" : "test02022"
  },
  "test07278" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07278() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber(2.147483647738228E9, 1, 31);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);\n    foldConstants0.tryFoldShift(nodeTraversal0, (Node) null, node0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test07278"
  },
  "test02931" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02931() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FindExportableNodes findExportableNodes0 = new FindExportableNodes(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, findExportableNodes0, (ScopeCreator) null);\n    Node node0 = Node.newNumber((double) 43, 46, 6);\n    Node node1 = Node.newNumber((double) 4);\n    Node node2 = new Node(22, node0, node0, node1, 4095, 4095);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node2, node1);\n}",
    "testName" : "test02931"
  },
  "test00910" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00910() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((double) 952, 952, 952);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node1 = new Node(30, node0, node0, node0, 3, 16);\n    foldConstants0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test00910"
  },
  "test04953" : {
    "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldAndOr",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04953() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((-2.147483648E9));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldAndOr(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test04953"
  },
  "test115125" : {
    "methodSignature" : "void tryMinimizeIf(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryMinimizeIf",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115125() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"Bad LS for assignmen: \");\n    Node node1 = Node.newString(\"Bad LS for assignmen: \", 38, 13);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node2 = new Node(26, node1, node0, 48, 21);\n    foldConstants0.tryMinimizeIf((NodeTraversal) null, node2, node0);\n}",
    "testName" : "test115125"
  },
  "test110119" : {
    "methodSignature" : "void tryFoldFor(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldFor",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110119() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"OBJECT_NUMBER_STRING_BOOLEAN\", \"OBJECT_NUMBER_STRING_BOOLEAN\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldFor(nodeTraversal0, node0, node0);\n}",
    "testName" : "test110119"
  },
  "test094103" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094103() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    Node node1 = Node.newString(\"Unknown class name\", 4, 11);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    Node node2 = new Node(38);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node2, node1, node1);\n}",
    "testName" : "test094103"
  },
  "test08594" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08594() throws Throwable {\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Sez'1M/_>]a\");\n    Node node0 = Node.newString(122, \"Sez'1M/_>]a\");\n    Compiler compiler0 = new Compiler(mockPrintStream0);\n    Node node1 = new Node(29, node0, node0, 22, 2);\n    node0.addChildrenToBack(node1);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldComparison((NodeTraversal) null, node1, node0, node1, node0);\n}",
    "testName" : "test08594"
  },
  "test0023" : {
    "methodSignature" : "boolean hasBreakOrContinue(Node n)",
    "methodName" : "hasBreakOrContinue",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0023() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.hasBreakOrContinue((Node) null);\n}",
    "testName" : "test0023"
  },
  "test07380" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07380() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) (-3568), (-3568), 70);\n    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);\n    Node node1 = Node.newNumber((double) 2, 34, 2022);\n    Node node2 = new Node(18, node0, node1, node1, 1936, 49);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n}",
    "testName" : "test07380"
  },
  "test06973" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06973() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) (-3568), (-3568), 70);\n    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);\n    Node node1 = Node.newNumber((-3392.08727231292));\n    Node node2 = new Node(18, node1, node0, node0, 1936, 49);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test06973"
  },
  "test08998" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08998() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"com.google.javascript.jscomp.CrossModuleMethodMotion$IdGenerator\");\n    Node node1 = Node.newNumber((-3388.865365999262), 115, (-1780));\n    Node node2 = new Node(15, node0, node1, node1, 1109, 44);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    CodingConventionAnnotator codingConventionAnnotator0 = new CodingConventionAnnotator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, codingConventionAnnotator0, (ScopeCreator) null);\n    foldConstants0.tryMinimizeCondition(nodeTraversal0, node0, node2);\n    foldConstants0.visit(nodeTraversal0, node2, node1);\n}",
    "testName" : "test08998"
  },
  "test03740" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03740() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node0 = compiler0.parseTestCode(\"JSC_SHIFT_AMOUNT_OUT_OF_BOUNDS\");\n    foldConstants0.tryFoldBlock(nodeTraversal0, node0, node0);\n    node0.hasOneChild();\n}",
    "testName" : "test03740"
  },
  "test07786" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07786() throws Throwable {\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Sez'1M/_>]a\");\n    Node node0 = Node.newString(122, \"Sez'1M/_>]a\");\n    SyntheticAst syntheticAst0 = new SyntheticAst(\"Sez'1M/_>]a\");\n    Compiler compiler0 = new Compiler(mockPrintStream0);\n    Node node1 = syntheticAst0.getAstRoot(compiler0);\n    node0.addChildrenToBack(node1);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldComparison((NodeTraversal) null, node1, node0, node0, node1);\n    node1.hasChildren();\n}",
    "testName" : "test07786"
  },
  "test102111" : {
    "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldRegularExpressionConstructor",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102111() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((double) 704, 650, 650);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node1 = compiler0.parseSyntheticCode(\"$0\", \"$0\");\n    Node node2 = Node.newString(\"$0\");\n    Node node3 = new Node(2, node0, node2, node1, 0, 20);\n    foldConstants0.tryFoldRegularExpressionConstructor(nodeTraversal0, node3, node2);\n}",
    "testName" : "test102111"
  },
  "test03741" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03741() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node0 = compiler0.parseTestCode(\"JSC_SHIFT_AMOUNT_OUT_OF_BOUNDS\");\n    foldConstants0.tryFoldBlock(nodeTraversal0, node0, node0);\n    node0.getChildCount();\n}",
    "testName" : "test03741"
  },
  "test06974" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06974() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) (-3568), (-3568), 70);\n    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);\n    Node node1 = Node.newNumber((-3392.08727231292));\n    Node node2 = new Node(18, node1, node0, node0, 1936, 49);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test06974"
  },
  "test05761" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05761() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((double) 661, 661, 661);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node1 = new Node(21, node0);\n    foldConstants0.tryFoldLeftChildAdd(nodeTraversal0, node0, node1, node0, node1);\n    node1.hasOneChild();\n}",
    "testName" : "test05761"
  },
  "test01314" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01314() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nL3wO ok,;%KU?tj\");\n    Node node1 = Node.newNumber((double) 33, 78, 27);\n    Node node2 = new Node(113, node1, node1, node0, 31, 43);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node2);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n    node2.getLineno();\n}",
    "testName" : "test01314"
  },
  "test04549" : {
    "methodSignature" : "void tryMinimizeIf(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryMinimizeIf",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04549() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"Bad LS for assignmen: \", \"Bad LS for assignmen: \");\n    Node node1 = Node.newString(\"Bad LS for assignmen: \", 38, 13);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node2 = new Node(26, node1, node0, 48, 21);\n    foldConstants0.tryMinimizeIf((NodeTraversal) null, node2, node0);\n}",
    "testName" : "test04549"
  },
  "test03335" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03335() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"JSC_INVALID_GETELEM_INDEX_ERROR\");\n    Node node1 = Node.newNumber((double) 16, (-2), 15);\n    Node node2 = new Node(12, node0, node0, node1, 47, 2);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n}",
    "testName" : "test03335"
  },
  "test02527" : {
    "methodSignature" : "public boolean isOptionalArg()",
    "methodName" : "isOptionalArg",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02527() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newString(\"nXvAuOQrc\\\"CY\\\"1#(nX*\");\n    Node node1 = new Node(34, 11, 29);\n    Node node2 = new Node(88, node0, node1, node1, 8, 0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n    node2.isOptionalArg();\n}",
    "testName" : "test02527"
  },
  "test06569" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06569() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nL3wO ok,%KU?tj\");\n    Node node1 = Node.newNumber(1631.3981567077049, 124, 4);\n    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);\n    Node node2 = Node.newNumber((-458.11));\n    Node node3 = new Node(9, node1, node2, node2, 1, 43);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node3, node0);\n}",
    "testName" : "test06569"
  },
  "test01315" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01315() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nL3wO ok,;%KU?tj\");\n    Node node1 = Node.newNumber((double) 33, 78, 27);\n    Node node2 = new Node(113, node1, node1, node0, 31, 43);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node2);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n    node2.getCharno();\n}",
    "testName" : "test01315"
  },
  "test08190" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08190() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node0 = Node.newString(42, \"t]NA4'fAl[\");\n    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test08190"
  },
  "test091100" : {
    "methodSignature" : "public boolean isSyntheticBlock()",
    "methodName" : "isSyntheticBlock",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091100() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) 661, 661, 661);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node0, node0, node0);\n    node0.isSyntheticBlock();\n}",
    "testName" : "test091100"
  },
  "test116126" : {
    "methodSignature" : "void tryMinimizeIf(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryMinimizeIf",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116126() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"Bad LS for assignmen: \", \"Bad LS for assignmen: \");\n    Node node1 = Node.newString(\"Bad LS for assignmen: \", 38, 13);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node2 = new Node(26, node1, node0, 48, 21);\n    node0.addChildrenToBack(node2);\n    foldConstants0.tryMinimizeIf((NodeTraversal) null, node2, node0);\n}",
    "testName" : "test116126"
  },
  "test099108" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099108() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    DeadAssignmentsElimination deadAssignmentsElimination0 = new DeadAssignmentsElimination(compiler0);\n    Node node0 = Node.newString(\"\", (-2726), 22);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, deadAssignmentsElimination0);\n    Node node1 = compiler0.parseSyntheticCode(\"cKQ:d';dH@*\", \"\");\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldGetProp(nodeTraversal0, node1, node0, node1, node1);\n    node0.getCharno();\n}",
    "testName" : "test099108"
  },
  "test01719" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01719() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nL3wO ok,%KU?tj\");\n    Node node1 = Node.newNumber(1631.3981567077049, 124, 4);\n    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);\n    Node node2 = new Node(9, node1, node0, node0, 1, 43);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n    node2.hasOneChild();\n}",
    "testName" : "test01719"
  },
  "test100109" : {
    "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldRegularExpressionConstructor",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100109() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseTestCode(\"PK\");\n    foldConstants0.tryFoldRegularExpressionConstructor((NodeTraversal) null, node0, node0);\n}",
    "testName" : "test100109"
  },
  "test0034" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0034() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = new Node(661);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node1 = new Node(32, node0, node0, node0, 967, 115);\n    foldConstants0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test0034"
  },
  "test04145" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04145() throws Throwable {\n    Node node0 = Node.newString(\"\");\n    Node node1 = Node.newNumber((double) 16, (-2), 15);\n    Node node2 = new Node(108, node0, node0, node1, 47, 44);\n    FoldConstants foldConstants0 = new FoldConstants((AbstractCompiler) null);\n    Compiler compiler0 = new Compiler();\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node1);\n}",
    "testName" : "test04145"
  },
  "test05357" : {
    "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldAndOr",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05357() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(108, node0, node0, node0, 47, 44);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, syntacticScopeCreator0);\n    foldConstants0.tryFoldAndOr(nodeTraversal0, node1, node1, node0, node1);\n}",
    "testName" : "test05357"
  },
  "test105114" : {
    "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldRegularExpressionConstructor",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105114() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    DeadAssignmentsElimination deadAssignmentsElimination0 = new DeadAssignmentsElimination(compiler0);\n    Node node0 = Node.newString(\"\", (-2726), 22);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, deadAssignmentsElimination0);\n    Node node1 = compiler0.parseSyntheticCode(\"cKQ:d';dH@*\", \"\");\n    Node node2 = new Node(1431655764, node1, node0, node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldRegularExpressionConstructor(nodeTraversal0, node2, node2);\n}",
    "testName" : "test105114"
  },
  "test02123" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02123() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nL3wO ok,;%KU?tj\");\n    Node node1 = Node.newNumber((double) 33, 50, 27);\n    Node node2 = new Node(33, node1, node1, node0, 31, 43);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node2);\n}",
    "testName" : "test02123"
  },
  "test06165" : {
    "methodSignature" : "void tryFoldArithmetic(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldArithmetic",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06165() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);\n    Node node0 = Node.newNumber((double) 856, 856, 856);\n    Node node1 = new Node(4, node0);\n    foldConstants0.tryFoldArithmetic(nodeTraversal0, node1, node0, node1, node1);\n}",
    "testName" : "test06165"
  },
  "test01820" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01820() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    Node node1 = Node.newString(\"\", 7, 29);\n    Node node2 = new Node(11, node0, node1);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n}",
    "testName" : "test01820"
  },
  "test03842" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03842() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"A~^]a]\", \"+im}H+{=X{5<\");\n    foldConstants0.visit((NodeTraversal) null, node0, (Node) null);\n}",
    "testName" : "test03842"
  },
  "test113122" : {
    "methodSignature" : "void tryMinimizeCondition(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryMinimizeCondition",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113122() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"OBJECT_NUMBER_STRING_BOOLEAN\", \"OBJECT_NUMBER_STRING_BOOLEAN\");\n    Node node1 = new Node(100, node0, node0, node0, 9, 29);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryMinimizeCondition(nodeTraversal0, node1, node1);\n}",
    "testName" : "test113122"
  },
  "test096105" : {
    "methodSignature" : "void tryFoldStringIndexOf(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldStringIndexOf",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096105() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);\n    Node node0 = Node.newString(\"IsExtension\", 14, 14);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node1 = new Node(33);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);\n    foldConstants0.tryFoldStringIndexOf(nodeTraversal0, node0, node1, node0, node1);\n}",
    "testName" : "test096105"
  },
  "test07482" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07482() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) 661, 661, 661);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test07482"
  },
  "test07481" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07481() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) 661, 661, 661);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test07481"
  },
  "test06670" : {
    "methodSignature" : "void tryFoldBitAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldBitAndOr",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06670() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((-2.1474836492406154E9));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldBitAndOr(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test06670"
  },
  "test08291" : {
    "methodSignature" : "public boolean isUnscopedQualifiedName()",
    "methodName" : "isUnscopedQualifiedName",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08291() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(63, 63, 0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node1 = new Node(43, node0, 5, 43);\n    foldConstants0.tryFoldComparison((NodeTraversal) null, node0, node1, node1, node1);\n    node1.isUnscopedQualifiedName();\n}",
    "testName" : "test08291"
  },
  "test0045" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0045() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((double) 661, 661, 661);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node1 = new Node(32, node0, node0, node0, 24, 1);\n    foldConstants0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test0045"
  },
  "test05862" : {
    "methodSignature" : "void tryFoldAdd(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldAdd",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05862() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSType[] jSTypeArray0 = new JSType[4];\n    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();\n    jSTypeArray0[3] = (JSType) objectType0;\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    foldConstants0.tryFoldAdd(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test05862"
  },
  "test07887" : {
    "methodSignature" : "public boolean isNoSideEffectsCall()",
    "methodName" : "isNoSideEffectsCall",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07887() throws Throwable {\n    Node node0 = Node.newString(122, \"O3Sez'1M/_>]a\");\n    Compiler compiler0 = new Compiler();\n    node0.addChildrenToBack(node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldComparison((NodeTraversal) null, node0, node0, node0, node0);\n    node0.isNoSideEffectsCall();\n}",
    "testName" : "test07887"
  },
  "test108117" : {
    "methodSignature" : "void tryFoldWhile(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldWhile",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108117() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"nX%?OQrc\\\"CY\\\"1!(nX*\", \"nX%?OQrc\\\"CY\\\"1!(nX*\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldWhile(nodeTraversal0, node0, node0);\n}",
    "testName" : "test108117"
  },
  "test08695" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08695() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"0\");\n    Node node1 = new Node(44);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldComparison(nodeTraversal0, node1, node1, node0, node0);\n}",
    "testName" : "test08695"
  },
  "test04650" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04650() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node0 = new Node(4);\n    Node node1 = new Node(38);\n    node0.addChildToFront(node1);\n    foldConstants0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test04650"
  },
  "test02224" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02224() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"ad LHS for assignent: \", \"ad LHS for assignent: \");\n    Node node1 = Node.newString(\"ad LHS for assignent: \", 38, 13);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node2 = new Node(37, node1, node1, node0, 11, (-3));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, (Node) null);\n}",
    "testName" : "test02224"
  },
  "test01416" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01416() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    Node node1 = Node.newString(\"y\", 30, 9);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    Node node2 = compiler0.parseSyntheticCode(\"y\", \"y\");\n    Node node3 = new Node(115, node2, node1, node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node3, node1);\n}",
    "testName" : "test01416"
  },
  "test05458" : {
    "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldAndOr",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05458() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nL3wO ok,;%KU?tj\");\n    Node node1 = new Node(113, node0, node0, node0, 31, 43);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    File file0 = MockFile.createTempFile(\"+8hb[9J(5_f#(~Rb>_J\", \"@Q|RhYK\");\n    SourceFile.OnDisk sourceFile_OnDisk0 = new SourceFile.OnDisk(file0);\n    JsAst jsAst0 = new JsAst(sourceFile_OnDisk0);\n    Node node2 = jsAst0.getAstRoot(compiler0);\n    foldConstants0.tryFoldAndOr(nodeTraversal0, node0, node2, node0, node1);\n}",
    "testName" : "test05458"
  },
  "test03436" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03436() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nL3wO ok,;%KU?tj\");\n    Node node1 = Node.newNumber((double) 13, 43, 4);\n    Node node2 = new Node(13, node1, node1, node0, 958, 114);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n}",
    "testName" : "test03436"
  },
  "test114124" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114124() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(101, node0, node0, node0, 49, 42);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    foldConstants0.tryMinimizeCondition(nodeTraversal0, node1, node0);\n    node1.getLineno();\n}",
    "testName" : "test114124"
  },
  "test114123" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114123() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(101, node0, node0, node0, 49, 42);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    foldConstants0.tryMinimizeCondition(nodeTraversal0, node1, node0);\n    node1.getCharno();\n}",
    "testName" : "test114123"
  },
  "test02628" : {
    "methodSignature" : "public boolean isUnscopedQualifiedName()",
    "methodName" : "isUnscopedQualifiedName",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02628() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = new Node(919);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);\n    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(\"aliasExternals\", \"aliasExternals\");\n    Node node1 = compiler0.parse(jSSourceFile0);\n    Node node2 = new Node(21, node0, node0, node1, 32, 8367);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n    node2.isUnscopedQualifiedName();\n}",
    "testName" : "test02628"
  },
  "test093102" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093102() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"com.google.common.collect.ImmutableSet$ArrayImmutableSet\", \"com.google.common.collect.ImmutableSet$ArrayImmutableSet\");\n    Node node1 = Node.newNumber((double) 25, 26, 29);\n    Node node2 = new Node(15, node0, node1, node1, 38, 44);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    RemoveConstantExpressions.RemoveConstantRValuesCallback removeConstantExpressions_RemoveConstantRValuesCallback0 = new RemoveConstantExpressions.RemoveConstantRValuesCallback();\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, removeConstantExpressions_RemoveConstantRValuesCallback0);\n    foldConstants0.tryFoldComparison(nodeTraversal0, node2, node1, node1, node0);\n}",
    "testName" : "test093102"
  },
  "test07075" : {
    "methodSignature" : "public boolean isSyntheticBlock()",
    "methodName" : "isSyntheticBlock",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07075() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((double) 100, 100, 100);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node1 = new Node(27, node0, node0, node0, 33, 43);\n    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node1, node0);\n    node0.isSyntheticBlock();\n}",
    "testName" : "test07075"
  },
  "test09099" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09099() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) 661, 661, 661);\n    Node node1 = new Node(16);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldComparison(nodeTraversal0, node1, node0, node0, node1);\n}",
    "testName" : "test09099"
  },
  "test0056" : {
    "methodSignature" : "public void traverse(Node root)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0056() throws Throwable {\n    FoldConstants foldConstants0 = new FoldConstants((AbstractCompiler) null);\n    Node node0 = Node.newString(\"rfo^0AJV+Bf0iZ5MVW\", 2389, 2389);\n    Node node1 = Node.newString(32, \"rfo^0AJV+Bf0iZ5MVW\");\n    node1.addChildrenToBack(node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, foldConstants0);\n    nodeTraversal0.traverse(node1);\n}",
    "testName" : "test0056"
  },
  "test04246" : {
    "methodSignature" : "boolean tryFoldHookIf(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldHookIf",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04246() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode((String) null, \"Unexpected const change.\\n  name: \");\n    Node node1 = new Node(17, 7, 23);\n    Node node2 = new Node(13, node0, node0, node1, (-3), 25);\n    foldConstants0.tryFoldHookIf((NodeTraversal) null, node2, node0);\n}",
    "testName" : "test04246"
  },
  "test103112" : {
    "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldRegularExpressionConstructor",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103112() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSType[] jSTypeArray0 = new JSType[4];\n    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();\n    jSTypeArray0[3] = (JSType) objectType0;\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    foldConstants0.tryFoldRegularExpressionConstructor(nodeTraversal0, node0, node0);\n}",
    "testName" : "test103112"
  },
  "test05054" : {
    "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldAndOr",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05054() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"\");\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldAndOr(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test05054"
  },
  "test01011" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"JSC_INDEX_OUT_OF_BOUNDS_ERROR\", \"JSC_INDEX_OUT_OF_BOUNDS_ERROR\");\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) foldConstants0);\n}",
    "testName" : "test01011"
  },
  "test03032" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03032() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(63, 63, 63);\n    Node node1 = Node.newString(\"G|hF3j)QgrO\");\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node2 = new Node(23, node0, node1);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n}",
    "testName" : "test03032"
  },
  "test06266" : {
    "methodSignature" : "void tryFoldArithmetic(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldArithmetic",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06266() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);\n    Node node0 = Node.newNumber((double) 856, 856, 856);\n    Node node1 = new Node(21, node0);\n    foldConstants0.tryFoldArithmetic(nodeTraversal0, node1, node0, node0, node1);\n}",
    "testName" : "test06266"
  },
  "test01921" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01921() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    Node node1 = compiler0.parseSyntheticCode(\"=Z\", \"Y&g_I3OY\");\n    Node node2 = new Node(19, node0, node0, node1, 45, 23);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node2, node2);\n}",
    "testName" : "test01921"
  },
  "test07988" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07988() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    Node node1 = new Node(38);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node1, node0, node0);\n}",
    "testName" : "test07988"
  },
  "test03943" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03943() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"nX%?uOQrc\\\"CY\\\"1!(nX*\", \"nX%?uOQrc\\\"CY\\\"1!(nX*\");\n    Node node1 = new Node(132, node0, node0, node0, (-3584), 0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test03943"
  },
  "test111120" : {
    "methodSignature" : "void tryFoldDo(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldDo",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111120() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(63, 63, 63);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldDo((NodeTraversal) null, node0, (Node) null);\n}",
    "testName" : "test111120"
  },
  "test098107" : {
    "methodSignature" : "void tryFoldGetElem(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldGetElem",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098107() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(63, 63, 0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldGetElem((NodeTraversal) null, node0, node0, node0, node0);\n}",
    "testName" : "test098107"
  },
  "test07583" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07583() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) (-3568), (-3568), 70);\n    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);\n    Node node1 = Node.newNumber((double) 2, 34, 2022);\n    Node node2 = Node.newNumber((-3392.08727231292));\n    Node node3 = new Node(18, node2, node1, node1, 1936, 49);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node3, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test07583"
  },
  "test08392" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08392() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);\n    Node node0 = Node.newNumber((double) 141, 141, 141);\n    Node node1 = new Node(44, node0, node0, node0, 22, 24);\n    foldConstants0.tryFoldComparison(nodeTraversal0, node1, node1, node1, node0);\n}",
    "testName" : "test08392"
  },
  "test0067" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0067() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((double) 100, 100, 100);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node1 = new Node(26, node0, node0, node0);\n    foldConstants0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test0067"
  },
  "test04751" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04751() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node0 = new Node(4);\n    node0.addChildToFront(node0);\n    foldConstants0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test04751"
  },
  "test05963" : {
    "methodSignature" : "public boolean hasMoreThanOneChild()",
    "methodName" : "hasMoreThanOneChild",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05963() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"gAu_4\\\"\", \"gAu_4\\\"\");\n    Node node1 = Node.newString(\"gAu_4\\\"\", 38, 13);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldAdd(nodeTraversal0, node0, node0, node1, node0);\n    node0.hasMoreThanOneChild();\n}",
    "testName" : "test05963"
  },
  "test06771" : {
    "methodSignature" : "public boolean isUnscopedQualifiedName()",
    "methodName" : "isUnscopedQualifiedName",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06771() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber(4.294967296E9);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldBitAndOr(nodeTraversal0, node0, node0, node0, node0);\n    node0.isUnscopedQualifiedName();\n}",
    "testName" : "test06771"
  },
  "test08796" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08796() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newString(\"B1]6,N\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldComparison(nodeTraversal0, node0, node0, node0, node0);\n}",
    "testName" : "test08796"
  },
  "test106115" : {
    "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldRegularExpressionConstructor",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106115() throws Throwable {\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Sez'1M/_>]a\");\n    Node node0 = Node.newString(\"Sez'1M/_>]a\", 122, 122);\n    Compiler compiler0 = new Compiler(mockPrintStream0);\n    String string0 = \"v\\\\u%*[Ze$Si\\\\\";\n    Node node1 = Node.newString(29, string0, 9, 29);\n    Node node2 = new Node(30, node1, node1, node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldRegularExpressionConstructor((NodeTraversal) null, node2, node0);\n}",
    "testName" : "test106115"
  },
  "test07584" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07584() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) (-3568), (-3568), 70);\n    CheckAccessControls checkAccessControls0 = new CheckAccessControls(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkAccessControls0);\n    Node node1 = Node.newNumber((double) 2, 34, 2022);\n    Node node2 = Node.newNumber((-3392.08727231292));\n    Node node3 = new Node(18, node2, node1, node1, 1936, 49);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node3, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test07584"
  },
  "test02325" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02325() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"JSC_INVALID_GETELEM_INDEX_ERROR\");\n    Node node1 = Node.newNumber((double) 16, (-2), 15);\n    Node node2 = new Node(86, node0, node0, node1, 47, 2);\n    CompilerOptions compilerOptions0 = compiler0.createDefaultOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n}",
    "testName" : "test02325"
  },
  "test04347" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04347() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"JSC_INVLID_GETELEM_IDEk_ERROR\");\n    Node node1 = Node.newNumber((double) 16, (-2), 15);\n    Node node2 = new Node(98, node0, node0, node1, 47, 2);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit(nodeTraversal0, node2, node2);\n}",
    "testName" : "test04347"
  },
  "test05559" : {
    "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldAndOr",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05559() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    Node node1 = Node.newString(\"j\", 30, 39);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    Node node2 = compiler0.parseSyntheticCode(\"j\", \"j\");\n    Node node3 = new Node(115, node2, node1, node0);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.tryFoldAndOr(nodeTraversal0, node3, node3, node1, node3);\n}",
    "testName" : "test05559"
  },
  "test112121" : {
    "methodSignature" : "void tryFoldDo(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldDo",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112121() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    CheckLevel checkLevel0 = CheckLevel.WARNING;\n    MethodCheck methodCheck0 = new MethodCheck((AbstractCompiler) null, checkLevel0);\n    NodeTraversal.Callback nodeTraversal_Callback0 = methodCheck0.getActingCallback();\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, nodeTraversal_Callback0);\n    Node node1 = new Node(114);\n    FoldConstants foldConstants0 = new FoldConstants((AbstractCompiler) null);\n    foldConstants0.tryFoldDo(nodeTraversal0, node1, node0);\n}",
    "testName" : "test112121"
  },
  "test02729" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02729() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"$0\", \"*@U{7EAQl0\\\"mjQ\");\n    Node node1 = new Node((-1431), 0, 9);\n    Node node2 = new Node(16, node0, node1, node1, 2, 21);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    foldConstants0.visit((NodeTraversal) null, node2, node0);\n}",
    "testName" : "test02729"
  },
  "test01517" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01517() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"OBJECT_NUMBER_STRING_BOOLEAN\", \"OBJECT_NUMBER_STRING_BOOLEAN\");\n    Node node1 = compiler0.parseSyntheticCode(\"wgoo7.pro2ide\", \"OBJECT_NUMBER_STRING_BOOLEAN\");\n    Node node2 = new Node(101, node0, node1, node1, 9, 29);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node1);\n}",
    "testName" : "test01517"
  },
  "test095104" : {
    "methodSignature" : "public boolean isNoSideEffectsCall()",
    "methodName" : "isNoSideEffectsCall",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095104() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    MoveFunctionDeclarations moveFunctionDeclarations0 = new MoveFunctionDeclarations(compiler0);\n    Node node0 = Node.newString(14, \"IsExtension\");\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node1 = new Node(33);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, moveFunctionDeclarations0);\n    foldConstants0.tryFoldStringIndexOf(nodeTraversal0, node0, node1, node0, node1);\n    node1.isNoSideEffectsCall();\n}",
    "testName" : "test095104"
  },
  "test07176" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07176() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((-2.147483648937212E9));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test07176"
  },
  "test0078" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0078() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = new Node(89, 89, 89);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    Node node1 = new Node(27, node0, node0, node0, 33, 43);\n    foldConstants0.visit(nodeTraversal0, node1, node0);\n    node0.hasOneChild();\n}",
    "testName" : "test0078"
  },
  "test03133" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03133() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"YP<lKyt1]Px=\");\n    Node node1 = Node.newNumber((-1122.0114), 31, (-2145755970));\n    Node node2 = new Node(14, node1, node0, node0, 32, (-1830));\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node1);\n}",
    "testName" : "test03133"
  },
  "test06367" : {
    "methodSignature" : "void tryFoldArithmetic(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldArithmetic",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06367() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0, (ScopeCreator) null);\n    Node node0 = Node.newNumber((double) 856, 856, 856);\n    Node node1 = new Node(24, node0);\n    foldConstants0.tryFoldArithmetic(nodeTraversal0, node1, node0, node0, node1);\n}",
    "testName" : "test06367"
  },
  "test101110" : {
    "methodSignature" : "void tryFoldRegularExpressionConstructor(NodeTraversal t, Node n, Node parent)",
    "methodName" : "tryFoldRegularExpressionConstructor",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101110() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nL3wO ok,;%KU?tj\");\n    Node node1 = Node.newNumber((double) 33, 78, 27);\n    Node node2 = new Node(113, node1, node1, node0, 31, 43);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldRegularExpressionConstructor(nodeTraversal0, node2, node2);\n}",
    "testName" : "test101110"
  },
  "test01112" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01112() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = compiler0.parseSyntheticCode(\"JSCcINDEX_OUT_OFBO!NDS_ERR[\", \"Array index out of ounds: {0}\");\n    Node node1 = compiler0.parseSyntheticCode(\"J$R_\", \"J$R_\");\n    Node node2 = new Node(98, node0, node1, node1, 1, 29);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node0);\n}",
    "testName" : "test01112"
  },
  "test07177" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07177() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node0 = Node.newNumber((-2.147483648937212E9));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldShift(nodeTraversal0, node0, node0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test07177"
  },
  "test109118" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109118() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"4L1nLuwO ok,;%KU?tj\");\n    Node node1 = compiler0.parseSyntheticCode(\"4L1nL3wO ok,;%KU?tj\", \"4L1nLuwO ok,;%KU?tj\");\n    Node node2 = new Node(113, node1, node1, node0, 31, 43);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node2);\n}",
    "testName" : "test109118"
  },
  "test05155" : {
    "methodSignature" : "void tryFoldAndOr(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldAndOr",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05155() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"com.google.common.coll2c.Immutablet$ArrayImmutabliSet\", 45, 82);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node1 = new Node(100);\n    foldConstants0.tryFoldAndOr((NodeTraversal) null, node1, node0, node0, node0);\n}",
    "testName" : "test05155"
  },
  "test02830" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02830() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(63, 63, 63);\n    Node node1 = Node.newString(\"com.google.protobuf.DescriptorProtos$FieldOptions\");\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    Node node2 = new Node(21, node1, node0, node0, 2, 0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.visit(nodeTraversal0, node2, node2);\n}",
    "testName" : "test02830"
  },
  "test092101" : {
    "methodSignature" : "void tryFoldComparison(NodeTraversal t, Node n, Node left, Node right, Node parent)",
    "methodName" : "tryFoldComparison",
    "className" : "com.google.javascript.jscomp.FoldConstants",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092101() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((double) 661, 661, 661);\n    Node node1 = new Node(13);\n    FoldConstants foldConstants0 = new FoldConstants(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, foldConstants0);\n    foldConstants0.tryFoldComparison(nodeTraversal0, node1, node0, node0, node1);\n}",
    "testName" : "test092101"
  }
}