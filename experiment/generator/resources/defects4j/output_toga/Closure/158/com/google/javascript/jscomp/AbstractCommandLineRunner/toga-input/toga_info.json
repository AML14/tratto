{
  "test1212" : {
    "methodSignature" : "List<JSModule> createJsModules(List<String> specs, List<String> jsFiles) throws FlagUsageException, IOException",
    "methodName" : "createJsModules",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    Supplier<List<JSModule>> supplier0 = (Supplier<List<JSModule>>) mock(Supplier.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null).when(supplier0).get();\n    Function<Integer, Boolean> function0 = (Function<Integer, Boolean>) mock(Function.class, new ViolatedAssumptionAnswer());\n    commandLineRunner0.enableTestMode((Supplier<List<JSSourceFile>>) null, (Supplier<List<JSSourceFile>>) null, supplier0, function0);\n    List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;\n    List<JSModule> list1 = commandLineRunner0.createJsModules(list0, list0);\n}",
    "testName" : "test1212"
  },
  "test3434" : {
    "methodSignature" : "static void createDefineOrTweakReplacements(List<String> definitions, CompilerOptions options, boolean tweaks)",
    "methodName" : "createDefineOrTweakReplacements",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    arrayList0.add(\"Z:c_lk|)=\");\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    AbstractCommandLineRunner.createDefineOrTweakReplacements(arrayList0, compilerOptions0, false);\n}",
    "testName" : "test3434"
  },
  "test1313" : {
    "methodSignature" : "List<JSModule> createJsModules(List<String> specs, List<String> jsFiles) throws FlagUsageException, IOException",
    "methodName" : "createJsModules",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    commandLineRunner0.createJsModules((List<String>) null, (List<String>) null);\n}",
    "testName" : "test1313"
  },
  "test3535" : {
    "methodSignature" : "public boolean shouldRunCompiler()",
    "methodName" : "shouldRunCompiler",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    JSModule jSModule0 = new JSModule(\"Xh7KqF;c[:N\");\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"Xh7KqF;c[:N\");\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"Xh7KqF;c[:N\";\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0, mockPrintStream0, mockPrintStream0);\n    JSModule jSModule1 = new JSModule(\"?RJ]oX\");\n    JSModule[] jSModuleArray0 = new JSModule[5];\n    jSModuleArray0[0] = jSModule1;\n    jSModuleArray0[1] = jSModule0;\n    jSModuleArray0[2] = jSModule1;\n    jSModuleArray0[3] = jSModule0;\n    jSModuleArray0[4] = jSModule1;\n    JSModuleGraph jSModuleGraph0 = new JSModuleGraph(jSModuleArray0);\n    commandLineRunner0.printModuleGraphManifestTo(jSModuleGraph0, mockPrintStream0);\n    commandLineRunner0.shouldRunCompiler();\n}",
    "testName" : "test3535"
  },
  "test2121" : {
    "methodSignature" : "static Map<String, String> parseModuleWrappers(List<String> specs, List<JSModule> modules) throws FlagUsageException",
    "methodName" : "parseModuleWrappers",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;\n    LinkedList<JSModule> linkedList0 = new LinkedList<JSModule>();\n    AbstractCommandLineRunner.parseModuleWrappers(list0, linkedList0);\n}",
    "testName" : "test2121"
  },
  "test3232" : {
    "methodSignature" : "static void createDefineOrTweakReplacements(List<String> definitions, CompilerOptions options, boolean tweaks)",
    "methodName" : "createDefineOrTweakReplacements",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    String[] stringArray0 = new String[0];\n    List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    CompilerOptions compilerOptions0 = commandLineRunner0.createOptions();\n    AbstractCommandLineRunner.createDefineOrTweakReplacements(list0, compilerOptions0, true);\n}",
    "testName" : "test3232"
  },
  "test1111" : {
    "methodSignature" : "protected List<JSSourceFile> createInputs(List<String> files, boolean allowStdIn) throws FlagUsageException, IOException",
    "methodName" : "createInputs",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    String[] stringArray0 = new String[0];\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    arrayList0.add(\"-\");\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    commandLineRunner0.createInputs(arrayList0, false);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "static void writeOutput(Appendable out, Compiler compiler, String code, String wrapper, String codePlaceholder) throws IOException",
    "methodName" : "writeOutput",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    AbstractCommandLineRunner.writeOutput((Appendable) null, compiler0, (String) null, \"\", \"// Input %num%\");\n}",
    "testName" : "test2222"
  },
  "test3333" : {
    "methodSignature" : "static void createDefineOrTweakReplacements(List<String> definitions, CompilerOptions options, boolean tweaks)",
    "methodName" : "createDefineOrTweakReplacements",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    AbstractCommandLineRunner.createDefineOrTweakReplacements(list0, compilerOptions0, false);\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "final protected A getCompiler()",
    "methodName" : "getCompiler",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"qnH@O@Rg\";\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    Compiler compiler0 = commandLineRunner0.getCompiler();\n}",
    "testName" : "test011"
  },
  "test077" : {
    "methodSignature" : "final protected void setRunOptions(CompilerOptions options) throws FlagUsageException, IOException",
    "methodName" : "setRunOptions",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \" from module \";\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    CompilerOptions compilerOptions0 = commandLineRunner0.createOptions();\n    commandLineRunner0.setRunOptions(compilerOptions0);\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "List<JSModule> createJsModules(List<String> specs, List<String> jsFiles) throws FlagUsageException, IOException",
    "methodName" : "createJsModules",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    String[] stringArray0 = new String[0];\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    arrayList0.add(\"Z:c_lk|)=\");\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    commandLineRunner0.createJsModules(arrayList0, arrayList0);\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "String expandManifest(JSModule forModule)",
    "methodName" : "expandManifest",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    String string0 = commandLineRunner0.expandManifest((JSModule) null);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "protected void checkModuleName(String name) throws FlagUsageException",
    "methodName" : "checkModuleName",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    commandLineRunner0.checkModuleName(\">\");\n}",
    "testName" : "test1717"
  },
  "test2828" : {
    "methodSignature" : "protected OutputStream filenameToOutputStream(String fileName) throws IOException",
    "methodName" : "filenameToOutputStream",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    OutputStream outputStream0 = commandLineRunner0.filenameToOutputStream(\"VwmI67V5f11$l\");\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "List<JSModule> createJsModules(List<String> specs, List<String> jsFiles) throws FlagUsageException, IOException",
    "methodName" : "createJsModules",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    LinkedList<String> linkedList0 = new LinkedList<String>();\n    commandLineRunner0.createJsModules(linkedList0, linkedList0);\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "int processResults(Result result, List<JSModule> modules, B options) throws FlagUsageException, IOException",
    "methodName" : "processResults",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    JSError[] jSErrorArray0 = new JSError[0];\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"j|A,z]Ypxx4pY(+Ur1W\");\n    Result result0 = new Result(jSErrorArray0, jSErrorArray0, \"kYt7=&y0K/?[6b#sx\", (VariableMap) null, (VariableMap) null, (VariableMap) null, (FunctionInformationMap) null, (SourceMap) null, \"{ \");\n    String[] stringArray0 = new String[9];\n    stringArray0[0] = \"{ \";\n    stringArray0[1] = \"{ \";\n    stringArray0[2] = \"j|A,z]Ypxx4pY(+Ur1W\";\n    stringArray0[3] = \"j|A,z]Ypxx4pY(+Ur1W\";\n    stringArray0[4] = \"kYt7=&y0K/?[6b#sx\";\n    stringArray0[5] = \"j|A,z]Ypxx4pY(+Ur1W\";\n    stringArray0[6] = \"{ \";\n    stringArray0[7] = \"{ \";\n    stringArray0[8] = \"{ \";\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0, mockPrintStream0, mockPrintStream0);\n    LinkedList<JSModule> linkedList0 = new LinkedList<JSModule>();\n    CompilerOptions compilerOptions0 = commandLineRunner0.createOptions();\n    int int0 = commandLineRunner0.processResults(result0, linkedList0, compilerOptions0);\n}",
    "testName" : "test2525"
  },
  "test3636" : {
    "methodSignature" : "public boolean shouldRunCompiler()",
    "methodName" : "shouldRunCompiler",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"8N<21uc\");\n    JSModule jSModule0 = new JSModule(\"8N<21uc\");\n    JSModule[] jSModuleArray0 = new JSModule[3];\n    jSModuleArray0[0] = jSModule0;\n    jSModuleArray0[1] = jSModule0;\n    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(\"8N<21uc\");\n    jSModule0.addFirst(jSSourceFile0);\n    jSModuleArray0[2] = jSModule0;\n    JSModuleGraph jSModuleGraph0 = new JSModuleGraph(jSModuleArray0);\n    commandLineRunner0.printModuleGraphManifestTo(jSModuleGraph0, mockPrintStream0);\n    commandLineRunner0.shouldRunCompiler();\n}",
    "testName" : "test3636"
  },
  "test1515" : {
    "methodSignature" : "List<JSModule> createJsModules(List<String> specs, List<String> jsFiles) throws FlagUsageException, IOException",
    "methodName" : "createJsModules",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    String[] stringArray0 = new String[0];\n    JSModule jSModule0 = new JSModule(\"}QEjGXC2%_l\");\n    List<String> list0 = jSModule0.getProvides();\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    commandLineRunner0.createJsModules(list0, (List<String>) null);\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "final public void run()",
    "methodName" : "run",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0, (PrintStream) null, (PrintStream) null);\n    Supplier<List<JSSourceFile>> supplier0 = (Supplier<List<JSSourceFile>>) mock(Supplier.class, new ViolatedAssumptionAnswer());\n    doReturn((Object) null, (Object) null).when(supplier0).get();\n    commandLineRunner0.enableTestMode(supplier0, supplier0, (Supplier<List<JSModule>>) null, (Function<Integer, Boolean>) null);\n    commandLineRunner0.run();\n}",
    "testName" : "test2626"
  },
  "test3030" : {
    "methodSignature" : "static void createDefineOrTweakReplacements(List<String> definitions, CompilerOptions options, boolean tweaks)",
    "methodName" : "createDefineOrTweakReplacements",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    arrayList0.add(\"\");\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    AbstractCommandLineRunner.createDefineOrTweakReplacements(arrayList0, compilerOptions0, false);\n}",
    "testName" : "test3030"
  },
  "test2020" : {
    "methodSignature" : "static Map<String, String> parseModuleWrappers(List<String> specs, List<JSModule> modules) throws FlagUsageException",
    "methodName" : "parseModuleWrappers",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    JSModule jSModule0 = new JSModule(\"XhKqF;P[:N\");\n    List<String> list0 = jSModule0.getProvides();\n    LinkedList<JSModule> linkedList0 = new LinkedList<JSModule>();\n    linkedList0.add(jSModule0);\n    AbstractCommandLineRunner.parseModuleWrappers(list0, linkedList0);\n}",
    "testName" : "test2020"
  },
  "test3131" : {
    "methodSignature" : "static void createDefineOrTweakReplacements(List<String> definitions, CompilerOptions options, boolean tweaks)",
    "methodName" : "createDefineOrTweakReplacements",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    ArrayList<String> arrayList0 = new ArrayList<String>();\n    arrayList0.add(\"7m=$i4^t\");\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    AbstractCommandLineRunner.createDefineOrTweakReplacements(arrayList0, compilerOptions0, true);\n}",
    "testName" : "test3131"
  },
  "test000" : {
    "methodSignature" : "protected void initOptionsFromFlags(CompilerOptions options)",
    "methodName" : "initOptionsFromFlags",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    String[] stringArray0 = new String[1];\n    stringArray0[0] = \"qnH@O@Rg\";\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    commandLineRunner0.initOptionsFromFlags(compilerOptions0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "List<JSModule> createJsModules(List<String> specs, List<String> jsFiles) throws FlagUsageException, IOException",
    "methodName" : "createJsModules",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    List<String> list0 = ResourceBundle.Control.FORMAT_DEFAULT;\n    commandLineRunner0.createJsModules(list0, list0);\n}",
    "testName" : "test022"
  },
  "test088" : {
    "methodSignature" : "final public void run()",
    "methodName" : "run",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    LinkedList<JSSourceFile> linkedList0 = new LinkedList<JSSourceFile>();\n    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(\"NU(TMkCa\");\n    linkedList0.add(jSSourceFile0);\n    Supplier<List<JSSourceFile>> supplier0 = (Supplier<List<JSSourceFile>>) mock(Supplier.class, new ViolatedAssumptionAnswer());\n    doReturn(linkedList0, linkedList0).when(supplier0).get();\n    commandLineRunner0.enableTestMode(supplier0, supplier0, (Supplier<List<JSModule>>) null, (Function<Integer, Boolean>) null);\n    commandLineRunner0.run();\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "static Map<String, String> parseModuleWrappers(List<String> specs, List<JSModule> modules) throws FlagUsageException",
    "methodName" : "parseModuleWrappers",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    LinkedList<JSModule> linkedList0 = new LinkedList<JSModule>();\n    AbstractCommandLineRunner.parseModuleWrappers((List<String>) null, linkedList0);\n}",
    "testName" : "test1818"
  },
  "test2929" : {
    "methodSignature" : "protected OutputStream filenameToOutputStream(String fileName) throws IOException",
    "methodName" : "filenameToOutputStream",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    String[] stringArray0 = new String[0];\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);\n    OutputStream outputStream0 = commandLineRunner0.filenameToOutputStream((String) null);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "int processResults(Result result, List<JSModule> modules, B options) throws FlagUsageException, IOException",
    "methodName" : "processResults",
    "className" : "com.google.javascript.jscomp.AbstractCommandLineRunner",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    String[] stringArray0 = new String[0];\n    JSError[] jSErrorArray0 = new JSError[0];\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"j|A,z]Ypxx4pY(+Ur1W\");\n    Compiler compiler0 = new Compiler(mockPrintStream0);\n    Result result0 = new Result(jSErrorArray0, jSErrorArray0, \"j|A,z]Ypxx4pY(+Ur1W\", (VariableMap) null, (VariableMap) null, (VariableMap) null, (FunctionInformationMap) null, (SourceMap) null, \"j|A,z]Ypxx4pY(+Ur1W\");\n    CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0, mockPrintStream0, mockPrintStream0);\n    LinkedList<JSModule> linkedList0 = new LinkedList<JSModule>();\n    CompilerOptions compilerOptions0 = compiler0.options;\n    commandLineRunner0.processResults(result0, linkedList0, compilerOptions0);\n}",
    "testName" : "test1919"
  }
}