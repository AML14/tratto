{
  "test114160" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114160() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(142, \"7ei2[\");\n    Node node1 = new Node(11, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node1);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test114160"
  },
  "test06590" : {
    "methodSignature" : "public boolean isOnlyModifiesThisCall()",
    "methodName" : "isOnlyModifiesThisCall",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06590() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(100, 2505, 100);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.isOnlyModifiesThisCall();\n}",
    "testName" : "test06590"
  },
  "test0000" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(35, 64, 14);\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test0000"
  },
  "test0089" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0089() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(132, 132, (-877));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test0089"
  },
  "test06995" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06995() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(106, 2263, 106);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test06995"
  },
  "test103147" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103147() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(150, 106, (-817));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test103147"
  },
  "test06994" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06994() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(106, 2263, 106);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test06994"
  },
  "test103146" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103146() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(150, 106, (-817));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test103146"
  },
  "test05780" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05780() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(79, 15, 29);\n    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;\n    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, closureCodingConvention0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, typedScopeCreator0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test05780"
  },
  "test04055" : {
    "methodSignature" : "public int getVarCount()",
    "methodName" : "getVarCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04055() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(\"com.google.common.collect.SingletonImmutableList$1\", (-1270), 0);\n    Node node1 = new Node(12, node0, 562, (-1));\n    Scope scope0 = typeCheck0.processForTesting(node0, node0);\n    scope0.getVarCount();\n}",
    "testName" : "test04055"
  },
  "test085114" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085114() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(126, (-801), 6158);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test085114"
  },
  "test03242" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03242() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);\n    RenameLabels.ProcessLabels renameLabels_ProcessLabels0 = renameLabels0.new ProcessLabels();\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, renameLabels_ProcessLabels0);\n    Node node0 = new Node(30, 1, 1492);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test03242"
  },
  "test01215" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01215() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(3, (-10), (-10));\n    Node node1 = new Node(7, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test01215"
  },
  "test096134" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096134() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    compiler0.initCompilerOptionsIfTesting();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    Node node0 = new Node(139, 702, 139);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test096134"
  },
  "test04965" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04965() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(50, 111, 111);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test04965"
  },
  "test01216" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01216() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(3, (-10), (-10));\n    Node node1 = new Node(7, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test01216"
  },
  "test04966" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04966() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(50, 111, 111);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test04966"
  },
  "test05779" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05779() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(79, 15, 29);\n    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;\n    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, closureCodingConvention0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, typedScopeCreator0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test05779"
  },
  "test108152" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108152() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(66, 123, 123);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    Node node1 = Node.newNumber((double) 8, 2, 49);\n    Node node2 = new Node(110, node1, node1);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test108152"
  },
  "test091125" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091125() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    GatherSideEffectSubexpressionsCallback gatherSideEffectSubexpressionsCallback0 = new GatherSideEffectSubexpressionsCallback(compiler0, (GatherSideEffectSubexpressionsCallback.SideEffectAccumulator) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, gatherSideEffectSubexpressionsCallback0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(134, 106, 4208);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test091125"
  },
  "test074101" : {
    "methodSignature" : "public boolean isUnscopedQualifiedName()",
    "methodName" : "isUnscopedQualifiedName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074101() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(112, 112, 7);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator((AbstractCompiler) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.isUnscopedQualifiedName();\n}",
    "testName" : "test074101"
  },
  "test091124" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091124() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    GatherSideEffectSubexpressionsCallback gatherSideEffectSubexpressionsCallback0 = new GatherSideEffectSubexpressionsCallback(compiler0, (GatherSideEffectSubexpressionsCallback.SideEffectAccumulator) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, gatherSideEffectSubexpressionsCallback0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(134, 106, 4208);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test091124"
  },
  "test096135" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096135() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    compiler0.initCompilerOptionsIfTesting();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    Node node0 = new Node(139, 702, 139);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test096135"
  },
  "test05372" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05372() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(66, 123, 123);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test05372"
  },
  "test06186" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06186() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(\"com.google.common.collect.SingletonImmutableList$1\", (-1270), 0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node1 = Node.newString(86, \"REF_MEMBER\");\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test06186"
  },
  "test088119" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088119() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(129, 89, (-4016));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test088119"
  },
  "test093129" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093129() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(136, 136, 136);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test093129"
  },
  "test0011" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    Stack<JSType> stack0 = new Stack<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);\n    Node node1 = new Node(22, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test0011"
  },
  "test0012" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0012() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    Stack<JSType> stack0 = new Stack<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);\n    Node node1 = new Node(22, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test0012"
  },
  "test03750" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03750() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);\n    RenameLabels.ProcessLabels renameLabels_ProcessLabels0 = renameLabels0.new ProcessLabels();\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, renameLabels_ProcessLabels0);\n    Node node0 = new Node(122, 64, 64);\n    Node node1 = Node.newString(36, \":_lGO1S*0[ @\");\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test03750"
  },
  "test02025" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02025() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(16, 22, 3437);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test02025"
  },
  "test04560" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04560() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    compiler0.initCompilerOptionsIfTesting();\n    Denormalize denormalize0 = new Denormalize(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize0, (ScopeCreator) null);\n    Node node0 = Node.newNumber((double) 123, 123, 123);\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0, compilerOptions0.checkUndefinedProperties, compilerOptions0.reportUnknownTypes);\n    Node node1 = new Node(46, node0, node0, node0, node0, (-853), 15);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test04560"
  },
  "test05373" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05373() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(66, 123, 123);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test05373"
  },
  "test02534" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02534() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(120, \"!E?kW\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, typeCheck0, (ScopeCreator) null);\n    Node node1 = new Node(23, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test02534"
  },
  "test00910" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00910() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(4, 30, 116);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test00910"
  },
  "test01722" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01722() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(142, \"7ei2[\");\n    Node node1 = new Node(13, 2, 12);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test01722"
  },
  "test080107" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080107() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(120, \"\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test080107"
  },
  "test02939" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02939() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    Stack<JSType> stack0 = new Stack<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);\n    Node node1 = new Node(27, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test02939"
  },
  "test114159" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114159() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(142, \"7ei2[\");\n    Node node1 = new Node(11, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node1);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test114159"
  },
  "test077104" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077104() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(115, 23, 23);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test077104"
  },
  "test087117" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087117() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(128, 3, 12);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test087117"
  },
  "test06691" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06691() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    Vector<JSType> vector0 = new Vector<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);\n    Node node1 = new Node(102, 2, (-2449));\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test06691"
  },
  "test087118" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087118() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(128, 3, 12);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test087118"
  },
  "test0023" : {
    "methodSignature" : "TypeCheck(AbstractCompiler compiler, ReverseAbstractInterpreter reverseInterpreter, JSTypeRegistry typeRegistry)",
    "methodName" : "TypeCheck",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0023() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = null;\n    typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);\n}",
    "testName" : "test0023"
  },
  "test04156" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04156() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(93, (-3951), 148);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node1 = new Node(41, node0, 4780, 2);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test04156"
  },
  "test03343" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03343() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    Vector<JSType> vector0 = new Vector<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);\n    Node node1 = new Node(31, node0, 144, (-1164));\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test03343"
  },
  "test101143" : {
    "methodSignature" : "public boolean isQualifiedName()",
    "methodName" : "isQualifiedName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101143() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    compiler0.initCompilerOptionsIfTesting();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(148, 18, 89);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.isQualifiedName();\n}",
    "testName" : "test101143"
  },
  "test03344" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03344() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    Vector<JSType> vector0 = new Vector<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);\n    Node node1 = new Node(31, node0, 144, (-1164));\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test03344"
  },
  "test05882" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05882() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(82, (-631), 145);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test05882"
  },
  "test05881" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05881() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(82, (-631), 145);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test05881"
  },
  "test02126" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02126() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(17, 115, 16);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test02126"
  },
  "test01318" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01318() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(8, 49, 76);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test01318"
  },
  "test03852" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03852() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, unreachableCodeElimination0, (ScopeCreator) null);\n    Node node0 = new Node(870, 139, 3);\n    Node node1 = new Node(37, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node1, node1);\n}",
    "testName" : "test03852"
  },
  "test01317" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01317() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(8, 49, 76);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test01317"
  },
  "test03853" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03853() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, unreachableCodeElimination0, (ScopeCreator) null);\n    Node node0 = new Node(870, 139, 3);\n    Node node1 = new Node(37, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node1, node1);\n    compiler0.hasErrors();\n}",
    "testName" : "test03853"
  },
  "test093128" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093128() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(136, 136, 136);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test093128"
  },
  "test106150" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106150() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(153, 7948, 153);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.getCharno();\n}",
    "testName" : "test106150"
  },
  "test076103" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076103() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(\"// Input %num%\", 11, 120);\n    Node node1 = new Node(114, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test076103"
  },
  "test098139" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098139() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(145, 145, (-2398));\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test098139"
  },
  "test098138" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098138() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(145, 145, (-2398));\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test098138"
  },
  "test07097" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07097() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);\n    RenameLabels.ProcessLabels renameLabels_ProcessLabels0 = renameLabels0.new ProcessLabels();\n    Node node0 = new Node(107, 147, 147);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, renameLabels_ProcessLabels0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test07097"
  },
  "test07096" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07096() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);\n    RenameLabels.ProcessLabels renameLabels_ProcessLabels0 = renameLabels0.new ProcessLabels();\n    Node node0 = new Node(107, 147, 147);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, renameLabels_ProcessLabels0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test07096"
  },
  "test0034" : {
    "methodSignature" : "public int getSideEffectFlags()",
    "methodName" : "getSideEffectFlags",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0034() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(82, (-631), 145);\n    Node node1 = new Node(44, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    node1.getSideEffectFlags();\n}",
    "testName" : "test0034"
  },
  "test104148" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104148() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, unreachableCodeElimination0, (ScopeCreator) null);\n    Node node0 = Node.newString(151, \"%#0|^{u{(gAk`\");\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test104148"
  },
  "test03851" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03851() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, unreachableCodeElimination0, (ScopeCreator) null);\n    Node node0 = new Node(870, 139, 3);\n    Node node1 = new Node(37, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test03851"
  },
  "test06287" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06287() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(89, 123, 123);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test06287"
  },
  "test05475" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05475() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(70, 7960, 113);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test05475"
  },
  "test082110" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082110() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(122, \"// Input %num%\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test082110"
  },
  "test04661" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04661() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(47, (-3951), 114);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test04661"
  },
  "test05474" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05474() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(70, 7960, 113);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test05474"
  },
  "test095133" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095133() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(138, 138, 138);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test095133"
  },
  "test095132" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095132() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(138, 138, 138);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test095132"
  },
  "test03445" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03445() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(142, \"7ei2[\");\n    Node node1 = new Node(32, 16, 132);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test03445"
  },
  "test01823" : {
    "methodSignature" : "public boolean isLocalResultCall()",
    "methodName" : "isLocalResultCall",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01823() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(100, 2505, 100);\n    Node node1 = new Node(14, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    node0.isLocalResultCall();\n}",
    "testName" : "test01823"
  },
  "test03446" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03446() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(142, \"7ei2[\");\n    Node node1 = new Node(32, 16, 132);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test03446"
  },
  "test02636" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02636() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    compiler0.initCompilerOptionsIfTesting();\n    Denormalize denormalize0 = new Denormalize(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize0, (ScopeCreator) null);\n    Node node0 = Node.newNumber((-6917.435723014053), 123, (-2508));\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0, compilerOptions0.checkUnreachableCode, compilerOptions0.brokenClosureRequiresLevel);\n    Node node1 = new Node(24, node0, node0, node0, node0, 139, 37);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test02636"
  },
  "test02635" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02635() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    compiler0.initCompilerOptionsIfTesting();\n    Denormalize denormalize0 = new Denormalize(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize0, (ScopeCreator) null);\n    Node node0 = Node.newNumber((-6917.435723014053), 123, (-2508));\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0, compilerOptions0.checkUnreachableCode, compilerOptions0.brokenClosureRequiresLevel);\n    Node node1 = new Node(24, node0, node0, node0, node0, 139, 37);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test02635"
  },
  "test109153" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109153() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(105, \"\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, typeCheck0, (ScopeCreator) null);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node0, node0);\n}",
    "testName" : "test109153"
  },
  "test112156" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112156() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    UnreachableCodeElimination unreachableCodeElimination0 = new UnreachableCodeElimination(compiler0, false);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, unreachableCodeElimination0, (ScopeCreator) null);\n    Node node0 = new Node(3, 870, 139);\n    Node node1 = new Node(118, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test112156"
  },
  "test079106" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079106() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(117, \"// Input %num%\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test079106"
  },
  "test090123" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090123() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(133, 19, 42);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test090123"
  },
  "test090122" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090122() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(133, 19, 42);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test090122"
  },
  "test03040" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03040() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(105, \"\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node1 = new Node(28, node0, 10, 21);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test03040"
  },
  "test0045" : {
    "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
    "methodName" : "processForTesting",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0045() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);\n    typeCheck0.processForTesting(node0, node0);\n}",
    "testName" : "test0045"
  },
  "test05983" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05983() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    Stack<JSType> stack0 = new Stack<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test05983"
  },
  "test04257" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04257() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);\n    Vector<JSType> vector0 = new Vector<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);\n    Node node1 = new Node(42, (-1640531527), 16);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test04257"
  },
  "test06792" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06792() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(103, 2, (-980));\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test06792"
  },
  "test05068" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05068() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(61, 130, 61);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test05068"
  },
  "test05067" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05067() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(61, 130, 61);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test05067"
  },
  "test02227" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02227() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(7948, 1597, 3);\n    Node node1 = new Node(18, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test02227"
  },
  "test02229" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02229() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(7948, 1597, 3);\n    Node node1 = new Node(18, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test02229"
  },
  "test081109" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081109() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(121, 121, 142);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test081109"
  },
  "test02228" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02228() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(7948, 1597, 3);\n    Node node1 = new Node(18, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test02228"
  },
  "test03954" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03954() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);\n    Node node1 = new Node(38, 151, 3027);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test03954"
  },
  "test081108" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081108() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(121, 121, 142);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test081108"
  },
  "test01419" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01419() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(9, 36, 394);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test01419"
  },
  "test113157" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113157() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);\n    Node node1 = new Node(20, node0, node0, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test113157"
  },
  "test113158" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113158() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);\n    Node node1 = new Node(20, node0, node0, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test113158"
  },
  "test078105" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078105() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(116, \"// Input %num%\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test078105"
  },
  "test115161" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115161() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(190, 190, (-230));\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(1, node0);\n    node1.addSuppression(\"\");\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test115161"
  },
  "test07198" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07198() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(108, 147, 471);\n    typeCheck0.visit((NodeTraversal) null, node0, node0);\n}",
    "testName" : "test07198"
  },
  "test115162" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115162() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(190, 190, (-230));\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(1, node0);\n    node1.addSuppression(\"\");\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test115162"
  },
  "test05170" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05170() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(62, 28, 23);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test05170"
  },
  "test0056" : {
    "methodSignature" : "public boolean shouldTraverse(NodeTraversal t, Node n, Node parent)",
    "methodName" : "shouldTraverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0056() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(105, \"\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, typeCheck0);\n    typeCheck0.shouldTraverse(nodeTraversal0, node0, node0);\n}",
    "testName" : "test0056"
  },
  "test05576" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05576() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(75, \"// Input %num%\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test05576"
  },
  "test089121" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089121() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(130, 7948, (-3368));\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.getCharno();\n}",
    "testName" : "test089121"
  },
  "test04762" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04762() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = Node.newString(48, \"8^8S&\", 16, 14);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test04762"
  },
  "test04763" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04763() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = Node.newString(48, \"8^8S&\", 16, 14);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test04763"
  },
  "test102144" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102144() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(149, 106, 27);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test102144"
  },
  "test05577" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05577() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(75, \"// Input %num%\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test05577"
  },
  "test102145" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102145() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(149, 106, 27);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test102145"
  },
  "test01012" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01012() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(5, 3021, 36);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test01012"
  },
  "test01011" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01011() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(5, 3021, 36);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test01011"
  },
  "test06388" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06388() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(93, (-3951), 114);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test06388"
  },
  "test084113" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084113() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(124, 124, 7960);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test084113"
  },
  "test01520" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01520() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Vector<JSType> vector0 = new Vector<JSType>();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);\n    Node node1 = new Node(10, 1510, 135);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test01520"
  },
  "test02737" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02737() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(25, 44, 120);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test02737"
  },
  "test04358" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04358() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    Vector<JSType> vector0 = new Vector<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);\n    Node[] nodeArray0 = new Node[0];\n    Node node1 = new Node(43, nodeArray0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test04358"
  },
  "test110154" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110154() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(120, 120, (-24));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node0, node0);\n}",
    "testName" : "test110154"
  },
  "test03547" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03547() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    Vector<JSType> vector0 = new Vector<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);\n    Node node1 = new Node(33, 37, 142);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test03547"
  },
  "test092126" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092126() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    compiler0.initCompilerOptionsIfTesting();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    Node node0 = new Node(135, 702, 135);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test092126"
  },
  "test01924" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01924() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(116, \"R)XQjNy2GEU`LD8\");\n    Node node1 = new Node(15, 19, 4747);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test01924"
  },
  "test092127" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092127() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    compiler0.initCompilerOptionsIfTesting();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    Node node0 = new Node(135, 702, 135);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test092127"
  },
  "test107151" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107151() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);\n    Node node1 = new Node(105, 101, 22);\n    typeCheck0.visit(nodeTraversal0, node0, node1);\n}",
    "testName" : "test107151"
  },
  "test097136" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097136() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(144, 150, 2546);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test097136"
  },
  "test073100" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073100() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(123, 1600, 0);\n    Node node1 = new Node(111, 19, 40);\n    typeCheck0.visit((NodeTraversal) null, node1, node0);\n}",
    "testName" : "test073100"
  },
  "test097137" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097137() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(144, 150, 2546);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test097137"
  },
  "test116163" : {
    "methodSignature" : "double getTypedPercent()",
    "methodName" : "getTypedPercent",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116163() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    double double0 = typeCheck0.getTypedPercent();\n}",
    "testName" : "test116163"
  },
  "test0067" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0067() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(118, \"\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test0067"
  },
  "test05169" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05169() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(62, 28, 23);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test05169"
  },
  "test088120" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088120() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(129, 89, (-4016));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test088120"
  },
  "test099140" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099140() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(93, (-3951), 148);\n    Node node1 = new Node(146, 18, 108);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test099140"
  },
  "test105149" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105149() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(152, 1273, 138);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test105149"
  },
  "test02332" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02332() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Denormalize denormalize0 = new Denormalize(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize0, (ScopeCreator) null);\n    Node node0 = Node.newNumber(1.0, 136, 123);\n    Node node1 = new Node(19, node0, node0, node0, node0, 26, 32);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test02332"
  },
  "test03141" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03141() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(29, 8200, 28);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test03141"
  },
  "test02331" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02331() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Denormalize denormalize0 = new Denormalize(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize0, (ScopeCreator) null);\n    Node node0 = Node.newNumber(1.0, 136, 123);\n    Node node1 = new Node(19, node0, node0, node0, node0, 26, 32);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test02331"
  },
  "test083111" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083111() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(123, 89, 123);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test083111"
  },
  "test02330" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02330() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Denormalize denormalize0 = new Denormalize(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize0, (ScopeCreator) null);\n    Node node0 = Node.newNumber(1.0, 136, 123);\n    Node node1 = new Node(19, node0, node0, node0, node0, 26, 32);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test02330"
  },
  "test06893" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06893() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(105, \"\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test06893"
  },
  "test083112" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083112() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(123, 89, 123);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test083112"
  },
  "test094130" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094130() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(137, 89, 123);\n    Denormalize.StripConstantAnnotations denormalize_StripConstantAnnotations0 = new Denormalize.StripConstantAnnotations((AbstractCompiler) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize_StripConstantAnnotations0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test094130"
  },
  "test01114" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01114() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);\n    Node node1 = new Node(6, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test01114"
  },
  "test01113" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01113() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);\n    Node node1 = new Node(6, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.hasErrors();\n}",
    "testName" : "test01113"
  },
  "test094131" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094131() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(137, 89, 123);\n    Denormalize.StripConstantAnnotations denormalize_StripConstantAnnotations0 = new Denormalize.StripConstantAnnotations((AbstractCompiler) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize_StripConstantAnnotations0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getErrorCount();\n}",
    "testName" : "test094131"
  },
  "test04864" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04864() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);\n    RenameLabels.ProcessLabels renameLabels_ProcessLabels0 = renameLabels0.new ProcessLabels();\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, renameLabels_ProcessLabels0);\n    Node node0 = new Node(49, 109, 0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test04864"
  },
  "test05678" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05678() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);\n    RenameLabels.ProcessLabels renameLabels_ProcessLabels0 = renameLabels0.new ProcessLabels();\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, renameLabels_ProcessLabels0);\n    Node node0 = Node.newString(78, \"\");\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test05678"
  },
  "test099141" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099141() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(93, (-3951), 148);\n    Node node1 = new Node(146, 18, 108);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test099141"
  },
  "test111155" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111155() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    compiler0.initCompilerOptionsIfTesting();\n    Denormalize denormalize0 = new Denormalize(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, denormalize0, (ScopeCreator) null);\n    Node node0 = Node.newNumber((-6917.435723014053), 123, (-2508));\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0, compilerOptions0.checkUndefinedProperties, compilerOptions0.reportUnknownTypes);\n    typeCheck0.visitName(nodeTraversal0, node0, node0);\n}",
    "testName" : "test111155"
  },
  "test05271" : {
    "methodSignature" : "public boolean isLocalResultCall()",
    "methodName" : "isLocalResultCall",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05271() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(64, 50, 23);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.isLocalResultCall();\n}",
    "testName" : "test05271"
  },
  "test06085" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06085() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(26, 123, (-1321));\n    Node node1 = new Node(84, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test06085"
  },
  "test06084" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06084() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(26, 123, (-1321));\n    Node node1 = new Node(84, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test06084"
  },
  "test086115" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086115() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    VarCheck varCheck0 = new VarCheck(compiler0, false);\n    MemoizedScopeCreator memoizedScopeCreator0 = new MemoizedScopeCreator((ScopeCreator) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, varCheck0, memoizedScopeCreator0);\n    Node node0 = new Node(127);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test086115"
  },
  "test086116" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086116() throws Throwable {\n    Logger logger0 = Logger.getAnonymousLogger();\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    VarCheck varCheck0 = new VarCheck(compiler0, false);\n    MemoizedScopeCreator memoizedScopeCreator0 = new MemoizedScopeCreator((ScopeCreator) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, varCheck0, memoizedScopeCreator0);\n    Node node0 = new Node(127);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    loggerErrorManager0.getWarningCount();\n}",
    "testName" : "test086116"
  },
  "test0078" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0078() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode((String) null, \"S*65>P1ZlRo'M`\");\n    JsAst jsAst0 = new JsAst(jSSourceFile0);\n    Node node0 = jsAst0.getAstRoot(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test0078"
  },
  "test06489" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06489() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(95, 138, 138);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test06489"
  },
  "test100142" : {
    "methodSignature" : "double getTypedPercent()",
    "methodName" : "getTypedPercent",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100142() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(147, 147, 145);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    double double0 = typeCheck0.getTypedPercent();\n}",
    "testName" : "test100142"
  },
  "test07299" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07299() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    Node node0 = new Node(110, (-2858), (-2858));\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test07299"
  },
  "test01621" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01621() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(\"com.google.common.collect.SingletonImmutableList$1\", (-1270), 0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node1 = new Node(12, node0, 562, (-1));\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test01621"
  },
  "test03648" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03648() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(34, 280, 153);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test03648"
  },
  "test03649" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03649() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(34, 280, 153);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test03649"
  },
  "test02433" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02433() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    RenameLabels renameLabels0 = new RenameLabels((AbstractCompiler) null);\n    RenameLabels.ProcessLabels renameLabels_ProcessLabels0 = renameLabels0.new ProcessLabels();\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, renameLabels_ProcessLabels0);\n    Node node0 = Node.newString(105, \"\");\n    Node node1 = Node.newString(21, \"can only implement interfaces\");\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test02433"
  },
  "test04459" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04459() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(45, (-3028), 39);\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test04459"
  },
  "test02838" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02838() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(26, 123, (-1321));\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test02838"
  },
  "test075102" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075102() throws Throwable {\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler0 = new Compiler(loggerErrorManager0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    compiler0.initCompilerOptionsIfTesting();\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    Node node0 = new Node(113, 7948, 113);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test075102"
  }
}