project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""coyr"");
    assertNotNull(node0);
}",0,
project,0,test001,"public void test001() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""coyr"");
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""coyr"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    JsDocToken jsDocToken0 = JsDocToken.EOC;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertEquals(0, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test002,"public void test002() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""coyr"");
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""coyr"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    JsDocToken jsDocToken0 = JsDocToken.EOC;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertTrue(boolean0);
}",0,
project,0,test013,"public void test013() throws Throwable {
    Node node0 = Node.newString("")~>"");
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("")~>"");
    HashSet<String> hashSet0 = new HashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
    ErrorCollector errorCollector0 = new ErrorCollector();
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
    boolean boolean0 = jsDocInfoParser0.hasParsedJSDocInfo();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test024,"public void test024() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""(I;2"");
    assertNull(node0);
}",0,
project,0,test035,"public void test035() throws Throwable {
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
    Node node0 = Node.newString(""nq<=v=.'vcD3EgF"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""nq<=v=.'vcD3EgF"", 4095, 46);
    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
    Comment comment0 = new Comment(49, 4095, token_CommentType0, ""nq<=v=.'vcD3EgF"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JSDocInfo jSDocInfo0 = jsDocInfoParser0.getFileOverviewJSDocInfo();
    assertNull(jSDocInfo0);
}",0,assertNotNull(jSDocInfo0)
project,0,test046,"public void test046() throws Throwable {
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""Q9bugwgCe+\n"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = Node.newString(""Q9bugwgCe+\n"");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
    Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.getJsDocBuilderForNode();
    jsDocInfoParser0.setFileLevelJsDocBuilder(node_FileLevelJsDocBuilder0);
}",0,
project,0,test057,"public void test057() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""msg.jsdoc.interface.constructor"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test058,"public void test058() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""msg.jsdoc.interface.constructor"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""msg.jsdoc.interface.constructor"", 15, 55);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    jsDocInfoParser0.setFileOverviewJSDocInfo((JSDocInfo) null);
    assertEquals(0, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test059,"public void test059() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""msg.jsdoc.interface.constructor"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""msg.jsdoc.interface.constructor"", 15, 55);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    jsDocInfoParser0.setFileOverviewJSDocInfo((JSDocInfo) null);
    assertEquals(31, node0.getLength());
}",1,
project,0,test0510,"public void test0510() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""msg.jsdoc.interface.constructor"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""msg.jsdoc.interface.constructor"", 15, 55);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    jsDocInfoParser0.setFileOverviewJSDocInfo((JSDocInfo) null);
    assertTrue(node0.isString());
}",0,assertTrue(node0.isString())
project,0,test0611,"public void test0611() throws Throwable {
    Charset charset0 = Charset.defaultCharset();
    Set<String> set0 = charset0.aliases();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(set0, set0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""@*"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""@*"", 54, 31);
    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
    Comment comment0 = new Comment(47, 16, token_CommentType0, ""@*"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
project,0,test0712,"public void test0712() throws Throwable {
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""(I;2"", 53, 42);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",0,
project,0,test0813,"public void test0813() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""'9wg.\n"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test0814,"public void test0814() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""'9wg.\n"");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""'9wg.\n"", 1);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
    JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
    assertEquals(0, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test0815,"public void test0815() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""'9wg.\n"");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""'9wg.\n"", 1);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
    JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
    assertNotNull(jSDocInfo0);
}",0,assertNotNull(jSDocInfo0)
project,0,test0816,"public void test0816() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""'9wg.\n"");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""'9wg.\n"", 1);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
    JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
    assertEquals(5, node0.getLength());
}",1,
project,0,test0817,"public void test0817() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""'9wg.\n"");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""'9wg.\n"", 1);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
    JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
    assertEquals(0, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test0918,"public void test0918() throws Throwable {
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""Q9bugwgCe+\n"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""Q9bugwgCe+\n"");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    node0.setSourceFileForTesting(""Q9bugwgCe+\n"");
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
    // Undeclared exception!
    try {
        jsDocInfoParser0.parse();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser"", e);
    }
}",0,
project,0,test1019,"public void test1019() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("")enN3\""hcA}gLz~UF1"", 52, 15);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
    JSDocInfo jSDocInfo0 = jsDocInfoParser0.parseInlineTypeDoc();
    assertNull(jSDocInfo0);
}",0,assertNotNull(jSDocInfo0)
project,0,test1120,"public void test1120() throws Throwable {
    Locale locale0 = Locale.GERMAN;
    Set<String> set0 = locale0.getUnicodeLocaleAttributes();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
    Node node0 = Node.newString("".java"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""@lXv@"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
project,0,test1221,"public void test1221() throws Throwable {
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""*(|shST:z OIyID!N-"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = Node.newString(""*(|shST:z OIyID!N-"");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
project,0,test1322,"public void test1322() throws Throwable {
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""Rr\""}!Ot+6+}S:"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""Rr\""}!Ot+6+}S:"", 1, 2);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment((-412283329), 2, token_CommentType0, ""STRING_TYPE"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.LC;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertEquals(4098, node1.getSourcePosition());
}",0,
project,0,test1323,"public void test1323() throws Throwable {
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""Rr\""}!Ot+6+}S:"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""Rr\""}!Ot+6+}S:"", 1, 2);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment((-412283329), 2, token_CommentType0, ""STRING_TYPE"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.LC;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertNotNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test1324,"public void test1324() throws Throwable {
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""Rr\""}!Ot+6+}S:"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""Rr\""}!Ot+6+}S:"", 1, 2);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment((-412283329), 2, token_CommentType0, ""STRING_TYPE"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.LC;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertEquals(3, node1.getLength());
}",0,"assertEquals(1, node1.getLength())"
project,0,test1425,"public void test1425() throws Throwable {
    Node node0 = Node.newString(""1bxZ"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""!1.-J"", 30, 52);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment(55, 31, token_CommentType0, ""!1.-J"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
project,0,test1526,"public void test1526() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""tTcoyr"");
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("",\n"", 37, 42);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
    ErrorCollector errorCollector0 = new ErrorCollector();
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
    // Undeclared exception!
    try {
        jsDocInfoParser0.parse();
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.head.ast.ErrorCollector"", e);
    }
}",0,
project,0,test1627,"public void test1627() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""cbQoE,!MA9"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("":u'O,PdUdnsL,<*"", 8, 54);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
project,0,test1728,"public void test1728() throws Throwable {
    Node node0 = Node.newString(""~>"");
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""~>"");
    HashSet<String> hashSet0 = new HashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
    ErrorCollector errorCollector0 = new ErrorCollector();
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
    JsDocToken jsDocToken0 = JsDocToken.QMARK;
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    // Undeclared exception!
    try {
        jsDocInfoParser0.parse();
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.head.ast.ErrorCollector"", e);
    }
}",1,
project,0,test1829,"public void test1829() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""[B1)"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""[B1)"", 12, 8);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
project,0,test1930,"public void test1930() throws Throwable {
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""{=rf"");
    HashSet<String> hashSet0 = new HashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
    ErrorCollector errorCollector0 = new ErrorCollector();
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
    // Undeclared exception!
    try {
        jsDocInfoParser0.parse();
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.head.ast.ErrorCollector"", e);
    }
}",1,
project,0,test2031,"public void test2031() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""Ko%"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test2032,"public void test2032() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""Ko%"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""Ko%"", 15, 55);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.LT;
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    jsDocInfoParser0.parse();
    assertEquals(0, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test2033,"public void test2033() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""Ko%"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""Ko%"", 15, 55);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.LT;
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    jsDocInfoParser0.parse();
    assertTrue(node0.isString());
}",0,assertTrue(node0.isString())
project,0,test2034,"public void test2034() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""Ko%"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""Ko%"", 15, 55);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.LT;
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    jsDocInfoParser0.parse();
    assertEquals(0, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test2135,"public void test2135() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""?"", 47, 37);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",0,
project,0,test2236,"public void test2236() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""|ujoSxU"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",0,
project,0,test2337,"public void test2337() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""*]%,"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""*]%,"", 2, 43);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
project,0,test2438,"public void test2438() throws Throwable {
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    HashSet<String> hashSet0 = new HashSet<String>();
    Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
    ErrorCollector errorCollector0 = new ErrorCollector();
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""}"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
    // Undeclared exception!
    try {
        jsDocInfoParser0.parse();
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.head.ast.ErrorCollector"", e);
    }
}",0,
project,0,test2539,"public void test2539() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""$"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("")enN3\""hc}gLz~UF1"", 52, 15);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
project,0,test2640,"public void test2640() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""*"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test2641,"public void test2641() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""*"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""*"", 2, 43);
    JsDocToken jsDocToken0 = JsDocToken.ELLIPSIS;
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    jsDocInfoParser0.parse();
    assertEquals(302, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test2642,"public void test2642() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""*"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""*"", 2, 43);
    JsDocToken jsDocToken0 = JsDocToken.ELLIPSIS;
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    jsDocInfoParser0.parse();
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(0, node0.getChildCount())"
project,0,test2743,"public void test2743() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""=)!Wf}404"", 52, 15);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
project,0,test2844,"public void test2844() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""*aB1u1/"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""*aB1u1/"", 46);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
project,0,test2945,"public void test2945() throws Throwable {
    Node node0 = Node.newString(""coyr"");
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""coyr"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    JsDocToken jsDocToken0 = JsDocToken.EOC;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertTrue(boolean0);
}",1,
project,0,test3046,"public void test3046() throws Throwable {
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""; !S^D( 5{SwmW "");
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""; !S^D( 5{SwmW "");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
    // Undeclared exception!
    try {
        jsDocInfoParser0.parse();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.parsing.JsDocInfoParser$ErrorReporterParser"", e);
    }
}",0,
project,0,test3147,"public void test3147() throws Throwable {
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""NY|"");
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    Set<String> set0 = jSDocInfo0.getModifies();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.LC;
    Node node0 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test3248,"public void test3248() throws Throwable {
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""7tbE%"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""7tbE%"", 38);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment(49, 4095, token_CommentType0, ""7tbE%"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.LC;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertEquals(155648, node1.getSourcePosition());
}",0,
project,0,test3249,"public void test3249() throws Throwable {
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""7tbE%"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""7tbE%"", 38);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment(49, 4095, token_CommentType0, ""7tbE%"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.LC;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertNotNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test3250,"public void test3250() throws Throwable {
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""7tbE%"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""7tbE%"", 38);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment(49, 4095, token_CommentType0, ""7tbE%"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.LC;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertEquals(5, node1.getLength());
}",0,"assertEquals(0, node1.getLength())"
project,0,test3351,"public void test3351() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""e$_FW0T^ .<Lc"");
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test3452,"public void test3452() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""z-u.<=Lc"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test3453,"public void test3453() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""z-u.<=Lc"");
    assertEquals(0, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test3454,"public void test3454() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""z-u.<=Lc"");
    assertEquals(3, node0.getLength());
}",0,"assertEquals(1, node0.getLength())"
project,0,test3555,"public void test3555() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""?,LmixF\""@%6O@m."");
    assertEquals(304, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test3556,"public void test3556() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""?,LmixF\""@%6O@m."");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test3657,"public void test3657() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""? =u"");
    assertEquals(304, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test3658,"public void test3658() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""? =u"");
    assertNotNull(node0);
}",0,
project,0,test3759,"public void test3759() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""?]#:"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test3760,"public void test3760() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""?]#:"");
    assertEquals(304, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test3861,"public void test3861() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""?}N-&xJ,\""j^e'$ei=bX"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test3862,"public void test3862() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""?}N-&xJ,\""j^e'$ei=bX"");
    assertEquals(304, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test3963,"public void test3963() throws Throwable {
    Node node0 = Node.newString("")~>"");
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("")~>"");
    HashSet<String> hashSet0 = new HashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(hashSet0, hashSet0, true, config_LanguageMode0, true);
    ErrorCollector errorCollector0 = new ErrorCollector();
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
    JsDocToken jsDocToken0 = JsDocToken.QMARK;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertEquals(304, node1.getType());
}",0,
project,0,test4064,"public void test4064() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""IRSOgvs$"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test4065,"public void test4065() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""IRSOgvs$"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""|kV)WPX@"", (-649), 43);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment((-2466), 147, token_CommentType0, ""|kV)WPX@"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.QMARK;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertEquals(304, node1.getType());
}",0,
project,0,test4066,"public void test4066() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""IRSOgvs$"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""|kV)WPX@"", (-649), 43);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment((-2466), 147, token_CommentType0, ""|kV)WPX@"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.QMARK;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertNotNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test4067,"public void test4067() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = JsDocInfoParser.parseTypeString(""IRSOgvs$"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""|kV)WPX@"", (-649), 43);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment((-2466), 147, token_CommentType0, ""|kV)WPX@"");
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.QMARK;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    assertEquals(0, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test4168,"public void test4168() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""?>.9!3"");
    assertEquals(304, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test4169,"public void test4169() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""?>.9!3"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test4270,"public void test4270() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString("" sN%-|Q?u6"");
    assertNotNull(node0);
}",0,
project,0,test4271,"public void test4271() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString("" sN%-|Q?u6"");
    assertEquals(301, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test4272,"public void test4272() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString("" sN%-|Q?u6"");
    assertEquals(2, node0.getChildCount());
}",0,
project,0,test4273,"public void test4273() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString("" sN%-|Q?u6"");
    assertEquals(6, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test4374,"public void test4374() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""{=rf"");
    assertNull(node0);
}",0,
project,0,test4475,"public void test4475() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""function"");
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test4576,"public void test4576() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""null"");
    assertEquals(0, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test4577,"public void test4577() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""null"");
    assertNotNull(node0);
}",0,
project,0,test4578,"public void test4578() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""null"");
    assertEquals(4, node0.getLength());
}",0,"assertEquals(1, node0.getLength())"
project,0,test4679,"public void test4679() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""undefined"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test4680,"public void test4680() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""undefined"");
    assertEquals(0, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test4681,"public void test4681() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""undefined"");
    assertEquals(9, node0.getLength());
}",0,"assertEquals(1, node0.getLength())"
project,0,test4782,"public void test4782() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""|*|SZ6C).\""6G7Xa"");
    assertEquals(3, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test4783,"public void test4783() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""|*|SZ6C).\""6G7Xa"");
    assertEquals(301, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test4784,"public void test4784() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""|*|SZ6C).\""6G7Xa"");
    assertNotNull(node0);
}",0,
project,0,test4885,"public void test4885() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""<N|X_I20p ,"");
    assertNull(node0);
}",0,
project,0,test4986,"public void test4986() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""(Ljava/lang/String;)Ljava/lang/StringBuffer;"");
    assertNotNull(node0);
}",0,
project,0,test4987,"public void test4987() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""(Ljava/lang/String;)Ljava/lang/StringBuffer;"");
    assertEquals(301, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test4988,"public void test4988() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""(Ljava/lang/String;)Ljava/lang/StringBuffer;"");
    assertEquals(1, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test5089,"public void test5089() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""[ativebcode, asiJq="");
    assertNull(node0);
}",0,
project,0,test5190,"public void test5190() throws Throwable {
    Node node0 = Node.newString(""1bxV"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""!1.J"", 30, 52);
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment(55, 31, token_CommentType0, ""!1.J"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.ELLIPSIS;
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    JsDocToken jsDocToken1 = JsDocToken.LB;
    Node node1 = jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken1);
    assertNull(node1);
}",0,
project,0,test5291,"public void test5291() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""["");
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test5392,"public void test5392() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""[iX]T[Ntig&[{];[eRL"");
    assertEquals(308, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test5393,"public void test5393() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""[iX]T[Ntig&[{];[eRL"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test5394,"public void test5394() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""[iX]T[Ntig&[{];[eRL"");
    assertTrue(node0.hasChildren());
}",0,
project,0,test5495,"public void test5495() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""{N}"");
    assertNotNull(node0);
}",0,
project,0,test5496,"public void test5496() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""{N}"");
    assertEquals(309, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test5497,"public void test5497() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""{N}"");
    assertTrue(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test5598,"public void test5598() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""{O,Q/iEUCWI`$JO"");
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test5699,"public void test5699() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""{OH6w:Z"");
    assertNull(node0);
}",0,
project,0,test57100,"public void test57100() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""{OyW:"");
    assertNull(node0);
}",0,
project,0,test58101,"public void test58101() throws Throwable {
    Node node0 = JsDocInfoParser.parseTypeString(""?"");
    assertNull(node0);
}",0,assertNotNull(node0)
project,0,test59102,"public void test59102() throws Throwable {
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""%<p8zIb;*/Rm}{vW"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""fu{nction"");
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test59103,"public void test59103() throws Throwable {
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""%<p8zIb;*/Rm}{vW"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""fu{nction"");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
    jsDocInfoParser0.parse();
    assertEquals(0, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test59104,"public void test59104() throws Throwable {
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""%<p8zIb;*/Rm}{vW"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""fu{nction"");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
    jsDocInfoParser0.parse();
    assertTrue(node0.isString());
}",0,assertTrue(node0.isString())
project,0,test59105,"public void test59105() throws Throwable {
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""%<p8zIb;*/Rm}{vW"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node0 = JsDocInfoParser.parseTypeString(""fu{nction"");
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, (ErrorReporter) null);
    jsDocInfoParser0.parse();
    assertEquals(0, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test60106,"public void test60106() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = Node.newString(""*aB1u1/"");
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(""*aB1u1/"", 46);
    JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, toolErrorReporter0);
    JsDocToken jsDocToken0 = JsDocToken.EOL;
    jsDocInfoParser0.parseAndRecordTypeNode(jsDocToken0);
    boolean boolean0 = jsDocInfoParser0.parse();
    assertFalse(boolean0);
}",1,
