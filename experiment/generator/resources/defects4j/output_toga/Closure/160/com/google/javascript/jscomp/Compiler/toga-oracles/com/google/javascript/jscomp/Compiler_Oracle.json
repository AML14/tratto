[ {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(JSSourceFile extern, JSModule[] modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String toSource(final JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String[] toSourceArray()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String toSource()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test034"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test035"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String[] toSourceArray(final JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test046"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void resetUniqueNameId()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test057"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "CssRenamingMap getCssRenamingMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test079"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean hasRegExpGlobalReferences()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test0810"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test0911"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test0912"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void setState(IntermediateState state)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1013"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void init(JSSourceFile[] externs, JSSourceFile[] inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1114"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "CompilerOptions getOptions()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(compilerOptions0)",
  "exception" : "",
  "testName" : "test1215"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void rebuildInputsFromModules()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1316"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "ControlFlowGraph<Node> computeCFG()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1417"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "VariableMap getPropertyMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(variableMap0)",
  "exception" : "",
  "testName" : "test1518"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "ScopeCreator getTypedScopeCreator()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(scopeCreator0)",
  "exception" : "",
  "testName" : "test1619"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node parseSyntheticCode(String fileName, String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1720"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void processDefines()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1821"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallableWithLargeStack(final Callable<T> callable)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(astValidator0)",
  "exception" : "",
  "testName" : "test1922"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public LanguageMode languageMode()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2023"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void setCssRenamingMap(CssRenamingMap map)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2124"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, int0)",
  "exception" : "",
  "testName" : "test2225"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "VariableMap getVariableMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(variableMap0)",
  "exception" : "",
  "testName" : "test2326"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "FunctionInformationMap getFunctionalInformationMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(functionInformationMap0)",
  "exception" : "",
  "testName" : "test2427"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Supplier<String> getUniqueNameIdSupplier()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(supplier0)",
  "exception" : "",
  "testName" : "test2528"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void recordFunctionInformation()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2629"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public SourceMap getSourceMap()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(sourceMap0)",
  "exception" : "",
  "testName" : "test2730"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2831"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Node getRoot()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2932"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "List<CompilerInput> getInputsForTesting()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(list0)",
  "exception" : "",
  "testName" : "test3033"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(JSSourceFile extern, JSModule[] modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3134"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void removeChangeHandler(CodeChangeHandler handler)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3235"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void setHasRegExpGlobalReferences(boolean references)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3336"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public JSError[] getMessages()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3437"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "List<CompilerInput> getExternsForTesting()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(list0)",
  "exception" : "",
  "testName" : "test3538"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void removeTryCatchFinally()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3639"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Scope getTopScope()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(scope0)",
  "exception" : "",
  "testName" : "test3740"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "ReferenceMap getGlobalVarReferences()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(referenceCollectingCallback_ReferenceMap0)",
  "exception" : "",
  "testName" : "test3841"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test4346"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public ErrorManager getErrorManager()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4447"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test4448"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4549"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compileModules(List<JSSourceFile> externs, List<JSModule> modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4550"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test4652"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.hasErrors())",
  "exception" : "",
  "testName" : "test4753"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4754"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getDepth()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, jSModule0.getDepth())",
  "exception" : "",
  "testName" : "test4855"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test4956"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4957"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5058"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compileModules(List<JSSourceFile> externs, List<JSModule> modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5159"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5160"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5261"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5362"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "static <T> T runCallable(final Callable<T> callable, boolean useLargeStackThread, boolean trace)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5463"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void setPassConfig(PassConfig passes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5564"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void setPassConfig(PassConfig passes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5665"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5766"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void stripCode(Set<String> stripTypes, Set<String> stripNameSuffixes, Set<String> stripTypePrefixes, Set<String> stripNamePrefixes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5767"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test5768"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void endPass()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5869"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compileModules(List<JSSourceFile> externs, List<JSModule> modules, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5970"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test5971"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node parseInputs()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6072"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isSyntheticBlock()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.isSyntheticBlock())",
  "exception" : "",
  "testName" : "test6073"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node0.getType())",
  "exception" : "",
  "testName" : "test6074"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean areNodesEqualForInlining(Node n1, Node n2)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6175"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean acceptConstKeyword()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(compiler0.acceptConstKeyword())",
  "exception" : "",
  "testName" : "test6276"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6377"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test6378"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public CompilerInput newExternInput(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6479"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void addIncrementalSourceAst(JsAst ast)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6580"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test6681"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test6782"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean replaceIncrementalSourceAst(JsAst ast)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(boolean0)",
  "exception" : "",
  "testName" : "test6783"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test6884"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test6985"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public ReverseAbstractInterpreter getReverseAbstractInterpreter()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(reverseAbstractInterpreter0)",
  "exception" : "",
  "testName" : "test6986"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test7087"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test7188"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node0.getType())",
  "exception" : "",
  "testName" : "test7189"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test7290"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test7291"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node parseTestCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test7392"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test7493"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test7998"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "boolean isInliningForbidden()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test8099"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test80100"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test81101"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test82102"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public void report(JSError error)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test83103"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void throwInternalError(String message, Exception cause)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test84104"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test85105"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Result compile(List<JSSourceFile> externs, List<JSSourceFile> inputs, CompilerOptions options)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test86106"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public Region getSourceRegion(String sourceName, int lineNumber)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test87108"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test88109"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node getNodeForCodeInsertion(JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test89110"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "Node getNodeForCodeInsertion(JSModule module)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test90111"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String getAstDotGraph() throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test91112"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public String getAstDotGraph() throws IOException",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test92113"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test93114"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean isTypeCheckingEnabled()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.isTypeCheckingEnabled())",
  "exception" : "",
  "testName" : "test94115"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "void updateGlobalVarReferences(Map<Var, ReferenceCollection> refMapPatch, Node collectionRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test95116"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test96117"
}, {
  "className" : "com.google.javascript.jscomp.Compiler",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node0.getChildCount())",
  "exception" : "",
  "testName" : "test96118"
} ]