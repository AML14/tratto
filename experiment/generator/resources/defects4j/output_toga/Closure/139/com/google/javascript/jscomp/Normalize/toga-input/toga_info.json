{
  "test1212" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(118, \"=\");\n    Node node1 = new Node(126, node0, node0);\n    Normalize normalize0 = new Normalize(compiler0, true);\n    normalize0.process(node0, node1);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(126, \"`e>\\\"\\\"\\\"YV\");\n    Node node1 = new Node(119, node0, node0);\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, false);\n    normalize0.process(node1, node0);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"=rbX{5<F.&x~sU\", \"JM\");\n    Node node1 = new Node(105, node0, node0);\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, false);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\":&2/eh^ ^+p%q\", \"com.google.javascript.jscomp.mozilla.rhino.ast.Block\");\n    Node node1 = compiler0.parseSyntheticCode(\":&2/eh^ ^+p%q\", \"com.google.javascript.jscomp.mozilla.rhino.ast.Block\");\n    Node node2 = new Node(118, node0, node1);\n    node0.addChildToBack(node2);\n    Normalize normalize0 = new Normalize(compiler0, false);\n    normalize0.process(node2, node0);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(126, \"com.google.javascript.jscomp.RemoveConstantExpressions$1\");\n    Node node1 = new Node(113, node0, node0);\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, true);\n    normalize0.process(node1, node1);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"=rbX{5<F.&x~sU\", \"=rbX{5<F.&x~sU\");\n    Node node1 = new Node(105, node0, node0);\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, false);\n    normalize0.process(node1, node0);\n}",
    "testName" : "test2222"
  },
  "test011" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();\n    JSType[] jSTypeArray0 = new JSType[1];\n    JSTypeNative jSTypeNative0 = JSTypeNative.TYPE_ERROR_TYPE;\n    ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);\n    jSTypeArray0[0] = (JSType) objectType0;\n    Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "protected void traverseInnerNode(Node node, Node parent, Scope refinedScope)",
    "methodName" : "traverseInnerNode",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, false);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_VerifyConstants0);\n    Node node0 = compiler0.parseTestCode(\"ATI\");\n    nodeTraversal0.traverseInnerNode(node0, node0, (Scope) null);\n    nodeTraversal0.traverseInnerNode(node0, node0, (Scope) null);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(126, \"AFR\");\n    Node node1 = new Node(115, node0, node0);\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, false);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(113, \"C:`^req->R:MdF%SKX\");\n    Normalize normalize0 = new Normalize(compiler0, false);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(126, \"4JG/@x7bNj}[FmJG^u\");\n    Node node1 = new Node(124, node0, node0);\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, false);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test1616"
  },
  "test1717" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Normalize normalize0 = new Normalize(compiler0, false);\n    Node node0 = new Node(126);\n    node0.addChildToFront(node0);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test1717"
  },
  "test1414" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(126, \"i[\");\n    Node node1 = new Node(120, node0, node0);\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, false);\n    normalize0.process(node1, node0);\n}",
    "testName" : "test1414"
  },
  "test1515" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(126, \"i5\");\n    Node node1 = new Node(122, node0, node0);\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, false);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test1515"
  },
  "test2020" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"=rbX{5<F&x~sU\", \"=rbX{5<F&x~sU\");\n    Node node1 = new Node(118, node0, node0);\n    node1.removeChildren();\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, true);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test2020"
  },
  "test000" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Normalize normalize0 = new Normalize(compiler0, false);\n    Node node0 = compiler0.parseSyntheticCode(\"com.googlecommn.base.Predicates$InPredicate\", \"com.googlecommn.base.Predicates$InPredicate\");\n    Node node1 = new Node(37, node0);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public boolean isQuotedString()",
    "methodName" : "isQuotedString",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);\n    Node node0 = compiler0.parseTestCode(\"AITI\");\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);\n    node0.isQuotedString();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public boolean isVarArgs()",
    "methodName" : "isVarArgs",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);\n    Node node0 = compiler0.parseTestCode(\"I\");\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);\n    node0.isVarArgs();\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(126, \"i5\");\n    Node node1 = new Node(116, node0, node0);\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, true);\n    normalize0.process(node1, node0);\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Normalize normalize0 = new Normalize(compiler0, false);\n    Node node0 = new Node(126);\n    Node node1 = new Node(20, node0, node0, node0, node0);\n    node0.addChildToFront(node1);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test1818"
  },
  "test1919" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"=rbX{5<F&x~sU\", \"=rbX{5<F&x~sU\");\n    Node node1 = new Node(118, node0, node0);\n    node0.addChildToBack(node1);\n    Normalize normalize0 = new Normalize(compiler0, true);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test1919"
  }
}