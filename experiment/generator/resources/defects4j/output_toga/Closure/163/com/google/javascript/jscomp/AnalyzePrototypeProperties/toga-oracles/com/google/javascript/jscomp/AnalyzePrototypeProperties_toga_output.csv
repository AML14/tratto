project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSCompiler_set(JSCompiler_set_name) {  return function(JSCompiler_set_value) {this[JSCompiler_set_name] = JSCompiler_set_value}}"");
    AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, false, false);
    analyzePrototypeProperties0.process(node0, node0);
    assertEquals(41, Node.BRACELESS_TYPE);
}",0,
project,0,test011,"public void test011() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSCompiler_set(JSCompiler_set_name) {  return function(JSCompiler_set_value) {this[JSCompiler_set_name] = JSCompiler_set_value}}"");
    AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, true, true);
    analyzePrototypeProperties0.process(node0, node0);
    assertFalse(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test044,"public void test044() throws Throwable {
    Compiler compiler0 = new Compiler();
    AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, true, true);
    Collection<AnalyzePrototypeProperties.NameInfo> collection0 = analyzePrototypeProperties0.getAllNameInfo();
    assertNotNull(collection0);
}",0,assertNotNull(collection0)
project,0,test135,"public void test135() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.rhino.jstype.TemlateType"", ""com.google.javascript.rhino.jstype.TemlateType"");
    AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, false, false);
    analyzePrototypeProperties0.process(node0, node0);
    assertTrue(node0.isScript());
}",0,assertTrue(node0.isScript())
project,0,test146,"public void test146() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""function JSCompiler_et(JSCompiler_set_name) {  return function(JSCompiler_set_value) {this[JSCompiler_set_name] = JSCompiler_set_value}}"");
    node0.setType((-2916));
    AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, true, true);
    analyzePrototypeProperties0.process(node0, node0);
    assertFalse(node0.isComma());
}",0,assertFalse(node0.isComma())
project,0,test157,"public void test157() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""w.lcW=J"");
    AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, (JSModuleGraph) null, true, true);
    analyzePrototypeProperties0.process(node0, node0);
    assertFalse(node0.isAssignAdd());
}",0,assertTrue(node0.isAssignAdd())
project,0,test178,"public void test178() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""javaript"");
    JSModule[] jSModuleArray0 = new JSModule[1];
    JSModule jSModule0 = new JSModule(""mozilla"");
    jSModuleArray0[0] = jSModule0;
    JSModuleGraph jSModuleGraph0 = new JSModuleGraph(jSModuleArray0);
    AnalyzePrototypeProperties analyzePrototypeProperties0 = new AnalyzePrototypeProperties(compiler0, jSModuleGraph0, true, true);
    analyzePrototypeProperties0.process(node0, node0);
    analyzePrototypeProperties0.process(node0, node0);
    assertFalse(node0.isBreak());
}",0,assertTrue(node0.isBreak())
