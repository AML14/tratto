focal_method,test_prefix,docstring
"@Override
public void process(Node externs, Node root) {
    NodeTraversal.traverse(compiler, root, new AddMarkers(compiler));
    NodeTraversal.traverse(compiler, root, new AddChecks(compiler));
    addBoilerplateCode();
}","public void test00() throws Throwable {
    Compiler compiler0 = new Compiler();
    RuntimeTypeCheck runtimeTypeCheck0 = new RuntimeTypeCheck(compiler0, """");
    Node node0 = Node.newString("""");
    // Undeclared exception!
    try {
        runtimeTypeCheck0.process(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",""
"@Override
public void process(Node externs, Node root) {
    NodeTraversal.traverse(compiler, root, new AddMarkers(compiler));
    NodeTraversal.traverse(compiler, root, new AddChecks(compiler));
    addBoilerplateCode();
}","public void test11() throws Throwable {
    Compiler compiler0 = new Compiler();
    RuntimeTypeCheck runtimeTypeCheck0 = new RuntimeTypeCheck(compiler0, ""function(warning, expr) {}"");
    Node node0 = compiler0.parseTestCode(""function(warning, expr) {}"");
    // Undeclared exception!
    try {
        runtimeTypeCheck0.process(node0, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",""
"@Override
public void process(Node externs, Node root) {
    NodeTraversal.traverse(compiler, root, new AddMarkers(compiler));
    NodeTraversal.traverse(compiler, root, new AddChecks(compiler));
    addBoilerplateCode();
}","public void test22() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(4, ""com.google.javasbript.jscomp.RuntimeTypeCheck"");
    RuntimeTypeCheck runtimeTypeCheck0 = new RuntimeTypeCheck(compiler0, ""com.google.javasbript.jscomp.RuntimeTypeCheck"");
    // Undeclared exception!
    try {
        runtimeTypeCheck0.process(node0, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",""
"@VisibleForTesting
static Node getBoilerplateCode(AbstractCompiler compiler, @Nullable String logFunction) {
    String boilerplateCode;
    try {
        boilerplateCode = CharStreams.toString(new InputStreamReader(RuntimeTypeCheck.class.getResourceAsStream(""js/runtime_type_check.js""), Charsets.UTF_8));
    } catch (IOException e) {
        throw new RuntimeException(e);
    }
    boilerplateCode = boilerplateCode.replace(""%%LOG%%"", logFunction == null ? ""function(warning, expr) {}"" : logFunction);
    return Normalize.parseAndNormalizeSyntheticCode(compiler, boilerplateCode, ""jscomp_runtimeTypeCheck_"");
}","public void test33() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        RuntimeTypeCheck.getBoilerplateCode(compiler0, (String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",""
