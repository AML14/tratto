[ {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test001"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "TypeCheck reportMissingProperties(boolean report)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test012"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isInc()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isInc())",
  "exception" : "",
  "testName" : "test023"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test034"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test045"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test056"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test067"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test078"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test089"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0910"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isSetterDef()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isSetterDef())",
  "exception" : "",
  "testName" : "test1011"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isAnd()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isAnd())",
  "exception" : "",
  "testName" : "test1112"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1213"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "double getTypedPercent()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1314"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isLabelName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1415"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1516"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isVar()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isVar())",
  "exception" : "",
  "testName" : "test1617"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1718"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1819"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.hasChildren())",
  "exception" : "",
  "testName" : "test1920"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2021"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2122"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2223"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2324"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2425"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2526"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2627"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2728"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2829"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2930"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test3031"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "double getTypedPercent()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3132"
} ]