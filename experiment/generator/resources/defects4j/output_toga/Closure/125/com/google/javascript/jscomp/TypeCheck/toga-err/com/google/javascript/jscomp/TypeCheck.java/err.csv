com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test000() throws Throwable {
    Compiler compiler0 = new Compiler();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    SourceFile sourceFile0 = SourceFile.fromCode(""Object#Key"", ""Object#Element"");
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compile(sourceFile0, sourceFile0, compilerOptions0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);
    Node node0 = new Node(302);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    typeCheck0.visit(nodeTraversal0, node0, node0);
    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node0, node0);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test023() throws Throwable {
    Compiler compiler0 = new Compiler();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    SourceFile sourceFile0 = SourceFile.fromCode(""Object#Element"", ""z%#GOU36^`^3=s`W;Uw"");
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compile(sourceFile0, sourceFile0, compilerOptions0);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = new Node(83);
    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);
    Scope scope0 = Scope.createGlobalScope(node0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0, scope0, (MemoizedScopeCreator) null, compilerOptions0.checkMissingReturn);
    Node node1 = Node.newString(""Object#Key"");
    typeCheck0.check(node1, false);
    node1.isInc();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test1011() throws Throwable {
    Compiler compiler0 = new Compiler();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    SourceFile sourceFile0 = SourceFile.fromCode(""Object#Key"", ""Object#Element"");
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compile(sourceFile0, sourceFile0, compilerOptions0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node0 = new Node(31, 114, 4);
    typeCheck0.visit(nodeTraversal0, node0, (Node) null);
    node0.isSetterDef();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test1112() throws Throwable {
    Compiler compiler0 = new Compiler();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    SourceFile sourceFile0 = SourceFile.fromCode(""Object#Element"", """");
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compile(sourceFile0, sourceFile0, compilerOptions0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);
    VarCheck varCheck0 = new VarCheck(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, varCheck0);
    Node node0 = new Node(126);
    Node node1 = new Node(32, node0, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node0.isAnd();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test1415() throws Throwable {
    Compiler compiler0 = new Compiler();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    SourceFile sourceFile0 = SourceFile.fromCode(""Object#Key"", ""Object#Element"");
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compile(sourceFile0, sourceFile0, compilerOptions0);
    Node node0 = new Node(139, (-3803), 111);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);
    Node node1 = new Node(52, node0, node0, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node0.isLabelName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test1617() throws Throwable {
    Compiler compiler0 = new Compiler();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    SourceFile sourceFile0 = SourceFile.fromCode(""Object#Element"", ""z%#GOU36^`^3=s`W;Uw"");
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compile(sourceFile0, sourceFile0, compilerOptions0);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    VarCheck varCheck0 = new VarCheck(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, varCheck0);
    Node node0 = new Node(83);
    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);
    Scope scope0 = Scope.createGlobalScope(node0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0, scope0, (MemoizedScopeCreator) null, compilerOptions0.checkMissingReturn);
    typeCheck0.visit(nodeTraversal0, node0, node0);
    node0.isVar();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test1920() throws Throwable {
    Compiler compiler0 = new Compiler();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    SourceFile sourceFile0 = SourceFile.fromCode(""Object#Key"", ""Object#Element"");
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compile(sourceFile0, sourceFile0, compilerOptions0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);
    Node node0 = new Node(100);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    typeCheck0.visit(nodeTraversal0, node0, node0);
    node0.hasChildren();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test3031() throws Throwable {
    Compiler compiler0 = new Compiler();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    SourceFile sourceFile0 = SourceFile.fromCode(""Object#Key"", ""Object#Element"");
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compile(sourceFile0, sourceFile0, compilerOptions0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);
    Node node0 = new Node(302);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    typeCheck0.visit(nodeTraversal0, node0, node0);
    Node node1 = new Node(30, node0, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
