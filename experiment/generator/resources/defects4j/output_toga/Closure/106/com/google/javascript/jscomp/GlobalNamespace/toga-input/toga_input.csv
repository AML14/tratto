focal_method,test_prefix,docstring
"public int getVarCount() {
    return vars.size();
}","public void test011() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""com.google.javascript.jscomp.DefinitionsRemover$FunctionArgumentDefinition"");
    Scope scope0 = new Scope(node0, compiler0);
    TreeSet<Node> treeSet0 = new TreeSet<Node>();
    GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, node0);
    globalNamespace0.scanNewNodes(scope0, treeSet0);
    assertEquals(0, scope0.getVarCount());
}","/**
 * Returns number of variables in this scope
 */"
"public boolean isGlobal() {
    return parent == null;
}","public void test088() throws Throwable {
    Node node0 = Node.newString("""");
    Compiler compiler0 = new Compiler();
    Node node1 = new Node(42, 12, (-9));
    GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, node1, node0);
    Scope scope0 = new Scope(node1, compiler0);
    TreeSet<Node> treeSet0 = new TreeSet<Node>();
    globalNamespace0.scanNewNodes(scope0, treeSet0);
    assertTrue(scope0.isGlobal());
}","/**
 * Returns whether this is the global scope.
 */"
"List<Name> getNameForest() {
    if (!generated) {
        process();
    }
    return globalNames;
}","public void test099() throws Throwable {
    Node node0 = Node.newString(""!n&3N29H?/\r':Th"");
    Compiler compiler0 = new Compiler();
    Node node1 = new Node(38, node0, node0, node0, node0, 0, 2);
    GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, node0, node1);
    // Undeclared exception!
    try {
        globalNamespace0.getNameForest();
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}","/**
 * Gets a list of the roots of the forest of the global names, where the
 * roots are the top-level names.
 */"
