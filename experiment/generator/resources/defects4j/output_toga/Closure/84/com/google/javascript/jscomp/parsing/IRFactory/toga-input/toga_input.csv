focal_method,test_prefix,docstring
"public int getType() {
    return type;
}","public void test000() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    EmptyExpression emptyExpression0 = new EmptyExpression(16);
    astRoot0.addChildrenToFront(emptyExpression0);
    Node node0 = IRFactory.transformTree(astRoot0, ""com. oogle.javascript.rhino.testing.EmptyScope"", (Config) null, (ErrorReporter) null);
    assertEquals(132, node0.getType());
}",""
"public boolean hasOneChild() {
    return first != null && first == last;
}","public void test001() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    EmptyExpression emptyExpression0 = new EmptyExpression(16);
    astRoot0.addChildrenToFront(emptyExpression0);
    Node node0 = IRFactory.transformTree(astRoot0, ""com. oogle.javascript.rhino.testing.EmptyScope"", (Config) null, (ErrorReporter) null);
    assertTrue(node0.hasOneChild());
}","/**
 * Check for one child more efficiently than by iterating over all the
 * children as is done with Node.getChildCount().
 *
 * @return Whether the node has exactly one child.
 */"
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test012() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ObjectProperty objectProperty0 = new ObjectProperty();
    astRoot0.addChildToBack(objectProperty0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, """", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test023() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    DoLoop doLoop0 = new DoLoop(93, 54);
    astRoot0.addChildToBack(doLoop0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""`n2i/"", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test034() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ElementGet elementGet0 = new ElementGet();
    astRoot0.addChildToBack(elementGet0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config config0 = new Config(treeSet0, treeSet0, true, true);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, """", config0, (ErrorReporter) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public int getType() {
    return type;
}","public void test045() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Block block0 = new Block();
    astRoot0.addChildToBack(block0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""J;+,(%0{"", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public boolean hasChildren() {
    return first != null;
}","public void test046() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Block block0 = new Block();
    astRoot0.addChildToBack(block0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""J;+,(%0{"", (Config) null, errorCollector0);
    assertTrue(node0.hasChildren());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test057() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    WhileLoop whileLoop0 = new WhileLoop(4);
    astRoot0.addChildToBack(whileLoop0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Locale locale0 = Locale.forLanguageTag(""Tfl"");
    Set<String> set0 = locale0.getUnicodeLocaleKeys();
    Config config0 = new Config(set0, set0, false, false);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""[{Wsas"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public int getType() {
    return type;
}","public void test068() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    NumberLiteral numberLiteral0 = new NumberLiteral(1, 2);
    astRoot0.addChildrenToFront(numberLiteral0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""N}jcm=nzW/+5D"", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public boolean hasOneChild() {
    return first != null && first == last;
}","public void test069() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    NumberLiteral numberLiteral0 = new NumberLiteral(1, 2);
    astRoot0.addChildrenToFront(numberLiteral0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""N}jcm=nzW/+5D"", (Config) null, errorCollector0);
    assertTrue(node0.hasOneChild());
}","/**
 * Check for one child more efficiently than by iterating over all the
 * children as is done with Node.getChildCount().
 *
 * @return Whether the node has exactly one child.
 */"
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test0710() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ParenthesizedExpression parenthesizedExpression0 = new ParenthesizedExpression(1);
    astRoot0.addChildrenToFront(parenthesizedExpression0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""com.google.javascript.jscomp.mozilla.rhino.Function"", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test0811() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ThrowStatement throwStatement0 = new ThrowStatement(0, astRoot0);
    astRoot0.addChildrenToFront(throwStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, (String) null, (Config) null, errorCollector0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test0912() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    NewExpression newExpression0 = new NewExpression(8);
    astRoot0.addChildrenToFront(newExpression0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, """", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1013() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    StringLiteral stringLiteral0 = new StringLiteral();
    astRoot0.addChildrenToFront(stringLiteral0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, "";1x.yKpWa1vFubqN9Of"", (Config) null, errorCollector0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // StringNode: str is null
        //
        verifyException(""com.google.javascript.rhino.Node$StringNode"", e);
    }
}",""
"public int getType() {
    return type;
}","public void test1114() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Scope scope0 = new Scope(2);
    astRoot0.addChildToBack(scope0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""Catch clauses are not supported"", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public boolean hasChildren() {
    return first != null;
}","public void test1115() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Scope scope0 = new Scope(2);
    astRoot0.addChildToBack(scope0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""Catch clauses are not supported"", (Config) null, errorCollector0);
    assertTrue(node0.hasChildren());
}",""
"public int getType() {
    return type;
}","public void test1216() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    SwitchCase switchCase0 = new SwitchCase();
    ExpressionStatement expressionStatement0 = new ExpressionStatement(switchCase0);
    astRoot0.addChildToBack(expressionStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""com.google.javascript.jscomp.parsing.IRFactory"", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1317() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    PropertyGet propertyGet0 = new PropertyGet(4, 151);
    astRoot0.addChildrenToFront(propertyGet0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""com.google.javascript.jscomp.parsing.IRFactory"", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1418() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    WithStatement withStatement0 = new WithStatement();
    astRoot0.addChildToBack(withStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""ea"", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1519() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ForInLoop forInLoop0 = new ForInLoop(1, 9);
    astRoot0.addChildToBack(forInLoop0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""0Oy`%d_"", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1620() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ForLoop forLoop0 = new ForLoop();
    astRoot0.addChildrenToFront(forLoop0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, """", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1721() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ConditionalExpression conditionalExpression0 = new ConditionalExpression(1404, 214);
    astRoot0.addChildrenToFront(conditionalExpression0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher"", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1822() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ErrorCollector errorCollector0 = new ErrorCollector();
    XmlPropRef xmlPropRef0 = new XmlPropRef();
    astRoot0.addChildrenToFront(xmlPropRef0);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""5"", (Config) null, errorCollector0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector"", e);
    }
}",""
"public int getType() {
    return type;
}","public void test1923() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ErrorCollector errorCollector0 = new ErrorCollector();
    RegExpLiteral regExpLiteral0 = new RegExpLiteral(8);
    InfixExpression infixExpression0 = new InfixExpression(21, regExpLiteral0, regExpLiteral0, 1);
    astRoot0.addChildToBack(infixExpression0);
    regExpLiteral0.setValue(""Unsupported sytax;: "");
    Node node0 = IRFactory.transformTree(astRoot0, ""Unsupported sytax;: "", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getType() {
    return type;
}","public void test2024() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
    Comment comment0 = new Comment(11, 8, token_CommentType0, ""0Z2Xz9{HR\""49"");
    astRoot0.addComment(comment0);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    Locale locale0 = Locale.SIMPLIFIED_CHINESE;
    Set<String> set0 = locale0.getUnicodeLocaleAttributes();
    Config config0 = new Config(set0, set0, false, true);
    IRFactory.transformTree(astRoot0, """", config0, toolErrorReporter0);
    Node node0 = IRFactory.transformTree(astRoot0, """", config0, toolErrorReporter0);
    assertEquals(132, node0.getType());
}",""
"public int getType() {
    return type;
}","public void test2125() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK;
    Comment comment0 = new Comment(26, 127, token_CommentType0, """");
    astRoot0.addComment(comment0);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    Node node0 = IRFactory.transformTree(astRoot0, ""org.mozilla.classfile.ClassFileMethod"", (Config) null, toolErrorReporter0);
    assertEquals(132, node0.getType());
}",""
"public int getType() {
    return type;
}","public void test2226() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Token.CommentType token_CommentType0 = Token.CommentType.HTML;
    Comment comment0 = new Comment(12, 2, token_CommentType0, ""T=Z"");
    astRoot0.setJsDocNode(comment0);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config config0 = new Config(treeSet0, treeSet0, true, true);
    Node node0 = IRFactory.transformTree(astRoot0, ""T=Z"", config0, toolErrorReporter0);
    assertEquals(132, node0.getType());
}",""
"public int getCharno() {
    return extractCharno(sourcePosition);
}","public void test2327() throws Throwable {
    ErrorCollector errorCollector0 = new ErrorCollector();
    AstRoot astRoot0 = new AstRoot(15);
    Node node0 = IRFactory.transformTree(astRoot0, ""() {\n\t[native code]\n}\n"", (Config) null, errorCollector0);
    assertEquals((-1), node0.getCharno());
}",""
"public int getType() {
    return type;
}","public void test2328() throws Throwable {
    ErrorCollector errorCollector0 = new ErrorCollector();
    AstRoot astRoot0 = new AstRoot(15);
    Node node0 = IRFactory.transformTree(astRoot0, ""() {\n\t[native code]\n}\n"", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test2429() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Scope scope0 = new Scope(2);
    scope0.addChildrenToBack(astRoot0);
    astRoot0.addChildToBack(scope0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""Catch clauses are not supported"", (Config) null, errorCollector0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public int getType() {
    return type;
}","public void test2530() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    BreakStatement breakStatement0 = new BreakStatement(23);
    SwitchStatement switchStatement0 = new SwitchStatement();
    switchStatement0.setExpression(breakStatement0);
    astRoot0.addChildToBack(switchStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""com.google.javascript.jscomp.mozilla.rhino.tools.resources.Messages"", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getType() {
    return type;
}","public void test2631() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ContinueStatement continueStatement0 = new ContinueStatement(154, 5);
    astRoot0.addChildrenToFront(continueStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""msg.only.one.super"", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test2833() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Name name0 = new Name(14, 155, ""i!kB1E"");
    FunctionNode functionNode0 = new FunctionNode(26, name0);
    astRoot0.addChildToBack(functionNode0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, """", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test2934() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    FunctionNode functionNode0 = new FunctionNode(189, (Name) null);
    functionNode0.addParam(astRoot0);
    astRoot0.addChildToBack(functionNode0);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", (Config) null, toolErrorReporter0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3035() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    LabeledStatement labeledStatement0 = new LabeledStatement(1, 13);
    astRoot0.addChildToBack(labeledStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, """", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3136() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    LabeledStatement labeledStatement0 = new LabeledStatement(16);
    Label label0 = new Label(2);
    labeledStatement0.addLabel(label0);
    astRoot0.addChildToBack(labeledStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""+)~s"", (Config) null, errorCollector0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // StringNode: str is null
        //
        verifyException(""com.google.javascript.rhino.Node$StringNode"", e);
    }
}",""
"public int getType() {
    return type;
}","public void test3237() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ObjectLiteral objectLiteral0 = new ObjectLiteral(21, 2);
    astRoot0.addChildrenToFront(objectLiteral0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config config0 = new Config(treeSet0, treeSet0, false, false);
    Node node0 = IRFactory.transformTree(astRoot0, """", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3338() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ObjectLiteral objectLiteral0 = new ObjectLiteral(21, 2);
    ObjectProperty objectProperty0 = new ObjectProperty();
    objectLiteral0.addElement(objectProperty0);
    astRoot0.addChildrenToFront(objectLiteral0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config config0 = new Config(treeSet0, treeSet0, false, false);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, """", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3439() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ObjectLiteral objectLiteral0 = new ObjectLiteral(21, 2);
    ObjectProperty objectProperty0 = new ObjectProperty();
    objectLiteral0.addElement(objectProperty0);
    astRoot0.addChildrenToFront(objectLiteral0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config config0 = new Config(treeSet0, treeSet0, false, true);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""com.google.javascript.jscomp.parsing.IRFactory$1"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public int getType() {
    return type;
}","public void test3540() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ReturnStatement returnStatement0 = new ReturnStatement(23);
    astRoot0.addChildToBack(returnStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, """", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3641() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ReturnStatement returnStatement0 = new ReturnStatement(2, 155, astRoot0);
    astRoot0.addChildToBack(returnStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, """", (Config) null, errorCollector0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
    }
}",""
"public int getType() {
    return type;
}","public void test3742() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    AstRoot astRoot1 = new AstRoot(3);
    SwitchCase switchCase0 = new SwitchCase(23);
    switchCase0.addStatement(astRoot1);
    astRoot0.addChildToBack(switchCase0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, "">[#JYDY_(9Cm5"", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getType() {
    return type;
}","public void test3843() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    VariableDeclaration variableDeclaration0 = new VariableDeclaration(12, 0);
    astRoot0.addChildToBack(variableDeclaration0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""I-eV3SF*(BQU-<[>"", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3944() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    VariableDeclaration variableDeclaration0 = new VariableDeclaration(12, 0);
    VariableInitializer variableInitializer0 = new VariableInitializer(24, 2);
    variableDeclaration0.addVariable(variableInitializer0);
    astRoot0.addChildToBack(variableDeclaration0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""N8EXDyOBzG#s;bQ"", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4045() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Assignment assignment0 = new Assignment(18, astRoot0, astRoot0, 1);
    assignment0.setOperator(10);
    astRoot0.addChildrenToFront(assignment0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""}l?"", (Config) null, errorCollector0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4146() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ErrorCollector errorCollector0 = new ErrorCollector();
    RegExpLiteral regExpLiteral0 = new RegExpLiteral(96);
    InfixExpression infixExpression0 = new InfixExpression(12, regExpLiteral0, regExpLiteral0, 842);
    astRoot0.addChildToBack(infixExpression0);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""Unsupported sytax;: "", (Config) null, errorCollector0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // StringNode: str is null
        //
        verifyException(""com.google.javascript.rhino.Node$StringNode"", e);
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4247() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Assignment assignment0 = new Assignment(14, astRoot0, astRoot0, 1);
    astRoot0.addChildrenToFront(assignment0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""`di5^Pb(X-dG|py"", (Config) null, errorCollector0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4348() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ErrorCollector errorCollector0 = new ErrorCollector();
    InfixExpression infixExpression0 = new InfixExpression(15, astRoot0, astRoot0, 10);
    astRoot0.addChildToBack(infixExpression0);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""\""\bCG~$OkX(^OoT"", (Config) null, errorCollector0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4449() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Assignment assignment0 = new Assignment(18, astRoot0, astRoot0, 1);
    astRoot0.addChildToBack(assignment0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, "">5fR5(("", (Config) null, errorCollector0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4550() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ErrorCollector errorCollector0 = new ErrorCollector();
    RegExpLiteral regExpLiteral0 = new RegExpLiteral();
    InfixExpression infixExpression0 = new InfixExpression(19, regExpLiteral0, astRoot0, (-102));
    astRoot0.addChildToBack(infixExpression0);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""newChild had siblings in addChildBefore"", (Config) null, errorCollector0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // StringNode: str is null
        //
        verifyException(""com.google.javascript.rhino.Node$StringNode"", e);
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4651() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    VariableInitializer variableInitializer0 = new VariableInitializer(11, 9);
    ErrorCollector errorCollector0 = new ErrorCollector();
    InfixExpression infixExpression0 = new InfixExpression(23, variableInitializer0, variableInitializer0, 139);
    astRoot0.addChildToBack(infixExpression0);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, """", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4752() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    FunctionCall functionCall0 = new FunctionCall(2, 1);
    astRoot0.addChildrenToFront(functionCall0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""S@OA0#"", (Config) null, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4853() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ErrorCollector errorCollector0 = new ErrorCollector();
    RegExpLiteral regExpLiteral0 = new RegExpLiteral(1);
    InfixExpression infixExpression0 = new InfixExpression(105, regExpLiteral0, astRoot0, 8);
    astRoot0.addChildToBack(infixExpression0);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""Unsupported sytax;: "", (Config) null, errorCollector0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // StringNode: str is null
        //
        verifyException(""com.google.javascript.rhino.Node$StringNode"", e);
    }
}",""
"public int getType() {
    return type;
}","public void test4954() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    SwitchCase switchCase0 = new SwitchCase();
    ExpressionStatement expressionStatement0 = new ExpressionStatement(switchCase0);
    expressionStatement0.setHasResult();
    astRoot0.addChildToBack(expressionStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""com.google.javascript.jscomp.parsing.IRFactory"", (Config) null, errorCollector0);
    assertEquals(132, node0.getType());
}",""
