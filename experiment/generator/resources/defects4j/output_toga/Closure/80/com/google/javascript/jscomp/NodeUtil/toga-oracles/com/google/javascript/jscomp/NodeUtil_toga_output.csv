project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0011,"public void test0011() throws Throwable {
    Node node0 = Node.newString(105, ""L!C"");
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil$MatchNameNode"", e);
    }
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    Node node0 = new Node(53);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 22);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test0033,"public void test0033() throws Throwable {
    Node node0 = new Node(37, 37, 37);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test0044,"public void test0044() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0055,"public void test0055() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test0066,"public void test0066() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test0077,"public void test0077() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""rD"", ""rD"");
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got SCRIPT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test0088,"public void test0088() throws Throwable {
    Node node0 = new Node(68, 68, 68);
    boolean boolean0 = NodeUtil.containsCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0099,"public void test0099() throws Throwable {
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.getNodeTypeReferenceCount((Node) null, (-3101), compilerOptions0.sourceMapDetailLevel);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil$MatchNodeType"", e);
    }
}",0,
project,0,test01010,"public void test01010() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got TRY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01111,"public void test01111() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getFunctionBody((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test01212,"public void test01212() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    node0.setType(36);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETELEM 103
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01313,"public void test01313() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01314,"public void test01314() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(130, node1.getType());
}",0,
project,0,test01415,"public void test01415() throws Throwable {
    Node node0 = Node.newString(38, ""com.google.javascript.jscomp.CodePrinter"");
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01516,"public void test01516() throws Throwable {
    Node node0 = Node.newString(47, ""=="");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01819,"public void test01819() throws Throwable {
    Node node0 = Node.newString(109, ""Q8rk\""pQq9Nq)|/*"");
    Node node1 = new Node(26, node0, node0, node0, 2, 1189);
    NodeUtil.getExpressionBooleanValue(node1);
}",0,
project,0,test01920,"public void test01920() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test02021,"public void test02021() throws Throwable {
    Node node0 = Node.newString(86, ""[J_Iq1."");
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test02122,"public void test02122() throws Throwable {
    Node node0 = Node.newString(98, ""; "");
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02223,"public void test02223() throws Throwable {
    Node node0 = new Node(100);
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02324,"public void test02324() throws Throwable {
    Node node0 = Node.newString(26, ""J97"");
    // Undeclared exception!
    try {
        NodeUtil.getBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02425,"public void test02425() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""1"", 22, 22);
    NodeUtil.getExpressionBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test02426,"public void test02426() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""1"", 22, 22);
    NodeUtil.getExpressionBooleanValue(node0);
    assertEquals(22, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test02427,"public void test02427() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""1"", 22, 22);
    NodeUtil.getExpressionBooleanValue(node0);
    assertEquals(22, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test02528,"public void test02528() throws Throwable {
    Node node0 = Node.newNumber((double) (-3330));
    NodeUtil.getBooleanValue(node0);
}",0,
project,0,test02629,"public void test02629() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = new Node(26, node0, node0, node0, 2, (-668));
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test02731,"public void test02731() throws Throwable {
    Node node0 = new Node(41);
    NodeUtil.getExpressionBooleanValue(node0);
}",0,
project,0,test02832,"public void test02832() throws Throwable {
    Node node0 = Node.newString(43, ""com.google.protobuf.Descriptors$DescriptorPool$PackageDescriptor"");
    NodeUtil.getExpressionBooleanValue(node0);
}",0,
project,0,test02933,"public void test02933() throws Throwable {
    Node node0 = Node.newString(44, """");
    NodeUtil.getBooleanValue(node0);
}",0,
project,0,test03034,"public void test03034() throws Throwable {
    Node node0 = new Node(47);
    NodeUtil.getExpressionBooleanValue(node0);
}",0,
project,0,test03135,"public void test03135() throws Throwable {
    Node node0 = Node.newString(63, ""AlF) \""sW"");
    NodeUtil.getExpressionBooleanValue(node0);
}",1,
project,0,test03236,"public void test03236() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    NodeUtil.getExpressionBooleanValue(node0);
}",1,
project,0,test03337,"public void test03337() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nqn)|/*"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getExpressionBooleanValue(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test03438,"public void test03438() throws Throwable {
    Node node0 = Node.newString("""");
    NodeUtil.getExpressionBooleanValue(node0);
}",0,
project,0,test03539,"public void test03539() throws Throwable {
    Node node0 = Node.newString(77, ""undefined"");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""undefined"", node0);
    Node node2 = node1.cloneTree();
    NodeUtil.getExpressionBooleanValue(node2);
    assertEquals(38, node2.getType());
}",0,"assertEquals(0, node2.getType())"
project,0,test03540,"public void test03540() throws Throwable {
    Node node0 = Node.newString(77, ""undefined"");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""undefined"", node0);
    Node node2 = node1.cloneTree();
    NodeUtil.getExpressionBooleanValue(node2);
    assertTrue(node1.isUnscopedQualifiedName());
}",0,assertFalse(node1.isUnscopedQualifiedName())
project,0,test03641,"public void test03641() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""NaN"", node0);
    NodeUtil.getExpressionBooleanValue(node1);
    assertTrue(node1.isUnscopedQualifiedName());
}",0,assertFalse(node1.isUnscopedQualifiedName())
project,0,test03642,"public void test03642() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""NaN"", node0);
    NodeUtil.getExpressionBooleanValue(node1);
    assertEquals(38, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test03743,"public void test03743() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = new Node(26, node0, node0, node0, 2, 0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test03845,"public void test03845() throws Throwable {
    Node node0 = Node.newString(""com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher"");
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher"", string0);
}",0,assertNotNull(string0)
project,0,test03946,"public void test03946() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode("" |b"", "" |b"");
    Node node1 = NodeUtil.newVarNode("" |b"", node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertNull(string0);
}",0,
project,0,test03947,"public void test03947() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode("" |b"", "" |b"");
    Node node1 = NodeUtil.newVarNode("" |b"", node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test03948,"public void test03948() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode("" |b"", "" |b"");
    Node node1 = NodeUtil.newVarNode("" |b"", node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test04050,"public void test04050() throws Throwable {
    Node node0 = Node.newString((int) (byte) 89, "" (type "");
    Node node1 = new Node(41, node0, node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""null"", string0);
}",0,
project,0,test04151,"public void test04151() throws Throwable {
    Node node0 = Node.newString(43, ""com.google.common.collect.SingletonImmutableMap$Values"");
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""false"", string0);
}",0,
project,0,test04252,"public void test04252() throws Throwable {
    Node node0 = Node.newString(44, """");
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""true"", string0);
}",0,
project,0,test04353,"public void test04353() throws Throwable {
    Node node0 = Node.newString(63, ""'ED76%W}=Ls-r[Z<A+"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",1,
project,0,test04454,"public void test04454() throws Throwable {
    Node node0 = new Node(64);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test04556,"public void test04556() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""NaN"", node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test04658,"public void test04658() throws Throwable {
    Node node0 = Node.newNumber(Double.NEGATIVE_INFINITY);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""-Infinity"", string0);
}",0,assertNotNull(string0)
project,0,test04759,"public void test04759() throws Throwable {
    Node node0 = Node.newString(109, ""Q8rk\""pQq9Nq)|/*"");
    Node node1 = new Node(26, node0, node0, node0, 2, 1189);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test04860,"public void test04860() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""undefined"");
    Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""undefined"", vector0, node0, 2, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertNull(string0);
}",0,
project,0,test04861,"public void test04861() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""undefined"");
    Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""undefined"", vector0, node0, 2, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(12, node1.getCharno());
}",0,
project,0,test04862,"public void test04862() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""undefined"");
    Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""undefined"", vector0, node0, 2, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(2, node1.getLineno());
}",0,
project,0,test04863,"public void test04863() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""undefined"");
    Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""undefined"", vector0, node0, 2, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(3, node1.getChildCount());
}",0,
project,0,test04864,"public void test04864() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""undefined"");
    Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""undefined"", vector0, node0, 2, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(105, node1.getType());
}",0,
project,0,test04965,"public void test04965() throws Throwable {
    Node node0 = Node.newString(29, ""-Infinity"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test05066,"public void test05066() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""infinity"", node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",1,
project,0,test05067,"public void test05067() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""infinity"", node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(38, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test05169,"public void test05169() throws Throwable {
    Node node0 = Node.newNumber((double) 49, 1872, (-2));
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(49.0, (double) double0, 0.01);
}",0,
project,0,test05270,"public void test05270() throws Throwable {
    Node node0 = Node.newString(""5i)`KT"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test05372,"public void test05372() throws Throwable {
    Node node0 = new Node(41);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test05473,"public void test05473() throws Throwable {
    Node node0 = Node.newString(43, ""LMC8Da.X?#Er"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test05574,"public void test05574() throws Throwable {
    Node node0 = Node.newString((-1077), ""com.googlg.javascript.jscomp.mozilla.rhino.ast.VariableDeclaration"");
    Node node1 = new Node(44, node0, 29, 14);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(1.0, (double) double0, 0.01);
}",0,
project,0,test05675,"public void test05675() throws Throwable {
    Node node0 = Node.newString(""fx1~BNF_`lb"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test05677,"public void test05677() throws Throwable {
    Node node0 = Node.newString(""fx1~BNF_`lb"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(1, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test05778,"public void test05778() throws Throwable {
    Node node0 = Node.newString(106, """");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test05879,"public void test05879() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""nQ8rk\""pQq9Nq)|/*"");
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager((PrintStream) null);
    Compiler compiler0 = new Compiler(printStreamErrorManager0);
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) defaultCodingConvention0, ""undefined"", node0, ""nQ8rk\""pQq9Nq)|/*"");
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test05981,"public void test05981() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""NaN"", node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",1,
project,0,test06084,"public void test06084() throws Throwable {
    Node node0 = new Node((byte) 100);
    Node node1 = new Node(29, node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",0,
project,0,test06185,"public void test06185() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    node0.setType(1893);
    Node node1 = new Node(26, node0, node0, node0, 2, 0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",1,
project,0,test06286,"public void test06286() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(86, nodeArray0);
    Node node1 = new Node(63, node0, node0, node0, 46, 43);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",0,
project,0,test06387,"public void test06387() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""b"");
    assertNotNull(double0);
}",1,
project,0,test06489,"public void test06489() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""0Y-uSymKzP?'/PI{"");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test06591,"public void test06591() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""+infinity"");
    assertNull(double0);
}",0,
project,0,test06692,"public void test06692() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""infinity"");
    assertNull(double0);
}",1,
project,0,test06793,"public void test06793() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""-infinity"");
    assertNull(double0);
}",0,
project,0,test06894,"public void test06894() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""Invalid attempt to remove node: "");
    assertNotNull(double0);
}",0,
project,0,test06996,"public void test06996() throws Throwable {
    String string0 = NodeUtil.trimJsWhiteSpace(""\n parent:"");
    assertEquals(""parent:"", string0);
}",0,
project,0,test07097,"public void test07097() throws Throwable {
    boolean boolean0 = NodeUtil.isStrWhiteSpaceChar(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test07198,"public void test07198() throws Throwable {
    boolean boolean0 = NodeUtil.isStrWhiteSpaceChar(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test07299,"public void test07299() throws Throwable {
    boolean boolean0 = NodeUtil.isStrWhiteSpaceChar(12);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test073100,"public void test073100() throws Throwable {
    boolean boolean0 = NodeUtil.isStrWhiteSpaceChar(13);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test074101,"public void test074101() throws Throwable {
    boolean boolean0 = NodeUtil.isStrWhiteSpaceChar(8232);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test075102,"public void test075102() throws Throwable {
    boolean boolean0 = NodeUtil.isStrWhiteSpaceChar(8233);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test076103,"public void test076103() throws Throwable {
    boolean boolean0 = NodeUtil.isStrWhiteSpaceChar(65279);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test077104,"public void test077104() throws Throwable {
    boolean boolean0 = NodeUtil.isStrWhiteSpaceChar(8202);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test078105,"public void test078105() throws Throwable {
    Node node0 = new Node(2870);
    Node node1 = NodeUtil.newVarNode("""", node0);
    Node node2 = new Node(37, node1, node1, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test078106,"public void test078106() throws Throwable {
    Node node0 = new Node(2870);
    Node node1 = NodeUtil.newVarNode("""", node0);
    Node node2 = new Node(37, node1, node1, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertFalse(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test078107,"public void test078107() throws Throwable {
    Node node0 = new Node(2870);
    Node node1 = NodeUtil.newVarNode("""", node0);
    Node node2 = new Node(37, node1, node1, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test079108,"public void test079108() throws Throwable {
    Node node0 = Node.newString(""neg"");
    Node node1 = new Node(115, node0, node0, node0);
    Node node2 = new Node(14, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test080110,"public void test080110() throws Throwable {
    Node node0 = new Node(62, 62, 38);
    Node node1 = new Node(26, node0, node0, node0, node0, 29, 36);
    Node node2 = node1.copyInformationFrom(node0);
    boolean boolean0 = NodeUtil.isLiteralValue(node2, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test081111,"public void test081111() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode("""", """");
    Node node1 = new Node(29, node0, 2, (-12));
    boolean boolean0 = NodeUtil.isLiteralValue(node1, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test082112,"public void test082112() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""5VK:{ZLviGH;"", 48, 48);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test082113,"public void test082113() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""5VK:{ZLviGH;"", 48, 48);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertEquals(48, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test082114,"public void test082114() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""5VK:{ZLviGH;"", 48, 48);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test082115,"public void test082115() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""5VK:{ZLviGH;"", 48, 48);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertEquals(48, node0.getCharno());
}",0,
project,0,test083116,"public void test083116() throws Throwable {
    Node node0 = Node.newString(""~J{rE4pxN,"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test084117,"public void test084117() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test085118,"public void test085118() throws Throwable {
    Node node0 = Node.newString(43, ""com.google.common.collect.SingletonImmutableMap$Values"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test086119,"public void test086119() throws Throwable {
    Node node0 = Node.newString(44, """");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test087120,"public void test087120() throws Throwable {
    Node node0 = Node.newString(122, ""S>;e(&+$D^FTP"");
    // Undeclared exception!
    try {
        NodeUtil.isLiteralValue(node0, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test088121,"public void test088121() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""NaN"", node0);
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test089123,"public void test089123() throws Throwable {
    Node node0 = Node.newString(47, ""!!"");
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test090124,"public void test090124() throws Throwable {
    Node node0 = Node.newString(63, ""'ED76%W}=Ls-r[Z<A+"");
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test091125,"public void test091125() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test092126,"public void test092126() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test093127,"public void test093127() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.isLiteralValue(node0, true);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test094128,"public void test094128() throws Throwable {
    Node node0 = Node.newString(9, ""\""2>$+-m)hJaKMK-"");
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test095129,"public void test095129() throws Throwable {
    Node node0 = Node.newString(10, ""-="");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test096130,"public void test096130() throws Throwable {
    Node node0 = new Node(11);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test097131,"public void test097131() throws Throwable {
    Node node0 = new Node(12);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test098132,"public void test098132() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", (byte) 32, (byte) 32);
    Node node1 = new Node(15, node0, node0, node0, node0, 0, 0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test098133,"public void test098133() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", (byte) 32, (byte) 32);
    Node node1 = new Node(15, node0, node0, node0, node0, 0, 0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertEquals(32, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test098134,"public void test098134() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", (byte) 32, (byte) 32);
    Node node1 = new Node(15, node0, node0, node0, node0, 0, 0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test098135,"public void test098135() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", (byte) 32, (byte) 32);
    Node node1 = new Node(15, node0, node0, node0, node0, 0, 0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test098136,"public void test098136() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", (byte) 32, (byte) 32);
    Node node1 = new Node(15, node0, node0, node0, node0, 0, 0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertEquals(32, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test099137,"public void test099137() throws Throwable {
    Node node0 = Node.newString(3552, ""K9^J#WWnmOk"");
    Node node1 = new Node(16, node0, node0);
    MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(""nQ8rk\""pQq9Nq)|/*"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFileOutputStream0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    CheckLevel checkLevel0 = CheckLevel.OFF;
    ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, checkLevel0, false);
    Set<String> set0 = processClosurePrimitives0.getExportedVariableNames();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test100138,"public void test100138() throws Throwable {
    Node node0 = Node.newString(17, ""NdvmeUtil"");
    byte[] byteArray0 = new byte[2];
    ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
    ImmutableSetMultimap<ByteArrayInputStream, String> immutableSetMultimap0 = ImmutableSetMultimap.of(byteArrayInputStream0, ""NdvmeUtil"");
    ImmutableSet<String> immutableSet0 = immutableSetMultimap0.get(byteArrayInputStream0);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, immutableSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test101139,"public void test101139() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""com.google.javascript.jscomp.CodePrinter"");
    Node node1 = new Node(18, node0, 29, 1);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test102140,"public void test102140() throws Throwable {
    Node node0 = Node.newString(""If this if/for/while really shouldn't have a body, use {}"");
    Node node1 = new Node((byte) 19, node0, node0, node0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test103141,"public void test103141() throws Throwable {
    Node node0 = new Node(119);
    Node node1 = new Node(21, node0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test104142,"public void test104142() throws Throwable {
    Node node0 = Node.newString(""+infinity"");
    Node node1 = new Node(22, node0, node0, 34, 14);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test105143,"public void test105143() throws Throwable {
    Node node0 = Node.newString(""+infinity"");
    Node node1 = new Node(23, node0, node0, node0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test106144,"public void test106144() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""If this if/for/while really shouldn't have a body, use {}"", (byte) 24, (byte) 24);
    Node node1 = new Node((byte) 24, node0, node0, node0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertEquals(24, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test106145,"public void test106145() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""If this if/for/while really shouldn't have a body, use {}"", (byte) 24, (byte) 24);
    Node node1 = new Node((byte) 24, node0, node0, node0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertEquals(24, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test106146,"public void test106146() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""If this if/for/while really shouldn't have a body, use {}"", (byte) 24, (byte) 24);
    Node node1 = new Node((byte) 24, node0, node0, node0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test106147,"public void test106147() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""If this if/for/while really shouldn't have a body, use {}"", (byte) 24, (byte) 24);
    Node node1 = new Node((byte) 24, node0, node0, node0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test107148,"public void test107148() throws Throwable {
    Node node0 = Node.newString(25, "";g"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test108149,"public void test108149() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = new Node(26, node0, node0, node0, 2, 0);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test109150,"public void test109150() throws Throwable {
    Node node0 = Node.newString(""+infinity"");
    Node node1 = new Node(27, node0, node0, node0);
    MockPrintStream mockPrintStream0 = new MockPrintStream(""+infinity"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    CheckLevel checkLevel0 = CheckLevel.ERROR;
    ProcessClosurePrimitives processClosurePrimitives0 = new ProcessClosurePrimitives(compiler0, checkLevel0, false);
    Set<String> set0 = processClosurePrimitives0.getExportedVariableNames();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertTrue(boolean0);
}",0,
project,0,test110151,"public void test110151() throws Throwable {
    Node node0 = Node.newString(28, ""XMLHttpRequest"");
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test111152,"public void test111152() throws Throwable {
    Node node0 = Node.newString(29, ""\""2>$+-m)hJaKMK-"");
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test112153,"public void test112153() throws Throwable {
    Node node0 = new Node(30);
    Locale locale0 = Locale.ITALIAN;
    Set<String> set0 = locale0.getUnicodeLocaleAttributes();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    assertFalse(boolean0);
}",0,
project,0,test113154,"public void test113154() throws Throwable {
    Node node0 = Node.newString(31, ""fQo\t&S~z~fUOMYJpR"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test114155,"public void test114155() throws Throwable {
    Node node0 = Node.newString(32, ""%="");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test115156,"public void test115156() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ}isk\""pQq9Nq)|/*"");
    Node node1 = new Node(35, node0, 7, 2);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test116157,"public void test116157() throws Throwable {
    Node node0 = Node.newString(""If this if/for/while really shouldn't have a body, use {}"");
    Node node1 = new Node(36, node0, node0, node0, 30, 1);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test117158,"public void test117158() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""U-Mk86p6"");
    Node node1 = new Node(37, node0, 32, 37);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test118159,"public void test118159() throws Throwable {
    Node node0 = Node.newString(39, ""<tK&-y"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test119160,"public void test119160() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    Node node1 = new Node(41, node0, node0, node0, node0, 1, 1);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test120161,"public void test120161() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    Node node1 = new Node(42, node0, 9, 7);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test121162,"public void test121162() throws Throwable {
    Node node0 = new Node(43);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test122163,"public void test122163() throws Throwable {
    Node node0 = Node.newString(44, """");
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test123164,"public void test123164() throws Throwable {
    Node node0 = new Node(45, 45, 45);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test124165,"public void test124165() throws Throwable {
    Node node0 = Node.newString(""2Z^+?AP#2>i^^1"");
    Node node1 = Node.newString(33, ""+infinity"");
    node1.addChildrenToFront(node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test125166,"public void test125166() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""If this if/for/while really shouldn't have a body, use {}"", (-1290), (-1290));
    HashSet<String> hashSet0 = new HashSet<String>();
    hashSet0.add(""If this if/for/while really shouldn't have a body, use {}"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test126167,"public void test126167() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ8rk\""pQq9Nqn)|/*"");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test127168,"public void test127168() throws Throwable {
    Node node0 = Node.newString(63, ""Number"", 63, 43);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test128169,"public void test128169() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ8rk\""pQq9Nqn)|/*"");
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test129170,"public void test129170() throws Throwable {
    Node node0 = new Node(9, 9, 9);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test130171,"public void test130171() throws Throwable {
    Node node0 = new Node(10);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test131172,"public void test131172() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test132173,"public void test132173() throws Throwable {
    Node node0 = new Node(12);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test133174,"public void test133174() throws Throwable {
    Node node0 = new Node(13);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test134175,"public void test134175() throws Throwable {
    Node node0 = new Node(14, 8, 31);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test135176,"public void test135176() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    Node node1 = new Node(15, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test136177,"public void test136177() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test137178,"public void test137178() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(17);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test138179,"public void test138179() throws Throwable {
    Node node0 = new Node(18, 18, 18);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test139180,"public void test139180() throws Throwable {
    Node node0 = new Node(19);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test140181,"public void test140181() throws Throwable {
    Node node0 = new Node(20);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test141182,"public void test141182() throws Throwable {
    Node node0 = new Node(21);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test142183,"public void test142183() throws Throwable {
    Node node0 = new Node(22);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test143184,"public void test143184() throws Throwable {
    Node node0 = new Node(23, 0, (-2473));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test144185,"public void test144185() throws Throwable {
    Node node0 = new Node(24);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test145186,"public void test145186() throws Throwable {
    Node node0 = new Node(25);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test146187,"public void test146187() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = new Node(26, node0, node0, node0, 2, 0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test147188,"public void test147188() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(27);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test148189,"public void test148189() throws Throwable {
    Node node0 = new Node(28, 28, 28);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test149190,"public void test149190() throws Throwable {
    Node node0 = new Node(29, 29, (byte) 112);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test150191,"public void test150191() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test151192,"public void test151192() throws Throwable {
    Node node0 = new Node(31);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test152193,"public void test152193() throws Throwable {
    Node node0 = new Node((byte) 32);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test153194,"public void test153194() throws Throwable {
    Node node0 = new Node(33);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test154195,"public void test154195() throws Throwable {
    Node node0 = new Node(34);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test155196,"public void test155196() throws Throwable {
    Node node0 = new Node(35);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test156197,"public void test156197() throws Throwable {
    Node node0 = new Node(367);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.isSimpleOperator(node1);
    assertFalse(boolean0);
}",0,
project,0,test156198,"public void test156198() throws Throwable {
    Node node0 = new Node(367);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.isSimpleOperator(node1);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test157199,"public void test157199() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""1"", 22, 22);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertEquals(22, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test157200,"public void test157200() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""1"", 22, 22);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test157201,"public void test157201() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""1"", 22, 22);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertEquals(22, node0.getLineno());
}",1,
project,0,test158202,"public void test158202() throws Throwable {
    Node node0 = new Node(39);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test159203,"public void test159203() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test160204,"public void test160204() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test161205,"public void test161205() throws Throwable {
    Node node0 = new Node(46);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test162206,"public void test162206() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test163207,"public void test163207() throws Throwable {
    Node node0 = new Node(48);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test164208,"public void test164208() throws Throwable {
    Node node0 = new Node(49);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test165209,"public void test165209() throws Throwable {
    Node node0 = new Node(50);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test166210,"public void test166210() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType((byte) 51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test167211,"public void test167211() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""false"", 90, 90);
    Node node1 = new Node(52, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(90, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test167212,"public void test167212() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""false"", 90, 90);
    Node node1 = new Node(52, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test167213,"public void test167213() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""false"", 90, 90);
    Node node1 = new Node(52, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test167214,"public void test167214() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""false"", 90, 90);
    Node node1 = new Node(52, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(90, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test168215,"public void test168215() throws Throwable {
    Node node0 = new Node(53);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLOCAL_LOAD
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test169216,"public void test169216() throws Throwable {
    Node node0 = new Node(54, 54, 54);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGETVAR 54
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test170217,"public void test170217() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(55);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test171218,"public void test171218() throws Throwable {
    Node node0 = new Node(56, 56, 56);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCATCH_SCOPE 56
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test172219,"public void test172219() throws Throwable {
    Node node0 = new Node(57);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_KEYS
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test173220,"public void test173220() throws Throwable {
    Node node0 = new Node(58);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test174221,"public void test174221() throws Throwable {
    Node node0 = new Node(59);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_NEXT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test175222,"public void test175222() throws Throwable {
    Node node0 = Node.newString(61, ""ko2yGsy'J0]qgF;w"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test176223,"public void test176223() throws Throwable {
    Node node0 = new Node(62, 62, 62);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test177224,"public void test177224() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test178225,"public void test178225() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(64);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test179226,"public void test179226() throws Throwable {
    Node node0 = new Node(65);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test180227,"public void test180227() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSET_REF 66
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test181228,"public void test181228() throws Throwable {
    Node node0 = new Node(67, 67, 67);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEL_REF 67
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test182229,"public void test182229() throws Throwable {
    Node node0 = new Node(68, 68, 68);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_CALL 68
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test183230,"public void test183230() throws Throwable {
    Node node0 = new Node(69);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_SPECIAL
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test184231,"public void test184231() throws Throwable {
    Node node0 = new Node(70);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test185232,"public void test185232() throws Throwable {
    Node node0 = new Node(71, 71, 71);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test186233,"public void test186233() throws Throwable {
    Node node0 = new Node(72);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLTEXT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test187234,"public void test187234() throws Throwable {
    Node node0 = new Node(73);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test188235,"public void test188235() throws Throwable {
    Node node0 = new Node(74, (-185), 74);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_MEMBER
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test189236,"public void test189236() throws Throwable {
    Node node0 = new Node(75);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test190237,"public void test190237() throws Throwable {
    Node node0 = new Node(76);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test191238,"public void test191238() throws Throwable {
    Node node0 = new Node(77);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test192239,"public void test192239() throws Throwable {
    Node node0 = new Node(78);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test193240,"public void test193240() throws Throwable {
    Node node0 = new Node(79);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test194241,"public void test194241() throws Throwable {
    Node node0 = new Node(80, 621, 4);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRB 621
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test195242,"public void test195242() throws Throwable {
    Node node0 = new Node(81);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test196243,"public void test196243() throws Throwable {
    Node node0 = new Node(82);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test197244,"public void test197244() throws Throwable {
    Node node0 = new Node(83);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test198245,"public void test198245() throws Throwable {
    Node node0 = new Node(84);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test199246,"public void test199246() throws Throwable {
    Node node0 = new Node(85);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test200247,"public void test200247() throws Throwable {
    Node node0 = new Node(86, 104, 86);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test201248,"public void test201248() throws Throwable {
    Node node0 = new Node(87);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test202249,"public void test202249() throws Throwable {
    Node node0 = new Node(88);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test203250,"public void test203250() throws Throwable {
    Node node0 = new Node(89, 89, 113);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test204251,"public void test204251() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode("""", """");
    Node node1 = new Node(91, node0, node0, node0, 2599, 37);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test205252,"public void test205252() throws Throwable {
    Node node0 = new Node(92);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test206253,"public void test206253() throws Throwable {
    Node node0 = new Node(93, 93, 2518);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test207254,"public void test207254() throws Throwable {
    Node node0 = new Node(95, 95, 95);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test208255,"public void test208255() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test209256,"public void test209256() throws Throwable {
    Node node0 = new Node(97);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test210257,"public void test210257() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test211258,"public void test211258() throws Throwable {
    Node node0 = new Node(99);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCOLON
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test212259,"public void test212259() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(100);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test213260,"public void test213260() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test214261,"public void test214261() throws Throwable {
    Node node0 = Node.newString(102, ""-="");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test215262,"public void test215262() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216263,"public void test216263() throws Throwable {
    Node node0 = new Node(104, 104, 104);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDOT 104
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test217264,"public void test217264() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test218265,"public void test218265() throws Throwable {
    Node node0 = Node.newString(106, """");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test219266,"public void test219266() throws Throwable {
    Node node0 = new Node(107, 107, 107);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test220267,"public void test220267() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(108);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test221268,"public void test221268() throws Throwable {
    Node node0 = new Node(110);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSWITCH
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test222269,"public void test222269() throws Throwable {
    Node node0 = new Node(111, 111, 111);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test223270,"public void test223270() throws Throwable {
    Node node0 = new Node((byte) 112);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEFAULT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test224271,"public void test224271() throws Throwable {
    Node node0 = Node.newString(113, ""Cm("");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225272,"public void test225272() throws Throwable {
    Node node0 = new Node(114);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test226273,"public void test226273() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test227274,"public void test227274() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test228275,"public void test228275() throws Throwable {
    Node node0 = new Node(117);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test229276,"public void test229276() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(118);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test230277,"public void test230277() throws Throwable {
    Node node0 = new Node(119);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test231278,"public void test231278() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test232279,"public void test232279() throws Throwable {
    Node node0 = new Node(121);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test233280,"public void test233280() throws Throwable {
    Node node0 = Node.newString(""fx1~BNF_`lb"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test233281,"public void test233281() throws Throwable {
    Node node0 = Node.newString(""fx1~BNF_`lb"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertEquals(1, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test234282,"public void test234282() throws Throwable {
    Node node0 = Node.newString(36, ""T:[8>a)Kx*"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test235283,"public void test235283() throws Throwable {
    Node node0 = new Node(30);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test235284,"public void test235284() throws Throwable {
    Node node0 = new Node(30);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test236285,"public void test236285() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test237286,"public void test237286() throws Throwable {
    Node node0 = new Node(42);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test238287,"public void test238287() throws Throwable {
    Node node0 = new Node(43);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test239288,"public void test239288() throws Throwable {
    Node node0 = new Node(44, 44, 2139);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test240289,"public void test240289() throws Throwable {
    Node node0 = new Node(46, 8, 37);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test241290,"public void test241290() throws Throwable {
    Node node0 = Node.newString(47, ""=="");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test242291,"public void test242291() throws Throwable {
    Node node0 = Node.newString(""qo<]q}I-eDw_nm[`M^"");
    Node node1 = new Node(50, node0, node0);
    Compiler compiler0 = new Compiler();
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test243292,"public void test243292() throws Throwable {
    Node node0 = new Node((byte) 51);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test244293,"public void test244293() throws Throwable {
    Node node0 = new Node(53, 53, 53);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test245294,"public void test245294() throws Throwable {
    Node node0 = new Node(54);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test246295,"public void test246295() throws Throwable {
    Node node0 = Node.newString(56, ""ko2yGsy'J0]qgF;w"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test247296,"public void test247296() throws Throwable {
    Node node0 = Node.newString(57, ""; "");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test248297,"public void test248297() throws Throwable {
    Node node0 = new Node(59);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test249298,"public void test249298() throws Throwable {
    Node node0 = new Node((byte) 63, (-1401), (-1401));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250299,"public void test250299() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test251300,"public void test251300() throws Throwable {
    Node node0 = new Node(66);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test252301,"public void test252301() throws Throwable {
    Node node0 = new Node(68, 68, 68);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test253302,"public void test253302() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test254303,"public void test254303() throws Throwable {
    Node node0 = new Node(72);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test255304,"public void test255304() throws Throwable {
    Node node0 = new Node(74);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test256305,"public void test256305() throws Throwable {
    Node node0 = new Node(75);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test257306,"public void test257306() throws Throwable {
    Node node0 = new Node(76, 76, 76);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test258307,"public void test258307() throws Throwable {
    Node node0 = new Node(77);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test259308,"public void test259308() throws Throwable {
    Node node0 = new Node(80);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test260309,"public void test260309() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test261310,"public void test261310() throws Throwable {
    Node node0 = new Node(82);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test262311,"public void test262311() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Vector<JSType> vector0 = new Vector<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) vector0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test263312,"public void test263312() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test264313,"public void test264313() throws Throwable {
    Node node0 = new Node(98);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test265314,"public void test265314() throws Throwable {
    Node node0 = new Node(99);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test266315,"public void test266315() throws Throwable {
    Node node0 = new Node(100);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test267316,"public void test267316() throws Throwable {
    Node node0 = new Node(101);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test268317,"public void test268317() throws Throwable {
    Node node0 = new Node(104, 104, 104);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test269318,"public void test269318() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test270319,"public void test270319() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test271320,"public void test271320() throws Throwable {
    Node node0 = new Node(109, 109, 109);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test272321,"public void test272321() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test273322,"public void test273322() throws Throwable {
    Node node0 = new Node(112);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test274323,"public void test274323() throws Throwable {
    Node node0 = new Node(118);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test275324,"public void test275324() throws Throwable {
    Node node0 = new Node((byte) 123);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test276325,"public void test276325() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test277326,"public void test277326() throws Throwable {
    Node node0 = new Node(126);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test278327,"public void test278327() throws Throwable {
    Node node0 = new Node(127);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test279328,"public void test279328() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""e>{;uw"", (Node) null);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertEquals(118, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test279329,"public void test279329() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""e>{;uw"", (Node) null);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test280330,"public void test280330() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test281331,"public void test281331() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""<=jy4T"", 3486, (-1231));
    Node node1 = new Node(94, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test281332,"public void test281332() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""<=jy4T"", 3486, (-1231));
    Node node1 = new Node(94, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test281333,"public void test281333() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""<=jy4T"", 3486, (-1231));
    Node node1 = new Node(94, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test282334,"public void test282334() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""|="", ""|="");
    Node node1 = new Node(91, node0, node0, node0, 43, 37);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test283335,"public void test283335() throws Throwable {
    Node node0 = Node.newString(""replace"");
    Node node1 = new Node(90, node0);
    Compiler compiler0 = new Compiler();
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1, compiler0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test284336,"public void test284336() throws Throwable {
    Node node0 = Node.newString(30, ""Too many elements to create power set: %s > 30"");
    // Undeclared exception!
    try {
        NodeUtil.nodeTypeMayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test285337,"public void test285337() throws Throwable {
    Node node0 = new Node(38);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node1);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // NAME is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test286338,"public void test286338() throws Throwable {
    Node node0 = new Node(103);
    // Undeclared exception!
    try {
        NodeUtil.callHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test287339,"public void test287339() throws Throwable {
    Node node0 = new Node(30);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test287340,"public void test287340() throws Throwable {
    Node node0 = new Node(30);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test288341,"public void test288341() throws Throwable {
    Node node0 = new Node(114);
    // Undeclared exception!
    try {
        NodeUtil.newHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test289342,"public void test289342() throws Throwable {
    Node node0 = new Node(30);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test290343,"public void test290343() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""<=jy4T"", 3486, (-1231));
    Node node1 = new Node(94, node0, node0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test290344,"public void test290344() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""<=jy4T"", 3486, (-1231));
    Node node1 = new Node(94, node0, node0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test290345,"public void test290345() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""<=jy4T"", 3486, (-1231));
    Node node1 = new Node(94, node0, node0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test291346,"public void test291346() throws Throwable {
    Node node0 = new Node(31);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test292347,"public void test292347() throws Throwable {
    Node node0 = new Node(37);
    // Undeclared exception!
    try {
        NodeUtil.nodeTypeMayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test293348,"public void test293348() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""infinity"", node0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertTrue(node1.isUnscopedQualifiedName());
}",0,assertFalse(node1.isUnscopedQualifiedName())
project,0,test293349,"public void test293349() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""infinity"", node0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertFalse(boolean0);
}",1,
project,0,test294350,"public void test294350() throws Throwable {
    Node node0 = Node.newString(49, ""'ED76%W}=Ls-r[Z<A+"", 49, 49);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test295351,"public void test295351() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test296352,"public void test296352() throws Throwable {
    Node node0 = Node.newString(30, ""\""2>$+-m)hJaKMK-"");
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test297353,"public void test297353() throws Throwable {
    Node node0 = new Node(367, 367, 367);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.canBeSideEffected(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test298354,"public void test298354() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    // Undeclared exception!
    try {
        NodeUtil.canBeSideEffected(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test299355,"public void test299355() throws Throwable {
    Node node0 = new Node(64);
    Node node1 = new Node(103, node0, node0, 36, 2439);
    boolean boolean0 = NodeUtil.canBeSideEffected(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test300356,"public void test300356() throws Throwable {
    Node node0 = Node.newString(""2Z^+?AP#2>i^^1"");
    Node node1 = Node.newString(33, ""2Z^+?AP#2>i^^1"");
    node0.addChildrenToFront(node1);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test301357,"public void test301357() throws Throwable {
    int int0 = NodeUtil.precedence(4);
    assertEquals(15, int0);
}",1,
project,0,test302358,"public void test302358() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test303359,"public void test303359() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(5);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for goto (type 5)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test304360,"public void test304360() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(6);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ifeq (type 6)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test305361,"public void test305361() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(7);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ifne (type 7)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test306362,"public void test306362() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(8);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setname (type 8)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test307363,"public void test307363() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test308364,"public void test308364() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test309365,"public void test309365() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test310366,"public void test310366() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test311367,"public void test311367() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test312368,"public void test312368() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test313369,"public void test313369() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test314370,"public void test314370() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test315371,"public void test315371() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test316372,"public void test316372() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test317373,"public void test317373() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 19);
    assertEquals(10, int0);
}",0,
project,0,test318374,"public void test318374() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test319375,"public void test319375() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test320376,"public void test320376() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test321377,"public void test321377() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 23);
    assertEquals(12, int0);
}",0,
project,0,test322378,"public void test322378() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test323379,"public void test323379() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test324380,"public void test324380() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test325381,"public void test325381() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test326382,"public void test326382() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test327383,"public void test327383() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test328384,"public void test328384() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test329385,"public void test329385() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test330386,"public void test330386() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test331387,"public void test331387() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test332388,"public void test332388() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setprop (type 34)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test333389,"public void test333389() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test334390,"public void test334390() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setelem (type 36)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test335391,"public void test335391() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 37);
    assertEquals(15, int0);
}",0,
project,0,test336392,"public void test336392() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test337393,"public void test337393() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test338394,"public void test338394() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test339395,"public void test339395() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test340396,"public void test340396() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test341397,"public void test341397() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test342398,"public void test342398() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test343399,"public void test343399() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 45);
    assertEquals(8, int0);
}",0,
project,0,test344400,"public void test344400() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test345401,"public void test345401() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 47);
    assertEquals(15, int0);
}",0,
project,0,test346402,"public void test346402() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for bindname (type 48)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test347403,"public void test347403() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for throw (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test348404,"public void test348404() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=50> (type 50)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test349405,"public void test349405() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 51);
    assertEquals(9, int0);
}",0,
project,0,test350406,"public void test350406() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test351407,"public void test351407() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=53> (type 53)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test352408,"public void test352408() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(54);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for getvar (type 54)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test353409,"public void test353409() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(55);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setvar (type 55)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test354410,"public void test354410() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=56> (type 56)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test355411,"public void test355411() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(57);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=57> (type 57)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test356412,"public void test356412() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=58> (type 58)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test357413,"public void test357413() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=59> (type 59)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test358414,"public void test358414() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(60);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=60> (type 60)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test359415,"public void test359415() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((byte) 61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for thisfn (type 61)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test360416,"public void test360416() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=62> (type 62)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test361417,"public void test361417() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test362418,"public void test362418() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test363419,"public void test363419() throws Throwable {
    int int0 = NodeUtil.precedence(65);
    assertEquals(15, int0);
}",0,
project,0,test364420,"public void test364420() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=67> (type 67)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test365421,"public void test365421() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=68> (type 68)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366422,"public void test366422() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ref_special (type 69)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test367423,"public void test367423() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=70> (type 70)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test368424,"public void test368424() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((byte) 71);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=71> (type 71)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test369425,"public void test369425() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=72> (type 72)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test370426,"public void test370426() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=74> (type 74)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371427,"public void test371427() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((byte) 75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=75> (type 75)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test372428,"public void test372428() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((byte) 76);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=76> (type 76)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test373429,"public void test373429() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for try (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test374430,"public void test374430() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for semi (type 78)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test375431,"public void test375431() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lb (type 79)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test376432,"public void test376432() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((byte) 80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rb (type 80)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test377433,"public void test377433() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lc (type 81)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test378434,"public void test378434() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rc (type 82)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test379435,"public void test379435() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 83);
    assertEquals(15, int0);
}",0,
project,0,test380436,"public void test380436() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rp (type 84)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test381437,"public void test381437() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test382438,"public void test382438() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test383439,"public void test383439() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 87);
    assertEquals(1, int0);
}",0,
project,0,test384440,"public void test384440() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test385441,"public void test385441() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 89);
    assertEquals(1, int0);
}",0,
project,0,test386442,"public void test386442() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test387443,"public void test387443() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test388444,"public void test388444() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test389445,"public void test389445() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test390446,"public void test390446() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test391447,"public void test391447() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test392448,"public void test392448() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test393449,"public void test393449() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test394450,"public void test394450() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test395451,"public void test395451() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for colon (type 99)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test396452,"public void test396452() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 100);
    assertEquals(3, int0);
}",0,
project,0,test397453,"public void test397453() throws Throwable {
    int int0 = NodeUtil.precedence(101);
    assertEquals(4, int0);
}",0,
project,0,test398454,"public void test398454() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test399455,"public void test399455() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for dot (type 104)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test400456,"public void test400456() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test401457,"public void test401457() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for export (type 106)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test402458,"public void test402458() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for import (type 107)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test403459,"public void test403459() throws Throwable {
    int int0 = NodeUtil.precedence(108);
    assertEquals(15, int0);
}",0,
project,0,test404460,"public void test404460() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for else (type 109)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test405461,"public void test405461() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for switch (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test406462,"public void test406462() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for case (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test407463,"public void test407463() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((byte) 112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for default (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test408464,"public void test408464() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for while (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test409465,"public void test409465() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((byte) 114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for do (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test410466,"public void test410466() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for for (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test411467,"public void test411467() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for break (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test412468,"public void test412468() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for continue (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test413469,"public void test413469() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((byte) 118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for var (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test414470,"public void test414470() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for with (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test415471,"public void test415471() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for catch (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test416472,"public void test416472() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for finally (type 121)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test417473,"public void test417473() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test418474,"public void test418474() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for reserved (type 123)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test419475,"public void test419475() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test420476,"public void test420476() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(65279);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=65279> (type 65279)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test421477,"public void test421477() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test422478,"public void test422478() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.mayBeString(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test423479,"public void test423479() throws Throwable {
    Node node0 = Node.newString(98, ""replace"");
    // Undeclared exception!
    try {
        NodeUtil.mayBeString(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test424480,"public void test424480() throws Throwable {
    Node node0 = new Node((byte) 100);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""Zju5S"", node0);
    node0.addChildToFront(node1);
    assertEquals(38, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test424481,"public void test424481() throws Throwable {
    Node node0 = new Node((byte) 100);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""Zju5S"", node0);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test425482,"public void test425482() throws Throwable {
    Node node0 = new Node(9, (byte) 51, (byte) 51);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test426483,"public void test426483() throws Throwable {
    Node node0 = new Node(38, 38, 38);
    Node node1 = new Node(10, node0, node0, 0, (-22));
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test427484,"public void test427484() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test428485,"public void test428485() throws Throwable {
    Node node0 = new Node(18);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test429486,"public void test429486() throws Throwable {
    Node node0 = Node.newString(19, "" hiL2X%a**y"");
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test430487,"public void test430487() throws Throwable {
    Node node0 = new Node(20, 20, 99);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test431488,"public void test431488() throws Throwable {
    Node node0 = new Node(119);
    Node node1 = new Node(21, node0);
    Node node2 = node1.copyInformationFrom(node0);
    boolean boolean0 = NodeUtil.mayBeString(node2);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test432489,"public void test432489() throws Throwable {
    Node node0 = Node.newString(""+infinity"");
    Node node1 = new Node(22, node0, node0, 34, 14);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test433490,"public void test433490() throws Throwable {
    Node node0 = new Node(24);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test434491,"public void test434491() throws Throwable {
    Node node0 = Node.newString(25, ""false"");
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test435492,"public void test435492() throws Throwable {
    Node node0 = new Node(62, 62, 38);
    Node node1 = new Node(27, node0);
    Node node2 = node1.copyInformationFrom(node0);
    boolean boolean0 = NodeUtil.mayBeString(node2);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test436493,"public void test436493() throws Throwable {
    Node node0 = new Node(28);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test437494,"public void test437494() throws Throwable {
    Node node0 = new Node(29);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test438495,"public void test438495() throws Throwable {
    Node node0 = new Node(39);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test439496,"public void test439496() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test440497,"public void test440497() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test441498,"public void test441498() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""NaN"", (byte) 118, 1);
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertEquals(1, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test441499,"public void test441499() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""NaN"", (byte) 118, 1);
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertEquals(118, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test441500,"public void test441500() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""NaN"", (byte) 118, 1);
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test442501,"public void test442501() throws Throwable {
    Node node0 = new Node(12);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test443502,"public void test443502() throws Throwable {
    Node node0 = new Node(14, 23, 15);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test444503,"public void test444503() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""If this if/for/while really shouldn't have a body, use {}"", (byte) 32, (byte) 32);
    Node node1 = new Node(15, node0, node0, node0, node0, 0, 0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertEquals(32, node0.getLineno());
}",1,
project,0,test444504,"public void test444504() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""If this if/for/while really shouldn't have a body, use {}"", (byte) 32, (byte) 32);
    Node node1 = new Node(15, node0, node0, node0, node0, 0, 0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test444505,"public void test444505() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""If this if/for/while really shouldn't have a body, use {}"", (byte) 32, (byte) 32);
    Node node1 = new Node(15, node0, node0, node0, node0, 0, 0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertEquals(32, node0.getCharno());
}",1,
project,0,test444506,"public void test444506() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""If this if/for/while really shouldn't have a body, use {}"", (byte) 32, (byte) 32);
    Node node1 = new Node(15, node0, node0, node0, node0, 0, 0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test445507,"public void test445507() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test446508,"public void test446508() throws Throwable {
    Node node0 = new Node(17);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test447509,"public void test447509() throws Throwable {
    Node node0 = new Node(368);
    Node node1 = new Node(18, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test448510,"public void test448510() throws Throwable {
    Node node0 = new Node(19);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test449511,"public void test449511() throws Throwable {
    Node node0 = new Node(20, (-3214), (-1370));
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test450512,"public void test450512() throws Throwable {
    Node node0 = new Node(23, 0, (-2473));
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test451513,"public void test451513() throws Throwable {
    Node node0 = Node.newString(93, ""9Pq0`>7yQN"");
    Node node1 = new Node(25, node0, node0, node0, 29, (-419));
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test452514,"public void test452514() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test453515,"public void test453515() throws Throwable {
    Node node0 = Node.newString(""+infinity"");
    Node node1 = new Node(27, node0, node0, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test454516,"public void test454516() throws Throwable {
    Node node0 = Node.newString(63, ""Number"", 63, 43);
    Node node1 = new Node(28, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test455517,"public void test455517() throws Throwable {
    Node node0 = new Node((byte) 100);
    Node node1 = new Node(29, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test456518,"public void test456518() throws Throwable {
    Node node0 = new Node(31);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test457519,"public void test457519() throws Throwable {
    Node node0 = new Node(32);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test458520,"public void test458520() throws Throwable {
    Node node0 = new Node(33, 33, 33);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test459521,"public void test459521() throws Throwable {
    Node node0 = new Node(34);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test460522,"public void test460522() throws Throwable {
    Node node0 = new Node(35);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test461523,"public void test461523() throws Throwable {
    Node node0 = new Node(39, 39, 39);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test462524,"public void test462524() throws Throwable {
    Node node0 = Node.newString(41, ""LMC8Da.X?#Er"");
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test463525,"public void test463525() throws Throwable {
    Node node0 = new Node(42, 92, 20);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.has(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test464526,"public void test464526() throws Throwable {
    Node node0 = new Node(43);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test465527,"public void test465527() throws Throwable {
    Node node0 = new Node(111);
    Node node1 = new Node(44, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test466528,"public void test466528() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test467529,"public void test467529() throws Throwable {
    Node node0 = new Node(46);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test468530,"public void test468530() throws Throwable {
    Node node0 = new Node(47);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test469531,"public void test469531() throws Throwable {
    Node node0 = new Node(48);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test470532,"public void test470532() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    Node node1 = new Node(49, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test471533,"public void test471533() throws Throwable {
    Node node0 = new Node(50);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test472534,"public void test472534() throws Throwable {
    Node node0 = new Node((byte) 51);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test473535,"public void test473535() throws Throwable {
    Node node0 = Node.newString(""+infinity"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.isUndefined(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test474536,"public void test474536() throws Throwable {
    Node node0 = new Node(41);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test475537,"public void test475537() throws Throwable {
    Node node0 = Node.newString(""+infinity"");
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test476538,"public void test476538() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertNotNull(node0);
}",0,
project,0,test476539,"public void test476539() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test477540,"public void test477540() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test478541,"public void test478541() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(38);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test479542,"public void test479542() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test480543,"public void test480543() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test481544,"public void test481544() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test482545,"public void test482545() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test483546,"public void test483546() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test484547,"public void test484547() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test485548,"public void test485548() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(48);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test486549,"public void test486549() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test487550,"public void test487550() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test488551,"public void test488551() throws Throwable {
    Node node0 = new Node(87);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(9, int0);
}",0,"assertEquals(1, int0)"
project,0,test489552,"public void test489552() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assiment op
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test490553,"public void test490553() throws Throwable {
    Node node0 = Node.newString(68, ""+xO'J,S3~"");
    Node node1 = new Node(88, node0, node0, 2871, 29);
    int int0 = NodeUtil.getOpFromAssignmentOp(node1);
    assertEquals(10, int0);
}",0,"assertEquals(1, int0)"
project,0,test491554,"public void test491554() throws Throwable {
    Node node0 = Node.newString(89, ""KKefsF_]"", 89, 89);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(11, int0);
}",0,"assertEquals(1, int0)"
project,0,test492555,"public void test492555() throws Throwable {
    Node node0 = Node.newString(93, ""prototype"");
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(21, int0);
}",0,"assertEquals(1, int0)"
project,0,test493556,"public void test493556() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(22, int0);
}",0,"assertEquals(1, int0)"
project,0,test494557,"public void test494557() throws Throwable {
    Node node0 = Node.newString(96, ""DEC"");
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(24, int0);
}",0,"assertEquals(1, int0)"
project,0,test495558,"public void test495558() throws Throwable {
    Node node0 = Node.newString(""0Y-uSymKzP?'/PI{"");
    boolean boolean0 = NodeUtil.isExpressionNode(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test496559,"public void test496559() throws Throwable {
    Node node0 = Node.newString(130, ""+infinity"");
    boolean boolean0 = NodeUtil.isExpressionNode(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test497560,"public void test497560() throws Throwable {
    Node node0 = new Node(33, 33, 33);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test498561,"public void test498561() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.NodeUtil"", 1273, 1273);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(1273, node0.getCharno());
}",0,
project,0,test498562,"public void test498562() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.NodeUtil"", 1273, 1273);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test498563,"public void test498563() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.NodeUtil"", 1273, 1273);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNull(node1);
}",0,
project,0,test498564,"public void test498564() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.NodeUtil"", 1273, 1273);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(0, node0.getChildCount())"
project,0,test498565,"public void test498565() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.NodeUtil"", 1273, 1273);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(1273, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test499566,"public void test499566() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test500567,"public void test500567() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""5VK:{ZLviGH;"", 48, 48);
    node0.addChildAfter(node0, node0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test500568,"public void test500568() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""5VK:{ZLviGH;"", 48, 48);
    node0.addChildAfter(node0, node0);
    NodeUtil.getAssignedValue(node0);
    assertEquals(48, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test500569,"public void test500569() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""5VK:{ZLviGH;"", 48, 48);
    node0.addChildAfter(node0, node0);
    NodeUtil.getAssignedValue(node0);
    assertEquals(48, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test501570,"public void test501570() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    Node node1 = NodeUtil.newVarNode(""infinity"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test501571,"public void test501571() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    Node node1 = NodeUtil.newVarNode(""infinity"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertFalse(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test502572,"public void test502572() throws Throwable {
    Node node0 = new Node((-257));
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.has(node0, sourceMap_DetailLevel0, sourceMap_DetailLevel0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test503573,"public void test503573() throws Throwable {
    Node node0 = Node.newString(""~J{rE4pxN,"");
    boolean boolean0 = NodeUtil.isString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test504574,"public void test504574() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprAssign(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test504575,"public void test504575() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprAssign(node1);
    assertEquals(130, node1.getType());
}",0,
project,0,test505576,"public void test505576() throws Throwable {
    Node node0 = Node.newString(""'ED6W}=Ls-r[Zs<A+"");
    Node node1 = new Node(86, node0);
    boolean boolean0 = NodeUtil.isAssign(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test506577,"public void test506577() throws Throwable {
    Node node0 = Node.newString(111, ""nQ8rk\""pQq9Nq)|/*"");
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test507578,"public void test507578() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test507579,"public void test507579() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test508580,"public void test508580() throws Throwable {
    Node node0 = new Node(37);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertTrue(boolean0);
}",0,
project,0,test509581,"public void test509581() throws Throwable {
    Node node0 = new Node(19);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test510582,"public void test510582() throws Throwable {
    Node node0 = Node.newString(""fQo\t&S~z~fUOMYJpR"");
    Node node1 = new Node(115, node0, node0, node0);
    Node node2 = ControlFlowAnalysis.computeFallThrough(node1);
    assertFalse(node2.hasChildren());
}",0,assertFalse(node2.hasChildren())
project,0,test511583,"public void test511583() throws Throwable {
    Node node0 = Node.newString(""nVeg"");
    Node node1 = new Node(15, node0, node0, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test512584,"public void test512584() throws Throwable {
    Node node0 = new Node(114, 114, 114);
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test513585,"public void test513585() throws Throwable {
    Node node0 = Node.newString(""neg"");
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test514586,"public void test514586() throws Throwable {
    Node node0 = Node.newString(""neg"");
    Node node1 = new Node(115, node0, node0, node0);
    Node node2 = NodeUtil.getLoopCodeBlock(node1);
    assertEquals(33, Node.NAME_PROP);
}",0,
project,0,test515587,"public void test515587() throws Throwable {
    Node node0 = Node.newString(""neg"");
    Node node1 = new Node(115, node0, node0, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test516588,"public void test516588() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = new Node(105, node0, node0, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test517589,"public void test517589() throws Throwable {
    Node node0 = Node.newString(26, ""J97"");
    Node node1 = new Node(77, node0, node0, 0, 1324);
    boolean boolean0 = NodeUtil.isControlStructure(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test518590,"public void test518590() throws Throwable {
    Node node0 = new Node(114);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test519591,"public void test519591() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test520592,"public void test520592() throws Throwable {
    Node node0 = Node.newString(110, ""javascript"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test521593,"public void test521593() throws Throwable {
    Node node0 = Node.newString(111, ""x:;z;xB3bAG3=e"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test522594,"public void test522594() throws Throwable {
    Node node0 = new Node(112);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test523595,"public void test523595() throws Throwable {
    Node node0 = Node.newString(113, ""4$4pETVH/"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test525597,"public void test525597() throws Throwable {
    Node node0 = Node.newString((int) (byte) 119, ""koDgqJh=vG*kE"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test526598,"public void test526598() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test527599,"public void test527599() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test528600,"public void test528600() throws Throwable {
    Node node0 = new Node(114);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,
project,0,test529601,"public void test529601() throws Throwable {
    Node node0 = Node.newString(110, ""javascript"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test530602,"public void test530602() throws Throwable {
    Node node0 = Node.newString(111, ""nQ8rk\""pQq9Nq)|/*"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test531603,"public void test531603() throws Throwable {
    Node node0 = Node.newString((int) (byte) 112, ""javascript"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test532604,"public void test532604() throws Throwable {
    Node node0 = Node.newString(""fQo\t&S~z~fUOMYJpR"");
    Node node1 = new Node(115, node0, node0, node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test533605,"public void test533605() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = new Node(120, node0, node0, node0, 38, 0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test534606,"public void test534606() throws Throwable {
    Node node0 = Node.newString(""~J{rE4pxN,"");
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test535607,"public void test535607() throws Throwable {
    Node node0 = Node.newString(""fQo\t&S~z~fUOMYJpR"");
    Node node1 = new Node(115, node0, node0, node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test536608,"public void test536608() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test537609,"public void test537609() throws Throwable {
    Node node0 = new Node(120, 120, 120);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test538610,"public void test538610() throws Throwable {
    Node node0 = Node.newString(108, ""google"");
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test539611,"public void test539611() throws Throwable {
    Node node0 = new Node(114, 114, 114);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test540612,"public void test540612() throws Throwable {
    Node node0 = Node.newString(110, ""javascript"");
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // SWITCH javascript does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test541613,"public void test541613() throws Throwable {
    Node node0 = Node.newString(111, ""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test542614,"public void test542614() throws Throwable {
    Node node0 = Node.newString((int) (byte) 112, ""javascript"");
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // DEFAULT javascript does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test543615,"public void test543615() throws Throwable {
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""com.google.javascript.jscomp.MaybeReachingVariableUse"", 113, 113);
    Node node1 = new Node(113, node0, 22, 23);
    peepholeRemoveDeadCode0.tryFoldWhile(node1);
    assertEquals(113, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test543616,"public void test543616() throws Throwable {
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""com.google.javascript.jscomp.MaybeReachingVariableUse"", 113, 113);
    Node node1 = new Node(113, node0, 22, 23);
    peepholeRemoveDeadCode0.tryFoldWhile(node1);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test543617,"public void test543617() throws Throwable {
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""com.google.javascript.jscomp.MaybeReachingVariableUse"", 113, 113);
    Node node1 = new Node(113, node0, 22, 23);
    peepholeRemoveDeadCode0.tryFoldWhile(node1);
    assertEquals(113, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test543618,"public void test543618() throws Throwable {
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""com.google.javascript.jscomp.MaybeReachingVariableUse"", 113, 113);
    Node node1 = new Node(113, node0, 22, 23);
    peepholeRemoveDeadCode0.tryFoldWhile(node1);
    assertEquals(33, node0.getType());
}",0,
project,0,test544619,"public void test544619() throws Throwable {
    Node node0 = Node.newString(""fQo\t&S~z~fUOMYJpR"");
    Node node1 = new Node(115, node0, node0, node0);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test545620,"public void test545620() throws Throwable {
    Node node0 = Node.newString((-1077), ""com.googlg.javascript.jscomp.mozilla.rhino.ast.VariableDeclaration"");
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // -1077
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test546621,"public void test546621() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ8rk\""pQq9Nqn)|/*"");
    node0.addChildrenToBack(node0);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test547622,"public void test547622() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = NodeUtil.newExpr(node0);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test547623,"public void test547623() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isStatement(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test548624,"public void test548624() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ8rk\""pQq9Nqn)|/*"");
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.isStatement(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test549625,"public void test549625() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""nQ8rk\""pQq9Nq)|/*"");
    Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.isStatement(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test550626,"public void test550626() throws Throwable {
    Node node0 = Node.newString(111, ""f"");
    boolean boolean0 = NodeUtil.isSwitchCase(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test551627,"public void test551627() throws Throwable {
    Node node0 = Node.newString((int) (byte) 112, ""koDgqJh=vG*kE"");
    boolean boolean0 = NodeUtil.isSwitchCase(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test552628,"public void test552628() throws Throwable {
    Node node0 = new Node(85);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test553629,"public void test553629() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""1"", 22, 22);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test553630,"public void test553630() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""1"", 22, 22);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(22, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test553631,"public void test553631() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""1"", 22, 22);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(22, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test554632,"public void test554632() throws Throwable {
    boolean boolean0 = NodeUtil.isLabelName((Node) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test555633,"public void test555633() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""S989<"");
    Node node0 = syntheticAst0.getAstRoot((AbstractCompiler) null);
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test556634,"public void test556634() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test557635,"public void test557635() throws Throwable {
    MockFile mockFile0 = new MockFile(""match"", ""match"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node0 = compiler0.parseSyntheticCode(""match"", ""match"");
    Node node1 = new Node(115, node0, node0, node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node1, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: SCRIPT 1 [sourcename: java.lang.String@0000000440] [synthetic: 1] of FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test558636,"public void test558636() throws Throwable {
    Node node0 = Node.newString(120, ""72tlHa+R5>_v"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test559637,"public void test559637() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ8rk\""pQq9Nqn)|/*"");
    node0.addChildrenToBack(node0);
    NodeUtil.removeChild(node0, node0);
    assertEquals(48, Node.DIRECT_EVAL);
}",0,
project,0,test560638,"public void test560638() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""nQ8rk\""pQq9Nq)|/*"");
    Compiler compiler0 = new Compiler();
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    NodeUtil.newExpr(node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test561639,"public void test561639() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    Node node1 = new Node(105, node0, node0, node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node1, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: STRING nQ8rk\""pQq9Nq)|/* of FUNCTION nQ8rk\""pQq9Nq)|/*
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test562640,"public void test562640() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    // Undeclared exception!
    try {
        NodeUtil.maybeAddFinally(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test563641,"public void test563641() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    NodeUtil.maybeAddFinally(node0);
    assertTrue(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test563642,"public void test563642() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    NodeUtil.maybeAddFinally(node0);
    assertEquals(1, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test564643,"public void test564643() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test565644,"public void test565644() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""|="", ""|="");
    Node node1 = NodeUtil.newVarNode(""|="", node0);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test565645,"public void test565645() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""|="", ""|="");
    Node node1 = NodeUtil.newVarNode(""|="", node0);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test565646,"public void test565646() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""|="", ""|="");
    Node node1 = NodeUtil.newVarNode(""|="", node0);
    boolean boolean0 = NodeUtil.tryMergeBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test566647,"public void test566647() throws Throwable {
    Node node0 = new Node(37, 1575, (-57));
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test567648,"public void test567648() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    boolean boolean0 = NodeUtil.isThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test568649,"public void test568649() throws Throwable {
    Node node0 = new Node((byte) 100);
    // Undeclared exception!
    try {
        NodeUtil.isSparseArray(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test569650,"public void test569650() throws Throwable {
    Node node0 = Node.newString(63, ""Number"", 63, 63);
    boolean boolean0 = NodeUtil.isSparseArray(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test570651,"public void test570651() throws Throwable {
    Node node0 = new Node(73);
    boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test571652,"public void test571652() throws Throwable {
    Node node0 = new Node(77);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test572653,"public void test572653() throws Throwable {
    Node node0 = new Node(38, 38, 38);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.isObjectCallMethod(node1, ""NdeUtl"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test572654,"public void test572654() throws Throwable {
    Node node0 = new Node(38, 38, 38);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.isObjectCallMethod(node1, ""NdeUtl"");
    assertEquals((-1), node1.getLineno());
}",0,
project,0,test573655,"public void test573655() throws Throwable {
    Node node0 = new Node((-257));
    boolean boolean0 = NodeUtil.isFunctionObjectCallOrApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test574656,"public void test574656() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test575657,"public void test575657() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""e>{;uw"", (Node) null);
    boolean boolean0 = NodeUtil.isLhs((Node) null, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test576658,"public void test576658() throws Throwable {
    Node node0 = new Node(86);
    boolean boolean0 = NodeUtil.isLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test577659,"public void test577659() throws Throwable {
    Node node0 = new Node(86);
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.isLhs(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test578660,"public void test578660() throws Throwable {
    Node node0 = Node.newNumber((double) 53, 160, 160);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test579661,"public void test579661() throws Throwable {
    Node node0 = Node.newString(148, "".prototype."");
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test580662,"public void test580662() throws Throwable {
    Node node0 = Node.newNumber(0.0, (-638), (-638));
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""0"", string0);
}",0,
project,0,test581663,"public void test581663() throws Throwable {
    Node node0 = new Node(70, 70, 70);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected node type: DEFAULTNAMESPACE 70
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test582664,"public void test582664() throws Throwable {
    Node node0 = Node.newString(""nQ8rk\""pQq9Nq)|/*"");
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""nQ8rk\""pQq9Nq)|/*"", string0);
}",0,
project,0,test583665,"public void test583665() throws Throwable {
    Node node0 = new Node(102);
    JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, (JSType) null);
    assertNull(jSType0);
}",0,assertNotNull(jSType0)
project,0,test584666,"public void test584666() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ}isk\""pQq9Nq)|/*"");
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();
    JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, objectType0);
    assertFalse(jSType0.isBooleanValueType());
}",0,assertTrue(jSType0.isBooleanValueType())
project,0,test585667,"public void test585667() throws Throwable {
    Node node0 = Node.newString(147, "".prototype."");
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test586668,"public void test586668() throws Throwable {
    Node node0 = new Node((-257));
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test587669,"public void test587669() throws Throwable {
    Node node0 = Node.newString(148, ""+infinity"");
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test588670,"public void test588670() throws Throwable {
    String string0 = NodeUtil.opToStr(9);
    assertEquals(""|"", string0);
}",0,
project,0,test589672,"public void test589672() throws Throwable {
    String string0 = NodeUtil.opToStr(10);
    assertNotNull(string0);
}",0,
project,0,test590674,"public void test590674() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(11);
    assertEquals(""&"", string0);
}",1,
project,0,test591675,"public void test591675() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertEquals(""=="", string0);
}",0,
project,0,test592676,"public void test592676() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(13);
    assertEquals(""!="", string0);
}",1,
project,0,test593677,"public void test593677() throws Throwable {
    String string0 = NodeUtil.opToStr(14);
    assertEquals(""<"", string0);
}",0,
project,0,test594678,"public void test594678() throws Throwable {
    String string0 = NodeUtil.opToStr(15);
    assertEquals(""<="", string0);
}",0,
project,0,test595679,"public void test595679() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(16);
    assertEquals("">"", string0);
}",1,
project,0,test596680,"public void test596680() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(17);
    assertEquals("">="", string0);
}",1,
project,0,test597681,"public void test597681() throws Throwable {
    String string0 = NodeUtil.opToStr(18);
    assertEquals(""<<"", string0);
}",0,
project,0,test598682,"public void test598682() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail((byte) 19);
    assertEquals("">>"", string0);
}",1,
project,0,test599683,"public void test599683() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(20);
    assertEquals("">>>"", string0);
}",1,
project,0,test600684,"public void test600684() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(21);
    assertEquals(""+"", string0);
}",1,
project,0,test601685,"public void test601685() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(22);
    assertEquals(""-"", string0);
}",1,
project,0,test602686,"public void test602686() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(23);
    assertEquals(""*"", string0);
}",1,
project,0,test603687,"public void test603687() throws Throwable {
    String string0 = NodeUtil.opToStr(24);
    assertEquals(""/"", string0);
}",0,
project,0,test604688,"public void test604688() throws Throwable {
    String string0 = NodeUtil.opToStr(25);
    assertEquals(""%"", string0);
}",0,
project,0,test605689,"public void test605689() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(26);
    assertEquals(""!"", string0);
}",1,
project,0,test606690,"public void test606690() throws Throwable {
    String string0 = NodeUtil.opToStr(27);
    assertEquals(""~"", string0);
}",0,
project,0,test607691,"public void test607691() throws Throwable {
    String string0 = NodeUtil.opToStr(28);
    assertEquals(""+"", string0);
}",0,
project,0,test608692,"public void test608692() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(29);
    assertEquals(""-"", string0);
}",1,
project,0,test609693,"public void test609693() throws Throwable {
    String string0 = NodeUtil.opToStr(30);
    assertNull(string0);
}",0,
project,0,test610694,"public void test610694() throws Throwable {
    String string0 = NodeUtil.opToStr(31);
    assertNull(string0);
}",0,
project,0,test611695,"public void test611695() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(32);
    assertEquals(""typeof"", string0);
}",1,
project,0,test612696,"public void test612696() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(33);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 33: GETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test613697,"public void test613697() throws Throwable {
    String string0 = NodeUtil.opToStr(34);
    assertNull(string0);
}",0,
project,0,test614698,"public void test614698() throws Throwable {
    String string0 = NodeUtil.opToStr(35);
    assertNull(string0);
}",0,
project,0,test615699,"public void test615699() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(36);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 36: SETELEM
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test616700,"public void test616700() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(37);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 37: CALL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test617701,"public void test617701() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(39);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 39: NUMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test618702,"public void test618702() throws Throwable {
    String string0 = NodeUtil.opToStr(40);
    assertNull(string0);
}",0,
project,0,test619703,"public void test619703() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(41);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 41: NULL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test620704,"public void test620704() throws Throwable {
    String string0 = NodeUtil.opToStr(42);
    assertNull(string0);
}",0,
project,0,test621705,"public void test621705() throws Throwable {
    String string0 = NodeUtil.opToStr(43);
    assertNull(string0);
}",0,
project,0,test622706,"public void test622706() throws Throwable {
    String string0 = NodeUtil.opToStr(44);
    assertNull(string0);
}",0,
project,0,test623707,"public void test623707() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(45);
    assertEquals(""==="", string0);
}",1,
project,0,test624708,"public void test624708() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(46);
    assertEquals(""!=="", string0);
}",1,
project,0,test625709,"public void test625709() throws Throwable {
    String string0 = NodeUtil.opToStr(47);
    assertNull(string0);
}",0,
project,0,test626710,"public void test626710() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 48: BINDNAME
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test627711,"public void test627711() throws Throwable {
    String string0 = NodeUtil.opToStr(49);
    assertNull(string0);
}",0,
project,0,test628712,"public void test628712() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 50: RETHROW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test629713,"public void test629713() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail((byte) 51);
    assertEquals(""in"", string0);
}",1,
project,0,test630714,"public void test630714() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(52);
    assertEquals(""instanceof"", string0);
}",1,
project,0,test631715,"public void test631715() throws Throwable {
    String string0 = NodeUtil.opToStr(53);
    assertNull(string0);
}",0,
project,0,test632716,"public void test632716() throws Throwable {
    String string0 = NodeUtil.opToStr(54);
    assertNull(string0);
}",0,
project,0,test633717,"public void test633717() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(55);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 55: SETVAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test634718,"public void test634718() throws Throwable {
    String string0 = NodeUtil.opToStr(56);
    assertNull(string0);
}",0,
project,0,test635719,"public void test635719() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(57);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 57: ENUM_INIT_KEYS
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test636720,"public void test636720() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 58: ENUM_INIT_VALUES
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test637721,"public void test637721() throws Throwable {
    String string0 = NodeUtil.opToStr(59);
    assertNull(string0);
}",0,
project,0,test638722,"public void test638722() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(60);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 60: ENUM_ID
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test639723,"public void test639723() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 62: RETURN_RESULT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test640724,"public void test640724() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(63);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 63: ARRAYLIT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test641725,"public void test641725() throws Throwable {
    String string0 = NodeUtil.opToStr(64);
    assertNull(string0);
}",0,
project,0,test642726,"public void test642726() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(65);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 65: GET_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test643727,"public void test643727() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 66: SET_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test644728,"public void test644728() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 67: DEL_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test645729,"public void test645729() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 68: REF_CALL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test646730,"public void test646730() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(69);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 69: REF_SPECIAL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test647731,"public void test647731() throws Throwable {
    String string0 = NodeUtil.opToStr(70);
    assertNull(string0);
}",0,
project,0,test648732,"public void test648732() throws Throwable {
    String string0 = NodeUtil.opToStr(71);
    assertNull(string0);
}",0,
project,0,test649733,"public void test649733() throws Throwable {
    String string0 = NodeUtil.opToStr(72);
    assertNull(string0);
}",0,
project,0,test650734,"public void test650734() throws Throwable {
    String string0 = NodeUtil.opToStr(73);
    assertNull(string0);
}",0,
project,0,test651735,"public void test651735() throws Throwable {
    String string0 = NodeUtil.opToStr(74);
    assertNull(string0);
}",0,
project,0,test652736,"public void test652736() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail((byte) 75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 75: REF_NAME
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test653737,"public void test653737() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail((byte) 76);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 76: REF_NS_NAME
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test654738,"public void test654738() throws Throwable {
    String string0 = NodeUtil.opToStr(77);
    assertNull(string0);
}",0,
project,0,test655739,"public void test655739() throws Throwable {
    String string0 = NodeUtil.opToStr(78);
    assertNull(string0);
}",0,
project,0,test656740,"public void test656740() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 79: LB
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test657741,"public void test657741() throws Throwable {
    String string0 = NodeUtil.opToStr(80);
    assertNull(string0);
}",0,
project,0,test658742,"public void test658742() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 81: LC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test659743,"public void test659743() throws Throwable {
    String string0 = NodeUtil.opToStr(83);
    assertNull(string0);
}",0,
project,0,test660744,"public void test660744() throws Throwable {
    String string0 = NodeUtil.opToStr(84);
    assertNull(string0);
}",0,
project,0,test661745,"public void test661745() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(85);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 85: COMMA
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test662746,"public void test662746() throws Throwable {
    String string0 = NodeUtil.opToStr(86);
    assertEquals(""="", string0);
}",0,
project,0,test663747,"public void test663747() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(87);
    assertEquals(""|="", string0);
}",1,
project,0,test664748,"public void test664748() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(88);
    assertEquals(""^="", string0);
}",1,
project,0,test665749,"public void test665749() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(89);
    assertEquals(""&="", string0);
}",1,
project,0,test666750,"public void test666750() throws Throwable {
    String string0 = NodeUtil.opToStr(90);
    assertEquals(""<<="", string0);
}",0,
project,0,test667751,"public void test667751() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test668752,"public void test668752() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(92);
    assertEquals("">>>="", string0);
}",1,
project,0,test669753,"public void test669753() throws Throwable {
    String string0 = NodeUtil.opToStr(93);
    assertEquals(""+="", string0);
}",0,
project,0,test670754,"public void test670754() throws Throwable {
    String string0 = NodeUtil.opToStr(94);
    assertEquals(""-="", string0);
}",0,
project,0,test671755,"public void test671755() throws Throwable {
    String string0 = NodeUtil.opToStr(95);
    assertEquals(""*="", string0);
}",0,
project,0,test672756,"public void test672756() throws Throwable {
    String string0 = NodeUtil.opToStr(96);
    assertEquals(""/="", string0);
}",0,
project,0,test673757,"public void test673757() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(97);
    assertEquals(""%="", string0);
}",1,
project,0,test674758,"public void test674758() throws Throwable {
    String string0 = NodeUtil.opToStr(98);
    assertNull(string0);
}",0,
project,0,test675759,"public void test675759() throws Throwable {
    String string0 = NodeUtil.opToStr(99);
    assertNull(string0);
}",0,
project,0,test676760,"public void test676760() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(100);
    assertEquals(""||"", string0);
}",1,
project,0,test677761,"public void test677761() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(101);
    assertEquals(""&&"", string0);
}",1,
project,0,test678762,"public void test678762() throws Throwable {
    String string0 = NodeUtil.opToStr(102);
    assertNull(string0);
}",0,
project,0,test679763,"public void test679763() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(103);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 103: DEC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test680764,"public void test680764() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 104: DOT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test681765,"public void test681765() throws Throwable {
    String string0 = NodeUtil.opToStr(105);
    assertNull(string0);
}",0,
project,0,test682766,"public void test682766() throws Throwable {
    String string0 = NodeUtil.opToStr(106);
    assertNull(string0);
}",0,
project,0,test683767,"public void test683767() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 107: IMPORT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test684768,"public void test684768() throws Throwable {
    String string0 = NodeUtil.opToStr(108);
    assertNull(string0);
}",0,
project,0,test685769,"public void test685769() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 109: ELSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test686770,"public void test686770() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 110: SWITCH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test687771,"public void test687771() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 111: CASE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test688772,"public void test688772() throws Throwable {
    String string0 = NodeUtil.opToStr(112);
    assertNull(string0);
}",0,
project,0,test689773,"public void test689773() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 113: WHILE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test690774,"public void test690774() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 114: DO
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test691775,"public void test691775() throws Throwable {
    String string0 = NodeUtil.opToStr(115);
    assertNull(string0);
}",0,
project,0,test692776,"public void test692776() throws Throwable {
    String string0 = NodeUtil.opToStr(116);
    assertNull(string0);
}",0,
project,0,test693777,"public void test693777() throws Throwable {
    String string0 = NodeUtil.opToStr(117);
    assertNull(string0);
}",0,
project,0,test694778,"public void test694778() throws Throwable {
    String string0 = NodeUtil.opToStr(118);
    assertNull(string0);
}",0,
project,0,test695779,"public void test695779() throws Throwable {
    String string0 = NodeUtil.opToStr(119);
    assertNull(string0);
}",0,
project,0,test696780,"public void test696780() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 120: CATCH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test697781,"public void test697781() throws Throwable {
    String string0 = NodeUtil.opToStr(121);
    assertNull(string0);
}",0,
project,0,test698782,"public void test698782() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(122);
    assertEquals(""void"", string0);
}",1,
project,0,test699783,"public void test699783() throws Throwable {
    Node node0 = Node.newString("""");
    Node node1 = NodeUtil.newVarNode("""", node0);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test700784,"public void test700784() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""rD"", ""rD"");
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(1, Node.LEFT);
}",0,
project,0,test701785,"public void test701785() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertEquals(8, Node.CODEOFFSET_PROP);
}",0,
project,0,test702786,"public void test702786() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""I#>Z%n!.M`M,5"", (-2395), (-2395));
    // Undeclared exception!
    try {
        NodeUtil.hasFinally(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test703787,"public void test703787() throws Throwable {
    Node node0 = new Node(38);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(4095, Node.MAX_COLUMN_NUMBER);
}",0,
project,0,test704788,"public void test704788() throws Throwable {
    Node node0 = Node.newString(""2Z^+?AP#2>i^^1"");
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test705789,"public void test705789() throws Throwable {
    Node node0 = Node.newString(33, ""+i~fzniWy"");
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test706790,"public void test706790() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Y{ZQP9"", (-11), (-11));
    assertEquals(0, node0.getSideEffectFlags());
}",0,"assertEquals(1, node0.getSideEffectFlags())"
project,0,test707791,"public void test707791() throws Throwable {
    Node node0 = new Node(85);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""A3J?V"", node0);
    assertEquals(0, node1.getSideEffectFlags());
}",0,"assertEquals(1, node1.getSideEffectFlags())"
project,0,test707792,"public void test707792() throws Throwable {
    Node node0 = new Node(85);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""A3J?V"", node0);
    assertTrue(node1.isUnscopedQualifiedName());
}",0,assertFalse(node1.isUnscopedQualifiedName())
project,0,test708793,"public void test708793() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""Error"");
    String string0 = compiler0.toSource(node0);
    assertEquals(""Error"", string0);
}",0,assertNotNull(string0)
project,0,test709794,"public void test709794() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""Hq2l|Ex"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test710795,"public void test710795() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""static"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test711796,"public void test711796() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""prototype"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test712797,"public void test712797() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = new Node(91, 91, 91);
    Node node1 = NodeUtil.newName(googleCodingConvention0, """", node0, """");
    NodeUtil.getVarsDeclaredInBranch(node1);
    assertEquals(91, node1.getLineno());
}",0,"assertEquals(0, node1.getLineno())"
project,0,test712798,"public void test712798() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = new Node(91, 91, 91);
    Node node1 = NodeUtil.newName(googleCodingConvention0, """", node0, """");
    NodeUtil.getVarsDeclaredInBranch(node1);
    assertTrue(node1.isQualifiedName());
}",0,
project,0,test712799,"public void test712799() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = new Node(91, 91, 91);
    Node node1 = NodeUtil.newName(googleCodingConvention0, """", node0, """");
    NodeUtil.getVarsDeclaredInBranch(node1);
    assertEquals(38, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test713800,"public void test713800() throws Throwable {
    Node node0 = new Node(121);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test714801,"public void test714801() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""1"", 22, 22);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test714802,"public void test714802() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""1"", 22, 22);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertEquals(22, node0.getCharno());
}",1,
project,0,test714803,"public void test714803() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""1"", 22, 22);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertEquals(22, node0.getLineno());
}",1,
project,0,test715804,"public void test715804() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test716805,"public void test716805() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".prototype."", 94, 64);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(64, node1.getCharno());
}",0,"assertEquals(1, node1.getCharno())"
project,0,test716806,"public void test716806() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".prototype."", 94, 64);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNotNull(node1);
}",0,
project,0,test716807,"public void test716807() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".prototype."", 94, 64);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(94, node1.getLineno());
}",0,
project,0,test716808,"public void test716808() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".prototype."", 94, 64);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(0, node1.getChildCount());
}",0,"assertEquals(1, node1.getChildCount())"
project,0,test716809,"public void test716809() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".prototype."", 94, 64);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(94, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test716810,"public void test716810() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".prototype."", 94, 64);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(64, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test717811,"public void test717811() throws Throwable {
    Node node0 = new Node((-2118));
    node0.addChildAfter(node0, node0);
    // Undeclared exception!
    try {
        NodeUtil.newVarNode(""-ininity"", node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test718812,"public void test718812() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    Node node1 = NodeUtil.newVarNode(""com.google.javascript.jscomp.mozilla.rhino.ast.ObjectProperty"", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""com.google.javascript.jscomp.mozilla.rhino.ast.ObjectProperty"");
    assertEquals(64, node1.getLineno());
}",0,
project,0,test718813,"public void test718813() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    Node node1 = NodeUtil.newVarNode(""com.google.javascript.jscomp.mozilla.rhino.ast.ObjectProperty"", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""com.google.javascript.jscomp.mozilla.rhino.ast.ObjectProperty"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test718814,"public void test718814() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    Node node1 = NodeUtil.newVarNode(""com.google.javascript.jscomp.mozilla.rhino.ast.ObjectProperty"", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""com.google.javascript.jscomp.mozilla.rhino.ast.ObjectProperty"");
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test719815,"public void test719815() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = Node.newString(159, ""I?Zi1H1]oloU"");
    Node node1 = NodeUtil.newName(defaultCodingConvention0, ""+infinity"", node0);
    int int0 = NodeUtil.getNameReferenceCount(node1, ""I?Zi1H1]oloU"");
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test719816,"public void test719816() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = Node.newString(159, ""I?Zi1H1]oloU"");
    Node node1 = NodeUtil.newName(defaultCodingConvention0, ""+infinity"", node0);
    int int0 = NodeUtil.getNameReferenceCount(node1, ""I?Zi1H1]oloU"");
    assertTrue(node1.isQualifiedName());
}",0,assertTrue(node1.isQualifiedName())
project,0,test720817,"public void test720817() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.containsFunction(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test727824,"public void test727824() throws Throwable {
    Node node0 = Node.newString(130, ""+infinity"");
    Node node1 = NodeUtil.newVarNode(""+OzEy"", node0);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test727825,"public void test727825() throws Throwable {
    Node node0 = Node.newString(130, ""+infinity"");
    Node node1 = NodeUtil.newVarNode(""+OzEy"", node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.has(node0, nodeUtil_MatchShallowStatement0, nodeUtil_MayBeStringResultPredicate0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test728826,"public void test728826() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""rD"", ""rD"");
    boolean boolean0 = NodeUtil.containsType(node0, 1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test729827,"public void test729827() throws Throwable {
    Node node0 = new Node(0, 0, (-449));
    Node node1 = new Node(23, node0);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    int int0 = NodeUtil.getCount(node1, nodeUtil_NumbericResultPredicate0, nodeUtil_NumbericResultPredicate0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test730828,"public void test730828() throws Throwable {
    Node node0 = new Node(13, 13, 104);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test731829,"public void test731829() throws Throwable {
    Node node0 = new Node(893, 103, (-120));
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    Node node1 = new Node(13, node0, node0, node0);
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node1, (NodeUtil.Visitor) null, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test732830,"public void test732830() throws Throwable {
    Node node0 = Node.newString(98, ""; "");
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test733831,"public void test733831() throws Throwable {
    Node node0 = Node.newString(77, ""JSCompiler_renameProperty"");
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test734832,"public void test734832() throws Throwable {
    Node node0 = Node.newString(63, ""'ED76%W}=Ls-r[Z<A+"");
    // Undeclared exception!
    try {
        NodeUtil.hasCatchHandler(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test735833,"public void test735833() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ8rk\""pQq9Nqn)|/*"");
    boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test736834,"public void test736834() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""nQ8rk\""pQq9Nqn)|/*"");
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test737835,"public void test737835() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    // Undeclared exception!
    try {
        NodeUtil.getFnParameters(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test738836,"public void test738836() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    // Undeclared exception!
    try {
        NodeUtil.getFnParameters(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test739837,"public void test739837() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.RuntimeTypeCheck"", ""com.google.javascript.jscomp.RuntimeTypeCheck"");
    assertEquals(49, Node.FREE_CALL);
}",0,
project,0,test740838,"public void test740838() throws Throwable {
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode((Node) null);
    assertNull(jSDocInfo0);
}",0,
project,0,test741839,"public void test741839() throws Throwable {
    Node node0 = Node.newString(63, ""'ED76%W}=Ls-r[Z<A+"");
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test742840,"public void test742840() throws Throwable {
    Node node0 = Node.newString(63, ""'ED76%W}=Ls-r[Z<A+"");
    node0.addSuppression(""'ED76%W}=Ls-r[Z<A+"");
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertFalse(jSDocInfo0.isNoTypeCheck());
}",0,assertTrue(jSDocInfo0.isNoTypeCheck())
project,0,test743841,"public void test743841() throws Throwable {
    Node node0 = Node.newString(111, ""nQ8rk\""pQq9Nq)|/*"");
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFileLevelAstParallelizer(node0);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""nQ8rk\""pQq9Nq)|/*"", list0, node0, 38, 4);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test743842,"public void test743842() throws Throwable {
    Node node0 = Node.newString(111, ""nQ8rk\""pQq9Nq)|/*"");
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFileLevelAstParallelizer(node0);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""nQ8rk\""pQq9Nq)|/*"", list0, node0, 38, 4);
    assertEquals(38, node1.getLineno());
}",0,
project,0,test743843,"public void test743843() throws Throwable {
    Node node0 = Node.newString(111, ""nQ8rk\""pQq9Nq)|/*"");
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFileLevelAstParallelizer(node0);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""nQ8rk\""pQq9Nq)|/*"", list0, node0, 38, 4);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(1, node1.getChildCount())"
project,0,test743844,"public void test743844() throws Throwable {
    Node node0 = Node.newString(111, ""nQ8rk\""pQq9Nq)|/*"");
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFileLevelAstParallelizer(node0);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""nQ8rk\""pQq9Nq)|/*"", list0, node0, 38, 4);
    assertEquals(4, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
project,0,test743845,"public void test743845() throws Throwable {
    Node node0 = Node.newString(111, ""nQ8rk\""pQq9Nq)|/*"");
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFileLevelAstParallelizer(node0);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""nQ8rk\""pQq9Nq)|/*"", list0, node0, 38, 4);
    NodeUtil.getInfoForNameNode(node0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test744846,"public void test744846() throws Throwable {
    Node node0 = Node.newString(""neg"");
    Node node1 = new Node(24, node0, node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test745847,"public void test745847() throws Throwable {
    Node node0 = new Node(47);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test746848,"public void test746848() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test747849,"public void test747849() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""nQ8rk\""pQq9Nq)|/*"", ""nQ8rk\""pQq9Nq)|/*"");
    String string0 = NodeUtil.getSourceName(node0);
    assertNotNull(string0);
}",0,
project,0,test748851,"public void test748851() throws Throwable {
    Node node0 = new Node(68, 68, 68);
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test749852,"public void test749852() throws Throwable {
    Node node0 = new Node(38);
    Node[] nodeArray0 = new Node[6];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test750853,"public void test750853() throws Throwable {
    Node node0 = Node.newString(31, """");
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDELPROP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test751854,"public void test751854() throws Throwable {
    Node node0 = new Node(32);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test752855,"public void test752855() throws Throwable {
    Node node0 = new Node(33);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test753856,"public void test753856() throws Throwable {
    Node node0 = new Node(34, (-3198), 10);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETPROP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test754857,"public void test754857() throws Throwable {
    Node node0 = new Node((byte) 35);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test755858,"public void test755858() throws Throwable {
    Node node0 = new Node(42);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test756859,"public void test756859() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test757860,"public void test757860() throws Throwable {
    Node node0 = Node.newString(47, ""=="");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test758861,"public void test758861() throws Throwable {
    Node node0 = new Node(48);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeBINDNAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test759862,"public void test759862() throws Throwable {
    Node node0 = new Node((byte) 51);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test760863,"public void test760863() throws Throwable {
    Node node0 = Node.newString(58, ""nQ8@k\""pQq9N7)|/*"");
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_VALUES nQ8@k\""pQq9N7)|/*
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test761864,"public void test761864() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_ID 60
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test762865,"public void test762865() throws Throwable {
    Node node0 = new Node(62);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETURN_RESULT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test763866,"public void test763866() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test764867,"public void test764867() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test765868,"public void test765868() throws Throwable {
    Node node0 = new Node(65);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGET_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test766869,"public void test766869() throws Throwable {
    Node node0 = new Node(70, 70, 70);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEFAULTNAMESPACE 70
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test767870,"public void test767870() throws Throwable {
    Node node0 = Node.newString(73, "";X*s]]]]#S|%Im"");
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_MEMBER ;X*s]]]]#S|%Im
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test768871,"public void test768871() throws Throwable {
    Node node0 = new Node(78);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSEMI
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test769872,"public void test769872() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test770873,"public void test770873() throws Throwable {
    Node node0 = new Node(86, 104, 86);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test771874,"public void test771874() throws Throwable {
    Node node0 = new Node(87);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test772875,"public void test772875() throws Throwable {
    Node node0 = new Node(88);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test773876,"public void test773876() throws Throwable {
    Node node0 = new Node(89);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, compilerOptions0.sourceMapDetailLevel);
    assertTrue(boolean0);
}",0,
project,0,test774877,"public void test774877() throws Throwable {
    Node node0 = Node.newString(90, ""KKefsF_]"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test775878,"public void test775878() throws Throwable {
    Node node0 = new Node(91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test776879,"public void test776879() throws Throwable {
    Node node0 = new Node(92);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test777880,"public void test777880() throws Throwable {
    Node node0 = new Node(93);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test778881,"public void test778881() throws Throwable {
    Node node0 = new Node(94);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test779882,"public void test779882() throws Throwable {
    Node node0 = Node.newString(95, ""nQ8rk\""pQq9Nq)|/*"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test780883,"public void test780883() throws Throwable {
    Node node0 = new Node(96);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test781884,"public void test781884() throws Throwable {
    Node node0 = Node.newString(97, "",1BqCc;i/|tAv)"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test782885,"public void test782885() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test783886,"public void test783886() throws Throwable {
    Node node0 = new Node((byte) 101);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test784887,"public void test784887() throws Throwable {
    Node node0 = new Node(102, 48, 102);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test785888,"public void test785888() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test786889,"public void test786889() throws Throwable {
    Node node0 = new Node((byte) 100);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""Zju5S"", node0);
    node0.addChildToFront(node1);
    assertTrue(node1.isUnscopedQualifiedName());
}",0,assertFalse(node1.isUnscopedQualifiedName())
project,0,test786890,"public void test786890() throws Throwable {
    Node node0 = new Node((byte) 100);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""Zju5S"", node0);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test787891,"public void test787891() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""nQ8rk\""pQq9Nq)|/*"");
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager((PrintStream) null);
    Compiler compiler0 = new Compiler(printStreamErrorManager0);
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) defaultCodingConvention0, ""undefined"", node0, ""nQ8rk\""pQq9Nq)|/*"");
    assertEquals(38, node1.getType());
}",0,
project,0,test787892,"public void test787892() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""nQ8rk\""pQq9Nq)|/*"");
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager((PrintStream) null);
    Compiler compiler0 = new Compiler(printStreamErrorManager0);
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) defaultCodingConvention0, ""undefined"", node0, ""nQ8rk\""pQq9Nq)|/*"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertTrue(boolean0);
}",0,
project,0,test788893,"public void test788893() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""x+,#@Hz=0e(X(p>"", (-3783), 2101);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNotFunction0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test788894,"public void test788894() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""x+,#@Hz=0e(X(p>"", (-3783), 2101);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test788895,"public void test788895() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""x+,#@Hz=0e(X(p>"", (-3783), 2101);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNotFunction0);
    assertEquals(37, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test789896,"public void test789896() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test790898,"public void test790898() throws Throwable {
    Node node0 = Node.newNumber(562.242, 103, 3364);
    Vector<Node> vector0 = new Vector<Node>();
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""9Cs"", node0);
    vector0.add(node1);
    Node node2 = NodeUtil.newFunctionNode("" xWV["", vector0, node0, 37, 12);
    NodeUtil.getArgumentForFunction(node2, (-2));
    assertEquals(37, node2.getLineno());
}",0,
