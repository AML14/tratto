com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test0000() throws Throwable {
    Compiler compiler0 = new Compiler();
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""C.Y*5"", ""C.Y*5"");
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    nodeTraversal0.traverse(node0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test0022() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node((-3033), node0, node0);
    Scope scope0 = typeCheck0.processForTesting((Node) null, node0);
    scope0.getVarCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test0077() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"", ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(86, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.isAssignAdd();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test01515() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Tsm1d`pvoy"", ""Tsm1d`pvoy"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(9, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, (Node) null);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test01516() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Tsm1d`pvoy"", ""Tsm1d`pvoy"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(9, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, (Node) null);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test01617() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""d$g0TEhcEpJ7za>goEQ"", ""d$g0TEhcEpJ7za>goEQ"");
    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;
    Predicate<Scope.Var> predicate0 = (Predicate<Scope.Var>) mock(Predicate.class, new ViolatedAssumptionAnswer());
    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0, predicate0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, referenceCollectingCallback0);
    Node node1 = new Node(11, node0, node0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test01618() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""d$g0TEhcEpJ7za>goEQ"", ""d$g0TEhcEpJ7za>goEQ"");
    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;
    Predicate<Scope.Var> predicate0 = (Predicate<Scope.Var>) mock(Predicate.class, new ViolatedAssumptionAnswer());
    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0, predicate0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, referenceCollectingCallback0);
    Node node1 = new Node(11, node0, node0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test01719() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""not a StringNode"", ""not a StringNode"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    Node node1 = new Node(12, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    nodeTraversal0.getSourceName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test01820() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(13, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.isCatch();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test01921() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", ""c/xz`. z,xX<C>"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, true);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_PropagateConstantAnnotationsOverVars0);
    Node node1 = new Node(14, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node1.isHook();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02022() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""0g`X^-3"", ""0g`X^-3"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(15, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.getSourcePosition();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02325() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(20, node0, (-2479), 46);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.hasErrors();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02326() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(20, node0, (-2479), 46);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02427() throws Throwable {
    Compiler compiler0 = new Compiler();
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""C.Y*5"", ""C.Y*5"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    VarCheck varCheck0 = new VarCheck(compiler0, false);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, varCheck0, (ScopeCreator) null);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(21, node0, 55, 47);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02428() throws Throwable {
    Compiler compiler0 = new Compiler();
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""C.Y*5"", ""C.Y*5"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    VarCheck varCheck0 = new VarCheck(compiler0, false);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, varCheck0, (ScopeCreator) null);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(21, node0, 55, 47);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02429() throws Throwable {
    Compiler compiler0 = new Compiler();
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""C.Y*5"", ""C.Y*5"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    VarCheck varCheck0 = new VarCheck(compiler0, false);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, varCheck0, (ScopeCreator) null);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(21, node0, 55, 47);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.hasErrors();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02530() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""z$-"", ""sg.invalid.type"");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(22, node0, node0, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02531() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""z$-"", ""sg.invalid.type"");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(22, node0, node0, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02733() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(25, node0, 31, 47);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02734() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(25, node0, 31, 47);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02735() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(25, node0, 31, 47);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.hasErrors();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test02836() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(26, node0, node0, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.isGetProp();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test03240() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""JSC_TEMPLATE_TYPE_EXPECTED"", ""JSC_TEMPLATE_TYPE_EXPECTED"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(30, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test03442() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, false);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_PropagateConstantAnnotationsOverVars0);
    Node node1 = new Node(32, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node1.isDefaultCase();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test03745() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""0g`X^-3"", ""0g`X^-3"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(37, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test03947() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""o#vI5%.Xf?4{])<@"", (String) null);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(43, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.isBreak();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test04149() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(45, node0, 31, 47);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.isInc();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test06472() throws Throwable {
    Compiler compiler0 = new Compiler();
    Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node0 = Node.newString(77, """");
    typeCheck0.visit(nodeTraversal0, node0, node0);
    node0.isDo();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test06876() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""E*5L"", ""E*5L"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, false);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_PropagateConstantAnnotationsOverVars0);
    Node node1 = new Node(83, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.isName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07078() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", ""com.google.javascript.jscomp.NodeUtil$MatchDeclaration"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, true);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_PropagateConstantAnnotationsOverVars0);
    Node node1 = new Node(85, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07179() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(88, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07180() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(88, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07181() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(88, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.hasErrors();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07282() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Tsm1d`pvoy"", ""Tsm1d`pvoy"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(89, node0, node0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07283() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Tsm1d`pvoy"", ""Tsm1d`pvoy"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(89, node0, node0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07384() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(91, node0, 31, 47);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07385() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(91, node0, 31, 47);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.hasErrors();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07486() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"", ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, false);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_PropagateConstantAnnotationsOverVars0);
    Node node1 = new Node(92, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.hasErrors();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07487() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"", ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, false);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_PropagateConstantAnnotationsOverVars0);
    Node node1 = new Node(92, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07588() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(93, node0, 2, 4);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.hasErrors();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07589() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(93, node0, 2, 4);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07590() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(93, node0, 2, 4);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07691() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""not a StringNode"", ""not a StringNode"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(94, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07692() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""not a StringNode"", ""not a StringNode"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(94, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07793() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(97, node0, node0, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07794() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(97, node0, node0, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test07996() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(100, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test086103() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", (String) null);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, (NodeTraversal.Callback) null);
    Node node1 = new Node(110, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node1.isIf();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test088105() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(112, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.isGetElem();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test089106() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(113, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.getType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test090107() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(114, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node0.isComma();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test092109() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "".*5L"", "".*5L"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(116, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node0.isNot();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test095112() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""not a StringNode"", ""not a StringNode"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(119, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node0.isNumber();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test096113() throws Throwable {
    Compiler compiler0 = new Compiler();
    Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node0 = new Node(120, 8, (-951));
    typeCheck0.visit(nodeTraversal0, node0, node0);
    node0.isScript();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test098115() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""0g`X^-3"", ""0g`X^-3"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    CompilerOptions compilerOptions0 = compiler0.options;
    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);
    InferJSDocInfo inferJSDocInfo0 = cleanupPasses0.makeInferJsDocInfo(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, inferJSDocInfo0);
    Node node1 = new Node(122, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.isString();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test100117() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""j"", ""j"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, false);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_PropagateConstantAnnotationsOverVars0);
    Node node1 = new Node(124, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node1.isString();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test101118() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""5!v|6+HbQhL/zlkq _"", ""5!v|6+HbQhL/zlkq _"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);
    Node node1 = new Node(125, node0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node1.isGetElem();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test102119() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"", ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(126, node0, 1, 149);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.isAnd();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test121138() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(147, node0, node0, 39, 48);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    node1.isStringKey();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test123140() throws Throwable {
    Compiler compiler0 = new Compiler();
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "".*5L"", "".*5L"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(149, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test128145() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, false);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_PropagateConstantAnnotationsOverVars0);
    Node node1 = new Node(154, node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node0.isHook();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test130147() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""not a StringNode"", ""not a StringNode"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(16, node0, node0, node0, 52, 12);
    typeCheck0.processForTesting(node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test131148() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"", ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(31, node0, 1, 4095);
    typeCheck0.processForTesting(node0, node0);
    compiler0.hasErrors();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test131149() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"", ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(31, node0, 1, 4095);
    typeCheck0.processForTesting(node0, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test132150() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", ""c/xz`. z,xX<C>"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, true);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_PropagateConstantAnnotationsOverVars0);
    Node node1 = new Node(19, node0, node0);
    CheckLevel checkLevel0 = CheckLevel.ERROR;
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0, checkLevel0, checkLevel0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.hasErrors();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test132151() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", ""c/xz`. z,xX<C>"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, true);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_PropagateConstantAnnotationsOverVars0);
    Node node1 = new Node(19, node0, node0);
    CheckLevel checkLevel0 = CheckLevel.ERROR;
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0, checkLevel0, checkLevel0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test137156() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""msg.invalid.type"", ""Cannot set maximumInterpreterStackDepth to less than 1"");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(16, node0, node0, node0, node0);
    typeCheck0.processForTesting(node0, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test137157() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""msg.invalid.type"", ""Cannot set maximumInterpreterStackDepth to less than 1"");
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(16, node0, node0, node0, node0);
    typeCheck0.processForTesting(node0, node0);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test138158() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"", ""com.google.javascript.jscomp.MakeDeclaredNamesUnique$BoilerplateRenamer"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    typeCheck0.reportMissingProperties(false);
    Node node1 = new Node(31, node0, 1, 4095);
    typeCheck0.processForTesting(node0, node0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test139159() throws Throwable {
    Compiler compiler0 = new Compiler();
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);
    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = Node.newString(118, """");
    typeCheck0.visit(nodeTraversal0, node1, node0);
    node0.isExprResult();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test140160() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""0g`X^-3"", ""0g`X^-3"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    Node node1 = new Node(37, node0, node0);
    typeCheck0.processForTesting(node0, node0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test141161() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""operator {0} cannot be applied to {1}"", ""operator {0} cannot be applied to {1}"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(10, node0, node0);
    node1.addSuppression(""operator {0} cannot be applied to {1}"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeCheck,@Test(timeout = 4000)
public void test141162() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""operator {0} cannot be applied to {1}"", ""operator {0} cannot be applied to {1}"");
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);
    Node node1 = new Node(10, node0, node0);
    node1.addSuppression(""operator {0} cannot be applied to {1}"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);
    typeCheck0.visit(nodeTraversal0, node1, node1);
    compiler0.getErrorCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
