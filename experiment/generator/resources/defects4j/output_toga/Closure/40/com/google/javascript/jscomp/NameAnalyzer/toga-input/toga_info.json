{
  "test1213" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);\n    Node node0 = new Node(103, 103, 103);\n    Node node1 = new Node(49, node0, node0, 8, 42);\n    nameAnalyzer0.process(node1, node1);\n}",
    "testName" : "test1213"
  },
  "test2224" : {
    "methodSignature" : "String getHtmlReport()",
    "methodName" : "getHtmlReport",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2224() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"var t;\", \"var t;\");\n    nameAnalyzer0.process(node0, node0);\n    String string0 = nameAnalyzer0.getHtmlReport();\n}",
    "testName" : "test2224"
  },
  "test1314" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = new Node(108, 108, 108);\n    Node node1 = Node.newNumber((double) 16, 0, 49);\n    node0.addChildToBack(node1);\n    nameAnalyzer0.process(node1, node0);\n}",
    "testName" : "test1314"
  },
  "test2122" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2122() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(148, \"FB\");\n    Node node1 = new Node(16, node0);\n    Node node2 = new Node(38, node1);\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);\n    nameAnalyzer0.process(node0, node0);\n}",
    "testName" : "test2122"
  },
  "test1011" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(114, 114, 114);\n    Node node1 = new Node(115);\n    node0.addChildToBack(node1);\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);\n    nameAnalyzer0.process(node1, node0);\n}",
    "testName" : "test1011"
  },
  "test2223" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2223() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"var t;\", \"var t;\");\n    nameAnalyzer0.process(node0, node0);\n    node0.getChildCount();\n}",
    "testName" : "test2223"
  },
  "test1112" : {
    "methodSignature" : "public boolean isLabelName()",
    "methodName" : "isLabelName",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1112() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node((-1791368267));\n    Node node1 = new Node(4);\n    node1.addChildToBack(node0);\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    nameAnalyzer0.process(node0, node1);\n    node0.isLabelName();\n}",
    "testName" : "test1112"
  },
  "test011" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"FFr=QM\", \"FFr=QM\");\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);\n    nameAnalyzer0.process(node0, node0);\n}",
    "testName" : "test011"
  },
  "test034" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"_jq$o^L?v_OW\", \"function JSCompiler_returnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\");\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    nameAnalyzer0.process(node0, node0);\n}",
    "testName" : "test034"
  },
  "test056" : {
    "methodSignature" : "public boolean isRegExp()",
    "methodName" : "isRegExp",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(148, \"B\");\n    Node node1 = new Node(0, node0, node0, node0);\n    Node node2 = new Node(16, node1);\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    nameAnalyzer0.process(node2, node1);\n    node2.isRegExp();\n}",
    "testName" : "test056"
  },
  "test078" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"window\", \"window\");\n    nameAnalyzer0.process(node0, node0);\n}",
    "testName" : "test078"
  },
  "test1617" : {
    "methodSignature" : "public boolean isString()",
    "methodName" : "isString",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1617() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = new Node(111);\n    Node node1 = Node.newNumber((double) 30, 4, 46);\n    node0.addChildToBack(node1);\n    nameAnalyzer0.process(node0, node0);\n    node0.isString();\n}",
    "testName" : "test1617"
  },
  "test1718" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1718() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = new Node(114);\n    Node node1 = new Node(114);\n    Node node2 = new Node(110, node0, node1, node0, node1, 12, 54);\n    nameAnalyzer0.process(node0, node2);\n    node2.hasOneChild();\n}",
    "testName" : "test1718"
  },
  "test1415" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = new Node(113);\n    Node node1 = new Node(113);\n    node1.addChildToBack(node0);\n    nameAnalyzer0.process(node1, node1);\n}",
    "testName" : "test1415"
  },
  "test1516" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1516() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);\n    Node node0 = new Node(119);\n    Node node1 = new Node(8);\n    node0.addChildToBack(node1);\n    nameAnalyzer0.process(node0, node0);\n}",
    "testName" : "test1516"
  },
  "test2021" : {
    "methodSignature" : "public boolean isRegExp()",
    "methodName" : "isRegExp",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"var t\", \"var t\");\n    Node node1 = new Node(16, node0);\n    nameAnalyzer0.process(node0, node1);\n    nameAnalyzer0.process(node1, node1);\n    node1.isRegExp();\n}",
    "testName" : "test2021"
  },
  "test000" : {
    "methodSignature" : "String getHtmlReport()",
    "methodName" : "getHtmlReport",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"var t;\", \"var t;\");\n    Node node1 = new Node(16, node0);\n    nameAnalyzer0.process(node0, node1);\n    String string0 = nameAnalyzer0.getHtmlReport();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"var t\", \"var t\");\n    Node node1 = new Node(16, node0);\n    nameAnalyzer0.process(node1, node0);\n    node0.hasOneChild();\n}",
    "testName" : "test022"
  },
  "test023" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"var t\", \"var t\");\n    Node node1 = new Node(16, node0);\n    nameAnalyzer0.process(node1, node0);\n    node0.hasChildren();\n}",
    "testName" : "test023"
  },
  "test045" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(130, 130, 130);\n    Node node1 = new Node(37);\n    node0.addChildToBack(node1);\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    nameAnalyzer0.process(node0, node0);\n}",
    "testName" : "test045"
  },
  "test067" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"com.<oogle.javascript.jscomp.CompilerOptions$TracerMode\", \"com.<oogle.javascript.jscomp.CompilerOptions$TracerMode\");\n    Node node1 = new Node(37, 48, 1);\n    node1.addChildToBack(node0);\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, false);\n    nameAnalyzer0.process(node1, node1);\n}",
    "testName" : "test067"
  },
  "test089" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"com.google.javascript.jscomp.NameAnalyzer$ReferencePropagationCallback\", \"com.google.javascript.jscomp.NameAnalyzer$ReferencePropagationCallback\");\n    nameAnalyzer0.process(node0, node0);\n    node0.hasChildren();\n}",
    "testName" : "test089"
  },
  "test1920" : {
    "methodSignature" : "public boolean isThrow()",
    "methodName" : "isThrow",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1920() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(97);\n    Node node1 = new Node(0);\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node2 = new Node(114, node0, node0, node0, node1, 37, 42);\n    nameAnalyzer0.process(node2, node2);\n    node2.isThrow();\n}",
    "testName" : "test1920"
  },
  "test0910" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0910() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = new Node(118);\n    Node node1 = compiler0.parseSyntheticCode(\"Pq0\", \"Pq0\");\n    node0.addChildToBack(node1);\n    nameAnalyzer0.process(node0, node0);\n}",
    "testName" : "test0910"
  },
  "test1819" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.NameAnalyzer",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1819() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    NameAnalyzer nameAnalyzer0 = new NameAnalyzer(compiler0, true);\n    Node node0 = new Node(114);\n    Node node1 = new Node(35);\n    node0.addChildToBack(node1);\n    nameAnalyzer0.process(node0, node0);\n}",
    "testName" : "test1819"
  }
}