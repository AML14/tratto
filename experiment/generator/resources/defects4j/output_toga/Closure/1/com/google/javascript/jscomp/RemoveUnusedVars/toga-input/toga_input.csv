focal_method,test_prefix,docstring
"@Override
public void process(Node externs, Node root) {
    Preconditions.checkState(compiler.getLifeCycleStage().isNormalized());
    SimpleDefinitionFinder defFinder = null;
    if (modifyCallSites) {
        // For testing, allow the SimpleDefinitionFinder to be build now.
        defFinder = new SimpleDefinitionFinder(compiler);
        defFinder.process(externs, root);
    }
    process(externs, root, defFinder);
}","public void test00() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""arcuments"");
    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED;
    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);
    RemoveUnusedVars removeUnusedVars0 = new RemoveUnusedVars(compiler0, false, true, false);
    removeUnusedVars0.process(node0, node0);
}","/**
 * Traverses the root, removing all unused variables. Multiple traversals
 * may occur to ensure all unused variables are removed.
 */"
"@Override
public void process(Node externs, Node root) {
    Preconditions.checkState(compiler.getLifeCycleStage().isNormalized());
    SimpleDefinitionFinder defFinder = null;
    if (modifyCallSites) {
        // For testing, allow the SimpleDefinitionFinder to be build now.
        defFinder = new SimpleDefinitionFinder(compiler);
        defFinder.process(externs, root);
    }
    process(externs, root, defFinder);
}","public void test11() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""aruments"");
    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED;
    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);
    RemoveUnusedVars removeUnusedVars0 = new RemoveUnusedVars(compiler0, true, true, true);
    // Undeclared exception!
    try {
        removeUnusedVars0.process(node0, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // Unexpected lValue type NAME
        //   Node(NAME aruments): [testcode]:1:0
        // aruments
        //   Parent(EXPR_RESULT): [testcode]:1:0
        // aruments
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}","/**
 * Traverses the root, removing all unused variables. Multiple traversals
 * may occur to ensure all unused variables are removed.
 */"
"public int getType() {
    return type;
}","public void test22() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""argumens"");
    RemoveUnusedVars removeUnusedVars0 = new RemoveUnusedVars(compiler0, true, true, true);
    SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder(compiler0);
    Node node1 = new Node(37, node0, node0, node0, node0);
    removeUnusedVars0.process(node0, node1, simpleDefinitionFinder0);
    assertEquals(37, node1.getType());
}",""
"@Override
public void process(Node externs, Node root, SimpleDefinitionFinder defFinder) {
    if (modifyCallSites) {
        Preconditions.checkNotNull(defFinder);
        callSiteOptimizer = new CallSiteOptimizer(compiler, defFinder);
    }
    traverseAndRemoveUnusedReferences(root);
    if (callSiteOptimizer != null) {
        callSiteOptimizer.applyChanges();
    }
}","public void test33() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""inlineP`erties"");
    RemoveUnusedVars removeUnusedVars0 = new RemoveUnusedVars(compiler0, false, false, false);
    Node node0 = Node.newString(86, ""inlineP`erties"", 32, 49);
    SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder(compiler0);
    // Undeclared exception!
    try {
        removeUnusedVars0.process(node0, node0, simpleDefinitionFinder0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",""
"public boolean isExprResult() {
    return this.getType() == Token.EXPR_RESULT;
}","public void test44() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""arguments"");
    RemoveUnusedVars removeUnusedVars0 = new RemoveUnusedVars(compiler0, false, false, false);
    SimpleDefinitionFinder simpleDefinitionFinder0 = new SimpleDefinitionFinder(compiler0);
    removeUnusedVars0.process(node0, node0, simpleDefinitionFinder0);
    assertFalse(node0.isExprResult());
}",""
