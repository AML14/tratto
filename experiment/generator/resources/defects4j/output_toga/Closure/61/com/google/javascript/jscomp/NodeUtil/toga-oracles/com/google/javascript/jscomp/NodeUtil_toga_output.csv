project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0011,"public void test0011() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0022,"public void test0022() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 1233);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test0033,"public void test0033() throws Throwable {
    Node node0 = new Node(21, 21, 21);
    // Undeclared exception!
    try {
        NodeUtil.mayBeString(node0, false);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test0044,"public void test0044() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0055,"public void test0055() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 71, 1176);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(291992, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test0056,"public void test0056() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 71, 1176);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test0057,"public void test0057() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 71, 1176);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test0068,"public void test0068() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test0079,"public void test0079() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test00810,"public void test00810() throws Throwable {
    Node node0 = new Node(64);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test00911,"public void test00911() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got SEMI
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01012,"public void test01012() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.containsCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01113,"public void test01113() throws Throwable {
    Node node0 = new Node(118, 118, 329);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForFunction(node0, 6);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test01214,"public void test01214() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""==="", (-849), 45);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""==="", node0, ""==="");
    assertTrue(node1.isQualifiedName());
}",0,assertFalse(node1.isQualifiedName())
project,0,test01215,"public void test01215() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""==="", (-849), 45);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""==="", node0, ""==="");
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test01216,"public void test01216() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""==="", (-849), 45);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""==="", node0, ""==="");
    assertNotSame(node1, node0);
}",0,
project,0,test01217,"public void test01217() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""==="", (-849), 45);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""==="", node0, ""==="");
    assertEquals((-1), node1.getCharno());
}",0,
project,0,test01318,"public void test01318() throws Throwable {
    Node node0 = new Node(31);
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01419,"public void test01419() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertNotNull(node0);
}",0,
project,0,test01420,"public void test01420() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 47, sourceMap_DetailLevel0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test01421,"public void test01421() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 47, sourceMap_DetailLevel0);
    assertEquals(122, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test01522,"public void test01522() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01623,"public void test01623() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01724,"public void test01724() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getFunctionBody((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01825,"public void test01825() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.isFunctionObjectCallOrApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01926,"public void test01926() throws Throwable {
    Node node0 = Node.newNumber((-2216.365954));
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test01927,"public void test01927() throws Throwable {
    Node node0 = Node.newNumber((-2216.365954));
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02028,"public void test02028() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02129,"public void test02129() throws Throwable {
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    Node node0 = Node.newString(24, ""goog.tweak.registerString"", 30, 2);
    boolean boolean0 = NodeUtil.has(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02230,"public void test02230() throws Throwable {
    Node node0 = new Node(22, 3315, 3315);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test02432,"public void test02432() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02533,"public void test02533() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(471155, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test02534,"public void test02534() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    NodeUtil.getImpureBooleanValue(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test02635,"public void test02635() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test02736,"public void test02736() throws Throwable {
    Node node0 = new Node(64);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test02837,"public void test02837() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test02938,"public void test02938() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03039,"public void test03039() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03140,"public void test03140() throws Throwable {
    Node node0 = Node.newString(100, ""2"");
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03241,"public void test03241() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getPureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03342,"public void test03342() throws Throwable {
    Node node0 = Node.newString(""p"", 117, 117);
    NodeUtil.getImpureBooleanValue(node0);
}",1,
project,0,test03443,"public void test03443() throws Throwable {
    Node node0 = new Node(41, 41, 41);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test03544,"public void test03544() throws Throwable {
    Node node0 = new Node(43, 1535, 43);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test03645,"public void test03645() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = new Node(44, node0, node0, node0, node0);
    NodeUtil.getImpureBooleanValue(node1);
}",0,
project,0,test03746,"public void test03746() throws Throwable {
    Node node0 = new Node(22, (-37), 3377);
    Node node1 = new Node(47, node0);
    NodeUtil.getImpureBooleanValue(node1);
}",0,
project,0,test03847,"public void test03847() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test03948,"public void test03948() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(122, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04049,"public void test04049() throws Throwable {
    Node node0 = new Node(1976);
    Node node1 = new Node(26, node0, node0, node0, node0, 91, 3);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",1,
project,0,test04150,"public void test04150() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(442);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 51, 122);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(209018, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test04151,"public void test04151() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(442);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 51, 122);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04252,"public void test04252() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1605), 100);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals((-1), node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test04253,"public void test04253() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1605), 100);
    NodeUtil.getImpureBooleanValue(node0);
    assertTrue(node0.isQualifiedName());
}",0,assertTrue(node0.isQualifiedName())
project,0,test04254,"public void test04254() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1605), 100);
    NodeUtil.getImpureBooleanValue(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test04355,"public void test04355() throws Throwable {
    Node node0 = Node.newNumber(Double.POSITIVE_INFINITY, 26, 2676);
    Node node1 = new Node(26, node0, node0, node0, node0, 12, 3);
    String string0 = NodeUtil.getStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test04457,"public void test04457() throws Throwable {
    Node node0 = new Node(64);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test04559,"public void test04559() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(3289891, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test04560,"public void test04560() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,
project,0,test04561,"public void test04561() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertNull(string0);
}",0,
project,0,test04562,"public void test04562() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertTrue(node0.isQualifiedName());
}",0,
project,0,test04663,"public void test04663() throws Throwable {
    Node node0 = new Node(41);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""null"", string0);
}",0,
project,0,test04764,"public void test04764() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""false"", string0);
}",0,
project,0,test04865,"public void test04865() throws Throwable {
    Node node0 = new Node(44, 44, 44);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""true"", string0);
}",0,
project,0,test04966,"public void test04966() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test05068,"public void test05068() throws Throwable {
    Node node0 = new Node(108);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test05170,"public void test05170() throws Throwable {
    Node node0 = new Node(2679);
    Node node1 = new Node(26, node0, node0, node0, node0, 12, 3);
    String string0 = NodeUtil.getStringValue(node1);
    assertNull(string0);
}",0,
project,0,test05271,"public void test05271() throws Throwable {
    String string0 = NodeUtil.getStringValue(2877.36018564);
    assertEquals(""2877.36018564"", string0);
}",0,
project,0,test05372,"public void test05372() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals("""", string0);
}",0,
project,0,test05374,"public void test05374() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals(78, node1.getLineno());
}",0,
project,0,test05475,"public void test05475() throws Throwable {
    Node node0 = new Node(124, 124, (-27));
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals("""", string0);
}",0,
project,0,test05576,"public void test05576() throws Throwable {
    Node node0 = Node.newNumber(8233.0);
    Node node1 = new Node(0, node0, node0, 49, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,
project,0,test05678,"public void test05678() throws Throwable {
    Node node0 = new Node(135, 135, 135);
    Node node1 = new Node(11, node0, node0, 110, 4095);
    String string0 = NodeUtil.arrayToString(node1);
    assertNull(string0);
}",0,
project,0,test05779,"public void test05779() throws Throwable {
    Node node0 = Node.newString(""Cmo<a@LP)"", 18, 118);
    Node node1 = node0.cloneNode();
    Node node2 = new Node(38, node1, node0);
    String string0 = NodeUtil.arrayToString(node2);
    assertEquals(""Cmo<a@LP),Cmo<a@LP)"", string0);
}",0,
project,0,test05881,"public void test05881() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test05982,"public void test05982() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 2836, 101);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test05984,"public void test05984() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 2836, 101);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(11616357, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test06085,"public void test06085() throws Throwable {
    Node node0 = new Node(39);
    // Undeclared exception!
    try {
        NodeUtil.getNumberValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Number node not created with Node.newNumber
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test06186,"public void test06186() throws Throwable {
    Node node0 = Node.newString(""+infinity"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test06287,"public void test06287() throws Throwable {
    Node node0 = new Node(41);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06388,"public void test06388() throws Throwable {
    Node node0 = new Node(43);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06489,"public void test06489() throws Throwable {
    Node node0 = new Node(108);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",1,
project,0,test06591,"public void test06591() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test06692,"public void test06692() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(471155, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test06693,"public void test06693() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test06694,"public void test06694() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,
project,0,test06795,"public void test06795() throws Throwable {
    Node node0 = Node.newNumber((double) 26, 1957, 1957);
    Node node1 = new Node(26, node0, node0, node0, node0, 91, 3);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",1,
project,0,test06897,"public void test06897() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""g1"");
    assertNotNull(double0);
}",0,
project,0,test06999,"public void test06999() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""infinity"");
    assertNull(double0);
}",0,
project,0,test070100,"public void test070100() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""-infinity"");
    assertNull(double0);
}",0,
project,0,test071101,"public void test071101() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("" invalidated "");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test072103,"public void test072103() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(9);
}",0,
project,0,test073104,"public void test073104() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(10);
}",0,
project,0,test074105,"public void test074105() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(11);
}",0,
project,0,test075106,"public void test075106() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(12);
}",0,
project,0,test076107,"public void test076107() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(13);
}",0,
project,0,test077108,"public void test077108() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(160);
}",0,
project,0,test078109,"public void test078109() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(8232);
}",0,
project,0,test079110,"public void test079110() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(8233);
}",0,
project,0,test080111,"public void test080111() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(65279);
}",0,
project,0,test081112,"public void test081112() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(12288);
}",0,
project,0,test082113,"public void test082113() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test082114,"public void test082114() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test082115,"public void test082115() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test082116,"public void test082116() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertEquals(114736, node1.getSourcePosition());
}",0,
project,0,test083118,"public void test083118() throws Throwable {
    Node node0 = new Node(145);
    Node node1 = new Node(26, node0);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertFalse(boolean0);
}",0,
project,0,test084119,"public void test084119() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    // Undeclared exception!
    try {
        NodeUtil.isImmutableValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test085120,"public void test085120() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    assertTrue(node0.isQualifiedName());
}",0,
project,0,test085121,"public void test085121() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(471155, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test085122,"public void test085122() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test086123,"public void test086123() throws Throwable {
    Node node0 = Node.newString(""Remove try/catch/finally"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test087124,"public void test087124() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test088125,"public void test088125() throws Throwable {
    Node node0 = new Node(43);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test089126,"public void test089126() throws Throwable {
    Node node0 = new Node(44, 80, 44);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test090127,"public void test090127() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test091128,"public void test091128() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", (-3815), (-518));
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test092129,"public void test092129() throws Throwable {
    Node node0 = new Node(45);
    node0.setType(47);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test093130,"public void test093130() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test094131,"public void test094131() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test095132,"public void test095132() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertFalse(boolean0);
}",0,
project,0,test095133,"public void test095133() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test095134,"public void test095134() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test095135,"public void test095135() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertEquals(204801, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test096136,"public void test096136() throws Throwable {
    Node node0 = new Node(64, 64, (-1));
    node0.addChildrenToBack(node0);
    // Undeclared exception!
    NodeUtil.isLiteralValue(node0, true);
}",0,
project,0,test097137,"public void test097137() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    Node node2 = new Node(42, node1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, true);
    assertTrue(boolean0);
}",0,
project,0,test097138,"public void test097138() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    Node node2 = new Node(42, node1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, true);
    assertEquals(204801, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test097139,"public void test097139() throws Throwable {
    Node node0 = Node.newNumber((double) 71, 71, 71);
    Vector<Node> vector0 = new Vector<Node>();
    Node node1 = NodeUtil.newFunctionNode(""common"", vector0, node0, 50, 1);
    Node node2 = new Node(42, node1);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, true);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test098140,"public void test098140() throws Throwable {
    Node node0 = new Node(113, (-2175), 941);
    Node node1 = new Node(9, node0, node0, 2, 16);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test099141,"public void test099141() throws Throwable {
    Node node0 = new Node(10);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test100142,"public void test100142() throws Throwable {
    Node node0 = new Node(12, 12, (-387));
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test101143,"public void test101143() throws Throwable {
    Node node0 = new Node(13);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test102144,"public void test102144() throws Throwable {
    Node node0 = new Node(14);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test103145,"public void test103145() throws Throwable {
    Node node0 = new Node(15, 15, 15);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test104146,"public void test104146() throws Throwable {
    Node node0 = new Node(85, (-399), (-120));
    Node node1 = new Node(16, node0, node0, node0, (-2159), (-399));
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test105147,"public void test105147() throws Throwable {
    Node node0 = new Node(18);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test106148,"public void test106148() throws Throwable {
    Node node0 = new Node(19);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test107149,"public void test107149() throws Throwable {
    Node node0 = Node.newNumber((double) 26, 26, 26);
    Node node1 = new Node(20, node0, node0, node0, node0, 25, 35);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test108150,"public void test108150() throws Throwable {
    Node node0 = new Node(21);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test109151,"public void test109151() throws Throwable {
    Node node0 = new Node(22, 884, 884);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test110152,"public void test110152() throws Throwable {
    Node node0 = new Node(24);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test111153,"public void test111153() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test112154,"public void test112154() throws Throwable {
    Node node0 = new Node(27);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test113155,"public void test113155() throws Throwable {
    Node node0 = new Node(28, 28, 28);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test114156,"public void test114156() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test115157,"public void test115157() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test116158,"public void test116158() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
    assertFalse(boolean0);
}",0,
project,0,test117159,"public void test117159() throws Throwable {
    Node node0 = new Node(32);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test118160,"public void test118160() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertEquals(24582, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test118161,"public void test118161() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test118162,"public void test118162() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test118163,"public void test118163() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test119164,"public void test119164() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Node node1 = new Node(34, node0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test120165,"public void test120165() throws Throwable {
    Node node0 = Node.newString(""Y3$thk3h8iMyq2"", (-861), (-861));
    Node node1 = new Node(36, node0, node0, node0, 26, 23);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, compilerOptions0.aliasableStrings);
    assertFalse(boolean0);
}",0,
project,0,test121166,"public void test121166() throws Throwable {
    Node node0 = new Node(37);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test122167,"public void test122167() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Qgc"", 1550, 1550);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
    }
}",0,
project,0,test123168,"public void test123168() throws Throwable {
    Node node0 = Node.newString(""Y3$thk3h8iMyq2"", (-886), (-886));
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
    assertTrue(boolean0);
}",0,
project,0,test124169,"public void test124169() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test125170,"public void test125170() throws Throwable {
    Node node0 = new Node(43);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNamePrefixes);
    assertTrue(boolean0);
}",0,
project,0,test126171,"public void test126171() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = new Node(44, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertTrue(boolean0);
}",0,
project,0,test127172,"public void test127172() throws Throwable {
    Node node0 = new Node(45);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test128173,"public void test128173() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessExternProperties"", 803, 803);
    node0.removeFirstChild();
    assertTrue(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test128174,"public void test128174() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessExternProperties"", 803, 803);
    node0.removeFirstChild();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test129175,"public void test129175() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    hashSet0.add(""?y.`ze<N3[ZiYI[gK'"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test129176,"public void test129176() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    hashSet0.add(""?y.`ze<N3[ZiYI[gK'"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertEquals(24582, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test129177,"public void test129177() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    HashSet<String> hashSet0 = new HashSet<String>();
    hashSet0.add(""?y.`ze<N3[ZiYI[gK'"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertTrue(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test130178,"public void test130178() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""&="", ""&="");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test131179,"public void test131179() throws Throwable {
    Node node0 = new Node(9, 9, 9);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test132180,"public void test132180() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test133181,"public void test133181() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test134182,"public void test134182() throws Throwable {
    Node node0 = new Node(12);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test135183,"public void test135183() throws Throwable {
    Node node0 = new Node(13);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test136184,"public void test136184() throws Throwable {
    Node node0 = new Node(14, 88, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test137185,"public void test137185() throws Throwable {
    Node node0 = new Node(15);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test138186,"public void test138186() throws Throwable {
    Node node0 = new Node(118);
    Node node1 = new Node(16, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test139187,"public void test139187() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(17);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test140188,"public void test140188() throws Throwable {
    Node node0 = new Node(18, 18, 18);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test141189,"public void test141189() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(19);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test142190,"public void test142190() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(20);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test143191,"public void test143191() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(21);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test144192,"public void test144192() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(22);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test145193,"public void test145193() throws Throwable {
    Node node0 = new Node(23);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test146194,"public void test146194() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(24);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test147195,"public void test147195() throws Throwable {
    Node node0 = new Node(25);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test148196,"public void test148196() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test149197,"public void test149197() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    Node node1 = new Node(27, node0);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test150198,"public void test150198() throws Throwable {
    Node node0 = new Node(28, 28, 28);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test151199,"public void test151199() throws Throwable {
    Node node0 = new Node(29);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test152200,"public void test152200() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test153201,"public void test153201() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test154202,"public void test154202() throws Throwable {
    Node node0 = new Node(32);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test155203,"public void test155203() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    Node node1 = new Node(33, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test156204,"public void test156204() throws Throwable {
    Node node0 = new Node(34, 34, 34);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test157205,"public void test157205() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test158206,"public void test158206() throws Throwable {
    Node node0 = new Node(36);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test159207,"public void test159207() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(37);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test160208,"public void test160208() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(38);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test161209,"public void test161209() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test162210,"public void test162210() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test163211,"public void test163211() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test164212,"public void test164212() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test165213,"public void test165213() throws Throwable {
    Node node0 = new Node(48);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test166214,"public void test166214() throws Throwable {
    Node node0 = new Node(49);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test167215,"public void test167215() throws Throwable {
    Node node0 = new Node(50);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test168216,"public void test168216() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test169217,"public void test169217() throws Throwable {
    Node node0 = new Node(2119, 2119, 2119);
    Node node1 = new Node(52, node0, node0, node0, 403, 2);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test170218,"public void test170218() throws Throwable {
    Node node0 = new Node(53);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test171219,"public void test171219() throws Throwable {
    Node node0 = new Node(54, 54, 54);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test172220,"public void test172220() throws Throwable {
    Node node0 = new Node(56, 56, 56);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCATCH_SCOPE 56
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test173221,"public void test173221() throws Throwable {
    Node node0 = Node.newString(57, ""ExpectdCALL node, got"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test174222,"public void test174222() throws Throwable {
    Node node0 = new Node(58);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_VALUES
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test175223,"public void test175223() throws Throwable {
    Node node0 = new Node(59);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_NEXT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test176224,"public void test176224() throws Throwable {
    Node node0 = new Node(60);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_ID
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test177225,"public void test177225() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(61);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test178226,"public void test178226() throws Throwable {
    Node node0 = new Node(62);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETURN_RESULT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test179227,"public void test179227() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test180228,"public void test180228() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(64);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test181229,"public void test181229() throws Throwable {
    Node node0 = new Node(65);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test182230,"public void test182230() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSET_REF 66
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test183231,"public void test183231() throws Throwable {
    Node node0 = new Node(67, 67, 67);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test184232,"public void test184232() throws Throwable {
    Node node0 = Node.newString(68, ""JSCompiler_renameProperty"");
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_CALL JSCompiler_renameProperty
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test185233,"public void test185233() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(69);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test186234,"public void test186234() throws Throwable {
    Node node0 = new Node(70);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEFAULTNAMESPACE
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test187235,"public void test187235() throws Throwable {
    Node node0 = new Node(71);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLATTR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test188236,"public void test188236() throws Throwable {
    Node node0 = Node.newString(72, ""mf0cU]UM]Dt"", 72, 72);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLTEXT mf0cU]UM]Dt 72
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test189237,"public void test189237() throws Throwable {
    Node node0 = new Node(73);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test190238,"public void test190238() throws Throwable {
    Node node0 = new Node(74);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test191239,"public void test191239() throws Throwable {
    Node node0 = new Node(75, 120, 122);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NAME 120
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test192240,"public void test192240() throws Throwable {
    Node node0 = new Node(76);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test193241,"public void test193241() throws Throwable {
    Node node0 = new Node(77, (-8), 77);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test194242,"public void test194242() throws Throwable {
    Node node0 = new Node(79, 79, 79);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLB 79
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test195243,"public void test195243() throws Throwable {
    Node node0 = new Node(80, 80, 80);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRB 80
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test196244,"public void test196244() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test197245,"public void test197245() throws Throwable {
    Node node0 = new Node(82);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test198246,"public void test198246() throws Throwable {
    Node node0 = new Node(83);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test199247,"public void test199247() throws Throwable {
    Node node0 = new Node(84, 483, (-1894));
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test200248,"public void test200248() throws Throwable {
    Node node0 = new Node(85);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test201249,"public void test201249() throws Throwable {
    Node node0 = new Node(87);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test202250,"public void test202250() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test203251,"public void test203251() throws Throwable {
    Node node0 = Node.newString(""case expression doesn't match switch"", 1547, 1547);
    Node node1 = new Node(89, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test204252,"public void test204252() throws Throwable {
    Node node0 = new Node(90);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test205253,"public void test205253() throws Throwable {
    Node node0 = new Node(91);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test206254,"public void test206254() throws Throwable {
    Node node0 = new Node(92);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test207255,"public void test207255() throws Throwable {
    Node node0 = new Node(93, 51, 91);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test208256,"public void test208256() throws Throwable {
    Node node0 = new Node(95, 95, 425);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test209257,"public void test209257() throws Throwable {
    Node node0 = new Node(96);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test210258,"public void test210258() throws Throwable {
    Node node0 = new Node(97);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test211259,"public void test211259() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test212260,"public void test212260() throws Throwable {
    Node node0 = new Node(99, (-2311), 99);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test213261,"public void test213261() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(100);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test214262,"public void test214262() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test215263,"public void test215263() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216264,"public void test216264() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test217265,"public void test217265() throws Throwable {
    Node node0 = new Node(104);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDOT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test218266,"public void test218266() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test219267,"public void test219267() throws Throwable {
    Node node0 = new Node(106);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test220268,"public void test220268() throws Throwable {
    Node node0 = new Node(108);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeIF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test221269,"public void test221269() throws Throwable {
    Node node0 = new Node(109);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test222270,"public void test222270() throws Throwable {
    Node node0 = new Node(110);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSWITCH
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test223271,"public void test223271() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(112);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test224272,"public void test224272() throws Throwable {
    Node node0 = new Node(113, (-2175), 967);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225273,"public void test225273() throws Throwable {
    Node node0 = new Node(114);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test226274,"public void test226274() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test227275,"public void test227275() throws Throwable {
    Node node0 = new Node(116);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test228276,"public void test228276() throws Throwable {
    Node node0 = new Node(117);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCONTINUE
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test229277,"public void test229277() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(118);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test230278,"public void test230278() throws Throwable {
    Node node0 = new Node(119);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test231279,"public void test231279() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test232280,"public void test232280() throws Throwable {
    Node node0 = new Node(121);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test233281,"public void test233281() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test234282,"public void test234282() throws Throwable {
    Node node0 = new Node(32);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test235283,"public void test235283() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test235284,"public void test235284() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test236285,"public void test236285() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 2836, 101);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertEquals(11616357, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test236286,"public void test236286() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 2836, 101);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test237287,"public void test237287() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test238288,"public void test238288() throws Throwable {
    Node node0 = new Node(42);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test239289,"public void test239289() throws Throwable {
    Node node0 = new Node(43, 1535, 43);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test240290,"public void test240290() throws Throwable {
    Node node0 = new Node(44);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test241291,"public void test241291() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test242292,"public void test242292() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test243293,"public void test243293() throws Throwable {
    Node node0 = Node.newNumber(0.0, 144, 144);
    Node node1 = new Node(49, node0, node0, 84, 31);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test244294,"public void test244294() throws Throwable {
    Node node0 = new Node(50);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test245295,"public void test245295() throws Throwable {
    Node node0 = Node.newString(51, ""W(%UJ7s`vyd<%##5"", 51, 51);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test246296,"public void test246296() throws Throwable {
    Node node0 = new Node(52, 52, 105);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test247297,"public void test247297() throws Throwable {
    Node node0 = new Node(56);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test248298,"public void test248298() throws Throwable {
    Node node0 = new Node(59);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test249299,"public void test249299() throws Throwable {
    Node node0 = new Node(62);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250300,"public void test250300() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test251301,"public void test251301() throws Throwable {
    Node node0 = Node.newString(68, ""3EF|WB+c#<&"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test252302,"public void test252302() throws Throwable {
    Node node0 = new Node(70);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test253303,"public void test253303() throws Throwable {
    Node node0 = new Node(71, 71, 71);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test254304,"public void test254304() throws Throwable {
    Node node0 = Node.newNumber(1.0, 118, (-2083));
    Node node1 = new Node(72, node0, node0, 2, 39);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test255305,"public void test255305() throws Throwable {
    Node node0 = new Node(75);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test256306,"public void test256306() throws Throwable {
    Node node0 = new Node(76, 76, 76);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test257307,"public void test257307() throws Throwable {
    Node node0 = Node.newString(77, ""3EF|WB+c#<&"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test258308,"public void test258308() throws Throwable {
    Node node0 = Node.newString(79, ""msg.unexpected.eof"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test259309,"public void test259309() throws Throwable {
    Node node0 = new Node(80, 80, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test260310,"public void test260310() throws Throwable {
    Node node0 = new Node(82, 103, 103);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test261311,"public void test261311() throws Throwable {
    Node node0 = Node.newString(83, ""1bDRjaVE"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test262312,"public void test262312() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test263313,"public void test263313() throws Throwable {
    Node node0 = new Node(98);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test264314,"public void test264314() throws Throwable {
    Node node0 = new Node(100);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test265315,"public void test265315() throws Throwable {
    Node node0 = new Node(101, 118, 1227);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test266316,"public void test266316() throws Throwable {
    Node node0 = new Node(104, 104, 104);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test267317,"public void test267317() throws Throwable {
    Node node0 = Node.newString(107, "":qkXl"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,
project,0,test268318,"public void test268318() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test269319,"public void test269319() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test270320,"public void test270320() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test271321,"public void test271321() throws Throwable {
    Node node0 = new Node(117);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test272322,"public void test272322() throws Throwable {
    Node node0 = new Node(123);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test273323,"public void test273323() throws Throwable {
    Node node0 = new Node(124, 124, 124);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test274324,"public void test274324() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""CGUL||Nl*k$5%z)h"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test275325,"public void test275325() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test276326,"public void test276326() throws Throwable {
    Node node0 = new Node(127);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test277327,"public void test277327() throws Throwable {
    Node node0 = new Node(128, 128, 128);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test278328,"public void test278328() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test279329,"public void test279329() throws Throwable {
    Node node0 = new Node(64);
    node0.addChildrenToBack(node0);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
    }
}",0,
project,0,test280330,"public void test280330() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test281331,"public void test281331() throws Throwable {
    Node node0 = new Node(99);
    Node node1 = new Node(38, node0, node0, node0, 15, (-1));
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test282332,"public void test282332() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertEquals(114736, node1.getSourcePosition());
}",0,
project,0,test282333,"public void test282333() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test282334,"public void test282334() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test283335,"public void test283335() throws Throwable {
    Node node0 = new Node(688, 99, (-1774));
    Node node1 = new Node(86, node0, node0, 33, (-41));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test284336,"public void test284336() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessExternProperties"", 803, 803);
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0, compiler0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got GETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test285337,"public void test285337() throws Throwable {
    Node node0 = new Node(76);
    // Undeclared exception!
    try {
        NodeUtil.callHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test286338,"public void test286338() throws Throwable {
    Node node0 = Node.newNumber((double) 51);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test286339,"public void test286339() throws Throwable {
    Node node0 = Node.newNumber((double) 51);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test287340,"public void test287340() throws Throwable {
    Node node0 = new Node(115);
    // Undeclared exception!
    try {
        NodeUtil.newHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test288341,"public void test288341() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test289342,"public void test289342() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test290343,"public void test290343() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test291344,"public void test291344() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test292345,"public void test292345() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""undefined"", node0, ""undefined"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test292346,"public void test292346() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""undefined"", node0, ""undefined"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertEquals(63, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
project,0,test292347,"public void test292347() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""undefined"", node0, ""undefined"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertEquals(38, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test293348,"public void test293348() throws Throwable {
    Node node0 = Node.newString(49, ""9k[g@a(avp:M"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test294349,"public void test294349() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test295350,"public void test295350() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""msg.let.redecl"", 3127, 3127);
    NodeUtil.canBeSideEffected(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test295351,"public void test295351() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""msg.let.redecl"", 3127, 3127);
    NodeUtil.canBeSideEffected(node0);
    assertEquals(12811319, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test295352,"public void test295352() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""msg.let.redecl"", 3127, 3127);
    NodeUtil.canBeSideEffected(node0);
    assertEquals(3127, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test296353,"public void test296353() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test297354,"public void test297354() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test298355,"public void test298355() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.canBeSideEffected(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test299356,"public void test299356() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""II>#M"", 114, 158);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertEquals(467102, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test299357,"public void test299357() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""II>#M"", 114, 158);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test300358,"public void test300358() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    Node node1 = new Node(31, node0, node0, 17, 35);
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test301359,"public void test301359() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""kH"", ""kH"");
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test302360,"public void test302360() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test303361,"public void test303361() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test304362,"public void test304362() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test305363,"public void test305363() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test306364,"public void test306364() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test307365,"public void test307365() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test308366,"public void test308366() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test309367,"public void test309367() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test310368,"public void test310368() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test311369,"public void test311369() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test312370,"public void test312370() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test313371,"public void test313371() throws Throwable {
    int int0 = NodeUtil.precedence(19);
    assertEquals(10, int0);
}",0,
project,0,test314372,"public void test314372() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test315373,"public void test315373() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test316374,"public void test316374() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test317375,"public void test317375() throws Throwable {
    int int0 = NodeUtil.precedence(23);
    assertEquals(12, int0);
}",0,
project,0,test318376,"public void test318376() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test319377,"public void test319377() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test320378,"public void test320378() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test321379,"public void test321379() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test322380,"public void test322380() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test323381,"public void test323381() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test324382,"public void test324382() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test325383,"public void test325383() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test326384,"public void test326384() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test327385,"public void test327385() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test328386,"public void test328386() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setprop (type 34)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test329387,"public void test329387() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test330388,"public void test330388() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setelem (type 36)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test331389,"public void test331389() throws Throwable {
    int int0 = NodeUtil.precedence(37);
    assertEquals(15, int0);
}",0,
project,0,test332390,"public void test332390() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test333391,"public void test333391() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test334392,"public void test334392() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test335393,"public void test335393() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test336394,"public void test336394() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test337395,"public void test337395() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test338396,"public void test338396() throws Throwable {
    int int0 = NodeUtil.precedence(45);
    assertEquals(8, int0);
}",0,
project,0,test339397,"public void test339397() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test340398,"public void test340398() throws Throwable {
    int int0 = NodeUtil.precedence(47);
    assertEquals(15, int0);
}",0,
project,0,test341399,"public void test341399() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for bindname (type 48)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test342400,"public void test342400() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for throw (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test343401,"public void test343401() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=50> (type 50)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test344402,"public void test344402() throws Throwable {
    int int0 = NodeUtil.precedence(51);
    assertEquals(9, int0);
}",0,
project,0,test345403,"public void test345403() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test346404,"public void test346404() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=53> (type 53)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test347405,"public void test347405() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=56> (type 56)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test348406,"public void test348406() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((byte) 57);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=57> (type 57)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test349407,"public void test349407() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=58> (type 58)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test350408,"public void test350408() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=59> (type 59)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test351409,"public void test351409() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(60);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=60> (type 60)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test352410,"public void test352410() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for thisfn (type 61)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test353411,"public void test353411() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=62> (type 62)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test354412,"public void test354412() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test355413,"public void test355413() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test356414,"public void test356414() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(65);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for get_ref (type 65)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test357415,"public void test357415() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=66> (type 66)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test358416,"public void test358416() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=67> (type 67)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test359417,"public void test359417() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=68> (type 68)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test360418,"public void test360418() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ref_special (type 69)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test361419,"public void test361419() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=70> (type 70)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test362420,"public void test362420() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(71);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=71> (type 71)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test363421,"public void test363421() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=72> (type 72)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test364422,"public void test364422() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=73> (type 73)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test365423,"public void test365423() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=74> (type 74)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366424,"public void test366424() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=75> (type 75)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test367425,"public void test367425() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(76);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=76> (type 76)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test368426,"public void test368426() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for try (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test369427,"public void test369427() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for semi (type 78)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test370428,"public void test370428() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lb (type 79)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371429,"public void test371429() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rb (type 80)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test372430,"public void test372430() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lc (type 81)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test373431,"public void test373431() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rc (type 82)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test374432,"public void test374432() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lp (type 83)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test375433,"public void test375433() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rp (type 84)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test376434,"public void test376434() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test377435,"public void test377435() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test378436,"public void test378436() throws Throwable {
    int int0 = NodeUtil.precedence(87);
    assertEquals(1, int0);
}",0,
project,0,test379437,"public void test379437() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test380438,"public void test380438() throws Throwable {
    int int0 = NodeUtil.precedence(89);
    assertEquals(1, int0);
}",0,
project,0,test381439,"public void test381439() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test382440,"public void test382440() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test383441,"public void test383441() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test384442,"public void test384442() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test385443,"public void test385443() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test386444,"public void test386444() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test387445,"public void test387445() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test388446,"public void test388446() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test389447,"public void test389447() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test390448,"public void test390448() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for colon (type 99)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test391449,"public void test391449() throws Throwable {
    int int0 = NodeUtil.precedence(100);
    assertEquals(3, int0);
}",0,
project,0,test392450,"public void test392450() throws Throwable {
    int int0 = NodeUtil.precedence(101);
    assertEquals(4, int0);
}",0,
project,0,test393451,"public void test393451() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test394452,"public void test394452() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test395453,"public void test395453() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for dot (type 104)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test396454,"public void test396454() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test397455,"public void test397455() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for export (type 106)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test398456,"public void test398456() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for import (type 107)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test399457,"public void test399457() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for if (type 108)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test400458,"public void test400458() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for else (type 109)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test401459,"public void test401459() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for switch (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test402460,"public void test402460() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for case (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test403461,"public void test403461() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for default (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test404462,"public void test404462() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for while (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test405463,"public void test405463() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for do (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test406464,"public void test406464() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for for (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test407465,"public void test407465() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for break (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test408466,"public void test408466() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for continue (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test409467,"public void test409467() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for var (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test410468,"public void test410468() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for with (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test411469,"public void test411469() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for catch (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test412470,"public void test412470() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for finally (type 121)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test413471,"public void test413471() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test414472,"public void test414472() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for reserved (type 123)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test415473,"public void test415473() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test416474,"public void test416474() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence((-37));
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=-37> (type -37)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test417475,"public void test417475() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    // Undeclared exception!
    try {
        NodeUtil.isNumericResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test418476,"public void test418476() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.isNumericResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test419477,"public void test419477() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test420478,"public void test420478() throws Throwable {
    Node node0 = new Node(101);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test421479,"public void test421479() throws Throwable {
    Node node0 = new Node(100);
    Node node1 = new Node(37);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test422480,"public void test422480() throws Throwable {
    Node node0 = new Node(9, 9, 9);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test423481,"public void test423481() throws Throwable {
    Node node0 = new Node(10);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test424482,"public void test424482() throws Throwable {
    Node node0 = new Node(18);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test425483,"public void test425483() throws Throwable {
    Node node0 = new Node(95, 110, 425);
    Node node1 = new Node(19, node0, node0, node0, node0, 3966, 31);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test426484,"public void test426484() throws Throwable {
    Node node0 = Node.newNumber((double) 26, 26, 26);
    Node node1 = new Node(20, node0, node0, node0, node0, 25, 35);
    boolean boolean0 = NodeUtil.isNumericResult(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test427485,"public void test427485() throws Throwable {
    Node node0 = new Node(23, 23, 147);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    int int0 = NodeUtil.getCount(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test428486,"public void test428486() throws Throwable {
    Node node0 = new Node(25, (-2639), 4114);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test429487,"public void test429487() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    Node node1 = new Node(27, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test430488,"public void test430488() throws Throwable {
    Node node0 = Node.newString(28, ""Muy`^e)u[Af"");
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test431489,"public void test431489() throws Throwable {
    Node node0 = new Node(29);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test432490,"public void test432490() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    int int0 = NodeUtil.getCount(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(3, int0);
}",0,"assertEquals(1, int0)"
project,0,test432491,"public void test432491() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    int int0 = NodeUtil.getCount(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(94355, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test432492,"public void test432492() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    int int0 = NodeUtil.getCount(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(node0.isQualifiedName());
}",0,assertTrue(node0.isQualifiedName())
project,0,test433493,"public void test433493() throws Throwable {
    Node node0 = Node.newNumber((double) 26, 1957, 1957);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test434494,"public void test434494() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test435495,"public void test435495() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test436496,"public void test436496() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 98, 47);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test436497,"public void test436497() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 98, 47);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertEquals(401455, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test437498,"public void test437498() throws Throwable {
    Node node0 = new Node(37);
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node1 = NodeUtil.newName(defaultCodingConvention0, ""Infinity"", node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test437499,"public void test437499() throws Throwable {
    Node node0 = new Node(37);
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node1 = NodeUtil.newName(defaultCodingConvention0, ""Infinity"", node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(node1.isQualifiedName());
}",0,
project,0,test438500,"public void test438500() throws Throwable {
    Node node0 = new Node(12, 12, 12);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test439501,"public void test439501() throws Throwable {
    Node node0 = new Node(13, 94, 65535);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test440502,"public void test440502() throws Throwable {
    Node node0 = new Node(14);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test441503,"public void test441503() throws Throwable {
    Node node0 = new Node(15);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test442504,"public void test442504() throws Throwable {
    Node node0 = new Node(118);
    Node node1 = new Node(16, node0, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test443505,"public void test443505() throws Throwable {
    Node node0 = new Node(113, (-2247), (-2247));
    Node node1 = new Node(17, node0, node0, node0, 49, 23);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test444506,"public void test444506() throws Throwable {
    Node node0 = new Node(18, 23, 98);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test445507,"public void test445507() throws Throwable {
    Node node0 = new Node(95, 110, 425);
    Node node1 = new Node(19, node0, node0, node0, node0, 3966, 281);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test446508,"public void test446508() throws Throwable {
    Node node0 = new Node(102, (-664), 102);
    Node node1 = new Node(20, node0, node0, 4, 0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test447509,"public void test447509() throws Throwable {
    Node node0 = new Node(21, 21, 4114);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test448510,"public void test448510() throws Throwable {
    Node node0 = new Node(22, 22, 136);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test449511,"public void test449511() throws Throwable {
    Node node0 = new Node(24, 97, 4886);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test450512,"public void test450512() throws Throwable {
    Node node0 = new Node(25, (-2639), 4114);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test451513,"public void test451513() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test452514,"public void test452514() throws Throwable {
    Node node0 = new Node(27, 27, 37);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test453515,"public void test453515() throws Throwable {
    Node node0 = Node.newString(28, ""Z*|Y5BtckE-JB"");
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test454516,"public void test454516() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test455517,"public void test455517() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test456518,"public void test456518() throws Throwable {
    Node node0 = new Node(31);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test457519,"public void test457519() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Node node1 = new Node(34, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test458520,"public void test458520() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.valueCheck(node0, nodeUtil_BooleanResultPredicate0);
    assertFalse(boolean0);
}",1,
project,0,test459521,"public void test459521() throws Throwable {
    Node node0 = new Node(36, (-534), 11);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test460522,"public void test460522() throws Throwable {
    Node node0 = Node.newNumber((double) 51);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test461523,"public void test461523() throws Throwable {
    Node node0 = new Node(42, 17, 4095);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test462524,"public void test462524() throws Throwable {
    Node node0 = new Node(43, 1397, 1535);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test463525,"public void test463525() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = new Node(44, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test464526,"public void test464526() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test465527,"public void test465527() throws Throwable {
    Node node0 = new Node(46, (-1743), 38);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test466528,"public void test466528() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test467529,"public void test467529() throws Throwable {
    Node node0 = Node.newString(48, ""Muy`^e)u[af"");
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test468530,"public void test468530() throws Throwable {
    Node node0 = Node.newString(49, ""9k[g@a(avp:M"");
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test469531,"public void test469531() throws Throwable {
    Node node0 = new Node(50, 50, 50);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test470532,"public void test470532() throws Throwable {
    Node node0 = Node.newString(51, ""W(%UJ7s`vyd<%##5"", 51, 51);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test471533,"public void test471533() throws Throwable {
    Node node0 = new Node(2119, 2119, 2119);
    Node node1 = new Node(52, node0, node0, node0, 403, 2);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test472534,"public void test472534() throws Throwable {
    Node node0 = new Node(122);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test473535,"public void test473535() throws Throwable {
    Node node0 = new Node(41);
    Node node1 = new Node(0, node0, node0, 49, 12);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,
project,0,test474537,"public void test474537() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(2);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test475538,"public void test475538() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test476539,"public void test476539() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test477540,"public void test477540() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test478541,"public void test478541() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test479542,"public void test479542() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test480543,"public void test480543() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test481544,"public void test481544() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test482545,"public void test482545() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test483546,"public void test483546() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test484547,"public void test484547() throws Throwable {
    Node node0 = new Node(87, 87, 65);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(9, int0);
}",0,"assertEquals(1, int0)"
project,0,test485548,"public void test485548() throws Throwable {
    Node node0 = new Node(123);
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assiment op
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test486549,"public void test486549() throws Throwable {
    Node node0 = Node.newString(""case expresmion doesn't match switch"", 1547, 1547);
    Node node1 = new Node(89, node0, node0, node0, node0);
    int int0 = NodeUtil.getOpFromAssignmentOp(node1);
    assertEquals(11, int0);
}",0,"assertEquals(1, int0)"
project,0,test487550,"public void test487550() throws Throwable {
    Node node0 = Node.newString(90, ""test"", 109, 109);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(18, int0);
}",0,"assertEquals(1, int0)"
project,0,test488551,"public void test488551() throws Throwable {
    Node node0 = new Node(91);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(19, int0);
}",0,"assertEquals(1, int0)"
project,0,test489552,"public void test489552() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(22, int0);
}",0,"assertEquals(1, int0)"
project,0,test490553,"public void test490553() throws Throwable {
    Node node0 = new Node(95, 95, 425);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(23, int0);
}",0,"assertEquals(1, int0)"
project,0,test491554,"public void test491554() throws Throwable {
    Node node0 = Node.newString(""case expression doesn't match switch"", 1536, 1536);
    Node node1 = new Node(97, node0, node0, 1, 76);
    int int0 = NodeUtil.getOpFromAssignmentOp(node1);
    assertEquals(25, int0);
}",0,
project,0,test492555,"public void test492555() throws Throwable {
    Node node0 = Node.newNumber(Double.POSITIVE_INFINITY, 26, 2676);
    boolean boolean0 = NodeUtil.isExpressionNode(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test493556,"public void test493556() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""my"", 58, 10);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test493557,"public void test493557() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""my"", 58, 10);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertEquals(237578, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test494558,"public void test494558() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    boolean boolean0 = NodeUtil.referencesThis(node1);
    assertEquals(159743, node1.getSourcePosition());
}",0,"assertEquals(1, node1.getSourcePosition())"
project,0,test494559,"public void test494559() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    boolean boolean0 = NodeUtil.referencesThis(node1);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test494560,"public void test494560() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    boolean boolean0 = NodeUtil.referencesThis(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test494561,"public void test494561() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    boolean boolean0 = NodeUtil.referencesThis(node1);
    assertEquals(105, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test495562,"public void test495562() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""?y.`ze<N3[ZiYI[gK'"", 6, 6);
    Node[] nodeArray0 = new Node[2];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test496563,"public void test496563() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test497564,"public void test497564() throws Throwable {
    Node node0 = Node.newString(""y[@>az[*wUri@"", 1429, (-987));
    Node node1 = new Node(33, node0, node0, node0, node0);
    Node node2 = NodeUtil.getPrototypeClassName(node1);
    assertNull(node2);
}",0,
project,0,test498565,"public void test498565() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 71, 1176);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(291992, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test498566,"public void test498566() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 71, 1176);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test499567,"public void test499567() throws Throwable {
    Node node0 = new Node(30, 8, (-865));
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test500568,"public void test500568() throws Throwable {
    Node node0 = new Node(53, 29, 148);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test500569,"public void test500569() throws Throwable {
    Node node0 = new Node(53, 29, 148);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test500570,"public void test500570() throws Throwable {
    Node node0 = new Node(53, 29, 148);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertEquals(118932, node1.getSourcePosition());
}",0,"assertEquals(1, node1.getSourcePosition())"
project,0,test501571,"public void test501571() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.NodeUtil$NumbericResultPredicate"", ""com.google.javascript.jscomp.NodeUtil$NumbericResultPredicate"");
    assertEquals(1, Node.TARGET_PROP);
}",0,
project,0,test502572,"public void test502572() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""Z*|Y5BtckE-JB"", 2486, 2486);
    Node node1 = NodeUtil.newExpr(node0);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test502573,"public void test502573() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""Z*|Y5BtckE-JB"", 2486, 2486);
    Node node1 = NodeUtil.newExpr(node0);
    NodeUtil.getAssignedValue(node0);
    assertEquals(10185142, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test503574,"public void test503574() throws Throwable {
    Node node0 = Node.newString(""3EF|WB+c#<&"");
    boolean boolean0 = NodeUtil.isString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test504575,"public void test504575() throws Throwable {
    Node node0 = new Node(97);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test505576,"public void test505576() throws Throwable {
    Node node0 = new Node(92, 92, 92);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node1);
    assertFalse(boolean0);
}",0,
project,0,test505577,"public void test505577() throws Throwable {
    Node node0 = new Node(92, 92, 92);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test506578,"public void test506578() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertEquals(94355, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test506579,"public void test506579() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test506580,"public void test506580() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertTrue(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test506581,"public void test506581() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 23, 147);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test507582,"public void test507582() throws Throwable {
    Node node0 = Node.newNumber((double) 92);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertFalse(boolean0);
}",0,
project,0,test507583,"public void test507583() throws Throwable {
    Node node0 = Node.newNumber((double) 92);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test508584,"public void test508584() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    Node node1 = new Node(2, node0);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertEquals(471155, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test508585,"public void test508585() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""infinity"", 115, 115);
    Node node1 = new Node(2, node0);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test509586,"public void test509586() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test510587,"public void test510587() throws Throwable {
    Node node0 = new Node(113, (-2247), (-2247));
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test511588,"public void test511588() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    Node node1 = new Node(27, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test512589,"public void test512589() throws Throwable {
    Node node0 = new Node(114, 114, 114);
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test513590,"public void test513590() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test514591,"public void test514591() throws Throwable {
    Node node0 = new Node(111);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test515592,"public void test515592() throws Throwable {
    Node node0 = Node.newString(114, ""J]!m|?pMddgw qX5%"");
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test516593,"public void test516593() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test517594,"public void test517594() throws Throwable {
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node0 = Node.newString(1237, ""g="");
    Node node1 = NodeUtil.newFunctionNode(""g="", linkedList0, node0, (-2102), 4);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test517595,"public void test517595() throws Throwable {
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node0 = Node.newString(1237, ""g="");
    Node node1 = NodeUtil.newFunctionNode(""g="", linkedList0, node0, (-2102), 4);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(1, node1.getChildCount())"
project,0,test517596,"public void test517596() throws Throwable {
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node0 = Node.newString(1237, ""g="");
    Node node1 = NodeUtil.newFunctionNode(""g="", linkedList0, node0, (-2102), 4);
    assertEquals((-1), node1.getLineno());
}",0,
project,0,test517597,"public void test517597() throws Throwable {
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node0 = Node.newString(1237, ""g="");
    Node node1 = NodeUtil.newFunctionNode(""g="", linkedList0, node0, (-2102), 4);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test518598,"public void test518598() throws Throwable {
    Node node0 = Node.newString(77, ""x'}|ECbh\""&O"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test519599,"public void test519599() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test520600,"public void test520600() throws Throwable {
    Node node0 = new Node(110);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test521601,"public void test521601() throws Throwable {
    Node node0 = new Node(111, (-2100), (-2100));
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test522602,"public void test522602() throws Throwable {
    Node node0 = new Node(112);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test523603,"public void test523603() throws Throwable {
    Node node0 = new Node(113, 113, 113);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test524604,"public void test524604() throws Throwable {
    Node node0 = Node.newString(114, ""Imls\""*Bw2+zmM^{w"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test526606,"public void test526606() throws Throwable {
    Node node0 = Node.newString(119, ""NaN"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test527607,"public void test527607() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test528608,"public void test528608() throws Throwable {
    Node node0 = Node.newString(77, ""x'}|ECbh\""&O"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test529609,"public void test529609() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test530610,"public void test530610() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test531611,"public void test531611() throws Throwable {
    Node node0 = Node.newString(112, ""JSC_EGATING_A_NON_NUBER_ERROR"", 112, 112);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test532612,"public void test532612() throws Throwable {
    Node node0 = new Node(113, (-2247), (-2247));
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test533613,"public void test533613() throws Throwable {
    Node node0 = Node.newString(114, ""II>#M"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test534614,"public void test534614() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test535615,"public void test535615() throws Throwable {
    Node node0 = Node.newString(119, ""NaN"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test536616,"public void test536616() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test537617,"public void test537617() throws Throwable {
    Node node0 = new Node(43, 1535, 43);
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test538618,"public void test538618() throws Throwable {
    Node node0 = new Node(77, 77, 23);
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test539619,"public void test539619() throws Throwable {
    Node node0 = new Node(120);
    node0.addChildrenToFront(node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test540620,"public void test540620() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    node0.addChildToFront(node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test541621,"public void test541621() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test542622,"public void test542622() throws Throwable {
    Node node0 = new Node(48);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // BINDNAME does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test543623,"public void test543623() throws Throwable {
    Node node0 = new Node(109, 109, 109);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // ELSE 109 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test544624,"public void test544624() throws Throwable {
    Node node0 = Node.newString(110, ""JSC_EATING_A_NON_NUBER_ERROR"", 110, 110);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // SWITCH JSC_EATING_A_NON_NUBER_ERROR 110 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test545625,"public void test545625() throws Throwable {
    Node node0 = new Node(113, (-2247), (-2247));
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,
project,0,test546626,"public void test546626() throws Throwable {
    Node node0 = Node.newString(114, ""I>.#M"");
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    // Undeclared exception!
    try {
        peepholeRemoveDeadCode0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test547627,"public void test547627() throws Throwable {
    Node node0 = new Node(115);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test548628,"public void test548628() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""g6glO<^H9[u[1UhXn"", ""g6glO<^H9[u[1UhXn"");
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test549629,"public void test549629() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""kH"", ""kH"");
    NameReferenceGraphConstruction nameReferenceGraphConstruction0 = new NameReferenceGraphConstruction(compiler0);
    nameReferenceGraphConstruction0.process(node0, node0);
    assertEquals(132, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test550630,"public void test550630() throws Throwable {
    Node node0 = new Node(111, 111, 967);
    boolean boolean0 = NodeUtil.isSwitchCase(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test551631,"public void test551631() throws Throwable {
    Node node0 = Node.newString(""W(%UJ7s`vyd<%##5"");
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test552632,"public void test552632() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(442);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 51, 122);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertTrue(boolean0);
}",0,
project,0,test552633,"public void test552633() throws Throwable {
    ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(442);
    MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 51, 122);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(209018, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test553634,"public void test553634() throws Throwable {
    boolean boolean0 = NodeUtil.isLabelName((Node) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test554635,"public void test554635() throws Throwable {
    Node node0 = Node.newNumber(0.0, 144, 144);
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test555636,"public void test555636() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    Node node1 = new Node(27, node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: IF 108 of IF 108
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test556637,"public void test556637() throws Throwable {
    Node node0 = new Node(73);
    // Undeclared exception!
    try {
        NodeUtil.maybeAddFinally(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test557638,"public void test557638() throws Throwable {
    Node node0 = Node.newString(77, ""x'}|ECbh\""&O"");
    NodeUtil.maybeAddFinally(node0);
    assertTrue(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test557639,"public void test557639() throws Throwable {
    Node node0 = Node.newString(77, ""x'}|ECbh\""&O"");
    NodeUtil.maybeAddFinally(node0);
    assertTrue(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test558640,"public void test558640() throws Throwable {
    Node node0 = new Node(43, 1397, 1397);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test559641,"public void test559641() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""PR}`e)Hc(cA7v<0W"", ""Recording function information"");
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test560642,"public void test560642() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.isThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test561643,"public void test561643() throws Throwable {
    Node node0 = Node.newString(42, ""NaN"");
    boolean boolean0 = NodeUtil.isThis(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test562644,"public void test562644() throws Throwable {
    Node node0 = new Node(44, 80, 44);
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test563645,"public void test563645() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test564646,"public void test564646() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test565647,"public void test565647() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node1);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test565648,"public void test565648() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node1);
    assertEquals(114736, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test565649,"public void test565649() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test565650,"public void test565650() throws Throwable {
    Node node0 = Node.newString(""#em~3+7r8o]#f#|ijf"");
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""+?Q=+)\""|7>-X"", stack0, node0, 28, 48);
    Node node2 = new Node(34, node1);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node1);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test566651,"public void test566651() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node1);
    assertEquals(1, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test566652,"public void test566652() throws Throwable {
    Node node0 = Node.newNumber((double) 64);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node1);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test567653,"public void test567653() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test568654,"public void test568654() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""-"", (Node) null);
    assertNotNull(node0);
}",0,
project,0,test568655,"public void test568655() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""-"", (Node) null);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test569656,"public void test569656() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test570657,"public void test570657() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""#G!A.jNM<#_H/vx6?5"", 1717, 147);
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test571658,"public void test571658() throws Throwable {
    Node node0 = new Node(2119, 2119, 2119);
    Node node1 = new Node(35, node0, node0, node0, 405, 2);
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test572659,"public void test572659() throws Throwable {
    Node node0 = new Node(147);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test573660,"public void test573660() throws Throwable {
    Node node0 = Node.newString(""Y3$thk3h8iMyq2"", (-886), (-886));
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""Y3$thk3h8iMyq2"", string0);
}",1,
project,0,test574661,"public void test574661() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected node type: LABEL 126
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test575662,"public void test575662() throws Throwable {
    Node node0 = new Node(147);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // GET is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",1,
project,0,test576663,"public void test576663() throws Throwable {
    JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType((Node) null, (JSType) null);
    assertNull(jSType0);
}",0,assertNotNull(jSType0)
project,0,test577664,"public void test577664() throws Throwable {
    Node node0 = Node.newString(90, ""test"", 109, 109);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSType jSType0 = jSTypeRegistry0.createNamedType(""test"", ""+"", 0, 8);
    JSType jSType1 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, jSType0);
    assertFalse(jSType1.isTemplateType());
}",0,assertFalse(jSType1.isTemplateType())
project,0,test578665,"public void test578665() throws Throwable {
    Node node0 = new Node(113, (-2175), 967);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test579666,"public void test579666() throws Throwable {
    String string0 = NodeUtil.opToStr(9);
    assertEquals(""|"", string0);
}",0,
project,0,test580668,"public void test580668() throws Throwable {
    String string0 = NodeUtil.opToStr(64);
    assertNull(string0);
}",0,
project,0,test581669,"public void test581669() throws Throwable {
    String string0 = NodeUtil.opToStr(10);
    assertNotNull(string0);
}",0,
project,0,test582671,"public void test582671() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(11);
    assertEquals(""&"", string0);
}",1,
project,0,test583672,"public void test583672() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertEquals(""=="", string0);
}",0,
project,0,test584673,"public void test584673() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(13);
    assertEquals(""!="", string0);
}",1,
project,0,test585674,"public void test585674() throws Throwable {
    String string0 = NodeUtil.opToStr(14);
    assertEquals(""<"", string0);
}",0,
project,0,test586675,"public void test586675() throws Throwable {
    String string0 = NodeUtil.opToStr(15);
    assertEquals(""<="", string0);
}",0,
project,0,test587676,"public void test587676() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(16);
    assertEquals("">"", string0);
}",1,
project,0,test588677,"public void test588677() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(17);
    assertEquals("">="", string0);
}",1,
project,0,test589678,"public void test589678() throws Throwable {
    String string0 = NodeUtil.opToStr(18);
    assertEquals(""<<"", string0);
}",0,
project,0,test590679,"public void test590679() throws Throwable {
    String string0 = NodeUtil.opToStr(19);
    assertEquals("">>"", string0);
}",0,
project,0,test591680,"public void test591680() throws Throwable {
    String string0 = NodeUtil.opToStr(20);
    assertEquals("">>>"", string0);
}",0,
project,0,test592681,"public void test592681() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(21);
    assertEquals(""+"", string0);
}",1,
project,0,test593682,"public void test593682() throws Throwable {
    String string0 = NodeUtil.opToStr(22);
    assertEquals(""-"", string0);
}",0,
project,0,test594683,"public void test594683() throws Throwable {
    String string0 = NodeUtil.opToStr(23);
    assertEquals(""*"", string0);
}",0,
project,0,test595684,"public void test595684() throws Throwable {
    String string0 = NodeUtil.opToStr(24);
    assertEquals(""/"", string0);
}",0,
project,0,test596685,"public void test596685() throws Throwable {
    String string0 = NodeUtil.opToStr(25);
    assertEquals(""%"", string0);
}",0,
project,0,test597686,"public void test597686() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(26);
    assertEquals(""!"", string0);
}",1,
project,0,test598687,"public void test598687() throws Throwable {
    String string0 = NodeUtil.opToStr(27);
    assertEquals(""~"", string0);
}",0,
project,0,test599688,"public void test599688() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(28);
    assertEquals(""+"", string0);
}",1,
project,0,test600689,"public void test600689() throws Throwable {
    String string0 = NodeUtil.opToStr(29);
    assertEquals(""-"", string0);
}",0,
project,0,test601691,"public void test601691() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(30);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 30: NEW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test602692,"public void test602692() throws Throwable {
    String string0 = NodeUtil.opToStr(31);
    assertNull(string0);
}",0,
project,0,test603693,"public void test603693() throws Throwable {
    String string0 = NodeUtil.opToStr(32);
    assertEquals(""typeof"", string0);
}",0,
project,0,test604694,"public void test604694() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(33);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 33: GETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test605695,"public void test605695() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 34: SETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test606696,"public void test606696() throws Throwable {
    String string0 = NodeUtil.opToStr(35);
    assertNull(string0);
}",0,
project,0,test607697,"public void test607697() throws Throwable {
    String string0 = NodeUtil.opToStr(36);
    assertNull(string0);
}",0,
project,0,test608698,"public void test608698() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(37);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 37: CALL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test609699,"public void test609699() throws Throwable {
    String string0 = NodeUtil.opToStr(38);
    assertNull(string0);
}",0,
project,0,test610700,"public void test610700() throws Throwable {
    String string0 = NodeUtil.opToStr(39);
    assertNull(string0);
}",0,
project,0,test611701,"public void test611701() throws Throwable {
    String string0 = NodeUtil.opToStr(40);
    assertNull(string0);
}",0,
project,0,test612702,"public void test612702() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(41);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 41: NULL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test613703,"public void test613703() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(42);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 42: THIS
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test614704,"public void test614704() throws Throwable {
    String string0 = NodeUtil.opToStr(43);
    assertNull(string0);
}",0,
project,0,test615705,"public void test615705() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(44);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 44: TRUE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test616706,"public void test616706() throws Throwable {
    String string0 = NodeUtil.opToStr(45);
    assertNotNull(string0);
}",0,
project,0,test617708,"public void test617708() throws Throwable {
    String string0 = NodeUtil.opToStr(46);
    assertEquals(""!=="", string0);
}",0,
project,0,test618710,"public void test618710() throws Throwable {
    String string0 = NodeUtil.opToStr(47);
    assertNull(string0);
}",0,
project,0,test619711,"public void test619711() throws Throwable {
    String string0 = NodeUtil.opToStr(48);
    assertNull(string0);
}",0,
project,0,test620712,"public void test620712() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 49: THROW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test621713,"public void test621713() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 50: RETHROW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test622714,"public void test622714() throws Throwable {
    String string0 = NodeUtil.opToStr(51);
    assertEquals(""in"", string0);
}",0,
project,0,test623716,"public void test623716() throws Throwable {
    String string0 = NodeUtil.opToStr(52);
    assertEquals(""instanceof"", string0);
}",0,
project,0,test624718,"public void test624718() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 53: LOCAL_LOAD
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test625719,"public void test625719() throws Throwable {
    String string0 = NodeUtil.opToStr(54);
    assertNull(string0);
}",0,
project,0,test626720,"public void test626720() throws Throwable {
    String string0 = NodeUtil.opToStr(55);
    assertNull(string0);
}",0,
project,0,test627721,"public void test627721() throws Throwable {
    String string0 = NodeUtil.opToStr(56);
    assertNull(string0);
}",0,
project,0,test628722,"public void test628722() throws Throwable {
    String string0 = NodeUtil.opToStr(57);
    assertNull(string0);
}",0,
project,0,test629723,"public void test629723() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 58: ENUM_INIT_VALUES
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test630724,"public void test630724() throws Throwable {
    String string0 = NodeUtil.opToStr(59);
    assertNull(string0);
}",0,
project,0,test631725,"public void test631725() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 61: THISFN
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test632726,"public void test632726() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 62: RETURN_RESULT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test633727,"public void test633727() throws Throwable {
    String string0 = NodeUtil.opToStr(63);
    assertNull(string0);
}",0,
project,0,test634728,"public void test634728() throws Throwable {
    String string0 = NodeUtil.opToStr(65);
    assertNull(string0);
}",0,
project,0,test635729,"public void test635729() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 66: SET_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test636730,"public void test636730() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 67: DEL_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test637731,"public void test637731() throws Throwable {
    String string0 = NodeUtil.opToStr(69);
    assertNull(string0);
}",0,
project,0,test638732,"public void test638732() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 70: DEFAULTNAMESPACE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test639733,"public void test639733() throws Throwable {
    String string0 = NodeUtil.opToStr(71);
    assertNull(string0);
}",0,
project,0,test640734,"public void test640734() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 72: ESCXMLTEXT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test641735,"public void test641735() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 73: REF_MEMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test642736,"public void test642736() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 74: REF_NS_MEMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test643737,"public void test643737() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 75: REF_NAME
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test644738,"public void test644738() throws Throwable {
    String string0 = NodeUtil.opToStr(76);
    assertNull(string0);
}",0,
project,0,test645739,"public void test645739() throws Throwable {
    String string0 = NodeUtil.opToStr(77);
    assertNull(string0);
}",0,
project,0,test646740,"public void test646740() throws Throwable {
    String string0 = NodeUtil.opToStr(78);
    assertNull(string0);
}",0,
project,0,test647741,"public void test647741() throws Throwable {
    String string0 = NodeUtil.opToStr(79);
    assertNull(string0);
}",0,
project,0,test648742,"public void test648742() throws Throwable {
    String string0 = NodeUtil.opToStr(80);
    assertNull(string0);
}",0,
project,0,test649743,"public void test649743() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 81: LC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test650744,"public void test650744() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 82: RC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test651745,"public void test651745() throws Throwable {
    String string0 = NodeUtil.opToStr(83);
    assertNull(string0);
}",0,
project,0,test652746,"public void test652746() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 84: RP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test653747,"public void test653747() throws Throwable {
    String string0 = NodeUtil.opToStr(85);
    assertNull(string0);
}",0,
project,0,test654748,"public void test654748() throws Throwable {
    String string0 = NodeUtil.opToStr(86);
    assertEquals(""="", string0);
}",0,
project,0,test655750,"public void test655750() throws Throwable {
    String string0 = NodeUtil.opToStr(87);
    assertEquals(""|="", string0);
}",0,
project,0,test656751,"public void test656751() throws Throwable {
    String string0 = NodeUtil.opToStr(88);
    assertEquals(""^="", string0);
}",0,
project,0,test657752,"public void test657752() throws Throwable {
    String string0 = NodeUtil.opToStr(89);
    assertEquals(""&="", string0);
}",0,
project,0,test658753,"public void test658753() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(90);
    assertEquals(""<<="", string0);
}",1,
project,0,test659754,"public void test659754() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test660755,"public void test660755() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(92);
    assertEquals("">>>="", string0);
}",1,
project,0,test661756,"public void test661756() throws Throwable {
    String string0 = NodeUtil.opToStr(93);
    assertEquals(""+="", string0);
}",0,
project,0,test662757,"public void test662757() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(94);
    assertEquals(""-="", string0);
}",1,
project,0,test663758,"public void test663758() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(95);
    assertEquals(""*="", string0);
}",1,
project,0,test664759,"public void test664759() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(96);
    assertEquals(""/="", string0);
}",1,
project,0,test665760,"public void test665760() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(97);
    assertEquals(""%="", string0);
}",1,
project,0,test666761,"public void test666761() throws Throwable {
    String string0 = NodeUtil.opToStr(98);
    assertNull(string0);
}",0,
project,0,test667762,"public void test667762() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 99: COLON
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test668763,"public void test668763() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(100);
    assertEquals(""||"", string0);
}",1,
project,0,test669764,"public void test669764() throws Throwable {
    String string0 = NodeUtil.opToStr(101);
    assertEquals(""&&"", string0);
}",0,
project,0,test670765,"public void test670765() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(102);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 102: INC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test671766,"public void test671766() throws Throwable {
    String string0 = NodeUtil.opToStr(103);
    assertNull(string0);
}",0,
project,0,test672767,"public void test672767() throws Throwable {
    String string0 = NodeUtil.opToStr(104);
    assertNull(string0);
}",0,
project,0,test673768,"public void test673768() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(105);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 105: FUNCTION
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test674769,"public void test674769() throws Throwable {
    String string0 = NodeUtil.opToStr(106);
    assertNull(string0);
}",0,
project,0,test675770,"public void test675770() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 107: IMPORT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test676771,"public void test676771() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 108: IF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test677772,"public void test677772() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 109: ELSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test678773,"public void test678773() throws Throwable {
    String string0 = NodeUtil.opToStr(110);
    assertNull(string0);
}",0,
project,0,test679774,"public void test679774() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 111: CASE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test680775,"public void test680775() throws Throwable {
    String string0 = NodeUtil.opToStr(112);
    assertNull(string0);
}",0,
project,0,test681776,"public void test681776() throws Throwable {
    String string0 = NodeUtil.opToStr(113);
    assertNull(string0);
}",0,
project,0,test682777,"public void test682777() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 114: DO
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test683778,"public void test683778() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 115: FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test684779,"public void test684779() throws Throwable {
    String string0 = NodeUtil.opToStr(116);
    assertNull(string0);
}",0,
project,0,test685780,"public void test685780() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 117: CONTINUE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test686781,"public void test686781() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 118: VAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test687782,"public void test687782() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 119: WITH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test688783,"public void test688783() throws Throwable {
    String string0 = NodeUtil.opToStr(120);
    assertNull(string0);
}",0,
project,0,test689784,"public void test689784() throws Throwable {
    String string0 = NodeUtil.opToStr(121);
    assertNull(string0);
}",0,
project,0,test690785,"public void test690785() throws Throwable {
    String string0 = NodeUtil.opToStr(122);
    assertEquals(""void"", string0);
}",0,
project,0,test691786,"public void test691786() throws Throwable {
    String string0 = NodeUtil.opToStr((-2405));
    assertNull(string0);
}",0,
project,0,test692787,"public void test692787() throws Throwable {
    Node node0 = Node.newString(""case expression doesn't match switch"", 1536, 1536);
    Node node1 = NodeUtil.newVarNode(""case expression doesn't match switch"", node0);
    Node node2 = new Node((-2082), 38, 24);
    Node node3 = new Node(97, node2, node1, 1, 76);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node3);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test693788,"public void test693788() throws Throwable {
    Node node0 = new Node(64);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertEquals(17, Node.TYPE_PROP);
}",0,
project,0,test694789,"public void test694789() throws Throwable {
    Node node0 = Node.newString(100, ""2"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    linkedList0.addLast(node0);
    // Undeclared exception!
    try {
        NodeUtil.newFunctionNode(""2"", linkedList0, node0, 10, 2);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test695790,"public void test695790() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""!1.J"", 118, 118);
    assertEquals(483446, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test695791,"public void test695791() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""!1.J"", 118, 118);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test695792,"public void test695792() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""!1.J"", 118, 118);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test696793,"public void test696793() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""B&?r/.gcJFr+')AJ"", 800, (-959));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test696794,"public void test696794() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""B&?r/.gcJFr+')AJ"", 800, (-959));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test696795,"public void test696795() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""B&?r/.gcJFr+')AJ"", 800, (-959));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals((-1), node1.getSourcePosition());
}",0,"assertEquals(1, node1.getSourcePosition())"
project,0,test696796,"public void test696796() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""B&?r/.gcJFr+')AJ"", 800, (-959));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertFalse(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test696797,"public void test696797() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""B&?r/.gcJFr+')AJ"", 800, (-959));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test697798,"public void test697798() throws Throwable {
    Node node0 = new Node(82, 103, 103);
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test698799,"public void test698799() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newName(googleCodingConvention0, ""ERROR_FUNCTION_TYPE"", (Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test699800,"public void test699800() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName("".prototype"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test700801,"public void test700801() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""Kpiw"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test701802,"public void test701802() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""true"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test702803,"public void test702803() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".toV[|/Lse9bBNi|2"", 33, 160);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(135328, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test702804,"public void test702804() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".toV[|/Lse9bBNi|2"", 33, 160);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertTrue(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test703805,"public void test703805() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""eX'`"", 2805, 2805);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertEquals(11492085, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test703806,"public void test703806() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""eX'`"", 2805, 2805);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test704807,"public void test704807() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test705808,"public void test705808() throws Throwable {
    Node node0 = new Node(2119);
    Node node1 = Node.newNumber((-467.49), (-2), 15);
    Node node2 = new Node(54, node0, node1, node0, 405, 2);
    // Undeclared exception!
    try {
        NodeUtil.newVarNode(""il2XA_c+TPIY+"", node1);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test706809,"public void test706809() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""1bARjaVIE"", 85, 93);
    int int0 = NodeUtil.getNameReferenceCount(node0, ""#cc[3bQ"");
    assertEquals(348253, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test706810,"public void test706810() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""1bARjaVIE"", 85, 93);
    int int0 = NodeUtil.getNameReferenceCount(node0, ""#cc[3bQ"");
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test707811,"public void test707811() throws Throwable {
    Node node0 = new Node(113, (-2175), 967);
    boolean boolean0 = NodeUtil.containsType(node0, 113);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test709814,"public void test709814() throws Throwable {
    Node node0 = new Node(26);
    Node node1 = NodeUtil.newVarNode(""Z1<{#GlM"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = nodeUtil_MatchDeclaration0.apply(node1);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test710815,"public void test710815() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""CGUL||Nl*k$5%z)h"");
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.valueCheck(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test713818,"public void test713818() throws Throwable {
    Node node0 = Node.newString(""valueOf"", 1536, 1536);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.containsFunction(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test713819,"public void test713819() throws Throwable {
    Node node0 = Node.newString(""valueOf"", 1536, 1536);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.containsFunction(node1);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test713820,"public void test713820() throws Throwable {
    Node node0 = Node.newString(""valueOf"", 1536, 1536);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.containsFunction(node1);
    assertEquals(1536, node1.getLineno());
}",0,
project,0,test713821,"public void test713821() throws Throwable {
    Node node0 = Node.newString(""valueOf"", 1536, 1536);
    Node node1 = NodeUtil.newVarNode(""valueOf"", node0);
    boolean boolean0 = NodeUtil.containsFunction(node1);
    assertFalse(node0.hasChildren());
}",0,
project,0,test714822,"public void test714822() throws Throwable {
    Node node0 = new Node((-1084));
    Node node1 = NodeUtil.newVarNode(""split"", node0);
    Node node2 = new Node(4096, node1);
    boolean boolean0 = NodeUtil.isNameReferenced(node2, ""split"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test714823,"public void test714823() throws Throwable {
    Node node0 = new Node((-1084));
    Node node1 = NodeUtil.newVarNode(""split"", node0);
    Node node2 = new Node(4096, node1);
    boolean boolean0 = NodeUtil.isNameReferenced(node2, ""split"");
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test714824,"public void test714824() throws Throwable {
    Node node0 = new Node((-1084));
    Node node1 = NodeUtil.newVarNode(""split"", node0);
    Node node2 = new Node(4096, node1);
    boolean boolean0 = NodeUtil.isNameReferenced(node2, ""split"");
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test715825,"public void test715825() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test716826,"public void test716826() throws Throwable {
    Node node0 = new Node(34, 34, 34);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, predicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test717827,"public void test717827() throws Throwable {
    Node node0 = new Node(78);
    // Undeclared exception!
    try {
        NodeUtil.hasFinally(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test718828,"public void test718828() throws Throwable {
    Node node0 = new Node(115);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test719829,"public void test719829() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test720830,"public void test720830() throws Throwable {
    Node node0 = new Node(87);
    // Undeclared exception!
    try {
        NodeUtil.hasCatchHandler(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test721831,"public void test721831() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""CGUL||Nl*k$5%z)h"");
    boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    assertFalse(boolean0);
}",0,
project,0,test722832,"public void test722832() throws Throwable {
    Node node0 = new Node((-5619));
    // Undeclared exception!
    try {
        NodeUtil.getFunctionParameters(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test723833,"public void test723833() throws Throwable {
    Node node0 = new Node(1545, 1545, 1545);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""vWZ"", stack0, node0, (-1418), 89);
    assertEquals(105, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test723834,"public void test723834() throws Throwable {
    Node node0 = new Node(1545, 1545, 1545);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""vWZ"", stack0, node0, (-1418), 89);
    Node node2 = NodeUtil.getFunctionParameters(node1);
    assertEquals(83, node2.getType());
}",0,"assertEquals(0, node2.getType())"
project,0,test723835,"public void test723835() throws Throwable {
    Node node0 = new Node(1545, 1545, 1545);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""vWZ"", stack0, node0, (-1418), 89);
    Node node2 = NodeUtil.getFunctionParameters(node1);
    assertEquals((-1), node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
project,0,test723836,"public void test723836() throws Throwable {
    Node node0 = new Node(1545, 1545, 1545);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""vWZ"", stack0, node0, (-1418), 89);
    Node node2 = NodeUtil.getFunctionParameters(node1);
    assertFalse(node2.hasChildren());
}",0,assertFalse(node2.hasChildren())
project,0,test723837,"public void test723837() throws Throwable {
    Node node0 = new Node(1545, 1545, 1545);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""vWZ"", stack0, node0, (-1418), 89);
    Node node2 = NodeUtil.getFunctionParameters(node1);
    assertEquals((-1), node2.getCharno());
}",0,
project,0,test724838,"public void test724838() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""substr"", ""substr"");
    assertEquals(4096, node0.getSourcePosition());
}",0,
project,0,test725839,"public void test725839() throws Throwable {
    Node node0 = new Node(74);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test726840,"public void test726840() throws Throwable {
    Node node0 = new Node(74);
    node0.addSuppression(""Kci"");
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertEquals(0, jSDocInfo0.getImplementedInterfaceCount());
}",0,
project,0,test727841,"public void test727841() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test727842,"public void test727842() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    assertEquals(159743, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test727843,"public void test727843() throws Throwable {
    Node node0 = new Node(41);
    Stack<Node> stack0 = new Stack<Node>();
    Node node1 = NodeUtil.newFunctionNode(""ze{EzS+}"", stack0, node0, 38, 4095);
    NodeUtil.getInfoForNameNode(node0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test728844,"public void test728844() throws Throwable {
    Node node0 = Node.newString(""0*U"", 94, 94);
    Node node1 = NodeUtil.newVarNode(""0*U"", node0);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test728845,"public void test728845() throws Throwable {
    Node node0 = Node.newString(""0*U"", 94, 94);
    Node node1 = NodeUtil.newVarNode(""0*U"", node0);
    assertEquals(94, node1.getCharno());
}",0,
project,0,test728846,"public void test728846() throws Throwable {
    Node node0 = Node.newString(""0*U"", 94, 94);
    Node node1 = NodeUtil.newVarNode(""0*U"", node0);
    NodeUtil.getInfoForNameNode(node0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test728847,"public void test728847() throws Throwable {
    Node node0 = Node.newString(""0*U"", 94, 94);
    Node node1 = NodeUtil.newVarNode(""0*U"", node0);
    NodeUtil.getInfoForNameNode(node0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test729848,"public void test729848() throws Throwable {
    Node node0 = new Node((-640));
    // Undeclared exception!
    try {
        NodeUtil.getFunctionJSDocInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test730849,"public void test730849() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionJSDocInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test731850,"public void test731850() throws Throwable {
    Node node0 = new Node(105);
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFunctionLevelAstParallelizer(node0, false);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""this."", list0, node0, 48, 4);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(1, node1.getChildCount())"
project,0,test731851,"public void test731851() throws Throwable {
    Node node0 = new Node(105);
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFunctionLevelAstParallelizer(node0, false);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""this."", list0, node0, 48, 4);
    assertEquals(196612, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test731852,"public void test731852() throws Throwable {
    Node node0 = new Node(105);
    AstParallelizer astParallelizer0 = AstParallelizer.createNewFunctionLevelAstParallelizer(node0, false);
    List<Node> list0 = astParallelizer0.split();
    Node node1 = NodeUtil.newFunctionNode(""this."", list0, node0, 48, 4);
    NodeUtil.getFunctionJSDocInfo(node0);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test732853,"public void test732853() throws Throwable {
    Node node0 = new Node(2108);
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test733854,"public void test733854() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test734855,"public void test734855() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessExternProperties"", (-1342), (-1342));
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,
project,0,test734856,"public void test734856() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.AnalyzePrototypeProperties$ProcessExternProperties"", (-1342), (-1342));
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test735857,"public void test735857() throws Throwable {
    Node node0 = new Node(34);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETPROP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test736858,"public void test736858() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test737859,"public void test737859() throws Throwable {
    Node node0 = new Node(36);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETELEM
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test738860,"public void test738860() throws Throwable {
    Node node0 = new Node(42);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test739861,"public void test739861() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test740862,"public void test740862() throws Throwable {
    Node node0 = new Node(48, 48, 48);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeBINDNAME 48
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test741863,"public void test741863() throws Throwable {
    Node node0 = new Node(51);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test742864,"public void test742864() throws Throwable {
    Node node0 = new Node(53, 27591, 27591);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLOCAL_LOAD 27591
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test743865,"public void test743865() throws Throwable {
    Node node0 = new Node(54, 54, 54);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGETVAR 54
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test744866,"public void test744866() throws Throwable {
    Node node0 = new Node((byte) 57, 133, 133);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_KEYS 133
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test745867,"public void test745867() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test746868,"public void test746868() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test747869,"public void test747869() throws Throwable {
    Node node0 = new Node(65);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGET_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test748870,"public void test748870() throws Throwable {
    Node node0 = new Node(67, 67, 67);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEL_REF 67
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test749871,"public void test749871() throws Throwable {
    Node node0 = new Node(73);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_MEMBER
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test750872,"public void test750872() throws Throwable {
    Node node0 = new Node(74, 74, 74);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_MEMBER 74
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test751873,"public void test751873() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSEMI 78
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test752874,"public void test752874() throws Throwable {
    Node node0 = new Node(81);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test753875,"public void test753875() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test754876,"public void test754876() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test755877,"public void test755877() throws Throwable {
    Node node0 = new Node(87);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test756878,"public void test756878() throws Throwable {
    Node node0 = new Node(88);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test757879,"public void test757879() throws Throwable {
    Node node0 = new Node(89);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test758880,"public void test758880() throws Throwable {
    Node node0 = Node.newString(90, ""test"", 109, 109);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test759881,"public void test759881() throws Throwable {
    Node node0 = new Node(91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test760882,"public void test760882() throws Throwable {
    Node node0 = Node.newString(93, ""3EF|WB+c#<&"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test761883,"public void test761883() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test762884,"public void test762884() throws Throwable {
    Node node0 = new Node(95, 95, 425);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test763885,"public void test763885() throws Throwable {
    Node node0 = new Node(96, 74, 96);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test764886,"public void test764886() throws Throwable {
    Node node0 = new Node(97);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test765887,"public void test765887() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test766888,"public void test766888() throws Throwable {
    Node node0 = new Node(99);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCOLON
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test767889,"public void test767889() throws Throwable {
    Node node0 = new Node(101, 118, 1227);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test768890,"public void test768890() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test769891,"public void test769891() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test770892,"public void test770892() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test771893,"public void test771893() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    Node node1 = new Node(47);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test772894,"public void test772894() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test772895,"public void test772895() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""\naent:"", 803, 803);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertEquals(3289891, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test773896,"public void test773896() throws Throwable {
    Node node0 = Node.newNumber(8233.0);
    Node node1 = new Node(41);
    Node[] nodeArray0 = new Node[1];
    nodeArray0[0] = node1;
    Node node2 = NodeUtil.newCallNode(node0, nodeArray0);
    Node node3 = NodeUtil.getArgumentForCallOrNew(node2, 12);
    assertNull(node3);
}",0,
project,0,test773897,"public void test773897() throws Throwable {
    Node node0 = Node.newNumber(8233.0);
    Node node1 = new Node(41);
    Node[] nodeArray0 = new Node[1];
    nodeArray0[0] = node1;
    Node node2 = NodeUtil.newCallNode(node0, nodeArray0);
    Node node3 = NodeUtil.getArgumentForCallOrNew(node2, 12);
    assertEquals(2, node2.getChildCount());
}",0,"assertEquals(1, node2.getChildCount())"
project,0,test773898,"public void test773898() throws Throwable {
    Node node0 = Node.newNumber(8233.0);
    Node node1 = new Node(41);
    Node[] nodeArray0 = new Node[1];
    nodeArray0[0] = node1;
    Node node2 = NodeUtil.newCallNode(node0, nodeArray0);
    Node node3 = NodeUtil.getArgumentForCallOrNew(node2, 12);
    assertTrue(node2.hasMoreThanOneChild());
}",0,assertTrue(node2.hasMoreThanOneChild())
