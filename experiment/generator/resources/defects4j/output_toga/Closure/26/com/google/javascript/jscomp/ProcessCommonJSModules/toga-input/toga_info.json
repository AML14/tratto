{
  "test1010" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"function JSCompiler_returnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\");\n    ProcessCommonJSModules processCommonJSModules0 = new ProcessCommonJSModules(compiler0, \"function JSCompiler_returnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\");\n    processCommonJSModules0.process(node0, node0);\n}",
    "testName" : "test1010"
  },
  "test011" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"module.exports\", \"module.exports\");\n    ProcessCommonJSModules processCommonJSModules0 = new ProcessCommonJSModules(compiler0, \"module.exports\", false);\n    processCommonJSModules0.process(node0, node0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public static String toModuleName(String requiredFilename, String currentFilename)",
    "methodName" : "toModuleName",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    String string0 = ProcessCommonJSModules.toModuleName(\"./=N,G7,fms85P\", \"./=N,G7,fms85P\");\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public static String toModuleName(String requiredFilename, String currentFilename)",
    "methodName" : "toModuleName",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    String string0 = ProcessCommonJSModules.toModuleName(\"ua[do-\", \"ua[do-\");\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"goog.ikArray\");\n    ProcessCommonJSModules processCommonJSModules0 = new ProcessCommonJSModules(compiler0, \"goog.ikArray\");\n    Node node1 = Normalize.parseAndNormalizeSyntheticCode(compiler0, \"goog.ikArray\", \"./\");\n    node0.addChildToBack(node1);\n    processCommonJSModules0.process(node0, node0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"7jbqGnDKib\\\".\");\n    ProcessCommonJSModules processCommonJSModules0 = new ProcessCommonJSModules(compiler0, \"7jbqGnDKib\\\".\");\n    processCommonJSModules0.process(node0, node0);\n    SourceFile sourceFile0 = new SourceFile(\"./\");\n    node0.setStaticSourceFile(sourceFile0);\n    processCommonJSModules0.process(node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test099"
  },
  "test000" : {
    "methodSignature" : "JSModule getModule()",
    "methodName" : "getModule",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    ProcessCommonJSModules processCommonJSModules0 = new ProcessCommonJSModules((AbstractCompiler) null, \"opt_arg\");\n    JSModule jSModule0 = processCommonJSModules0.getModule();\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "String guessCJSModuleName(String filename)",
    "methodName" : "guessCJSModuleName",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ProcessCommonJSModules processCommonJSModules0 = new ProcessCommonJSModules(compiler0, \"4HXghP9/\");\n    String string0 = processCommonJSModules0.guessCJSModuleName(\"4HXghP9/\");\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public static String toModuleName(String requiredFilename, String currentFilename)",
    "methodName" : "toModuleName",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    ProcessCommonJSModules.toModuleName(\"../OOZl>0.d{M$U-JzMHt\", \"../OOZl>0.d{M$U-JzMHt\");\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ProcessCommonJSModules processCommonJSModules0 = new ProcessCommonJSModules(compiler0, \"A{mp71fOa,b\");\n    Node node0 = Node.newString(37, \"A{mp71fOa,b\");\n    processCommonJSModules0.process(node0, node0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.ProcessCommonJSModules",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"exports\");\n    ProcessCommonJSModules processCommonJSModules0 = new ProcessCommonJSModules(compiler0, \"exports\");\n    processCommonJSModules0.process(node0, node0);\n}",
    "testName" : "test088"
  }
}