{
  "test2323" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, (ReferenceCollectingCallback.Behavior) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, referenceCollectingCallback0);\n    Node node0 = new Node(101);\n    referenceCollectingCallback0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public void hotSwapScript(Node scriptRoot, Node originalRoot)",
    "methodName" : "hotSwapScript",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);\n    Node node0 = new Node(4);\n    referenceCollectingCallback0.hotSwapScript(node0, node0);\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, (ReferenceCollectingCallback.Behavior) null);\n    Node node0 = new Node(119);\n    Node node1 = new Node(108);\n    referenceCollectingCallback0.visit((NodeTraversal) null, node0, node1);\n}",
    "testName" : "test2424"
  },
  "test2121" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);\n    Node node0 = new Node(77);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, referenceCollectingCallback0, (ScopeCreator) null);\n    referenceCollectingCallback0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test2121"
  },
  "test2222" : {
    "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
    "methodName" : "shouldTraverse",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;\n    Predicate<Scope.Var> predicate0 = (Predicate<Scope.Var>) mock(Predicate.class, new ViolatedAssumptionAnswer());\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0, predicate0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, referenceCollectingCallback0, syntacticScopeCreator0);\n    Node node0 = Node.newString(98, \"arguments\");\n    boolean boolean0 = referenceCollectingCallback0.shouldTraverse(nodeTraversal0, node0, node0);\n}",
    "testName" : "test2222"
  },
  "test011" : {
    "methodSignature" : "public String getIdName()",
    "methodName" : "getIdName",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    SyntheticAst syntheticAst0 = new SyntheticAst(\"H~NO3k)]2\");\n    CompilerInput compilerInput0 = new CompilerInput(syntheticAst0);\n    ReferenceCollectingCallback.Reference referenceCollectingCallback_Reference0 = ReferenceCollectingCallback.Reference.createRefForTest(compilerInput0);\n    InputId inputId0 = referenceCollectingCallback_Reference0.getInputId();\n    inputId0.getIdName();\n}",
    "testName" : "test011"
  },
  "test1616" : {
    "methodSignature" : "public ReferenceCollection getReferences(Var v)",
    "methodName" : "getReferences",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, (ReferenceCollectingCallback.Behavior) null);\n    ReferenceCollectingCallback.ReferenceCollection referenceCollectingCallback_ReferenceCollection0 = referenceCollectingCallback0.getReferences((Scope.Var) null);\n}",
    "testName" : "test1616"
  },
  "test2727" : {
    "methodSignature" : "public boolean isCatch()",
    "methodName" : "isCatch",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, (ReferenceCollectingCallback.Behavior) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, referenceCollectingCallback0);\n    Node node0 = new Node(74);\n    referenceCollectingCallback0.visit(nodeTraversal0, node0, node0);\n    node0.isCatch();\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);\n    referenceCollectingCallback0.process((Node) null, (Node) null);\n}",
    "testName" : "test1717"
  },
  "test1414" : {
    "methodSignature" : "public Scope getScope(Var var)",
    "methodName" : "getScope",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;\n    Predicate<Scope.Var> predicate0 = (Predicate<Scope.Var>) mock(Predicate.class, new ViolatedAssumptionAnswer());\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0, predicate0);\n    referenceCollectingCallback0.getScope((Scope.Var) null);\n}",
    "testName" : "test1414"
  },
  "test2525" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, (ReferenceCollectingCallback.Behavior) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, referenceCollectingCallback0);\n    Node node0 = Node.newString(113, \"\", 113, 113);\n    referenceCollectingCallback0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public Iterable<Var> getAllSymbols()",
    "methodName" : "getAllSymbols",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);\n    Iterable<Scope.Var> iterable0 = referenceCollectingCallback0.getAllSymbols();\n}",
    "testName" : "test1515"
  },
  "test2626" : {
    "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
    "methodName" : "shouldTraverse",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);\n    Node node0 = Node.newString(114, \":~]b\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, referenceCollectingCallback0);\n    boolean boolean0 = referenceCollectingCallback0.shouldTraverse(nodeTraversal0, node0, node0);\n}",
    "testName" : "test2626"
  },
  "test1919" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, (ReferenceCollectingCallback.Behavior) null);\n    Node node0 = new Node(119);\n    referenceCollectingCallback0.visit((NodeTraversal) null, node0, node0);\n}",
    "testName" : "test1919"
  },
  "test2020" : {
    "methodSignature" : "public boolean shouldTraverse(NodeTraversal nodeTraversal, Node n, Node parent)",
    "methodName" : "shouldTraverse",
    "className" : "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);\n    Node node0 = Node.newString(115, \":~]b\");\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, referenceCollectingCallback0);\n    boolean boolean0 = referenceCollectingCallback0.shouldTraverse(nodeTraversal0, node0, node0);\n}",
    "testName" : "test2020"
  }
}