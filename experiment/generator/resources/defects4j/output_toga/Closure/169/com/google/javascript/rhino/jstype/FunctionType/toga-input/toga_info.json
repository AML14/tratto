{
  "test0002" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0002() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    errorFunctionType0.setDict();\n    boolean boolean0 = errorFunctionType0.makesDicts();\n    errorFunctionType0.isInterface();\n}",
    "testName" : "test0002"
  },
  "test062115" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062115() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Unknown class name\");\n    FunctionType functionType0 = noResolvedType0.supAndInfHelper(errorFunctionType0, true);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test062115"
  },
  "test078141" : {
    "methodSignature" : "public final String toAnnotationString()",
    "methodName" : "toAnnotationString",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078141() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Not declared as a constructor\", (Node) null);\n    String string0 = functionType0.toAnnotationString();\n}",
    "testName" : "test078141"
  },
  "test0000" : {
    "methodSignature" : "public boolean makesDicts()",
    "methodName" : "makesDicts",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    errorFunctionType0.setDict();\n    boolean boolean0 = errorFunctionType0.makesDicts();\n}",
    "testName" : "test0000"
  },
  "test062116" : {
    "methodSignature" : "public boolean isOrdinaryFunction()",
    "methodName" : "isOrdinaryFunction",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test062116() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Unknown class name\");\n    FunctionType functionType0 = noResolvedType0.supAndInfHelper(errorFunctionType0, true);\n    functionType0.getTypesUnderShallowEquality(errorFunctionType0);\n    noResolvedType0.isOrdinaryFunction();\n}",
    "testName" : "test062116"
  },
  "test0001" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0001() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    errorFunctionType0.setDict();\n    boolean boolean0 = errorFunctionType0.makesDicts();\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test0001"
  },
  "test03364" : {
    "methodSignature" : "boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode)",
    "methodName" : "defineProperty",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03364() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"{) 6?A[rZdD\");\n    Node node0 = Node.newString(\"Not declared as a constructor\");\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    boolean boolean0 = errorFunctionType0.defineProperty(\"prototype\", noResolvedType0, false, node0);\n}",
    "testName" : "test03364"
  },
  "test04178" : {
    "methodSignature" : "public void setImplementedInterfaces(List<ObjectType> implementedInterfaces)",
    "methodName" : "setImplementedInterfaces",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04178() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.getBindReturnType(677);\n    ImmutableList<ObjectType> immutableList0 = ImmutableList.of((ObjectType) noResolvedType0, (ObjectType) functionType0, (ObjectType) noResolvedType0, (ObjectType) noResolvedType0, (ObjectType) functionType0, (ObjectType) functionType0, (ObjectType) functionType0);\n    functionType0.setImplementedInterfaces(immutableList0);\n}",
    "testName" : "test04178"
  },
  "test067125" : {
    "methodSignature" : "public ObjectType getTopMostDefiningType(String propertyName)",
    "methodName" : "getTopMostDefiningType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test067125() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    FunctionType functionType0 = noResolvedType0.supAndInfHelper(errorFunctionType0, false);\n    functionType0.getTopMostDefiningType(\"Not declared as a type name\");\n}",
    "testName" : "test067125"
  },
  "test089155" : {
    "methodSignature" : "public boolean isNominalType()",
    "methodName" : "isNominalType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089155() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;\n    ErrorFunctionType errorFunctionType0 = (ErrorFunctionType) jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    errorFunctionType0.makesDicts();\n    Node node0 = new Node(0);\n    errorFunctionType0.setPrototypeBasedOn((ObjectType) errorFunctionType0, node0);\n    errorFunctionType0.isNominalType();\n}",
    "testName" : "test089155"
  },
  "test02550" : {
    "methodSignature" : "public int getMinArguments()",
    "methodName" : "getMinArguments",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02550() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"<inRalid>\");\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) errorFunctionType0, (JSType) errorFunctionType0, (JSType) errorFunctionType0, (JSType) errorFunctionType0, (JSType) errorFunctionType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) errorFunctionType0, (List<JSType>) immutableList0);\n    int int0 = functionType0.getMinArguments();\n}",
    "testName" : "test02550"
  },
  "test03363" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03363() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"{) 6?A[rZdD\");\n    Node node0 = Node.newString(\"Not declared as a constructor\");\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    boolean boolean0 = errorFunctionType0.defineProperty(\"prototype\", noResolvedType0, false, node0);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test03363"
  },
  "test073134" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073134() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    FunctionType functionType0 = noResolvedType0.supAndInfHelper(errorFunctionType0, true);\n    String string0 = functionType0.toDebugHashCodeString();\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test073134"
  },
  "test073135" : {
    "methodSignature" : "public String toDebugHashCodeString()",
    "methodName" : "toDebugHashCodeString",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test073135() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    FunctionType functionType0 = noResolvedType0.supAndInfHelper(errorFunctionType0, true);\n    String string0 = functionType0.toDebugHashCodeString();\n}",
    "testName" : "test073135"
  },
  "test03874" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03874() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    InstanceObjectType instanceObjectType0 = new InstanceObjectType(jSTypeRegistry0, noResolvedType0);\n    ImmutableList<ObjectType> immutableList0 = ImmutableList.of((ObjectType) noResolvedType0, (ObjectType) instanceObjectType0, (ObjectType) instanceObjectType0, (ObjectType) noResolvedType0);\n    noResolvedType0.setImplementedInterfaces(immutableList0);\n    noResolvedType0.getAllImplementedInterfaces();\n    noResolvedType0.hasCachedValues();\n}",
    "testName" : "test03874"
  },
  "test02549" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02549() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"<inRalid>\");\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) errorFunctionType0, (JSType) errorFunctionType0, (JSType) errorFunctionType0, (JSType) errorFunctionType0, (JSType) errorFunctionType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) errorFunctionType0, (List<JSType>) immutableList0);\n    int int0 = functionType0.getMinArguments();\n    functionType0.isInterface();\n}",
    "testName" : "test02549"
  },
  "test01733" : {
    "methodSignature" : "static FunctionType forInterface(JSTypeRegistry registry, String name, Node source)",
    "methodName" : "forInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01733() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    Node node0 = new Node(105, 105, 105);\n    FunctionType.forInterface(jSTypeRegistry0, (String) null, node0);\n}",
    "testName" : "test01733"
  },
  "test095161" : {
    "methodSignature" : "public boolean isObject()",
    "methodName" : "isObject",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095161() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.ERROR_FUNCTION_TYPE;\n    ErrorFunctionType errorFunctionType0 = (ErrorFunctionType) jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    ErrorFunctionType errorFunctionType1 = (ErrorFunctionType) errorFunctionType0.resolveInternal(simpleErrorReporter0, (StaticScope<JSType>) null);\n    errorFunctionType1.isObject();\n}",
    "testName" : "test095161"
  },
  "test00923" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00923() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"\\u06DD\\u070F\\u1680\\u180E\", (Node) null);\n    NoType noType0 = new NoType(jSTypeRegistry0);\n    FunctionType functionType1 = functionType0.supAndInfHelper(noType0, false);\n    boolean boolean0 = functionType1.isSubtype(functionType0);\n    noType0.hasCachedValues();\n}",
    "testName" : "test00923"
  },
  "test00924" : {
    "methodSignature" : "public boolean isSubtype(JSType that)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00924() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"\\u06DD\\u070F\\u1680\\u180E\", (Node) null);\n    NoType noType0 = new NoType(jSTypeRegistry0);\n    FunctionType functionType1 = functionType0.supAndInfHelper(noType0, false);\n    boolean boolean0 = functionType1.isSubtype(functionType0);\n}",
    "testName" : "test00924"
  },
  "test090156" : {
    "methodSignature" : "public boolean isConstructor()",
    "methodName" : "isConstructor",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090156() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = FunctionType.forInterface(jSTypeRegistry0, \"BITNOT\", (Node) null);\n    functionType0.clearCachedValues();\n    functionType0.isConstructor();\n}",
    "testName" : "test090156"
  },
  "test0013" : {
    "methodSignature" : "public boolean makesStructs()",
    "methodName" : "makesStructs",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0013() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    noResolvedType0.setStruct();\n    boolean boolean0 = noResolvedType0.makesStructs();\n}",
    "testName" : "test0013"
  },
  "test0014" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0014() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    noResolvedType0.setStruct();\n    boolean boolean0 = noResolvedType0.makesStructs();\n    noResolvedType0.isInterface();\n}",
    "testName" : "test0014"
  },
  "test084150" : {
    "methodSignature" : "public boolean isNativeObjectType()",
    "methodName" : "isNativeObjectType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084150() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    ObjectType objectType0 = noObjectType0.getTypeOfThis();\n    objectType0.isNativeObjectType();\n}",
    "testName" : "test084150"
  },
  "test04684" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04684() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"call\");\n    errorFunctionType0.getPropertyType(\"call\");\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test04684"
  },
  "test064120" : {
    "methodSignature" : "public FunctionType getSuperClassConstructor()",
    "methodName" : "getSuperClassConstructor",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test064120() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.getBindReturnType(1);\n    functionType0.getSuperClassConstructor();\n}",
    "testName" : "test064120"
  },
  "test02141" : {
    "methodSignature" : "public boolean hasImplementedInterfaces()",
    "methodName" : "hasImplementedInterfaces",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02141() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ImmutableList<ObjectType> immutableList0 = ImmutableList.of((ObjectType) noResolvedType0);\n    noResolvedType0.setImplementedInterfaces(immutableList0);\n    boolean boolean0 = noResolvedType0.hasImplementedInterfaces();\n}",
    "testName" : "test02141"
  },
  "test05498" : {
    "methodSignature" : "FunctionType supAndInfHelper(FunctionType that, boolean leastSuper)",
    "methodName" : "supAndInfHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05498() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseVoidType();\n    ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;\n    FunctionType functionType1 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n}",
    "testName" : "test05498"
  },
  "test02140" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02140() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ImmutableList<ObjectType> immutableList0 = ImmutableList.of((ObjectType) noResolvedType0);\n    noResolvedType0.setImplementedInterfaces(immutableList0);\n    boolean boolean0 = noResolvedType0.hasImplementedInterfaces();\n    noResolvedType0.isInterface();\n}",
    "testName" : "test02140"
  },
  "test100167" : {
    "methodSignature" : "public boolean hasAnyTemplateInternal()",
    "methodName" : "hasAnyTemplateInternal",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100167() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    TemplateType templateType0 = new TemplateType(jSTypeRegistry0, \"ZJ5CD+2z =icYk\");\n    JSType[] jSTypeArray0 = new JSType[5];\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) templateType0, jSTypeArray0);\n    boolean boolean0 = functionType0.hasAnyTemplateInternal();\n}",
    "testName" : "test100167"
  },
  "test05497" : {
    "methodSignature" : "public boolean isOrdinaryFunction()",
    "methodName" : "isOrdinaryFunction",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05497() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseVoidType();\n    ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;\n    FunctionType functionType1 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n    functionType1.isOrdinaryFunction();\n}",
    "testName" : "test05497"
  },
  "test00510" : {
    "methodSignature" : "public boolean isOrdinaryFunction()",
    "methodName" : "isOrdinaryFunction",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00510() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n    functionType1.isOrdinaryFunction();\n}",
    "testName" : "test00510"
  },
  "test00511" : {
    "methodSignature" : "FunctionType supAndInfHelper(FunctionType that, boolean leastSuper)",
    "methodName" : "supAndInfHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00511() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n}",
    "testName" : "test00511"
  },
  "test076138" : {
    "methodSignature" : "String toStringHelper(boolean forAnnotations)",
    "methodName" : "toStringHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076138() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a type name\");\n    String string0 = errorFunctionType0.toStringHelper(true);\n}",
    "testName" : "test076138"
  },
  "test00514" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00514() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n    functionType2.isReturnTypeInferred();\n}",
    "testName" : "test00514"
  },
  "test01328" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01328() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    NoType noType0 = new NoType(jSTypeRegistry0);\n    noType0.getSubTypes();\n    noType0.isInterface();\n}",
    "testName" : "test01328"
  },
  "test00512" : {
    "methodSignature" : "public boolean equals(Object jsType)",
    "methodName" : "equals",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00512() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n    functionType2.equals((Object) functionType1);\n}",
    "testName" : "test00512"
  },
  "test00513" : {
    "methodSignature" : "public boolean hasInstanceType()",
    "methodName" : "hasInstanceType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00513() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n    functionType1.hasInstanceType();\n}",
    "testName" : "test00513"
  },
  "test056103" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056103() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    HashMap<String, RecordTypeBuilder.RecordProperty> hashMap0 = new HashMap<String, RecordTypeBuilder.RecordProperty>();\n    RecordType recordType0 = jSTypeRegistry0.createRecordType(hashMap0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) recordType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType0.supAndInfHelper(functionType1, false);\n    recordType0.hasCachedValues();\n}",
    "testName" : "test056103"
  },
  "test056104" : {
    "methodSignature" : "FunctionType supAndInfHelper(FunctionType that, boolean leastSuper)",
    "methodName" : "supAndInfHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056104() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    HashMap<String, RecordTypeBuilder.RecordProperty> hashMap0 = new HashMap<String, RecordTypeBuilder.RecordProperty>();\n    RecordType recordType0 = jSTypeRegistry0.createRecordType(hashMap0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) recordType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType0.supAndInfHelper(functionType1, false);\n}",
    "testName" : "test056104"
  },
  "test060111" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test060111() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    FunctionType functionType0 = errorFunctionType0.supAndInfHelper(noResolvedType0, true);\n    noResolvedType0.supAndInfHelper(functionType0, true);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test060111"
  },
  "test0025" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0025() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    ParameterizedType parameterizedType0 = jSTypeRegistry0.createParameterizedType(noResolvedType0, errorFunctionType0);\n    modificationVisitor0.caseParameterizedType(parameterizedType0);\n    errorFunctionType0.isInterface();\n}",
    "testName" : "test0025"
  },
  "test0026" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0026() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    ParameterizedType parameterizedType0 = jSTypeRegistry0.createParameterizedType(noResolvedType0, errorFunctionType0);\n    modificationVisitor0.caseParameterizedType(parameterizedType0);\n    noResolvedType0.isInterface();\n}",
    "testName" : "test0026"
  },
  "test060112" : {
    "methodSignature" : "public boolean isOrdinaryFunction()",
    "methodName" : "isOrdinaryFunction",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test060112() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    FunctionType functionType0 = errorFunctionType0.supAndInfHelper(noResolvedType0, true);\n    noResolvedType0.supAndInfHelper(functionType0, true);\n    noResolvedType0.isOrdinaryFunction();\n}",
    "testName" : "test060112"
  },
  "test065121" : {
    "methodSignature" : "public static ObjectType getTopDefiningInterface(ObjectType type, String propertyName)",
    "methodName" : "getTopDefiningInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test065121() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"bind\");\n    ObjectType objectType0 = FunctionType.getTopDefiningInterface(errorFunctionType0, \"Named type with empty name component\");\n}",
    "testName" : "test065121"
  },
  "test03465" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03465() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    IndexedType indexedType0 = new IndexedType(jSTypeRegistry0, noResolvedType0, noResolvedType0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Not declared as a type name\", (Node) null);\n    functionType0.setPrototypeBasedOn((ObjectType) indexedType0, (Node) null);\n    functionType0.isInterface();\n}",
    "testName" : "test03465"
  },
  "test04279" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04279() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    noResolvedType0.getAllExtendedInterfaces();\n    noResolvedType0.isInterface();\n}",
    "testName" : "test04279"
  },
  "test03466" : {
    "methodSignature" : "public boolean isConstructor()",
    "methodName" : "isConstructor",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03466() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    IndexedType indexedType0 = new IndexedType(jSTypeRegistry0, noResolvedType0, noResolvedType0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Not declared as a type name\", (Node) null);\n    functionType0.setPrototypeBasedOn((ObjectType) indexedType0, (Node) null);\n    functionType0.isConstructor();\n}",
    "testName" : "test03466"
  },
  "test02652" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02652() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    int int0 = noResolvedType0.getMinArguments();\n    noResolvedType0.isInterface();\n}",
    "testName" : "test02652"
  },
  "test05088" : {
    "methodSignature" : "boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode)",
    "methodName" : "defineProperty",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05088() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NumberType numberType0 = new NumberType(jSTypeRegistry0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) numberType0, (Node) null);\n    boolean boolean0 = functionType0.defineProperty(\"prototype\", numberType0, true, (Node) null);\n}",
    "testName" : "test05088"
  },
  "test02651" : {
    "methodSignature" : "public int getMinArguments()",
    "methodName" : "getMinArguments",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02651() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    int int0 = noResolvedType0.getMinArguments();\n}",
    "testName" : "test02651"
  },
  "test05089" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05089() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NumberType numberType0 = new NumberType(jSTypeRegistry0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) numberType0, (Node) null);\n    boolean boolean0 = functionType0.defineProperty(\"prototype\", numberType0, true, (Node) null);\n    functionType0.isInterface();\n}",
    "testName" : "test05089"
  },
  "test075137" : {
    "methodSignature" : "String toStringHelper(boolean forAnnotations)",
    "methodName" : "toStringHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test075137() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"STRUCT\");\n    errorFunctionType0.setPrettyPrint(false);\n    String string0 = errorFunctionType0.toStringHelper(false);\n}",
    "testName" : "test075137"
  },
  "test01835" : {
    "methodSignature" : "public boolean makesStructs()",
    "methodName" : "makesStructs",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01835() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.getBindReturnType(1);\n    boolean boolean0 = functionType0.makesStructs();\n}",
    "testName" : "test01835"
  },
  "test097163" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097163() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    FunctionType functionType0 = noResolvedType0.supAndInfHelper(errorFunctionType0, false);\n    String string0 = functionType0.toDebugHashCodeString();\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test097163"
  },
  "test01834" : {
    "methodSignature" : "public boolean hasInstanceType()",
    "methodName" : "hasInstanceType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01834() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.getBindReturnType(1);\n    boolean boolean0 = functionType0.makesStructs();\n    functionType0.hasInstanceType();\n}",
    "testName" : "test01834"
  },
  "test097164" : {
    "methodSignature" : "public String toDebugHashCodeString()",
    "methodName" : "toDebugHashCodeString",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097164() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    FunctionType functionType0 = noResolvedType0.supAndInfHelper(errorFunctionType0, false);\n    String string0 = functionType0.toDebugHashCodeString();\n}",
    "testName" : "test097164"
  },
  "test03975" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03975() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"G}~ft9,r\", (Node) null);\n    functionType0.getAllImplementedInterfaces();\n    functionType0.hasCachedValues();\n}",
    "testName" : "test03975"
  },
  "test03976" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03976() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"G}~ft9,r\", (Node) null);\n    functionType0.getAllImplementedInterfaces();\n    functionType0.isInterface();\n}",
    "testName" : "test03976"
  },
  "test057105" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057105() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    HashMap<String, RecordTypeBuilder.RecordProperty> hashMap0 = new HashMap<String, RecordTypeBuilder.RecordProperty>();\n    RecordType recordType0 = jSTypeRegistry0.createRecordType(hashMap0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) recordType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType0.supAndInfHelper(functionType1, true);\n    recordType0.hasCachedValues();\n}",
    "testName" : "test057105"
  },
  "test057106" : {
    "methodSignature" : "FunctionType supAndInfHelper(FunctionType that, boolean leastSuper)",
    "methodName" : "supAndInfHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057106() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    HashMap<String, RecordTypeBuilder.RecordProperty> hashMap0 = new HashMap<String, RecordTypeBuilder.RecordProperty>();\n    RecordType recordType0 = jSTypeRegistry0.createRecordType(hashMap0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0, (JSType) recordType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) recordType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType0.supAndInfHelper(functionType1, true);\n}",
    "testName" : "test057106"
  },
  "test092158" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092158() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    ObjectType objectType0 = noObjectType0.getTopMostDefiningType((String) null);\n    boolean boolean0 = objectType0.hasCachedValues();\n}",
    "testName" : "test092158"
  },
  "test04380" : {
    "methodSignature" : "public void setExtendedInterfaces(List<ObjectType> extendedInterfaces) throws UnsupportedOperationException",
    "methodName" : "setExtendedInterfaces",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04380() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    Vector<ObjectType> vector0 = new Vector<ObjectType>();\n    noResolvedType0.setExtendedInterfaces(vector0);\n}",
    "testName" : "test04380"
  },
  "test059110" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test059110() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    FunctionType functionType0 = errorFunctionType0.supAndInfHelper(noResolvedType0, true);\n    errorFunctionType0.supAndInfHelper(functionType0, false);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test059110"
  },
  "test0037" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0037() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"bind\");\n    FunctionType functionType0 = (FunctionType) errorFunctionType0.getPropertyType(\"bind\");\n    String string0 = functionType0.toStringHelper(false);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test0037"
  },
  "test0038" : {
    "methodSignature" : "String toStringHelper(boolean forAnnotations)",
    "methodName" : "toStringHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0038() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"bind\");\n    FunctionType functionType0 = (FunctionType) errorFunctionType0.getPropertyType(\"bind\");\n    String string0 = functionType0.toStringHelper(false);\n}",
    "testName" : "test0038"
  },
  "test05190" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05190() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.getBindReturnType(1);\n    FunctionType functionType1 = functionType0.supAndInfHelper(noResolvedType0, false);\n    functionType1.supAndInfHelper(functionType0, false);\n    functionType0.hasCachedValues();\n}",
    "testName" : "test05190"
  },
  "test070129" : {
    "methodSignature" : "public boolean isOrdinaryFunction()",
    "methodName" : "isOrdinaryFunction",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070129() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"G}~ft9,r\", (Node) null);\n    FunctionType functionType1 = FunctionType.forInterface(jSTypeRegistry0, \"U0#B?gY]C;{X%9]\", (Node) null);\n    FunctionType functionType2 = functionType0.supAndInfHelper(functionType1, true);\n    functionType1.isOrdinaryFunction();\n}",
    "testName" : "test070129"
  },
  "test05191" : {
    "methodSignature" : "FunctionType supAndInfHelper(FunctionType that, boolean leastSuper)",
    "methodName" : "supAndInfHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05191() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.getBindReturnType(1);\n    FunctionType functionType1 = functionType0.supAndInfHelper(noResolvedType0, false);\n    functionType1.supAndInfHelper(functionType0, false);\n}",
    "testName" : "test05191"
  },
  "test04785" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04785() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"apply\");\n    errorFunctionType0.getPropertyType(\"apply\");\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test04785"
  },
  "test086152" : {
    "methodSignature" : "public boolean isBooleanValueType()",
    "methodName" : "isBooleanValueType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086152() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    InstanceObjectType instanceObjectType0 = new InstanceObjectType(jSTypeRegistry0, noObjectType0, false);\n    JSType jSType0 = instanceObjectType0.getRestrictedTypeGivenToBooleanOutcome(false);\n    instanceObjectType0.getGreatestSubtype(jSType0);\n    Node node0 = new Node(0, (-528), (-2004603710));\n    noObjectType0.setSource(node0);\n    noObjectType0.isBooleanValueType();\n}",
    "testName" : "test086152"
  },
  "test03059" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03059() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"prototype\");\n    errorFunctionType0.getPropertyType(\"prototype\");\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test03059"
  },
  "test05599" : {
    "methodSignature" : "public boolean isOrdinaryFunction()",
    "methodName" : "isOrdinaryFunction",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05599() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseVoidType();\n    ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;\n    FunctionType functionType1 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, false);\n    functionType2.isOrdinaryFunction();\n}",
    "testName" : "test05599"
  },
  "test02244" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02244() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Not declared as a type name\", (Node) null);\n    boolean boolean0 = functionType0.hasImplementedInterfaces();\n    functionType0.hasCachedValues();\n}",
    "testName" : "test02244"
  },
  "test02243" : {
    "methodSignature" : "public boolean hasInstanceType()",
    "methodName" : "hasInstanceType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02243() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Not declared as a type name\", (Node) null);\n    boolean boolean0 = functionType0.hasImplementedInterfaces();\n    functionType0.hasInstanceType();\n}",
    "testName" : "test02243"
  },
  "test081145" : {
    "methodSignature" : "public boolean isConstructor()",
    "methodName" : "isConstructor",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081145() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"jaz\");\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Named type with empty name component\", (Node) null);\n    boolean boolean0 = functionType0.isSubtype(errorFunctionType0);\n    functionType0.isConstructor();\n}",
    "testName" : "test081145"
  },
  "test02242" : {
    "methodSignature" : "public boolean hasImplementedInterfaces()",
    "methodName" : "hasImplementedInterfaces",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02242() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Not declared as a type name\", (Node) null);\n    boolean boolean0 = functionType0.hasImplementedInterfaces();\n}",
    "testName" : "test02242"
  },
  "test081144" : {
    "methodSignature" : "public boolean isSubtype(JSType that)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081144() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"jaz\");\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Named type with empty name component\", (Node) null);\n    boolean boolean0 = functionType0.isSubtype(errorFunctionType0);\n}",
    "testName" : "test081144"
  },
  "test070130" : {
    "methodSignature" : "public boolean equals(Object jsType)",
    "methodName" : "equals",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070130() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"G}~ft9,r\", (Node) null);\n    FunctionType functionType1 = FunctionType.forInterface(jSTypeRegistry0, \"U0#B?gY]C;{X%9]\", (Node) null);\n    FunctionType functionType2 = functionType0.supAndInfHelper(functionType1, true);\n    functionType2.equals((Object) functionType1);\n}",
    "testName" : "test070130"
  },
  "test02754" : {
    "methodSignature" : "public int getMaxArguments()",
    "methodName" : "getMaxArguments",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02754() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    int int0 = noResolvedType0.getMaxArguments();\n}",
    "testName" : "test02754"
  },
  "test02753" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02753() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    int int0 = noResolvedType0.getMaxArguments();\n    noResolvedType0.isInterface();\n}",
    "testName" : "test02753"
  },
  "test01025" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01025() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    noObjectType0.getExtendedInterfacesCount();\n    noObjectType0.isInterface();\n}",
    "testName" : "test01025"
  },
  "test03567" : {
    "methodSignature" : "boolean setPrototype(ObjectType prototype, Node propertyNode)",
    "methodName" : "setPrototype",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03567() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    JSType[] jSTypeArray0 = new JSType[1];\n    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);\n    boolean boolean0 = noResolvedType0.setPrototype((ObjectType) null, node0);\n}",
    "testName" : "test03567"
  },
  "test03568" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03568() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    JSType[] jSTypeArray0 = new JSType[1];\n    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);\n    boolean boolean0 = noResolvedType0.setPrototype((ObjectType) null, node0);\n    noResolvedType0.isInterface();\n}",
    "testName" : "test03568"
  },
  "test094160" : {
    "methodSignature" : "public boolean isCheckedUnknownType()",
    "methodName" : "isCheckedUnknownType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094160() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, (String) null);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    NamedType namedType0 = new NamedType(jSTypeRegistry0, \"L7^Guai%p'YAm;\", \"com.google.javascript.rhino.jstype.IndexedType\", (-1394), Integer.MAX_VALUE);\n    ImmutableList<ObjectType> immutableList0 = ImmutableList.of((ObjectType) noObjectType0, (ObjectType) namedType0, (ObjectType) namedType0, (ObjectType) namedType0);\n    errorFunctionType0.setImplementedInterfaces(immutableList0);\n    JSType jSType0 = errorFunctionType0.resolve(simpleErrorReporter0, noObjectType0);\n    jSType0.isCheckedUnknownType();\n}",
    "testName" : "test094160"
  },
  "test00617" : {
    "methodSignature" : "public boolean hasInstanceType()",
    "methodName" : "hasInstanceType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00617() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    StringType stringType0 = new StringType(jSTypeRegistry0);\n    InstanceObjectType instanceObjectType0 = (InstanceObjectType) stringType0.autoboxesTo();\n    JSType[] jSTypeArray0 = new JSType[5];\n    jSTypeArray0[4] = (JSType) stringType0;\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) instanceObjectType0, jSTypeArray0);\n    functionType0.isReturnTypeInferred();\n    functionType0.hasInstanceType();\n}",
    "testName" : "test00617"
  },
  "test00618" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00618() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    StringType stringType0 = new StringType(jSTypeRegistry0);\n    InstanceObjectType instanceObjectType0 = (InstanceObjectType) stringType0.autoboxesTo();\n    JSType[] jSTypeArray0 = new JSType[5];\n    jSTypeArray0[4] = (JSType) stringType0;\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) instanceObjectType0, jSTypeArray0);\n    functionType0.isReturnTypeInferred();\n    instanceObjectType0.hasCachedValues();\n}",
    "testName" : "test00618"
  },
  "test00616" : {
    "methodSignature" : "public boolean isNativeObjectType()",
    "methodName" : "isNativeObjectType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00616() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    StringType stringType0 = new StringType(jSTypeRegistry0);\n    InstanceObjectType instanceObjectType0 = (InstanceObjectType) stringType0.autoboxesTo();\n    JSType[] jSTypeArray0 = new JSType[5];\n    jSTypeArray0[4] = (JSType) stringType0;\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) instanceObjectType0, jSTypeArray0);\n    functionType0.isReturnTypeInferred();\n    instanceObjectType0.isNativeObjectType();\n}",
    "testName" : "test00616"
  },
  "test01429" : {
    "methodSignature" : "public FunctionType createConstructorType(String name, Node source, Node parameters, JSType returnType)",
    "methodName" : "createConstructorType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01429() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) noObjectType0, (JSType) noObjectType0, (JSType) noObjectType0, (JSType) noObjectType0);\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);\n    jSTypeRegistry0.createConstructorType(\"Not declared as a constructor\", node0, node0, (JSType) noObjectType0);\n}",
    "testName" : "test01429"
  },
  "test070131" : {
    "methodSignature" : "public boolean isConstructor()",
    "methodName" : "isConstructor",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test070131() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"G}~ft9,r\", (Node) null);\n    FunctionType functionType1 = FunctionType.forInterface(jSTypeRegistry0, \"U0#B?gY]C;{X%9]\", (Node) null);\n    FunctionType functionType2 = functionType0.supAndInfHelper(functionType1, true);\n    functionType1.isConstructor();\n}",
    "testName" : "test070131"
  },
  "test03160" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03160() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    noResolvedType0.makesDicts();\n    noResolvedType0.getOwnPropertyNames();\n    noResolvedType0.hasCachedValues();\n}",
    "testName" : "test03160"
  },
  "test0049" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0049() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    noResolvedType0.hasEqualCallType(noResolvedType0);\n    noResolvedType0.isInterface();\n}",
    "testName" : "test0049"
  },
  "test085151" : {
    "methodSignature" : "public boolean matchesStringContext()",
    "methodName" : "matchesStringContext",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085151() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    noResolvedType0.setSource((Node) null);\n    noResolvedType0.matchesStringContext();\n}",
    "testName" : "test085151"
  },
  "test080143" : {
    "methodSignature" : "String toStringHelper(boolean forAnnotations)",
    "methodName" : "toStringHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080143() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionTypeWithVarArgs((JSType) voidType0, (List<JSType>) immutableList0);\n    String string0 = functionType0.toStringHelper(true);\n}",
    "testName" : "test080143"
  },
  "test00720" : {
    "methodSignature" : "public boolean isInstanceType()",
    "methodName" : "isInstanceType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00720() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    boolean boolean0 = errorFunctionType0.isInstanceType();\n}",
    "testName" : "test00720"
  },
  "test02346" : {
    "methodSignature" : "public boolean hasImplementedInterfaces()",
    "methodName" : "hasImplementedInterfaces",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02346() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"<inRalid>\");\n    boolean boolean0 = errorFunctionType0.hasImplementedInterfaces();\n}",
    "testName" : "test02346"
  },
  "test01531" : {
    "methodSignature" : "public final boolean isNominalConstructor()",
    "methodName" : "isNominalConstructor",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01531() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"T8~oa`lyga#I_[-l\\u0005\");\n    Node node0 = Node.newNumber((double) 1);\n    Node node1 = new Node(105, node0, node0, 36, 55);\n    FunctionType functionType0 = jSTypeRegistry0.createConstructorType(\"Unknown class name\", node1, node0, (JSType) errorFunctionType0);\n    functionType0.isNominalConstructor();\n}",
    "testName" : "test01531"
  },
  "test02345" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02345() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"<inRalid>\");\n    boolean boolean0 = errorFunctionType0.hasImplementedInterfaces();\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test02345"
  },
  "test077139" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077139() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a type name\");\n    NoResolvedType noResolvedType1 = (NoResolvedType) noResolvedType0.supAndInfHelper(errorFunctionType0, true);\n    String string0 = noResolvedType1.toStringHelper(true);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test077139"
  },
  "test04886" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04886() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.getBindReturnType((-1205374168));\n    functionType0.isInterface();\n}",
    "testName" : "test04886"
  },
  "test099166" : {
    "methodSignature" : "public boolean hasAnyTemplateInternal()",
    "methodName" : "hasAnyTemplateInternal",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099166() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);\n    HashMap<String, RecordTypeBuilder.RecordProperty> hashMap0 = new HashMap<String, RecordTypeBuilder.RecordProperty>();\n    RecordType recordType0 = new RecordType(jSTypeRegistry0, hashMap0, true);\n    ArrowType arrowType0 = new ArrowType(jSTypeRegistry0, (Node) null, recordType0, true);\n    ImmutableList<String> immutableList0 = ImmutableList.of(\"com.googe.common.base.Predicates$1\", \"Named type with empty name component\", \"ef :rD\");\n    FunctionType functionType0 = new FunctionType(jSTypeRegistry0, \",SbQzcT1f:31\", (Node) null, arrowType0, (ObjectType) null, immutableList0, false, false);\n    boolean boolean0 = functionType0.hasAnyTemplateInternal();\n}",
    "testName" : "test099166"
  },
  "test055102" : {
    "methodSignature" : "public final boolean isNominalConstructor()",
    "methodName" : "isNominalConstructor",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055102() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseVoidType();\n    ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;\n    FunctionType functionType1 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, false);\n    functionType2.isNominalConstructor();\n}",
    "testName" : "test055102"
  },
  "test01937" : {
    "methodSignature" : "public boolean makesStructs()",
    "methodName" : "makesStructs",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01937() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"jaz\");\n    boolean boolean0 = errorFunctionType0.makesStructs();\n}",
    "testName" : "test01937"
  },
  "test055101" : {
    "methodSignature" : "FunctionType supAndInfHelper(FunctionType that, boolean leastSuper)",
    "methodName" : "supAndInfHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055101() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseVoidType();\n    ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;\n    FunctionType functionType1 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, false);\n}",
    "testName" : "test055101"
  },
  "test01936" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01936() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"jaz\");\n    boolean boolean0 = errorFunctionType0.makesStructs();\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test01936"
  },
  "test055100" : {
    "methodSignature" : "public boolean equals(Object jsType)",
    "methodName" : "equals",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055100() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, false);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseVoidType();\n    ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.LEAST_FUNCTION_TYPE;\n    FunctionType functionType1 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, false);\n    functionType2.equals((Object) functionType0);\n}",
    "testName" : "test055100"
  },
  "test05293" : {
    "methodSignature" : "public boolean equals(Object jsType)",
    "methodName" : "equals",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05293() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseVoidType();\n    ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.U2U_FUNCTION_TYPE;\n    FunctionType functionType1 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n    functionType2.equals((Object) functionType0);\n}",
    "testName" : "test05293"
  },
  "test05292" : {
    "methodSignature" : "public boolean isOrdinaryFunction()",
    "methodName" : "isOrdinaryFunction",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05292() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseVoidType();\n    ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.U2U_FUNCTION_TYPE;\n    FunctionType functionType1 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n    functionType1.isOrdinaryFunction();\n}",
    "testName" : "test05292"
  },
  "test04481" : {
    "methodSignature" : "public void setExtendedInterfaces(List<ObjectType> extendedInterfaces) throws UnsupportedOperationException",
    "methodName" : "setExtendedInterfaces",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04481() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Unknown class name\", (Node) null);\n    functionType0.setExtendedInterfaces((List<ObjectType>) null);\n}",
    "testName" : "test04481"
  },
  "test05294" : {
    "methodSignature" : "public boolean hasInstanceType()",
    "methodName" : "hasInstanceType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05294() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseVoidType();\n    ImmutableList<JSType> immutableList0 = ImmutableList.of(jSType0, jSType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, (List<JSType>) immutableList0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.U2U_FUNCTION_TYPE;\n    FunctionType functionType1 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n    functionType1.hasInstanceType();\n}",
    "testName" : "test05294"
  },
  "test063119" : {
    "methodSignature" : "FunctionType supAndInfHelper(FunctionType that, boolean leastSuper)",
    "methodName" : "supAndInfHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test063119() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry1.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n}",
    "testName" : "test063119"
  },
  "test077140" : {
    "methodSignature" : "String toStringHelper(boolean forAnnotations)",
    "methodName" : "toStringHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077140() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a type name\");\n    NoResolvedType noResolvedType1 = (NoResolvedType) noResolvedType0.supAndInfHelper(errorFunctionType0, true);\n    String string0 = noResolvedType1.toStringHelper(true);\n}",
    "testName" : "test077140"
  },
  "test063117" : {
    "methodSignature" : "public boolean equals(Object jsType)",
    "methodName" : "equals",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test063117() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry1.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n    functionType2.equals((Object) functionType1);\n}",
    "testName" : "test063117"
  },
  "test063118" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test063118() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry1.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n    functionType2.isReturnTypeInferred();\n}",
    "testName" : "test063118"
  },
  "test068126" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068126() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    FunctionType functionType0 = noResolvedType0.supAndInfHelper(errorFunctionType0, true);\n    functionType0.getTopMostDefiningType(\"Not declared as a type name\");\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test068126"
  },
  "test068127" : {
    "methodSignature" : "public boolean isOrdinaryFunction()",
    "methodName" : "isOrdinaryFunction",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068127() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    FunctionType functionType0 = noResolvedType0.supAndInfHelper(errorFunctionType0, true);\n    functionType0.getTopMostDefiningType(\"Not declared as a type name\");\n    noResolvedType0.isOrdinaryFunction();\n}",
    "testName" : "test068127"
  },
  "test083148" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083148() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"bind\");\n    JSType jSType0 = errorFunctionType0.getPropertyType(\"bind\");\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test083148"
  },
  "test083149" : {
    "methodSignature" : "public boolean isSubtype(JSType that)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083149() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"bind\");\n    JSType jSType0 = errorFunctionType0.getPropertyType(\"bind\");\n    boolean boolean0 = jSType0.isSubtype(errorFunctionType0);\n}",
    "testName" : "test083149"
  },
  "test088154" : {
    "methodSignature" : "public boolean isScript()",
    "methodName" : "isScript",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088154() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    InstanceObjectType instanceObjectType0 = new InstanceObjectType(jSTypeRegistry0, noObjectType0, false);\n    JSType jSType0 = instanceObjectType0.getRestrictedTypeGivenToBooleanOutcome(false);\n    UnknownType unknownType0 = (UnknownType) instanceObjectType0.getGreatestSubtype(jSType0);\n    Node node0 = new Node(0, (-528), (-2004603710));\n    noObjectType0.setPrototypeBasedOn((ObjectType) unknownType0, node0);\n    noObjectType0.setSource(node0);\n    node0.isScript();\n}",
    "testName" : "test088154"
  },
  "test01530" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01530() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"T8~oa`lyga#I_[-l\\u0005\");\n    Node node0 = Node.newNumber((double) 1);\n    Node node1 = new Node(105, node0, node0, 36, 55);\n    FunctionType functionType0 = jSTypeRegistry0.createConstructorType(\"Unknown class name\", node1, node0, (JSType) errorFunctionType0);\n    functionType0.isInterface();\n}",
    "testName" : "test01530"
  },
  "test03670" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03670() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.cloneWithoutArrowType();\n    functionType0.isInterface();\n}",
    "testName" : "test03670"
  },
  "test03671" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03671() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.cloneWithoutArrowType();\n    functionType0.hasCachedValues();\n}",
    "testName" : "test03671"
  },
  "test03669" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03669() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.cloneWithoutArrowType();\n    noResolvedType0.hasCachedValues();\n}",
    "testName" : "test03669"
  },
  "test072133" : {
    "methodSignature" : "FunctionType supAndInfHelper(FunctionType that, boolean leastSuper)",
    "methodName" : "supAndInfHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test072133() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null, true);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, true);\n}",
    "testName" : "test072133"
  },
  "test01126" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01126() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoType noType0 = new NoType(jSTypeRegistry0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionTypeWithNewReturnType(noType0, noType0);\n    functionType0.isInterface();\n}",
    "testName" : "test01126"
  },
  "test096162" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096162() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    errorFunctionType0.toDebugHashCodeString();\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test096162"
  },
  "test02856" : {
    "methodSignature" : "public boolean hasInstanceType()",
    "methodName" : "hasInstanceType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02856() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseBooleanType();\n    JSType[] jSTypeArray0 = new JSType[0];\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, jSTypeArray0);\n    int int0 = functionType0.getMaxArguments();\n    functionType0.hasInstanceType();\n}",
    "testName" : "test02856"
  },
  "test02855" : {
    "methodSignature" : "public int getMaxArguments()",
    "methodName" : "getMaxArguments",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02855() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);\n    JSType jSType0 = modificationVisitor0.caseBooleanType();\n    JSType[] jSTypeArray0 = new JSType[0];\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType(jSType0, jSTypeArray0);\n    int int0 = functionType0.getMaxArguments();\n}",
    "testName" : "test02855"
  },
  "test091157" : {
    "methodSignature" : "void setPrototypeBasedOn(ObjectType baseType, Node propertyNode)",
    "methodName" : "setPrototypeBasedOn",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091157() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.getBindReturnType(1);\n    FunctionType functionType1 = (FunctionType) functionType0.resolveInternal((ErrorReporter) null, noResolvedType0);\n    InstanceObjectType instanceObjectType0 = new InstanceObjectType(jSTypeRegistry0, functionType1, false);\n    instanceObjectType0.getPropertyNode(\"Not declared as a type name\");\n    functionType1.setPrototypeBasedOn((ObjectType) functionType0, (Node) null);\n}",
    "testName" : "test091157"
  },
  "test00719" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00719() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    boolean boolean0 = errorFunctionType0.isInstanceType();\n    errorFunctionType0.isInterface();\n}",
    "testName" : "test00719"
  },
  "test082147" : {
    "methodSignature" : "public boolean equals(Object jsType)",
    "methodName" : "equals",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082147() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Qz'B%@L6e<^I\");\n    ErrorFunctionType errorFunctionType1 = new ErrorFunctionType(jSTypeRegistry0, \"Qz'B%@L6e<^I\");\n    boolean boolean0 = errorFunctionType0.isSubtype(errorFunctionType1);\n    errorFunctionType1.equals((Object) errorFunctionType0);\n}",
    "testName" : "test082147"
  },
  "test087153" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087153() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    noResolvedType0.getAllImplementedInterfaces();\n    noResolvedType0.setSource((Node) null);\n    noResolvedType0.hasCachedValues();\n}",
    "testName" : "test087153"
  },
  "test069128" : {
    "methodSignature" : "public boolean isSubtype(JSType that)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test069128() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"i\");\n    ProxyObjectType proxyObjectType0 = new ProxyObjectType(jSTypeRegistry0, errorFunctionType0);\n    boolean boolean0 = errorFunctionType0.isSubtype(proxyObjectType0);\n}",
    "testName" : "test069128"
  },
  "test03262" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03262() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    Set<String> set0 = noResolvedType0.getOwnPropertyNames();\n    noResolvedType0.isInterface();\n}",
    "testName" : "test03262"
  },
  "test082146" : {
    "methodSignature" : "public boolean isSubtype(JSType that)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082146() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Qz'B%@L6e<^I\");\n    ErrorFunctionType errorFunctionType1 = new ErrorFunctionType(jSTypeRegistry0, \"Qz'B%@L6e<^I\");\n    boolean boolean0 = errorFunctionType0.isSubtype(errorFunctionType1);\n}",
    "testName" : "test082146"
  },
  "test04077" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04077() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"7 }FmY:i-Iix~1Q\");\n    errorFunctionType0.getAllImplementedInterfaces();\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test04077"
  },
  "test02447" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02447() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    int int0 = errorFunctionType0.getMinArguments();\n    errorFunctionType0.isInterface();\n}",
    "testName" : "test02447"
  },
  "test01632" : {
    "methodSignature" : "public FunctionType createInterfaceType(String name, Node source)",
    "methodName" : "createInterfaceType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01632() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    Node node0 = Node.newNumber((double) 0);\n    jSTypeRegistry0.createInterfaceType(\"Not declared as a type name\", node0);\n}",
    "testName" : "test01632"
  },
  "test00822" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00822() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    IndexedType indexedType0 = new IndexedType(jSTypeRegistry0, noResolvedType0, noResolvedType0);\n    boolean boolean0 = indexedType0.canBeCalled();\n    indexedType0.isInterface();\n}",
    "testName" : "test00822"
  },
  "test04987" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04987() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Unknown class name\");\n    FunctionType functionType0 = errorFunctionType0.getBindReturnType(1685);\n    functionType0.isInterface();\n}",
    "testName" : "test04987"
  },
  "test00821" : {
    "methodSignature" : "public boolean canBeCalled()",
    "methodName" : "canBeCalled",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00821() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    IndexedType indexedType0 = new IndexedType(jSTypeRegistry0, noResolvedType0, noResolvedType0);\n    boolean boolean0 = indexedType0.canBeCalled();\n}",
    "testName" : "test00821"
  },
  "test02448" : {
    "methodSignature" : "public int getMinArguments()",
    "methodName" : "getMinArguments",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02448() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    int int0 = errorFunctionType0.getMinArguments();\n}",
    "testName" : "test02448"
  },
  "test071132" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test071132() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"lR` nmVLW\");\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Named type with empty name component\", (Node) null);\n    functionType0.supAndInfHelper(errorFunctionType0, true);\n    functionType0.hasCachedValues();\n}",
    "testName" : "test071132"
  },
  "test061114" : {
    "methodSignature" : "public boolean isOrdinaryFunction()",
    "methodName" : "isOrdinaryFunction",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test061114() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    NoResolvedType noResolvedType1 = (NoResolvedType) noResolvedType0.supAndInfHelper(errorFunctionType0, true);\n    noResolvedType1.supAndInfHelper(noResolvedType0, true);\n    noResolvedType0.isOrdinaryFunction();\n}",
    "testName" : "test061114"
  },
  "test061113" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test061113() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    NoResolvedType noResolvedType1 = (NoResolvedType) noResolvedType0.supAndInfHelper(errorFunctionType0, true);\n    noResolvedType1.supAndInfHelper(noResolvedType0, true);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test061113"
  },
  "test079142" : {
    "methodSignature" : "String toStringHelper(boolean forAnnotations)",
    "methodName" : "toStringHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079142() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = noResolvedType0.getBindReturnType(0);\n    String string0 = functionType0.toStringHelper(false);\n}",
    "testName" : "test079142"
  },
  "test066122" : {
    "methodSignature" : "public boolean hasInstanceType()",
    "methodName" : "hasInstanceType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066122() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Unknown class name\", (Node) null);\n    functionType0.setInstanceType(noResolvedType0);\n    functionType0.hasInstanceType();\n}",
    "testName" : "test066122"
  },
  "test03772" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03772() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"{) 6?A[rZdD\");\n    Node node0 = Node.newString(\"Not declared as a constructor\");\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    errorFunctionType0.resolveInternal(simpleErrorReporter0, noResolvedType0);\n    boolean boolean0 = errorFunctionType0.defineProperty(\"prototype\", noResolvedType0, false, node0);\n    noResolvedType0.hasCachedValues();\n}",
    "testName" : "test03772"
  },
  "test03773" : {
    "methodSignature" : "boolean defineProperty(String name, JSType type, boolean inferred, Node propertyNode)",
    "methodName" : "defineProperty",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03773() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"{) 6?A[rZdD\");\n    Node node0 = Node.newString(\"Not declared as a constructor\");\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    errorFunctionType0.resolveInternal(simpleErrorReporter0, noResolvedType0);\n    boolean boolean0 = errorFunctionType0.defineProperty(\"prototype\", noResolvedType0, false, node0);\n}",
    "testName" : "test03773"
  },
  "test05396" : {
    "methodSignature" : "public boolean equals(Object jsType)",
    "methodName" : "equals",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05396() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry1.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, false);\n    functionType2.equals((Object) functionType1);\n}",
    "testName" : "test05396"
  },
  "test04582" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04582() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"<inRalid>\");\n    errorFunctionType0.defineProperty(\"_`Y~<lc{\", errorFunctionType0, false, (Node) null);\n    JSType jSType0 = errorFunctionType0.getPropertyType(\"_`Y~<lc{\");\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test04582"
  },
  "test05395" : {
    "methodSignature" : "FunctionType supAndInfHelper(FunctionType that, boolean leastSuper)",
    "methodName" : "supAndInfHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05395() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    JSTypeRegistry jSTypeRegistry1 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry1.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, false);\n}",
    "testName" : "test05395"
  },
  "test04583" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04583() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"<inRalid>\");\n    errorFunctionType0.defineProperty(\"_`Y~<lc{\", errorFunctionType0, false, (Node) null);\n    JSType jSType0 = errorFunctionType0.getPropertyType(\"_`Y~<lc{\");\n    jSType0.isInterface();\n}",
    "testName" : "test04583"
  },
  "test066124" : {
    "methodSignature" : "public boolean isConstructor()",
    "methodName" : "isConstructor",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066124() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Unknown class name\", (Node) null);\n    functionType0.setInstanceType(noResolvedType0);\n    ObjectType objectType0 = functionType0.getTopMostDefiningType(\"Unknown class name\");\n    functionType0.isConstructor();\n}",
    "testName" : "test066124"
  },
  "test066123" : {
    "methodSignature" : "public ObjectType getTopMostDefiningType(String propertyName)",
    "methodName" : "getTopMostDefiningType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066123() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Unknown class name\", (Node) null);\n    functionType0.setInstanceType(noResolvedType0);\n    ObjectType objectType0 = functionType0.getTopMostDefiningType(\"Unknown class name\");\n}",
    "testName" : "test066123"
  },
  "test074136" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test074136() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    FunctionType functionType0 = jSTypeRegistry0.createInterfaceType(\"Not declared as a type name\", (Node) null);\n    functionType0.hashCode();\n}",
    "testName" : "test074136"
  },
  "test02039" : {
    "methodSignature" : "public boolean makesDicts()",
    "methodName" : "makesDicts",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02039() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);\n    HashMap<String, RecordTypeBuilder.RecordProperty> hashMap0 = new HashMap<String, RecordTypeBuilder.RecordProperty>();\n    RecordType recordType0 = new RecordType(jSTypeRegistry0, hashMap0, true);\n    ArrowType arrowType0 = new ArrowType(jSTypeRegistry0, (Node) null, recordType0, true);\n    ImmutableList<String> immutableList0 = ImmutableList.of(\"com.googe.common.base.Predicates$1\", \"Named type with empty name component\", \"ef :rD\");\n    FunctionType functionType0 = new FunctionType(jSTypeRegistry0, \",SbQzcT1f:31\", (Node) null, arrowType0, (ObjectType) null, immutableList0, false, false);\n    boolean boolean0 = functionType0.makesDicts();\n}",
    "testName" : "test02039"
  },
  "test02038" : {
    "methodSignature" : "public boolean hasInstanceType()",
    "methodName" : "hasInstanceType",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02038() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);\n    HashMap<String, RecordTypeBuilder.RecordProperty> hashMap0 = new HashMap<String, RecordTypeBuilder.RecordProperty>();\n    RecordType recordType0 = new RecordType(jSTypeRegistry0, hashMap0, true);\n    ArrowType arrowType0 = new ArrowType(jSTypeRegistry0, (Node) null, recordType0, true);\n    ImmutableList<String> immutableList0 = ImmutableList.of(\"com.googe.common.base.Predicates$1\", \"Named type with empty name component\", \"ef :rD\");\n    FunctionType functionType0 = new FunctionType(jSTypeRegistry0, \",SbQzcT1f:31\", (Node) null, arrowType0, (ObjectType) null, immutableList0, false, false);\n    boolean boolean0 = functionType0.makesDicts();\n    functionType0.hasInstanceType();\n}",
    "testName" : "test02038"
  },
  "test02957" : {
    "methodSignature" : "public int getMaxArguments()",
    "methodName" : "getMaxArguments",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02957() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"c7q%Ww(q{jWk<kB\");\n    int int0 = errorFunctionType0.getMaxArguments();\n}",
    "testName" : "test02957"
  },
  "test098165" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098165() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    JSType[] jSTypeArray0 = new JSType[0];\n    FunctionType functionType0 = jSTypeRegistry0.createConstructorType((JSType) noObjectType0, true, jSTypeArray0);\n    functionType0.toDebugHashCodeString();\n    functionType0.hasCachedValues();\n}",
    "testName" : "test098165"
  },
  "test01227" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01227() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    noResolvedType0.getOwnImplementedInterfaces();\n    noResolvedType0.isInterface();\n}",
    "testName" : "test01227"
  },
  "test058109" : {
    "methodSignature" : "public boolean isOrdinaryFunction()",
    "methodName" : "isOrdinaryFunction",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058109() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    ImmutableList<JSType> immutableList1 = ImmutableList.of((JSType) voidType0, (JSType) functionType0, (JSType) functionType0, (JSType) voidType0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList1);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, false);\n    functionType2.isOrdinaryFunction();\n}",
    "testName" : "test058109"
  },
  "test058107" : {
    "methodSignature" : "FunctionType supAndInfHelper(FunctionType that, boolean leastSuper)",
    "methodName" : "supAndInfHelper",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test058107() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    VoidType voidType0 = new VoidType(jSTypeRegistry0);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) voidType0, (JSType) voidType0);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) voidType0, (List<JSType>) immutableList0);\n    ImmutableList<JSType> immutableList1 = ImmutableList.of((JSType) voidType0, (JSType) functionType0, (JSType) functionType0, (JSType) voidType0);\n    FunctionType functionType1 = jSTypeRegistry0.createFunctionType((JSType) functionType0, (List<JSType>) immutableList1);\n    FunctionType functionType2 = functionType1.supAndInfHelper(functionType0, false);\n}",
    "testName" : "test058107"
  },
  "test093159" : {
    "methodSignature" : "final void setImplicitPrototype(ObjectType implicitPrototype)",
    "methodName" : "setImplicitPrototype",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093159() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    NoResolvedType noResolvedType0 = new NoResolvedType(jSTypeRegistry0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Not declared as a constructor\");\n    ErrorFunctionType errorFunctionType1 = (ErrorFunctionType) errorFunctionType0.supAndInfHelper(noResolvedType0, true);\n    errorFunctionType1.setImplicitPrototype(noResolvedType0);\n}",
    "testName" : "test093159"
  },
  "test02958" : {
    "methodSignature" : "public boolean isInterface()",
    "methodName" : "isInterface",
    "className" : "com.google.javascript.rhino.jstype.FunctionType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02958() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"c7q%Ww(q{jWk<kB\");\n    int int0 = errorFunctionType0.getMaxArguments();\n    errorFunctionType0.isInterface();\n}",
    "testName" : "test02958"
  }
}