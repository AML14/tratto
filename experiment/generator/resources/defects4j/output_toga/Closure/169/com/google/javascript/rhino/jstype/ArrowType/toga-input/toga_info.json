{
  "test1212" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.isSubtype(arrowType0);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test1212"
  },
  "test2423" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2423() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ArrowType arrowType1 = new ArrowType(jSTypeRegistry0, (Node) null, arrowType0, true);\n    arrowType1.hashCode();\n}",
    "testName" : "test2423"
  },
  "test3435" : {
    "methodSignature" : "public boolean hasAnyTemplateInternal()",
    "methodName" : "hasAnyTemplateInternal",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3435() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    Node node0 = new Node((-2257));\n    Node node1 = new Node(2, node0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType0.hasAnyTemplateInternal();\n}",
    "testName" : "test3435"
  },
  "test1213" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1213() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.isSubtype(arrowType0);\n}",
    "testName" : "test1213"
  },
  "test2524" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2524() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    Node node0 = new Node((-2257));\n    Node node1 = new Node(2, node0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node1);\n    arrowType0.hashCode();\n}",
    "testName" : "test2524"
  },
  "test1314" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1314() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    Node node0 = new Node((-5), (-5), (-5));\n    Node node1 = new Node(55, node0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType0.isSubtype(arrowType0);\n}",
    "testName" : "test1314"
  },
  "test1010" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    Node node0 = new Node(1, 1, 0);\n    Node node1 = new Node(52, node0, 52, 54);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType0.isSubtype(arrowType1);\n}",
    "testName" : "test1010"
  },
  "test3232" : {
    "methodSignature" : "public boolean hasAnyTemplateInternal()",
    "methodName" : "hasAnyTemplateInternal",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Node node0 = new Node((-285));\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TemplateType templateType0 = new TemplateType(jSTypeRegistry0, \"\");\n    ArrowType arrowType0 = new ArrowType(jSTypeRegistry0, node0, templateType0);\n    boolean boolean0 = arrowType0.hasAnyTemplateInternal();\n}",
    "testName" : "test3232"
  },
  "test1111" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) arrowType0, (JSType) arrowType0, (JSType) arrowType0);\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) immutableList0);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node0);\n    boolean boolean0 = arrowType0.isSubtype(arrowType1);\n}",
    "testName" : "test1111"
  },
  "test2322" : {
    "methodSignature" : "public int hashCode()",
    "methodName" : "hashCode",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2322() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    arrowType0.returnType = (JSType) null;\n    arrowType0.hashCode();\n}",
    "testName" : "test2322"
  },
  "test3334" : {
    "methodSignature" : "public boolean hasAnyTemplateInternal()",
    "methodName" : "hasAnyTemplateInternal",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3334() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    TemplateType templateType0 = new TemplateType(jSTypeRegistry0, \"Named type with empty name component\");\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) noObjectType0, (JSType) noObjectType0, (JSType) noObjectType0, (JSType) templateType0);\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    boolean boolean0 = arrowType0.hasAnyTemplateInternal();\n}",
    "testName" : "test3334"
  },
  "test3333" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    TemplateType templateType0 = new TemplateType(jSTypeRegistry0, \"Named type with empty name component\");\n    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) noObjectType0, (JSType) noObjectType0, (JSType) noObjectType0, (JSType) templateType0);\n    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    boolean boolean0 = arrowType0.hasAnyTemplateInternal();\n    noObjectType0.isReturnTypeInferred();\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public TypePair getTypesUnderShallowEquality(JSType that)",
    "methodName" : "getTypesUnderShallowEquality",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    JSType jSType0 = jSTypeRegistry0.createOptionalType(arrowType0);\n    arrowType0.getTypesUnderShallowEquality(jSType0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public String toString()",
    "methodName" : "toString",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    String string0 = arrowType0.toString();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    NoType noType0 = (NoType) arrowType0.getRestrictedTypeGivenToBooleanOutcome(false);\n    noType0.isReturnTypeInferred();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ArrowType arrowType1 = new ArrowType(jSTypeRegistry0, (Node) null, arrowType0);\n    boolean boolean0 = arrowType1.isSubtype(arrowType0);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    Node node0 = Node.newString(\"Unknown class name\");\n    Node node1 = new Node(52, node0, 52, 54);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType1.isSubtype(arrowType0);\n}",
    "testName" : "test099"
  },
  "test1517" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1517() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Unknown class name\");\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.isSubtype(arrowType1);\n}",
    "testName" : "test1517"
  },
  "test2827" : {
    "methodSignature" : "boolean hasUnknownParamsOrReturn()",
    "methodName" : "hasUnknownParamsOrReturn",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2827() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    Node node0 = new Node(1);\n    Node node1 = new Node(55, node0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n}",
    "testName" : "test2827"
  },
  "test1518" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1518() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Unknown class name\");\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.isSubtype(arrowType1);\n    errorFunctionType0.isReturnTypeInferred();\n}",
    "testName" : "test1518"
  },
  "test2928" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2928() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test2928"
  },
  "test1619" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1619() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    Node node0 = Node.newNumber(0.0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType1.isSubtype(arrowType0);\n}",
    "testName" : "test1619"
  },
  "test2625" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2625() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);\n    arrowType0.resolveInternal(simpleErrorReporter0, noObjectType0);\n    noObjectType0.isReturnTypeInferred();\n}",
    "testName" : "test2625"
  },
  "test1415" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1415() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"K[/8;=>\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    Node node0 = new Node(1, 1, 0);\n    Node node1 = new Node(1, node0, node0, node0);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType1.isSubtype(arrowType0);\n    errorFunctionType0.isReturnTypeInferred();\n}",
    "testName" : "test1415"
  },
  "test1416" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1416() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"K[/8;=>\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    Node node0 = new Node(1, 1, 0);\n    Node node1 = new Node(1, node0, node0, node0);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType1.isSubtype(arrowType0);\n}",
    "testName" : "test1416"
  },
  "test2726" : {
    "methodSignature" : "boolean hasUnknownParamsOrReturn()",
    "methodName" : "hasUnknownParamsOrReturn",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2726() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    Node node0 = Node.newString(304, \"NmWwShC&Q;x`{6$G\", 304, 304);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0, (JSType) null);\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n}",
    "testName" : "test2726"
  },
  "test3030" : {
    "methodSignature" : "boolean hasUnknownParamsOrReturn()",
    "methodName" : "hasUnknownParamsOrReturn",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n}",
    "testName" : "test3030"
  },
  "test3131" : {
    "methodSignature" : "boolean hasUnknownParamsOrReturn()",
    "methodName" : "hasUnknownParamsOrReturn",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    Node node0 = Node.newString(304, \"NmWwShC&Q;x`{6$G\", 304, 304);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0, (JSType) null);\n    arrowType0.returnType = null;\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n}",
    "testName" : "test3131"
  },
  "test1620" : {
    "methodSignature" : "public boolean hasCachedValues()",
    "methodName" : "hasCachedValues",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1620() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    Node node0 = Node.newNumber(0.0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType1.isSubtype(arrowType0);\n    errorFunctionType0.hasCachedValues();\n}",
    "testName" : "test1620"
  },
  "test1621" : {
    "methodSignature" : "public boolean isReturnTypeInferred()",
    "methodName" : "isReturnTypeInferred",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1621() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    Node node0 = Node.newNumber(0.0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"Named type with empty name component\");\n    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType1.isSubtype(arrowType0);\n    errorFunctionType0.isReturnTypeInferred();\n}",
    "testName" : "test1621"
  },
  "test000" : {
    "methodSignature" : "public final boolean canTestForEqualityWith(JSType that)",
    "methodName" : "canTestForEqualityWith",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, (String) null);\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    arrowType0.canTestForEqualityWith(errorFunctionType0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public JSType getLeastSupertype(JSType that)",
    "methodName" : "getLeastSupertype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"c^v LFVr%rlw#8w\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    arrowType0.getLeastSupertype(errorFunctionType0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public <T> T visit(Visitor<T> visitor)",
    "methodName" : "visit",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    arrowType0.visit((Visitor<BooleanType>) null);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);\n    boolean boolean0 = arrowType0.isSubtype(arrowType0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean isSubtype(JSType other)",
    "methodName" : "isSubtype",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    Node node0 = new Node((-2257));\n    Node node1 = new Node(2, node0, node0);\n    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);\n    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);\n    boolean boolean0 = arrowType1.isSubtype(arrowType0);\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "boolean hasUnknownParamsOrReturn()",
    "methodName" : "hasUnknownParamsOrReturn",
    "className" : "com.google.javascript.rhino.jstype.ArrowType",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, \"\");\n    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();\n    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();\n}",
    "testName" : "test2929"
  }
}