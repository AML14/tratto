com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test000() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, (String) null);
    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();
    arrowType0.canTestForEqualityWith(errorFunctionType0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test011() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);
    JSType jSType0 = jSTypeRegistry0.createOptionalType(arrowType0);
    arrowType0.getTypesUnderShallowEquality(jSType0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test033() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);
    String string0 = arrowType0.toString();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test055() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);
    NoType noType0 = (NoType) arrowType0.getRestrictedTypeGivenToBooleanOutcome(false);
    noType0.isReturnTypeInferred();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test1212() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, """");
    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();
    boolean boolean0 = arrowType0.isSubtype(arrowType0);
    errorFunctionType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test1415() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, ""K[/8;=>"");
    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();
    Node node0 = new Node(1, 1, 0);
    Node node1 = new Node(1, node0, node0, node0);
    ArrowType arrowType1 = jSTypeRegistry0.createArrowType(node1);
    boolean boolean0 = arrowType1.isSubtype(arrowType0);
    errorFunctionType0.isReturnTypeInferred();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test1518() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);
    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, ""Unknown class name"");
    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();
    boolean boolean0 = arrowType0.isSubtype(arrowType1);
    errorFunctionType0.isReturnTypeInferred();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test1620() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    Node node0 = Node.newNumber(0.0);
    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);
    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, ""Named type with empty name component"");
    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();
    boolean boolean0 = arrowType1.isSubtype(arrowType0);
    errorFunctionType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test1621() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    Node node0 = Node.newNumber(0.0);
    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);
    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, ""Named type with empty name component"");
    ArrowType arrowType1 = errorFunctionType0.getInternalArrowType();
    boolean boolean0 = arrowType1.isSubtype(arrowType0);
    errorFunctionType0.isReturnTypeInferred();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test2625() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ArrowType arrowType0 = jSTypeRegistry0.createArrowType((Node) null);
    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);
    arrowType0.resolveInternal(simpleErrorReporter0, noObjectType0);
    noObjectType0.isReturnTypeInferred();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test2928() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ErrorFunctionType errorFunctionType0 = new ErrorFunctionType(jSTypeRegistry0, """");
    ArrowType arrowType0 = errorFunctionType0.getInternalArrowType();
    boolean boolean0 = arrowType0.hasUnknownParamsOrReturn();
    errorFunctionType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.rhino.jstype.ArrowType,@Test(timeout = 4000)
public void test3333() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    NoObjectType noObjectType0 = new NoObjectType(jSTypeRegistry0);
    TemplateType templateType0 = new TemplateType(jSTypeRegistry0, ""Named type with empty name component"");
    ImmutableList<JSType> immutableList0 = ImmutableList.of((JSType) noObjectType0, (JSType) noObjectType0, (JSType) noObjectType0, (JSType) templateType0);
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) immutableList0);
    ArrowType arrowType0 = jSTypeRegistry0.createArrowType(node0);
    boolean boolean0 = arrowType0.hasAnyTemplateInternal();
    noObjectType0.isReturnTypeInferred();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
