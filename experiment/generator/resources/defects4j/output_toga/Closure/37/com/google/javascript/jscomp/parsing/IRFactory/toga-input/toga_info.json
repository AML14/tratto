{
  "test1014" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1014() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    NumberLiteral numberLiteral0 = new NumberLiteral(14, 112);\n    astRoot0.addChild(numberLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"/07q%j\", true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"#4DvxQN04S9l\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test1014"
  },
  "test2029" : {
    "methodSignature" : "public boolean isScript()",
    "methodName" : "isScript",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2029() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment((-2834), 15, token_CommentType0, \"@/5>cd0^(}Qt Rhw\");\n    astRoot0.addComment(comment0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Context context0 = new Context();\n    ErrorReporter errorReporter0 = context0.setErrorReporter(errorCollector0);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"language version\", config0, errorReporter0);\n    node0.isScript();\n}",
    "testName" : "test2029"
  },
  "test2028" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2028() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment((-2834), 15, token_CommentType0, \"@/5>cd0^(}Qt Rhw\");\n    astRoot0.addComment(comment0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Context context0 = new Context();\n    ErrorReporter errorReporter0 = context0.setErrorReporter(errorCollector0);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"language version\", config0, errorReporter0);\n    node0.getLength();\n}",
    "testName" : "test2028"
  },
  "test2941" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2941() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"r+Z;|)0/NL}`\", false);\n    LabeledStatement labeledStatement0 = new LabeledStatement(4);\n    astRoot0.addChild(labeledStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"r+Z;|)0/NL}`\", config0, errorCollector0);\n}",
    "testName" : "test2941"
  },
  "test3552" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3552() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"03)7)\", true);\n    SwitchCase switchCase0 = new SwitchCase(140);\n    astRoot0.addChild(switchCase0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"language version\", config0, errorCollector0);\n    node0.isFromExterns();\n}",
    "testName" : "test3552"
  },
  "test1012" : {
    "methodSignature" : "public boolean isScript()",
    "methodName" : "isScript",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1012() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    NumberLiteral numberLiteral0 = new NumberLiteral(14, 112);\n    astRoot0.addChild(numberLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"/07q%j\", true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"#4DvxQN04S9l\", config0, errorCollector0);\n    node0.isScript();\n}",
    "testName" : "test1012"
  },
  "test3554" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3554() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"03)7)\", true);\n    SwitchCase switchCase0 = new SwitchCase(140);\n    astRoot0.addChild(switchCase0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"language version\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test3554"
  },
  "test1013" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1013() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    NumberLiteral numberLiteral0 = new NumberLiteral(14, 112);\n    astRoot0.addChild(numberLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"/07q%j\", true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"#4DvxQN04S9l\", config0, errorCollector0);\n    node0.isFromExterns();\n}",
    "testName" : "test1013"
  },
  "test3553" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3553() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"03)7)\", true);\n    SwitchCase switchCase0 = new SwitchCase(140);\n    astRoot0.addChild(switchCase0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"language version\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test3553"
  },
  "test033" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    EmptyExpression emptyExpression0 = new EmptyExpression(2, 23);\n    astRoot0.addChild(emptyExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test033"
  },
  "test034" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    EmptyExpression emptyExpression0 = new EmptyExpression(2, 23);\n    astRoot0.addChild(emptyExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.hasOneChild();\n}",
    "testName" : "test034"
  },
  "test3758" : {
    "methodSignature" : "public boolean isScript()",
    "methodName" : "isScript",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3758() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChild(variableDeclaration0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.isScript();\n}",
    "testName" : "test3758"
  },
  "test1217" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1217() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"r+Z;|)0/NL}`\", false);\n    Scope scope0 = new Scope(14, 26);\n    astRoot0.addChild(scope0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"S[l\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test1217"
  },
  "test3757" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3757() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChild(variableDeclaration0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test3757"
  },
  "test1218" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1218() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"r+Z;|)0/NL}`\", false);\n    Scope scope0 = new Scope(14, 26);\n    astRoot0.addChild(scope0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"S[l\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test1218"
  },
  "test068" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    WithStatement withStatement0 = new WithStatement(4095, 5);\n    astRoot0.addChild(withStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, (Set<String>) null, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"[}]5S`H3j0.<!}IB<{]\", config0, toolErrorReporter0);\n}",
    "testName" : "test068"
  },
  "test3350" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3350() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ReturnStatement returnStatement0 = new ReturnStatement(12);\n    astRoot0.addChild(returnStatement0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test3350"
  },
  "test4364" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4364() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\",\\\"qEtxy+7JESoJx\", false);\n    FunctionCall functionCall0 = new FunctionCall((-2744));\n    astRoot0.addChild(functionCall0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"s+\", config0, errorCollector0);\n}",
    "testName" : "test4364"
  },
  "test4162" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4162() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    InfixExpression infixExpression0 = new InfixExpression(23, astRoot0, astRoot0, 14);\n    astRoot0.addChild(infixExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher\", config0, errorCollector0);\n}",
    "testName" : "test4162"
  },
  "test1421" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1421() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block();\n    astRoot0.addChild(block0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"'26@1,x9T'\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test1421"
  },
  "test3248" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3248() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral();\n    regExpLiteral0.setFlags(\"d}qzBT*\");\n    regExpLiteral0.setValue(\"2cG9]VGD}as@O<!\");\n    astRoot0.addChild(regExpLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"2cG9]VGD}as@O<!\", true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"d}qzBT*\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test3248"
  },
  "test3247" : {
    "methodSignature" : "public boolean isFromExterns()",
    "methodName" : "isFromExterns",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3247() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral();\n    regExpLiteral0.setFlags(\"d}qzBT*\");\n    regExpLiteral0.setValue(\"2cG9]VGD}as@O<!\");\n    astRoot0.addChild(regExpLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"2cG9]VGD}as@O<!\", true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"d}qzBT*\", config0, errorCollector0);\n    node0.isFromExterns();\n}",
    "testName" : "test3247"
  },
  "test2436" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2436() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block(21, 3082);\n    block0.addChildToFront(astRoot0);\n    astRoot0.addChild(block0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"'26@1,x9T'\", config0, errorCollector0);\n}",
    "testName" : "test2436"
  },
  "test2232" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2232() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment((-2834), 15, token_CommentType0, \"@/5>cd0^(}Qt Rhw\");\n    astRoot0.addComment(comment0);\n    astRoot0.setJsDocNode(comment0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Context context0 = new Context();\n    ErrorReporter errorReporter0 = context0.setErrorReporter(errorCollector0);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"language version\", config0, errorReporter0);\n    node0.getLength();\n}",
    "testName" : "test2232"
  },
  "test3246" : {
    "methodSignature" : "public boolean isScript()",
    "methodName" : "isScript",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3246() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral();\n    regExpLiteral0.setFlags(\"d}qzBT*\");\n    regExpLiteral0.setValue(\"2cG9]VGD}as@O<!\");\n    astRoot0.addChild(regExpLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"2cG9]VGD}as@O<!\", true);\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"d}qzBT*\", config0, errorCollector0);\n    node0.isScript();\n}",
    "testName" : "test3246"
  },
  "test1420" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1420() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block();\n    astRoot0.addChild(block0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"'26@1,x9T'\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test1420"
  },
  "test2233" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2233() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment((-2834), 15, token_CommentType0, \"@/5>cd0^(}Qt Rhw\");\n    astRoot0.addComment(comment0);\n    astRoot0.setJsDocNode(comment0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Context context0 = new Context();\n    ErrorReporter errorReporter0 = context0.setErrorReporter(errorCollector0);\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"language version\", config0, errorReporter0);\n    node0.getType();\n}",
    "testName" : "test2233"
  },
  "test3960" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3960() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    IfStatement ifStatement0 = new IfStatement(4, 124);\n    InfixExpression infixExpression0 = new InfixExpression(15, ifStatement0, astRoot0, 5);\n    astRoot0.addChild(infixExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n}",
    "testName" : "test3960"
  },
  "test022" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    PropertyGet propertyGet0 = new PropertyGet();\n    astRoot0.addChild(propertyGet0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"s{My/d:0^\", config0, errorCollector0);\n}",
    "testName" : "test022"
  },
  "test1825" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1825() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\" iU`\", false);\n    Locale locale0 = Locale.CANADA_FRENCH;\n    ThrowStatement throwStatement0 = new ThrowStatement(152, 1);\n    astRoot0.addChild(throwStatement0);\n    Set<String> set0 = locale0.getUnicodeLocaleAttributes();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \" iU`\", config0, (ErrorReporter) null);\n}",
    "testName" : "test1825"
  },
  "test1623" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1623() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectProperty objectProperty0 = new ObjectProperty(24);\n    astRoot0.addChild(objectProperty0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"r+Z;|)0/NL}`\", config0, errorCollector0);\n}",
    "testName" : "test1623"
  },
  "test0810" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0810() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Label label0 = new Label();\n    astRoot0.addChild(label0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"T__CUQz*<>Vi`$&-'j\", config0, errorCollector0);\n}",
    "testName" : "test0810"
  },
  "test2638" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2638() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", false);\n    ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop();\n    astRoot0.addChild(arrayComprehensionLoop0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, errorCollector0);\n}",
    "testName" : "test2638"
  },
  "test057" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    InfixExpression infixExpression0 = new InfixExpression(12, astRoot0, astRoot0, 138);\n    astRoot0.addChild(infixExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"NaNobj\", config0, errorCollector0);\n}",
    "testName" : "test057"
  },
  "test3042" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3042() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\",\\\"qEtxy+7JESoJx\", false);\n    ObjectLiteral objectLiteral0 = new ObjectLiteral(2, 0);\n    astRoot0.addChild(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \",\\\"qEtxy+7JESoJx\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test3042"
  },
  "test3043" : {
    "methodSignature" : "public boolean isScript()",
    "methodName" : "isScript",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3043() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\",\\\"qEtxy+7JESoJx\", false);\n    ObjectLiteral objectLiteral0 = new ObjectLiteral(2, 0);\n    astRoot0.addChild(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \",\\\"qEtxy+7JESoJx\", config0, errorCollector0);\n    node0.isScript();\n}",
    "testName" : "test3043"
  },
  "test3655" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3655() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChild(variableDeclaration0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test3655"
  },
  "test2840" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2840() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    FunctionNode functionNode0 = new FunctionNode();\n    astRoot0.addChild(functionNode0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n}",
    "testName" : "test2840"
  },
  "test1115" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1115() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    BreakStatement breakStatement0 = new BreakStatement(1, 2);\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(breakStatement0);\n    astRoot0.addChild(expressionStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test1115"
  },
  "test1116" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1116() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    BreakStatement breakStatement0 = new BreakStatement(1, 2);\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(breakStatement0);\n    astRoot0.addChild(expressionStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test1116"
  },
  "test3656" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3656() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChild(variableDeclaration0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test3656"
  },
  "test4465" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4465() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(astRoot0, true);\n    astRoot0.addChild(expressionStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"R$)\", config0, errorCollector0);\n}",
    "testName" : "test4465"
  },
  "test011" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    DoLoop doLoop0 = new DoLoop();\n    astRoot0.addChild(doLoop0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"unsupported language extension: for each\", false);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \" ]@gP+L?VN;&2oX\", config0, errorCollector0);\n}",
    "testName" : "test011"
  },
  "test1319" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1319() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    WhileLoop whileLoop0 = new WhileLoop(741);\n    astRoot0.addChild(whileLoop0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"oS4El]rzA#RZ-1w9aDS\", config0, errorCollector0);\n}",
    "testName" : "test1319"
  },
  "test3859" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3859() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    InfixExpression infixExpression0 = new InfixExpression(14, astRoot0, astRoot0, 15);\n    astRoot0.addChild(infixExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, (String) null, config0, errorCollector0);\n}",
    "testName" : "test3859"
  },
  "test046" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test046() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", true);\n    ElementGet elementGet0 = new ElementGet(9, 15);\n    astRoot0.addChild(elementGet0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"NE\", config0, errorCollector0);\n}",
    "testName" : "test046"
  },
  "test3451" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3451() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    StringLiteral stringLiteral0 = new StringLiteral(6, 0);\n    stringLiteral0.setValue(\"DZSP ,R@f7P\");\n    astRoot0.addChild(stringLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, (String) null, config0, errorCollector0);\n}",
    "testName" : "test3451"
  },
  "test4263" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4263() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    InfixExpression infixExpression0 = new InfixExpression(25, astRoot0, astRoot0, 4);\n    astRoot0.addChild(infixExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"s{My/d:0^\", config0, errorCollector0);\n}",
    "testName" : "test4263"
  },
  "test4061" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4061() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    InfixExpression infixExpression0 = new InfixExpression(22, astRoot0, astRoot0, 15);\n    astRoot0.addChild(infixExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"Catch clauses are not supported\", config0, errorCollector0);\n}",
    "testName" : "test4061"
  },
  "test2335" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2335() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"b!.}e`p\", false);\n    ContinueStatement continueStatement0 = new ContinueStatement(2, 14);\n    astRoot0.addChild(continueStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\\n * @\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test2335"
  },
  "test2334" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2334() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"b!.}e`p\", false);\n    ContinueStatement continueStatement0 = new ContinueStatement(2, 14);\n    astRoot0.addChild(continueStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\\n * @\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test2334"
  },
  "test1522" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1522() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Name name0 = new Name();\n    astRoot0.addChild(name0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"50~m_CR%K:ei 5Pe6\", config0, errorCollector0);\n}",
    "testName" : "test1522"
  },
  "test3349" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3349() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ReturnStatement returnStatement0 = new ReturnStatement(12);\n    astRoot0.addChild(returnStatement0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test3349"
  },
  "test3145" : {
    "methodSignature" : "public boolean isScript()",
    "methodName" : "isScript",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3145() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral(20);\n    regExpLiteral0.setFlags(\"\");\n    regExpLiteral0.setValue(\"R$)\");\n    astRoot0.addChild(regExpLiteral0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"8UK57:!;0y!{yq\", config0, errorCollector0);\n    node0.isScript();\n}",
    "testName" : "test3145"
  },
  "test3144" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3144() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral(20);\n    regExpLiteral0.setFlags(\"\");\n    regExpLiteral0.setValue(\"R$)\");\n    astRoot0.addChild(regExpLiteral0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"8UK57:!;0y!{yq\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test3144"
  },
  "test000" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ParenthesizedExpression parenthesizedExpression0 = new ParenthesizedExpression(77);\n    astRoot0.addChild(parenthesizedExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"_\", config0, errorCollector0);\n}",
    "testName" : "test000"
  },
  "test2739" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2739() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"\", false);\n    ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop();\n    arrayComprehensionLoop0.setIsForEach(true);\n    astRoot0.addChild(arrayComprehensionLoop0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"\", config0, errorCollector0);\n}",
    "testName" : "test2739"
  },
  "test1926" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1926() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral(20);\n    regExpLiteral0.setValue(\"R$)\");\n    astRoot0.addChild(regExpLiteral0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"8UK57:!;0y!{yq\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test1926"
  },
  "test1927" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1927() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral(20);\n    regExpLiteral0.setValue(\"R$)\");\n    astRoot0.addChild(regExpLiteral0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"8UK57:!;0y!{yq\", config0, errorCollector0);\n    node0.getLength();\n}",
    "testName" : "test1927"
  },
  "test2537" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2537() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name(3375);\n    ContinueStatement continueStatement0 = new ContinueStatement(26, 3682, name0);\n    astRoot0.addChild(continueStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"ctD]\\\"Lx&Zt\", true);\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \" is not a number node\", config0, errorCollector0);\n}",
    "testName" : "test2537"
  },
  "test1724" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1724() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    XmlMemberGet xmlMemberGet0 = new XmlMemberGet();\n    astRoot0.addChild(xmlMemberGet0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"i%valid 2ecrement*targS!\", config0, errorCollector0);\n}",
    "testName" : "test1724"
  },
  "test0911" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0911() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(\"b!.e`p\", false);\n    NewExpression newExpression0 = new NewExpression(2);\n    astRoot0.addChild(newExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, simpleSourceFile0, \"b!.e`p\", config0, errorCollector0);\n}",
    "testName" : "test0911"
  },
  "test035" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test035() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    EmptyExpression emptyExpression0 = new EmptyExpression(2, 23);\n    astRoot0.addChild(emptyExpression0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test035"
  },
  "test079" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, StaticSourceFile sourceFile, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ForLoop forLoop0 = new ForLoop(8, 12);\n    astRoot0.addChild(forLoop0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"s{My/d:0^\", config0, errorCollector0);\n}",
    "testName" : "test079"
  },
  "test2131" : {
    "methodSignature" : "public boolean isScript()",
    "methodName" : "isScript",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2131() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;\n    Comment comment0 = new Comment((-2797), 15, token_CommentType0, \"@/5>cd0^(}Qt Rhw\");\n    astRoot0.addComment(comment0);\n    Context context0 = new Context();\n    ErrorReporter errorReporter0 = context0.getErrorReporter();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"language version\", config0, errorReporter0);\n    node0.isScript();\n}",
    "testName" : "test2131"
  },
  "test2130" : {
    "methodSignature" : "public int getLength()",
    "methodName" : "getLength",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2130() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;\n    Comment comment0 = new Comment((-2797), 15, token_CommentType0, \"@/5>cd0^(}Qt Rhw\");\n    astRoot0.addComment(comment0);\n    Context context0 = new Context();\n    ErrorReporter errorReporter0 = context0.getErrorReporter();\n    Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, \"language version\", config0, errorReporter0);\n    node0.getLength();\n}",
    "testName" : "test2130"
  }
}