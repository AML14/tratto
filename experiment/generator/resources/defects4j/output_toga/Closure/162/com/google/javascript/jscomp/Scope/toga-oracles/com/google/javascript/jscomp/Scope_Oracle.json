[ {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "void regenerateGlobalTypedScope(AbstractCompiler compiler, Node root)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1730"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public Iterable<Var> getAllSymbols()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1831"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public Iterator<Var> getDeclarativelyUnboundVarsWithoutTypes()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(iterator0)",
  "exception" : "",
  "testName" : "test1932"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "boolean isBottom()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2033"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public StaticSlot<JSType> getSlot(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(staticSlot0)",
  "exception" : "",
  "testName" : "test2235"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public StaticScope<JSType> getScope(Var var)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2336"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "int getDepth()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2540"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public int getVarCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, int0)",
  "exception" : "",
  "testName" : "test2641"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public JSType getTypeOfThis()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(jSType0)",
  "exception" : "",
  "testName" : "test2742"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public StaticSlot<JSType> getOwnSlot(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2843"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.hasOneChild())",
  "exception" : "",
  "testName" : "test3763"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node2.hasOneChild())",
  "exception" : "",
  "testName" : "test3866"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "Scope(Scope parent, Node rootNode)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5089"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public boolean isLocal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(scope2.isLocal())",
  "exception" : "",
  "testName" : "test5190"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "Var declare(String name, Node nameNode, JSType type, CompilerInput input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5291"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "Var declare(String name, Node nameNode, JSType type, CompilerInput input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5392"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "Var declare(String name, Node nameNode, JSType type, CompilerInput input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5493"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "void undeclare(Var var)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5594"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "void undeclare(Var var)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5796"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public Var getVar(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5898"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public Var getVar(String name)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(scope_Var0)",
  "exception" : "",
  "testName" : "test5999"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public Var getArgumentsVar()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test60100"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public boolean isDeclared(String name, boolean recurse)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test61103"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public boolean isDeclared(String name, boolean recurse)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test62104"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public boolean isDeclared(String name, boolean recurse)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test63105"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public boolean isLocal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test64106"
}, {
  "className" : "com.google.javascript.jscomp.Scope",
  "methodSignature" : "public boolean isLocal()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test65107"
} ]