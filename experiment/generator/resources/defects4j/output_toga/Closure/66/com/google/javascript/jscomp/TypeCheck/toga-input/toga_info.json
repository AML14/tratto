{
  "test168225" : {
    "methodSignature" : "double getTypedPercent()",
    "methodName" : "getTypedPercent",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test168225() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, (JSTypeRegistry) null);\n    double double0 = typeCheck0.getTypedPercent();\n}",
    "testName" : "test168225"
  },
  "test0000" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = compiler0.parseTestCode(\"\");\n    Node node1 = new Node(35, node0, node0, node0, node0, 3, 40);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test0000"
  },
  "test04053" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04053() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"G;;-m]xudKp?C.\");\n    Node node1 = new Node(31, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test04053"
  },
  "test05266" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05266() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"dgZ}V/8&v4\");\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node1 = new Node(47);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test05266"
  },
  "test157213" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test157213() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(120, 120, 120);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node0, node0);\n}",
    "testName" : "test157213"
  },
  "test163219" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test163219() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"P\");\n    Node node1 = new Node(37, node0, node0, node0, node0, 22, 47);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test163219"
  },
  "test01213" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01213() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"dgZ}V/8&v4\");\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test01213"
  },
  "test04963" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04963() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(44, node0, node0, node0, node0, 22, 43);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test04963"
  },
  "test142193" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test142193() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node0 = compiler0.parseSyntheticCode(\"AzbYH/r,6vX^pvy\", \"(FSSI!#Hg2/ m7#0wb~\");\n    Node node1 = new Node(145, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test142193"
  },
  "test152206" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test152206() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = compiler0.parseTestCode(\"initalizing variabe\");\n    Node node1 = new Node(27, node0, node0, node0, node0, 42, 38);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, node0);\n    node0.setJSType(functionType0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test152206"
  },
  "test152207" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test152207() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = compiler0.parseTestCode(\"initalizing variabe\");\n    Node node1 = new Node(27, node0, node0, node0, node0, 42, 38);\n    FunctionType functionType0 = jSTypeRegistry0.createFunctionType((JSType) null, node0);\n    node0.setJSType(functionType0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test152207"
  },
  "test114153" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114153() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, (JSTypeRegistry) null);\n    Node node0 = new Node(112, 112, 112);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test114153"
  },
  "test0011" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(15);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test0011"
  },
  "test03750" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03750() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = compiler0.parseTestCode(\"initalizing variabe\");\n    Node node1 = new Node(27, node0, node0, node0, node0, 42, 38);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test03750"
  },
  "test120159" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120159() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(1667);\n    Node node1 = new Node(119, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test120159"
  },
  "test06585" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06585() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(60);\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    typeCheck0.visit((NodeTraversal) null, node0, (Node) null);\n}",
    "testName" : "test06585"
  },
  "test02535" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02535() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(14, node0, node0, node0, node0, 19, 13);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test02535"
  },
  "test00910" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00910() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = Node.newNumber((double) 86, 86, 86);\n    Node node1 = new Node(86, node0);\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    typeCheck0.visit((NodeTraversal) null, node1, node0);\n}",
    "testName" : "test00910"
  },
  "test125166" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test125166() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(124);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test125166"
  },
  "test077103" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077103() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(73);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test077103"
  },
  "test077102" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077102() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(73);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test077102"
  },
  "test087119" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test087119() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(105);\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();\n    ArrayList<JSType> arrayList0 = new ArrayList<JSType>();\n    Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) arrayList0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test087119"
  },
  "test115154" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115154() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(113);\n    compiler0.parseTestCode(\"1(?/,,sN+k>>g\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test115154"
  },
  "test0022" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"com.google.javascript.jscomp.DefaultPassConfig$58\");\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(8, node0, node0, node0, node0, 34, 44);\n    typeCheck0.processForTesting(node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test0022"
  },
  "test0023" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0023() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"com.google.javascript.jscomp.DefaultPassConfig$58\");\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(8, node0, node0, node0, node0, 34, 44);\n    typeCheck0.processForTesting(node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test0023"
  },
  "test05367" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05367() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(114, 114, 114);\n    Node node1 = new Node(48);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test05367"
  },
  "test04154" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04154() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(32, node0, node0, node0, node0, 35, 3);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test04154"
  },
  "test01314" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01314() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    JSDocInfo jSDocInfo0 = new JSDocInfo();\n    node0.setJSDocInfo(jSDocInfo0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.getType();\n}",
    "testName" : "test01314"
  },
  "test110148" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110148() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(108, 108, 39);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test110148"
  },
  "test109147" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109147() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(107);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test109147"
  },
  "test098132" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098132() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(96, 96, 96);\n    StrictModeCheck strictModeCheck0 = new StrictModeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, strictModeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test098132"
  },
  "test109146" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109146() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(107);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test109146"
  },
  "test126167" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test126167() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node0 = new Node(126, (-1), 126);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test126167"
  },
  "test093127" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test093127() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"qvPww)g|l`X<)\");\n    Node node1 = new Node(91, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test093127"
  },
  "test076100" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076100() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(72, 72, 72);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test076100"
  },
  "test076101" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test076101() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(72, 72, 72);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test076101"
  },
  "test07092" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07092() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node0 = compiler0.parseSyntheticCode(\"AzbYH/r,6vX^pvy\", \"AzbYH/r,6vX^pvy\");\n    Node node1 = Node.newString(65, \"msg.not.ctor\", 794, 44);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test07092"
  },
  "test167224" : {
    "methodSignature" : "double getTypedPercent()",
    "methodName" : "getTypedPercent",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test167224() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, (JSTypeRegistry) null);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    PrepareAst.PrepareAnnotations prepareAst_PrepareAnnotations0 = new PrepareAst.PrepareAnnotations(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, prepareAst_PrepareAnnotations0, syntacticScopeCreator0);\n    Node node0 = new Node(147, 147, 147);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    double double0 = typeCheck0.getTypedPercent();\n}",
    "testName" : "test167224"
  },
  "test0034" : {
    "methodSignature" : "public void process(Node externsRoot, Node jsRoot)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0034() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"isExtensible\");\n    CodingConvention codingConvention0 = compiler0.getCodingConvention();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(codingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(7, node0, node0, node0, node0, 19, 31);\n    typeCheck0.processForTesting(node0, node0);\n    typeCheck0.process(node0, node1);\n}",
    "testName" : "test0034"
  },
  "test06687" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06687() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(61, 61, 61);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test06687"
  },
  "test06686" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06686() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(61, 61, 61);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test06686"
  },
  "test03851" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03851() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(28);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test03851"
  },
  "test082112" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082112() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(78, 1504, 64);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test082112"
  },
  "test136183" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test136183() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(139);\n    compiler0.parseTestCode(\"\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test136183"
  },
  "test136184" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test136184() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(139);\n    compiler0.parseTestCode(\"\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test136184"
  },
  "test082111" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test082111() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(78, 1504, 64);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test082111"
  },
  "test162218" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test162218() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(114, 114, 114);\n    Node node1 = new Node(118, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test162218"
  },
  "test104140" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104140() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(102, 102, 102);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test104140"
  },
  "test156212" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test156212() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(105, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node0, node1);\n}",
    "testName" : "test156212"
  },
  "test131174" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test131174() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;V-m]x!0-p?C.\");\n    Node node1 = new Node(134, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test131174"
  },
  "test02636" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02636() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"initializing variable\");\n    Node node1 = new Node(16, node0, node0, node0, node0, 48, 2);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test02636"
  },
  "test131175" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test131175() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;V-m]x!0-p?C.\");\n    Node node1 = new Node(134, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.hasErrors();\n}",
    "testName" : "test131175"
  },
  "test151205" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test151205() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(83);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test151205"
  },
  "test147200" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test147200() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(151);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test147200"
  },
  "test04255" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04255() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(34, node0, node0, node0, node0, 2600, 46);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test04255"
  },
  "test04256" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04256() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(34, node0, node0, node0, node0, 2600, 46);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test04256"
  },
  "test05468" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05468() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = compiler0.parseTestCode(\"iMzF9n?<l]\");\n    Node node1 = new Node(49, node0, node0, 6, (-3));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test05468"
  },
  "test081110" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test081110() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(77);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test081110"
  },
  "test03042" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03042() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = compiler0.parseTestCode(\"initalizing variable\");\n    Node node1 = new Node(20, node0);\n    typeCheck0.visit((NodeTraversal) null, node1, node1);\n}",
    "testName" : "test03042"
  },
  "test03952" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03952() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"*(;;V-m]x!d-p?C.\");\n    Node node1 = new Node(29, node0, node0, node0, node0, 12, 43);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test03952"
  },
  "test06789" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06789() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(62, node0, node0, node0, node0, 1, 3775);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test06789"
  },
  "test01415" : {
    "methodSignature" : "public boolean shouldTraverse(NodeTraversal t, Node n, Node parent)",
    "methodName" : "shouldTraverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01415() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(105, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    boolean boolean0 = typeCheck0.shouldTraverse(nodeTraversal0, node1, node0);\n}",
    "testName" : "test01415"
  },
  "test164220" : {
    "methodSignature" : "public boolean isUnscopedQualifiedName()",
    "methodName" : "isUnscopedQualifiedName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test164220() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;V-m]x!d-p?C.\");\n    Stack<JSType> stack0 = new Stack<JSType>();\n    Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);\n    Node node2 = new Node(30, node1, node0, 33, 31);\n    typeCheck0.visit((NodeTraversal) null, node2, node0);\n    node0.isUnscopedQualifiedName();\n}",
    "testName" : "test164220"
  },
  "test05570" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05570() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(50);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test05570"
  },
  "test07194" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07194() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(66);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test07194"
  },
  "test07193" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07193() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(66);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test07193"
  },
  "test06788" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06788() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"\");\n    Node node1 = new Node(62, node0, node0, node0, node0, 1, 3775);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.hasErrors();\n}",
    "testName" : "test06788"
  },
  "test138188" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test138188() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(141, node0, node0, node0, node0, 16, 9);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test138188"
  },
  "test138187" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test138187() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(141, node0, node0, node0, node0, 16, 9);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test138187"
  },
  "test158214" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test158214() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.options;\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    Stack<JSType> stack0 = new Stack<JSType>();\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);\n    boolean boolean0 = typeCheck0.visitName((NodeTraversal) null, node0, node0);\n}",
    "testName" : "test158214"
  },
  "test133179" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test133179() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(136);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test133179"
  },
  "test02737" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02737() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"l<D:}q9k\");\n    Node node1 = new Node(17, node0, node0, node0, node0, 4095, 47);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test02737"
  },
  "test05569" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05569() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(50);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test05569"
  },
  "test097131" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test097131() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"qvPww)g|l`X<)\");\n    Node node1 = new Node(95, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    node1.getLineno();\n}",
    "testName" : "test097131"
  },
  "test133178" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test133178() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(136);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test133178"
  },
  "test092126" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test092126() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(90, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test092126"
  },
  "test121160" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121160() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.options;\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(120);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test121160"
  },
  "test153208" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test153208() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"l<D:}q9k\");\n    Node node1 = new Node(17, node0, node0, node0, node0, 4095, 47);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test153208"
  },
  "test06890" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06890() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, (JSTypeRegistry) null);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node0 = compiler0.parseSyntheticCode(\"AzbYH/r,'vX^&vy\", \"AzbYH/r,'vX^&vy\");\n    Node node1 = new Node(63, node0, node0, node0, 131, 8);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test06890"
  },
  "test111150" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111150() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    Node node0 = Node.newString(109, \"-soU+XaFv`CG]%\", 109, 992);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test111150"
  },
  "test137186" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test137186() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(140);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test137186"
  },
  "test04357" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04357() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(132);\n    Node node1 = new Node(36, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test04357"
  },
  "test100135" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100135() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(98, 98, 98);\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    ConstCheck constCheck0 = new ConstCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, constCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test100135"
  },
  "test137185" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test137185() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(140);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test137185"
  },
  "test03143" : {
    "methodSignature" : "public int getLineNumber()",
    "methodName" : "getLineNumber",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03143() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"SKxUNihd)if)DS/Jw\");\n    Node node1 = new Node(21, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    nodeTraversal0.getLineNumber();\n}",
    "testName" : "test03143"
  },
  "test105141" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105141() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(103, 103, 103);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test105141"
  },
  "test01516" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01516() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(\"// Input %num%\", (-1083), (-1083));\n    Node node1 = new Node(4, node0, node0, node0, node0, 19, 37);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test01516"
  },
  "test132176" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test132176() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(135);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test132176"
  },
  "test132177" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test132177() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(135);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test132177"
  },
  "test122162" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122162() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(121);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test122162"
  },
  "test122161" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122161() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(121);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test122161"
  },
  "test07295" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07295() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(68, 32, (-1302));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test07295"
  },
  "test086118" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test086118() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(82, (-1826), 82);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test086118"
  },
  "test116155" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116155() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(114, 114, 114);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.hasChildren();\n}",
    "testName" : "test116155"
  },
  "test127169" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test127169() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(128);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test127169"
  },
  "test05671" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05671() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(\"JSC_INVALID_INTERFACE_MEMBER_DECLARATION\", 1, (-1083));\n    Node node1 = new Node(51, node0, node0, node0, node0, 44, 3);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test05671"
  },
  "test04458" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04458() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"P\");\n    Node node1 = new Node(37, node0, node0, node0, node0, 22, 47);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test04458"
  },
  "test127168" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test127168() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(128);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test127168"
  },
  "test02839" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02839() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";<j766]x!dKp1C\");\n    Node node1 = new Node(18, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test02839"
  },
  "test02838" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02838() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";<j766]x!dKp1C\");\n    Node node1 = new Node(18, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test02838"
  },
  "test143194" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test143194() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(146);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test143194"
  },
  "test111149" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111149() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    Node node0 = Node.newString(109, \"-soU+XaFv`CG]%\", 109, 992);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test111149"
  },
  "test0089" : {
    "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
    "methodName" : "processForTesting",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0089() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, (JSTypeRegistry) null);\n    Node node0 = new Node(115, 115, 101);\n    typeCheck0.processForTesting(node0, node0);\n}",
    "testName" : "test0089"
  },
  "test117156" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117156() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, (JSTypeRegistry) null);\n    Node node0 = new Node(115, 115, 101);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test117156"
  },
  "test03244" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03244() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(22, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test03244"
  },
  "test139189" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test139189() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(142, 1177, 1177);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test139189"
  },
  "test085117" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085117() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(81);\n    compiler0.parseTestCode(\"\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test085117"
  },
  "test06991" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06991() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(64, 64, 64);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test06991"
  },
  "test085116" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test085116() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(81);\n    compiler0.parseTestCode(\"\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test085116"
  },
  "test06077" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06077() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, (JSTypeRegistry) null);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node0 = Node.newString(\"AzbYH/r,'vX^&@vy\");\n    Node node1 = new Node(55, node0, node0, node0, 4, 8);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test06077"
  },
  "test02941" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02941() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"ikitializn* variable\");\n    Node node1 = new Node(19, node0, node0, node0, node0, 4, 42);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test02941"
  },
  "test02940" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02940() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"ikitializn* variable\");\n    Node node1 = new Node(19, node0, node0, node0, node0, 4, 42);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test02940"
  },
  "test02026" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02026() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"is|xtenfible\");\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(2, node0, node0, node0, node0, 4, 21);\n    typeCheck0.processForTesting(node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test02026"
  },
  "test096130" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test096130() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    CheckLevel checkLevel0 = CheckLevel.OFF;\n    CheckPropertyOrder checkPropertyOrder0 = new CheckPropertyOrder(compiler0, checkLevel0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkPropertyOrder0, syntacticScopeCreator0);\n    Node node0 = compiler0.parseSyntheticCode(\"AzbYH/r,6vX^pvy\", \"AzbYH/r,6vX^pvy\");\n    Node node1 = new Node(94, node0, node0, node0, 5497, 123);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test096130"
  },
  "test01618" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01618() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node((-2160), (-81), (-81));\n    Node node1 = new Node(5, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.hasErrors();\n}",
    "testName" : "test01618"
  },
  "test01617" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01617() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node((-2160), (-81), (-81));\n    Node node1 = new Node(5, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test01617"
  },
  "test091125" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test091125() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dK8Ap1C.\");\n    Node node1 = new Node(88, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test091125"
  },
  "test07396" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07396() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, (JSTypeRegistry) null);\n    Node node0 = new Node(69, 90, 1540);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test07396"
  },
  "test165221" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test165221() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    MemoizedScopeCreator memoizedScopeCreator0 = new MemoizedScopeCreator((ScopeCreator) null);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null, memoizedScopeCreator0);\n    Node node0 = compiler0.parseSyntheticCode(\"AzbYH/r,6vX^vy\", \"TightenTypes pass appears to be stuck in an infinite loop.\");\n    Node node1 = new Node(89, node0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    typeCheck0.visit(nodeTraversal0, node1, (Node) null);\n}",
    "testName" : "test165221"
  },
  "test139190" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test139190() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(142, 1177, 1177);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test139190"
  },
  "test02025" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02025() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"is|xtenfible\");\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(2, node0, node0, node0, node0, 4, 21);\n    typeCheck0.processForTesting(node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test02025"
  },
  "test101137" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101137() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(99, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test101137"
  },
  "test134180" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134180() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.options;\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(137);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test134180"
  },
  "test101136" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101136() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(99, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.hasErrors();\n}",
    "testName" : "test101136"
  },
  "test05772" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05772() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(52, 52, 52);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test05772"
  },
  "test134181" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test134181() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.options;\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(137);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test134181"
  },
  "test160216" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test160216() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(\"\", 33, 33);\n    Node node1 = new Node(33, node0, node0, node0, node0, 113, 14);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node1);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test160216"
  },
  "test01720" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01720() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]K!dKpWB.\");\n    Node node1 = new Node(6, node0, node0, node0, node0, 12, 47);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test01720"
  },
  "test080109" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080109() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(76);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test080109"
  },
  "test080108" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test080108() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(76);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test080108"
  },
  "test106142" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106142() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(104);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test106142"
  },
  "test04559" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04559() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = Node.newNumber((double) 130, 130, 130);\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    typeCheck0.visit((NodeTraversal) null, node0, node0);\n}",
    "testName" : "test04559"
  },
  "test106143" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106143() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(104);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test106143"
  },
  "test145196" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test145196() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(149);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test145196"
  },
  "test145197" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test145197() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(149);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test145197"
  },
  "test03345" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03345() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";<j766]x!dKp1C\");\n    Node node1 = new Node(23, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test03345"
  },
  "test06179" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06179() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(101, 101, 101);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node1 = new Node(56, node0, node0, node0, node0, 10, 15);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.hasErrors();\n}",
    "testName" : "test06179"
  },
  "test06178" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06178() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(101, 101, 101);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node1 = new Node(56, node0, node0, node0, node0, 10, 15);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test06178"
  },
  "test02128" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02128() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;V-m]x!d-p?C.\");\n    Node node1 = new Node(10, node0, node0, node0, node0, 16, 30);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test02128"
  },
  "test02127" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02127() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;V-m]x!d-p?C.\");\n    Node node1 = new Node(10, node0, node0, node0, node0, 16, 30);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test02127"
  },
  "test02129" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02129() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;V-m]x!d-p?C.\");\n    Node node1 = new Node(10, node0, node0, node0, node0, 16, 30);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test02129"
  },
  "test159215" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test159215() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(132);\n    Node node1 = new Node(118, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node1, node1);\n}",
    "testName" : "test159215"
  },
  "test154209" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test154209() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(64, 64, 64);\n    node0.addChildrenToFront(node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test154209"
  },
  "test144195" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test144195() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"initializing variable\");\n    Node node1 = new Node(148, node0, node0, node0, node0, (-1249), 30);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test144195"
  },
  "test01719" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01719() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]K!dKpWB.\");\n    Node node1 = new Node(6, node0, node0, node0, node0, 12, 47);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test01719"
  },
  "test112151" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112151() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(110);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test112151"
  },
  "test148201" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test148201() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(152);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test148201"
  },
  "test06281" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06281() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(57);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test06281"
  },
  "test06280" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06280() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(57);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test06280"
  },
  "test05873" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05873() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(53);\n    compiler0.parseTestCode(\"\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test05873"
  },
  "test05874" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05874() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(53);\n    compiler0.parseTestCode(\"\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test05874"
  },
  "test07497" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07497() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, (JSTypeRegistry) null);\n    Node node0 = new Node(70);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test07497"
  },
  "test04660" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04660() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(76);\n    Node node1 = new Node(41, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test04660"
  },
  "test079107" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079107() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(75, 75, 75);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test079107"
  },
  "test03446" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03446() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"e=\");\n    Node node1 = new Node(24, node0, node0, node0, node0, 1, 2);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test03446"
  },
  "test01822" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01822() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;V-m]x!d-pJC.\");\n    Node node1 = new Node(7);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test01822"
  },
  "test01821" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01821() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;V-m]x!d-pJC.\");\n    Node node1 = new Node(7);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test01821"
  },
  "test123163" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123163() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, (JSTypeRegistry) null);\n    Node node0 = new Node(122, 122, (-1979));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test123163"
  },
  "test079106" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079106() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(75, 75, 75);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test079106"
  },
  "test128170" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test128170() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, (JSTypeRegistry) null);\n    Node node0 = new Node(129, 138, 90);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test128170"
  },
  "test090124" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090124() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"qvPww)g|l`X<)\");\n    Node node1 = new Node(87, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.hasErrors();\n}",
    "testName" : "test090124"
  },
  "test090123" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test090123() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"qvPww)g|l`X<)\");\n    Node node1 = new Node(87, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test090123"
  },
  "test05064" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05064() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"SKxUNihd)iDS/Jw\");\n    Node node1 = new Node(45, node0, node0, 31, 12);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test05064"
  },
  "test146199" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test146199() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(150);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test146199"
  },
  "test113152" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113152() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"|t]/iV?+I7LVHE\");\n    Node node1 = new Node(111, node0, node0, node0, node0, 50, 3);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test113152"
  },
  "test0045" : {
    "methodSignature" : "public int getVarCount()",
    "methodName" : "getVarCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0045() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"Yh8hV\");\n    Node node1 = new Node(16, node0, node0, node0, node0, (-103), 17);\n    Scope scope0 = typeCheck0.processForTesting((Node) null, node0);\n    scope0.getVarCount();\n}",
    "testName" : "test0045"
  },
  "test02230" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02230() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"JSC_BAD_TYPE_FOR_BIT_OPERATION\");\n    Node node1 = new Node(11, node0, node0, node0, node0, 1, 47);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test02230"
  },
  "test135182" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test135182() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, (JSTypeRegistry) null);\n    Node node0 = new Node(138, 149, 149);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test135182"
  },
  "test02232" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02232() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"JSC_BAD_TYPE_FOR_BIT_OPERATION\");\n    Node node1 = new Node(11, node0, node0, node0, node0, 1, 47);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.hasErrors();\n}",
    "testName" : "test02232"
  },
  "test02231" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02231() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"JSC_BAD_TYPE_FOR_BIT_OPERATION\");\n    Node node1 = new Node(11, node0, node0, node0, node0, 1, 47);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getErrorCount();\n}",
    "testName" : "test02231"
  },
  "test102138" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102138() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(100);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.hasChildren();\n}",
    "testName" : "test102138"
  },
  "test130173" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test130173() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(133, 133, 133);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test130173"
  },
  "test05976" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05976() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(54, 54, 54);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test05976"
  },
  "test05975" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05975() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(54, 54, 54);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test05975"
  },
  "test107144" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107144() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp?C.\");\n    Node node1 = new Node(105, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test107144"
  },
  "test124165" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124165() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(123);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test124165"
  },
  "test124164" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124164() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(123);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test124164"
  },
  "test095129" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test095129() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"l<D:}q9k\");\n    Node node1 = new Node(93, node0, node0, 48, (-3351));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test095129"
  },
  "test146198" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test146198() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(150);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test146198"
  },
  "test078104" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078104() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(74);\n    Node node1 = compiler0.parseTestCode(\"\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node1);\n    compiler0.hasErrors();\n}",
    "testName" : "test078104"
  },
  "test129171" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test129171() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"<j766x!dp1C\");\n    Node node1 = new Node(131, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test129171"
  },
  "test078105" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test078105() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(74);\n    Node node1 = compiler0.parseTestCode(\"\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test078105"
  },
  "test129172" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test129172() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"<j766x!dp1C\");\n    Node node1 = new Node(131, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test129172"
  },
  "test06382" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06382() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(58);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test06382"
  },
  "test06383" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06383() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(58);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test06383"
  },
  "test118157" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118157() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(116, 116, 228);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test118157"
  },
  "test0056" : {
    "methodSignature" : "public void process(Node externsRoot, Node jsRoot)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0056() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"isExtensible\");\n    CodingConvention codingConvention0 = compiler0.getCodingConvention();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(codingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(7, node0, node0, node0, node0, 19, 31);\n    typeCheck0.processForTesting(node0, node0);\n    typeCheck0.process(node1, node0);\n}",
    "testName" : "test0056"
  },
  "test04761" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04761() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node0 = compiler0.parseSyntheticCode(\"AzbYH/r,6vX^pvy\", \"AzbYH/r,6vX^pvy\");\n    Node node1 = new Node(42, node0, node0, 28, 2);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test04761"
  },
  "test07599" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07599() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(71);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test07599"
  },
  "test089122" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test089122() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = compiler0.parseTestCode(\"initalizing variable\");\n    Node node1 = new Node(85, node0, node0, node0, node0, 2, 143);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test089122"
  },
  "test084115" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084115() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(80, (-242), (-242));\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test084115"
  },
  "test084114" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test084114() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(80, (-242), (-242));\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test084114"
  },
  "test01011" : {
    "methodSignature" : "public boolean shouldTraverse(NodeTraversal t, Node n, Node parent)",
    "methodName" : "shouldTraverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(105, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.shouldTraverse(nodeTraversal0, node1, node0);\n}",
    "testName" : "test01011"
  },
  "test07598" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07598() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(71);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test07598"
  },
  "test03548" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03548() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(27, 27, 27);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node1 = new Node(25, node0, node0, node0, 17, 4095);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test03548"
  },
  "test01923" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01923() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(8, 8, 131);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test01923"
  },
  "test03547" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03547() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(27, 27, 27);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node1 = new Node(25, node0, node0, node0, 17, 4095);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test03547"
  },
  "test01924" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01924() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(8, 8, 131);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test01924"
  },
  "test141192" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test141192() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(144, 2158, 90);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test141192"
  },
  "test166222" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test166222() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(127);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    node0.addSuppression(\".?P;w=z9OEg1'rrz\");\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test166222"
  },
  "test166223" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test166223() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(127);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    node0.addSuppression(\".?P;w=z9OEg1'rrz\");\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test166223"
  },
  "test149202" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test149202() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(153);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test149202"
  },
  "test119158" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119158() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.options;\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = new Node(117);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.hasOneChild();\n}",
    "testName" : "test119158"
  },
  "test0067" : {
    "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
    "methodName" : "processForTesting",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0067() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"isExtensible\");\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();\n    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, defaultCodingConvention0);\n    CheckLevel checkLevel0 = CheckLevel.WARNING;\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0, (Scope) null, typedScopeCreator0, checkLevel0, checkLevel0);\n    typeCheck0.processForTesting((Node) null, node0);\n}",
    "testName" : "test0067"
  },
  "test088120" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088120() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(84);\n    compiler0.parseTestCode(\"1(?/,,sN+k>>g\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test088120"
  },
  "test088121" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088121() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(84);\n    compiler0.parseTestCode(\"1(?/,,sN+k>>g\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test088121"
  },
  "test02333" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02333() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Stack<JSType> stack0 = new Stack<JSType>();\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);\n    Node node1 = new Node(12, node0, node0, 28, 2);\n    typeCheck0.visit((NodeTraversal) null, node1, node1);\n}",
    "testName" : "test02333"
  },
  "test05165" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05165() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(\"// Input %num%\", (-1083), (-1083));\n    Node node1 = new Node(46, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test05165"
  },
  "test083113" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test083113() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, (JSTypeRegistry) null);\n    Node node0 = new Node(79, 76, 11);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test083113"
  },
  "test155210" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test155210() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(67, 67, 67);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    CheckLevel checkLevel0 = CheckLevel.ERROR;\n    TypeCheck typeCheck1 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0, checkLevel0, checkLevel0);\n    typeCheck1.visit(nodeTraversal0, node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test155210"
  },
  "test161217" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test161217() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    Node node0 = Node.newString(\"\", 33, 33);\n    Node node1 = new Node(33, node0, node0, node0, node0, 115, 14);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(defaultCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck1 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    typeCheck1.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test161217"
  },
  "test155211" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test155211() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(67, 67, 67);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    CheckLevel checkLevel0 = CheckLevel.ERROR;\n    TypeCheck typeCheck1 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0, checkLevel0, checkLevel0);\n    typeCheck1.visit(nodeTraversal0, node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test155211"
  },
  "test140191" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test140191() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(143);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test140191"
  },
  "test150204" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test150204() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = Node.newString(\"L>0\");\n    Node node1 = new Node(1, (-1896), 15);\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test150204"
  },
  "test150203" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test150203() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = Node.newString(\"L>0\");\n    Node node1 = new Node(1, (-1896), 15);\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test150203"
  },
  "test0078" : {
    "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
    "methodName" : "processForTesting",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0078() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = Node.newString(\"L>0\");\n    CompilerOptions compilerOptions0 = compiler0.getOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    Scope scope0 = new Scope(node0, compiler0);\n    defaultPassConfig0.topScope = scope0;\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    typeCheck0.processForTesting(node0, node0);\n}",
    "testName" : "test0078"
  },
  "test04862" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04862() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(43, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test04862"
  },
  "test01112" : {
    "methodSignature" : "public int getSideEffectFlags()",
    "methodName" : "getSideEffectFlags",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01112() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node(118, 1504, 118);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.getSideEffectFlags();\n}",
    "testName" : "test01112"
  },
  "test06484" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06484() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(59, 59, (-4229));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test06484"
  },
  "test103139" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103139() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    Node node0 = new Node(101, 101, 101);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    DefaultPassConfig defaultPassConfig0 = new DefaultPassConfig(compilerOptions0);\n    TypeCheck typeCheck0 = defaultPassConfig0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    node0.getCharno();\n}",
    "testName" : "test103139"
  },
  "test03649" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03649() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = new Node(3103);\n    Node node1 = new Node(26, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test03649"
  },
  "test099134" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099134() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(97, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test099134"
  },
  "test099133" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099133() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\";;]-m]x!dKp1C.\");\n    Node node1 = new Node(97, node0, node0, node0, node0, 0, 45);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test099133"
  },
  "test108145" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test108145() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node0 = new Node(106, 1393, (-4229));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test108145"
  },
  "test094128" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test094128() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.getErrorManager();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node0 = Node.newString(\"l<D:}q9k\");\n    Node node1 = new Node(92, node0, node0, 48, (-3351));\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test094128"
  }
}