focal_method,test_prefix,docstring
"@Override
public void parse(String contents) throws SourceMapParseException {
    parse(contents, null);
}","public void test00() throws Throwable {
    SourceMapConsumerV3 sourceMapConsumerV3_0 = new SourceMapConsumerV3();
    try {
        sourceMapConsumerV3_0.parse(""com.google.protobuf.FieldSet"");
        fail(""Expecting exception: Exception"");
    } catch (Exception e) {
        //
        // JSON parse exception: org.evosuite.runtime.mock.java.lang.MockThrowable: A JSONObject text must begin with '{' at character 1
        //
        verifyException(""com.google.debugging.sourcemap.SourceMapConsumerV3"", e);
    }
}","/**
 * Parses the given contents containing a source map.
 */"
"@Override
public OriginalMapping getMappingForLine(int lineNumber, int column) {
    // Normalize the line and column numbers to 0.
    lineNumber--;
    column--;
    if (lineNumber < 0 || lineNumber >= lines.size()) {
        return null;
    }
    Preconditions.checkState(lineNumber >= 0);
    Preconditions.checkState(column >= 0);
    // If the line is empty return the previous mapping.
    if (lines.get(lineNumber) == null) {
        return getPreviousMapping(lineNumber);
    }
    ArrayList<Entry> entries = lines.get(lineNumber);
    // No empty lists.
    Preconditions.checkState(entries.size() > 0);
    if (entries.get(0).getGeneratedColumn() > column) {
        return getPreviousMapping(lineNumber);
    }
    int index = search(entries, column, 0, entries.size() - 1);
    Preconditions.checkState(index >= 0, ""unexpected:%s"", index);
    return getOriginalMappingForEntry(entries.get(index));
}","public void test44() throws Throwable {
    SourceMapConsumerV3 sourceMapConsumerV3_0 = new SourceMapConsumerV3();
    Mapping.OriginalMapping mapping_OriginalMapping0 = sourceMapConsumerV3_0.getMappingForLine((-580), (-580));
    assertNull(mapping_OriginalMapping0);
}",""
"@Override
public OriginalMapping getMappingForLine(int lineNumber, int column) {
    // Normalize the line and column numbers to 0.
    lineNumber--;
    column--;
    if (lineNumber < 0 || lineNumber >= lines.size()) {
        return null;
    }
    Preconditions.checkState(lineNumber >= 0);
    Preconditions.checkState(column >= 0);
    // If the line is empty return the previous mapping.
    if (lines.get(lineNumber) == null) {
        return getPreviousMapping(lineNumber);
    }
    ArrayList<Entry> entries = lines.get(lineNumber);
    // No empty lists.
    Preconditions.checkState(entries.size() > 0);
    if (entries.get(0).getGeneratedColumn() > column) {
        return getPreviousMapping(lineNumber);
    }
    int index = search(entries, column, 0, entries.size() - 1);
    Preconditions.checkState(index >= 0, ""unexpected:%s"", index);
    return getOriginalMappingForEntry(entries.get(index));
}","public void test55() throws Throwable {
    SourceMapConsumerV3 sourceMapConsumerV3_0 = new SourceMapConsumerV3();
    // Undeclared exception!
    try {
        sourceMapConsumerV3_0.getMappingForLine(5225, 5225);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.debugging.sourcemap.SourceMapConsumerV3"", e);
    }
}",""
"@Override
public Collection<OriginalMapping> getReverseMapping(String originalFile, int line, int column) {
    // TODO(user): This implementation currently does not make use of the column
    // parameter.
    // Synchronization needs to be handled by callers.
    if (reverseSourceMapping == null) {
        createReverseMapping();
    }
    Map<Integer, Collection<OriginalMapping>> sourceLineToCollectionMap = reverseSourceMapping.get(originalFile);
    if (sourceLineToCollectionMap == null) {
        return Collections.emptyList();
    } else {
        Collection<OriginalMapping> mappings = sourceLineToCollectionMap.get(line);
        if (mappings == null) {
            return Collections.emptyList();
        } else {
            return mappings;
        }
    }
}","public void test66() throws Throwable {
    SourceMapConsumerV3 sourceMapConsumerV3_0 = new SourceMapConsumerV3();
    // Undeclared exception!
    try {
        sourceMapConsumerV3_0.getReverseMapping("""", (-3779), (-3779));
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.debugging.sourcemap.SourceMapConsumerV3"", e);
    }
}",""
