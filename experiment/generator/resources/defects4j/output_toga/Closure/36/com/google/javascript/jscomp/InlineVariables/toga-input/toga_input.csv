focal_method,test_prefix,docstring
"@Override
public void process(Node externs, Node root) {
    ReferenceCollectingCallback callback = new ReferenceCollectingCallback(compiler, new InliningBehavior(), getFilterForMode());
    callback.process(externs, root);
}","public void test00() throws Throwable {
    Compiler compiler0 = new Compiler();
    InlineVariables.Mode inlineVariables_Mode0 = InlineVariables.Mode.CONSTANTS_ONLY;
    InlineVariables inlineVariables0 = new InlineVariables(compiler0, inlineVariables_Mode0, true);
    // Undeclared exception!
    try {
        inlineVariables0.process((Node) null, (Node) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",""
"@Override
public void process(Node externs, Node root) {
    ReferenceCollectingCallback callback = new ReferenceCollectingCallback(compiler, new InliningBehavior(), getFilterForMode());
    callback.process(externs, root);
}","public void test11() throws Throwable {
    Compiler compiler0 = new Compiler();
    InlineVariables.Mode inlineVariables_Mode0 = InlineVariables.Mode.ALL;
    InlineVariables inlineVariables0 = new InlineVariables(compiler0, inlineVariables_Mode0, true);
    // Undeclared exception!
    try {
        inlineVariables0.process((Node) null, (Node) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",""
"@Override
public void process(Node externs, Node root) {
    ReferenceCollectingCallback callback = new ReferenceCollectingCallback(compiler, new InliningBehavior(), getFilterForMode());
    callback.process(externs, root);
}","public void test22() throws Throwable {
    Compiler compiler0 = new Compiler();
    InlineVariables.Mode inlineVariables_Mode0 = InlineVariables.Mode.LOCALS_ONLY;
    InlineVariables inlineVariables0 = new InlineVariables(compiler0, inlineVariables_Mode0, true);
    // Undeclared exception!
    try {
        inlineVariables0.process((Node) null, (Node) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",""
