project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0011,"public void test0011() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(0, node0.getSideEffectFlags());
}",0,"assertEquals(0, node0.getSideEffectFlags())"
project,0,test0012,"public void test0012() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test0013,"public void test0013() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertTrue(node0.isQualifiedName());
}",0,
project,0,test0024,"public void test0024() throws Throwable {
    Node node0 = new Node((-1701), (-1701), (-1701));
    boolean boolean0 = NodeUtil.isNameReferenced(node0, ""m+DEB*@?n"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0035,"public void test0035() throws Throwable {
    Node node0 = new Node(108);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, (-1784));
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test0046,"public void test0046() throws Throwable {
    Node node0 = Node.newNumber(1241.5603038030308);
    boolean boolean0 = NodeUtil.isFunctionObjectCallOrApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0057,"public void test0057() throws Throwable {
    Node node0 = new Node(107);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0068,"public void test0068() throws Throwable {
    Node node0 = new Node(11);
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test0079,"public void test0079() throws Throwable {
    Node node0 = new Node(104, 104, 104);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDOT 104
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test00810,"public void test00810() throws Throwable {
    Node node0 = new Node(104, 104, 104);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test00911,"public void test00911() throws Throwable {
    Node node0 = Node.newNumber(Double.NaN);
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got NUMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01012,"public void test01012() throws Throwable {
    Node node0 = Node.newString(2746, ""[Tq+(}`&.m1wg,5[y"");
    boolean boolean0 = NodeUtil.containsCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01113,"public void test01113() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""Invalid attempt to remove node: "", (Node) null, ""Invalid attempt to remove node: "");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test01214,"public void test01214() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForFunction(node0, 4);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test01315,"public void test01315() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01416,"public void test01416() throws Throwable {
    Node node0 = Node.newString(30, ""arguments"");
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01517,"public void test01517() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    Node node1 = NodeUtil.getFunctionBody(node0);
    assertNull(node1);
}",0,
project,0,test01618,"public void test01618() throws Throwable {
    Node node0 = Node.newNumber(1732.47788);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test01619,"public void test01619() throws Throwable {
    Node node0 = Node.newNumber(1732.47788);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01720,"public void test01720() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01821,"public void test01821() throws Throwable {
    Node node0 = new Node(26, 26, (-6));
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01922,"public void test01922() throws Throwable {
    Node node0 = new Node(105);
    Node node1 = new Node(85, node0, node0, node0, node0, 48, 8);
    NodeUtil.getExpressionBooleanValue(node1);
}",0,
project,0,test02023,"public void test02023() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02124,"public void test02124() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test02225,"public void test02225() throws Throwable {
    Node node0 = new Node(100);
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02326,"public void test02326() throws Throwable {
    Node node0 = new Node(101);
    // Undeclared exception!
    try {
        NodeUtil.getExpressionBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02427,"public void test02427() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    NodeUtil.getExpressionBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test02428,"public void test02428() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    NodeUtil.getExpressionBooleanValue(node0);
    assertEquals(77, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test02429,"public void test02429() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    NodeUtil.getExpressionBooleanValue(node0);
    assertEquals(91, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test02530,"public void test02530() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    NodeUtil.getExpressionBooleanValue(node0);
}",1,
project,0,test02631,"public void test02631() throws Throwable {
    Node node0 = Node.newString("""");
    NodeUtil.getBooleanValue(node0);
}",0,
project,0,test02732,"public void test02732() throws Throwable {
    Node node0 = new Node(41);
    NodeUtil.getBooleanValue(node0);
}",0,
project,0,test02833,"public void test02833() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    NodeUtil.getExpressionBooleanValue(node0);
}",1,
project,0,test02934,"public void test02934() throws Throwable {
    Node node0 = Node.newString(44, ""1nfinity"");
    NodeUtil.getBooleanValue(node0);
}",0,
project,0,test03035,"public void test03035() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    NodeUtil.getBooleanValue(node0);
}",0,
project,0,test03136,"public void test03136() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    NodeUtil.getBooleanValue(node0);
}",0,
project,0,test03237,"public void test03237() throws Throwable {
    Node node0 = new Node(64);
    NodeUtil.getBooleanValue(node0);
}",0,
project,0,test03338,"public void test03338() throws Throwable {
    Node node0 = new Node(89);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getBooleanValue(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test03439,"public void test03439() throws Throwable {
    Node node0 = Node.newString(""=DYN1"");
    NodeUtil.getExpressionBooleanValue(node0);
}",1,
project,0,test03540,"public void test03540() throws Throwable {
    Node node0 = Node.newNumber(Double.NaN);
    NodeUtil.getExpressionBooleanValue(node0);
}",0,
project,0,test03641,"public void test03641() throws Throwable {
    Node node0 = Node.newString(67, ""%="");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""NaN"", node0);
    NodeUtil.getExpressionBooleanValue(node1);
    assertEquals(38, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test03642,"public void test03642() throws Throwable {
    Node node0 = Node.newString(67, ""%="");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""NaN"", node0);
    NodeUtil.getExpressionBooleanValue(node1);
    assertNotSame(node0, node1);
}",0,
project,0,test03743,"public void test03743() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""undefined"", 8, (-2187));
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""undefined"", string0);
}",1,
project,0,test03745,"public void test03745() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""undefined"", 8, (-2187));
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals((-1), node0.getLineno());
}",0,
project,0,test03846,"public void test03846() throws Throwable {
    Node node0 = Node.newString(""1l"");
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""1l"", string0);
}",1,
project,0,test03947,"public void test03947() throws Throwable {
    Node node0 = Node.newNumber(1241.5603038030308);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""1241.5603038030308"", string0);
}",1,
project,0,test04048,"public void test04048() throws Throwable {
    Node node0 = Node.newString(41, ""k"");
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""null"", string0);
}",1,
project,0,test04149,"public void test04149() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""false"", string0);
}",1,
project,0,test04250,"public void test04250() throws Throwable {
    Node node0 = Node.newString("""");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""undefined"", string0);
}",1,
project,0,test04251,"public void test04251() throws Throwable {
    Node node0 = Node.newString("""");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test04352,"public void test04352() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    String string0 = NodeUtil.getStringValue(node0);
    assertNull(string0);
}",1,
project,0,test04453,"public void test04453() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""iD_gCF"", 106, 106);
    String string0 = NodeUtil.getStringValue(node0);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test04454,"public void test04454() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""iD_gCF"", 106, 106);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(106, node0.getLineno());
}",1,
project,0,test04455,"public void test04455() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""iD_gCF"", 106, 106);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04456,"public void test04456() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""iD_gCF"", 106, 106);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(106, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test04557,"public void test04557() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    String string0 = NodeUtil.getStringValue(node0);
    assertNotNull(string0);
}",1,
project,0,test04558,"public void test04558() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(94, node0.getLineno());
}",0,
project,0,test04559,"public void test04559() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(94, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test04661,"public void test04661() throws Throwable {
    Node node0 = Node.newNumber((double) 17);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""17"", string0);
}",0,
project,0,test04762,"public void test04762() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""PRIVATE"", 3292, 3292);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(3292, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test04763,"public void test04763() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""PRIVATE"", 3292, 3292);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(3292, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test04764,"public void test04764() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""PRIVATE"", 3292, 3292);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test04765,"public void test04765() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""PRIVATE"", 3292, 3292);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test04866,"public void test04866() throws Throwable {
    Node node0 = Node.newString(114, ""rI"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,assertNotNull(double0)
project,0,test04967,"public void test04967() throws Throwable {
    Node node0 = Node.newNumber((double) 57, 57, (-48));
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(57.0, (double) double0, 0.01);
}",0,
project,0,test05068,"public void test05068() throws Throwable {
    Node node0 = new Node(41);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test05169,"public void test05169() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test05270,"public void test05270() throws Throwable {
    Node node0 = Node.newString(44, ""^="");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(1.0, (double) double0, 0.01);
}",0,
project,0,test05371,"public void test05371() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertNotNull(node0);
}",0,
project,0,test05372,"public void test05372() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test05474,"public void test05474() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 16, (-3788));
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test05476,"public void test05476() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 16, (-3788));
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test05577,"public void test05577() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""try "", (-46), 117);
    node0.addChildrenToBack(node0);
    String string0 = NodeUtil.getFunctionName(node0);
    assertEquals(1, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test05578,"public void test05578() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""try "", (-46), 117);
    node0.addChildrenToBack(node0);
    String string0 = NodeUtil.getFunctionName(node0);
    assertEquals(""try "", string0);
}",0,
project,0,test05679,"public void test05679() throws Throwable {
    Node node0 = Node.newString(77, ""<,R3,Np^"", 39, 39);
    Node node1 = new Node(105, node0, node0, node0, node0, (-2094), (-3));
    Node node2 = new Node((-37), node1);
    String string0 = NodeUtil.getNearestFunctionName(node1);
    assertEquals(""<,R3,Np^"", string0);
}",0,
project,0,test05781,"public void test05781() throws Throwable {
    Node node0 = Node.newNumber(1241.5603038030308);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test05882,"public void test05882() throws Throwable {
    Node node0 = Node.newString(""1l"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test05983,"public void test05983() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test06084,"public void test06084() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test06185,"public void test06185() throws Throwable {
    Node node0 = new Node(44, 44, 44);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test06286,"public void test06286() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test06387,"public void test06387() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""p('e]9@Gp7Gpu"", node0, """");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(43, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
project,0,test06388,"public void test06388() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""p('e]9@Gp7Gpu"", node0, """");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test06389,"public void test06389() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""p('e]9@Gp7Gpu"", node0, """");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertTrue(node1.isUnscopedQualifiedName());
}",0,assertFalse(node1.isUnscopedQualifiedName())
project,0,test06490,"public void test06490() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test06491,"public void test06491() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertEquals(94, node0.getLineno());
}",0,
project,0,test06492,"public void test06492() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test06493,"public void test06493() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 94, 94);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertEquals(94, node0.getCharno());
}",0,
project,0,test06594,"public void test06594() throws Throwable {
    Node node0 = new Node(47);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test06695,"public void test06695() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test06796,"public void test06796() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test06897,"public void test06897() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test06998,"public void test06998() throws Throwable {
    Node node0 = new Node(105);
    Node node1 = new Node(85, node0, node0, node0, node0, 48, 8);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test07099,"public void test07099() throws Throwable {
    Node node0 = Node.newString(11, ""Uw*{eDIZ&"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test071100,"public void test071100() throws Throwable {
    Node node0 = new Node(12, 12, 12);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test072101,"public void test072101() throws Throwable {
    Node node0 = new Node(14, 14, 14);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test073102,"public void test073102() throws Throwable {
    Node node0 = new Node(17, (-1953), 37);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test074103,"public void test074103() throws Throwable {
    Node node0 = new Node(18, 153, 18);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test075104,"public void test075104() throws Throwable {
    Node node0 = new Node(25);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test076105,"public void test076105() throws Throwable {
    Node node0 = Node.newString(19, ""c!7klT78fg"");
    Vector<String> vector0 = new Vector<String>();
    ImmutableSortedSet<String> immutableSortedSet0 = ImmutableSortedSet.withExplicitOrder((List<String>) vector0);
    Node node1 = new Node(27, node0, node0, node0, 32, 32);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node1, immutableSortedSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test077106,"public void test077106() throws Throwable {
    Node node0 = new Node(28, 2, 42);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test078107,"public void test078107() throws Throwable {
    Node node0 = new Node(2770);
    Node node1 = new Node(29, node0, node0, node0, node0, 1856, 2);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test079108,"public void test079108() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test080109,"public void test080109() throws Throwable {
    Node node0 = new Node(31);
    Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
    doReturn(false).when(iterator0).hasNext();
    ImmutableSortedSet<String> immutableSortedSet0 = ImmutableSortedSet.copyOf((Iterator<? extends String>) iterator0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, immutableSortedSet0);
    assertFalse(boolean0);
}",0,
project,0,test081110,"public void test081110() throws Throwable {
    Node node0 = Node.newString(32, ""OR ryX] \n"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test082111,"public void test082111() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$10"", 76, 76);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertEquals(76, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test082112,"public void test082112() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$10"", 76, 76);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test082113,"public void test082113() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$10"", 76, 76);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test082114,"public void test082114() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$10"", 76, 76);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertEquals(76, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test082115,"public void test082115() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$10"", 76, 76);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test083116,"public void test083116() throws Throwable {
    Node node0 = Node.newString(35, ""Uw*{eDIZ&"");
    ImmutableSet<String> immutableSet0 = ImmutableSet.of(""GETELEM Uw*{eDIZ&\n"", ""AK{"", "">>"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, immutableSet0);
    assertFalse(boolean0);
}",0,
project,0,test084117,"public void test084117() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test084118,"public void test084118() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertEquals(0, node0.getSideEffectFlags());
}",0,"assertEquals(0, node0.getSideEffectFlags())"
project,0,test084119,"public void test084119() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""IXV"", (-1), (-1));
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test085120,"public void test085120() throws Throwable {
    Node node0 = Node.newNumber((double) 14);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test086121,"public void test086121() throws Throwable {
    Node node0 = Node.newString("""");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test087122,"public void test087122() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test088123,"public void test088123() throws Throwable {
    Node node0 = new Node(100);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Node node1 = new Node(42, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test089124,"public void test089124() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test090125,"public void test090125() throws Throwable {
    Node node0 = Node.newString(44, ""toStr[jig"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test091126,"public void test091126() throws Throwable {
    Node node0 = new Node(45, 45, (-6));
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test092127,"public void test092127() throws Throwable {
    Node node0 = new Node(46);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test093128,"public void test093128() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""rNyecV2~b"", 49, (-9));
    ImmutableSet<String> immutableSet0 = ImmutableSet.of(""IXV"", ""rNyecV2~b"", ""IXV"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, immutableSet0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test093129,"public void test093129() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""rNyecV2~b"", 49, (-9));
    ImmutableSet<String> immutableSet0 = ImmutableSet.of(""IXV"", ""rNyecV2~b"", ""IXV"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, immutableSet0);
    assertTrue(boolean0);
}",0,
project,0,test094130,"public void test094130() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""zXGQ6R[X!B *I&lY*Mh"", ""H(qb585z`v+&gM9|+"");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test095131,"public void test095131() throws Throwable {
    Node node0 = new Node(61);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test096132,"public void test096132() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""zXGQ6R[X!B *I&lY*Mh"", ""H(qb585z`v+&gM9|+"");
    node0.addChildToFront(node0);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test097133,"public void test097133() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test098134,"public void test098134() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test099135,"public void test099135() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test100136,"public void test100136() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(12);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test101137,"public void test101137() throws Throwable {
    Node node0 = Node.newString(13, ""Inciniey"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test102138,"public void test102138() throws Throwable {
    Node node0 = new Node(14);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test103139,"public void test103139() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(15);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test104140,"public void test104140() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test105141,"public void test105141() throws Throwable {
    Node node0 = Node.newString(126, """");
    Node node1 = new Node(17, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test106142,"public void test106142() throws Throwable {
    Node node0 = new Node(18, 18, 18);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test107143,"public void test107143() throws Throwable {
    Node node0 = Node.newString(19, ""FNHS[WTZWSDlN|"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test108144,"public void test108144() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(20);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test109145,"public void test109145() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(21);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test110146,"public void test110146() throws Throwable {
    Node node0 = new Node(23, 23, 23);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test111147,"public void test111147() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(24);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test112148,"public void test112148() throws Throwable {
    Node node0 = new Node(25);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test113149,"public void test113149() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(26);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test114150,"public void test114150() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(27);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test115151,"public void test115151() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(28);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test116152,"public void test116152() throws Throwable {
    Node node0 = new Node(2770);
    Node node1 = new Node(29, node0, node0, node0, node0, 1856, 2);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test117153,"public void test117153() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test118154,"public void test118154() throws Throwable {
    Node node0 = new Node(31);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDELPROP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test119155,"public void test119155() throws Throwable {
    Node node0 = new Node(32, 51, (-3100));
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test120156,"public void test120156() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertEquals(80, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test120157,"public void test120157() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertEquals(80, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test120158,"public void test120158() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test120159,"public void test120159() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test121160,"public void test121160() throws Throwable {
    Node node0 = Node.newString(104, "")"");
    Node node1 = new Node(34, node0, node0, node0, (-2010), 29);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETPROP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test122161,"public void test122161() throws Throwable {
    Node node0 = new Node(81);
    Node node1 = new Node(36, node0, node0, node0, node0);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETELEM
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test123162,"public void test123162() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(37);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test124163,"public void test124163() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(38);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test125164,"public void test125164() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test126165,"public void test126165() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test127166,"public void test127166() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test128167,"public void test128167() throws Throwable {
    Node node0 = Node.newString(48, ""y7cX^k9JL\u0003-MT[V/"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test129168,"public void test129168() throws Throwable {
    Node node0 = new Node(112);
    Node node1 = new Node(49, node0, node0, node0, node0, 256, 28);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW 256
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test130169,"public void test130169() throws Throwable {
    Node node0 = Node.newString(50, ""catch("");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test131170,"public void test131170() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test132171,"public void test132171() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(53);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test133172,"public void test133172() throws Throwable {
    Node node0 = new Node(54, 54, 54);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGETVAR 54
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test134173,"public void test134173() throws Throwable {
    Node node0 = new Node(55);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETVAR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test135174,"public void test135174() throws Throwable {
    Node node0 = Node.newString(56, ""+=XL"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test136175,"public void test136175() throws Throwable {
    Node node0 = Node.newString(57, ""exe"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test137176,"public void test137176() throws Throwable {
    Node node0 = new Node(58, 43, 43);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_VALUES 43
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test138177,"public void test138177() throws Throwable {
    Node node0 = new Node(59);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_NEXT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test139178,"public void test139178() throws Throwable {
    Node node0 = Node.newString(60, ""NodeUtil$VarCollector"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,
project,0,test140179,"public void test140179() throws Throwable {
    Node node0 = new Node(61, (-61), 61);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test141180,"public void test141180() throws Throwable {
    Node node0 = new Node(62, 62, 62);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETURN_RESULT 62
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test142181,"public void test142181() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test143182,"public void test143182() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(64);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test144183,"public void test144183() throws Throwable {
    Node node0 = Node.newString(65, ""FNHS[WTZWSDlNj"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test145184,"public void test145184() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test146185,"public void test146185() throws Throwable {
    Node node0 = new Node(67);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEL_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test147186,"public void test147186() throws Throwable {
    Node node0 = Node.newString(68, ""nL"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test148187,"public void test148187() throws Throwable {
    Node node0 = Node.newString(69, ""EXTn8RS"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test149188,"public void test149188() throws Throwable {
    Node node0 = Node.newString(71, ""NodeUtil$VarCollector"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,
project,0,test150189,"public void test150189() throws Throwable {
    Node node0 = new Node(72, 72, 72);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLTEXT 72
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test151190,"public void test151190() throws Throwable {
    Node node0 = new Node(73, 73, 73);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_MEMBER 73
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test152191,"public void test152191() throws Throwable {
    Node node0 = new Node(74, 74, 74);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_MEMBER 74
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test153192,"public void test153192() throws Throwable {
    Node node0 = new Node(75, 75, (-1763));
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test154193,"public void test154193() throws Throwable {
    Node node0 = Node.newString(76, ""FNHS[WTZWSDlN|"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test155194,"public void test155194() throws Throwable {
    Node node0 = new Node(77);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test156195,"public void test156195() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test157196,"public void test157196() throws Throwable {
    Node node0 = Node.newString(79, ""e6exoHo?]7$mVo9rE"", 79, 51);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLB e6exoHo?]7$mVo9rE 79
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test158197,"public void test158197() throws Throwable {
    Node node0 = new Node(80);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRB
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test159198,"public void test159198() throws Throwable {
    Node node0 = new Node(81);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test160199,"public void test160199() throws Throwable {
    Node node0 = new Node(41);
    Node node1 = new Node(82, node0, node0, node0, node0, (-1), 1946);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test161200,"public void test161200() throws Throwable {
    Node node0 = new Node(83, 83, 83);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLP 83
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test162201,"public void test162201() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test163202,"public void test163202() throws Throwable {
    Node node0 = new Node(85);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test164203,"public void test164203() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test165204,"public void test165204() throws Throwable {
    Node node0 = new Node(87, 87, 87);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test166205,"public void test166205() throws Throwable {
    Node node0 = Node.newString(88, "")"");
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test167206,"public void test167206() throws Throwable {
    Node node0 = new Node(89);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test168207,"public void test168207() throws Throwable {
    Node node0 = new Node(91, 91, 91);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test169208,"public void test169208() throws Throwable {
    Node node0 = Node.newString(92, ""S`h+{H}S"");
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test170209,"public void test170209() throws Throwable {
    Node node0 = new Node(94, 94, 94);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test171210,"public void test171210() throws Throwable {
    Node node0 = Node.newString(95, ""try "");
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test172211,"public void test172211() throws Throwable {
    Node node0 = Node.newString(96, ""Ndp3@$E1kCNI}GBT"");
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test173212,"public void test173212() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test174213,"public void test174213() throws Throwable {
    Node node0 = new Node(99, 99, 99);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCOLON 99
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test175214,"public void test175214() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(100);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test176215,"public void test176215() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test177216,"public void test177216() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test178217,"public void test178217() throws Throwable {
    Node node0 = Node.newString(103, ""F`oD0{gLd/|t'[b/D"", 1887, 1887);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test179218,"public void test179218() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test180219,"public void test180219() throws Throwable {
    Node node0 = new Node(106, 106, 65136);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test181220,"public void test181220() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(108);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test182221,"public void test182221() throws Throwable {
    Node node0 = new Node(109);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test183222,"public void test183222() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(110);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test184223,"public void test184223() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test185224,"public void test185224() throws Throwable {
    Node node0 = new Node(112);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test186225,"public void test186225() throws Throwable {
    Node node0 = new Node(113, 113, 113);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test187226,"public void test187226() throws Throwable {
    Node node0 = Node.newString(114, ""rI"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test188227,"public void test188227() throws Throwable {
    Node node0 = Node.newString(""$R~"");
    Node node1 = new Node(116, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test189228,"public void test189228() throws Throwable {
    Node node0 = Node.newString(117, ""com.google.common.collect.ExplicitOrdering"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test190229,"public void test190229() throws Throwable {
    Node node0 = Node.newString(68, ""nL"");
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    Node node1 = NodeUtil.newVarNode(""0h4ahDRK)"", node0);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeVAR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test191230,"public void test191230() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test192231,"public void test192231() throws Throwable {
    Node node0 = Node.newString(120, ""Dae"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test193232,"public void test193232() throws Throwable {
    Node node0 = Node.newString(121, ""Dae"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test194233,"public void test194233() throws Throwable {
    Node node0 = new Node(664);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test195234,"public void test195234() throws Throwable {
    Node node0 = Node.newString(31, "")"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test196235,"public void test196235() throws Throwable {
    Node node0 = new Node(32);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test197236,"public void test197236() throws Throwable {
    Node node0 = Node.newString(34, ""s+gw,~GRk9t#ac}Gd"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test198237,"public void test198237() throws Throwable {
    Node node0 = Node.newString(35, ""UI*{eDOJ&"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test199238,"public void test199238() throws Throwable {
    Node node0 = Node.newString(37, "")"");
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test200239,"public void test200239() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test201240,"public void test201240() throws Throwable {
    Node node0 = Node.newString(42, ""iE\""nD?]I&5s^c[Pt#NZ"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test202241,"public void test202241() throws Throwable {
    Node node0 = new Node(43);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test203242,"public void test203242() throws Throwable {
    Node node0 = Node.newString(44, ""1nfinity"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test204243,"public void test204243() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test205244,"public void test205244() throws Throwable {
    Node node0 = Node.newString(46, ""Dv*;f;1\"""");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test206245,"public void test206245() throws Throwable {
    Node node0 = Node.newString(49, ""=DYN1"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test207246,"public void test207246() throws Throwable {
    Node node0 = new Node(51);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test208247,"public void test208247() throws Throwable {
    Node node0 = Node.newString(54, ""FNHS[WTZWSDlNj"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test209248,"public void test209248() throws Throwable {
    Node node0 = new Node(58);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test210249,"public void test210249() throws Throwable {
    Node node0 = Node.newString(59, ""D{"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test211250,"public void test211250() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test212251,"public void test212251() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test213252,"public void test213252() throws Throwable {
    Node node0 = Node.newString(67, ""catch("");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test214253,"public void test214253() throws Throwable {
    Node node0 = Node.newString(70, ""Mvj`FMfK3y`6J jQ5"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test215254,"public void test215254() throws Throwable {
    Node node0 = Node.newString(72, ""FNHS[WTZWSDlN|"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216255,"public void test216255() throws Throwable {
    Node node0 = new Node(73, 73, 73);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test217256,"public void test217256() throws Throwable {
    Node node0 = new Node(74);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test218257,"public void test218257() throws Throwable {
    Node node0 = new Node(75, 75, 65136);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test219258,"public void test219258() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test220259,"public void test220259() throws Throwable {
    Node node0 = Node.newString(80, ""+ 6S%O.PGCiL}Y"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test221260,"public void test221260() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test222261,"public void test222261() throws Throwable {
    Node node0 = Node.newString(83, ""FNS[WTWSDlN|"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test223262,"public void test223262() throws Throwable {
    Node node0 = new Node(98);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test224263,"public void test224263() throws Throwable {
    Node node0 = Node.newString(99, ""N'ZK`[Na!DfssM"", 99, 64336);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225264,"public void test225264() throws Throwable {
    Node node0 = new Node(100);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test226265,"public void test226265() throws Throwable {
    Node node0 = Node.newString(101, ""exec"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test227266,"public void test227266() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test228267,"public void test228267() throws Throwable {
    Node node0 = Node.newString(110, ""FNHS[WTZWSDlNj"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test229268,"public void test229268() throws Throwable {
    Node node0 = Node.newString(115, ""~e"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,
project,0,test230269,"public void test230269() throws Throwable {
    Node node0 = Node.newString(""ENUM_INIT_ARRAY"");
    Node node1 = new Node(118, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test231270,"public void test231270() throws Throwable {
    Node node0 = Node.newString(123, ""\""h'B5gAgku7$FP*/`@"", 123, 123);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test232271,"public void test232271() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test233272,"public void test233272() throws Throwable {
    Node node0 = new Node(125);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test234273,"public void test234273() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test235274,"public void test235274() throws Throwable {
    Node node0 = new Node(128);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test236275,"public void test236275() throws Throwable {
    Node node0 = new Node(129);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test237276,"public void test237276() throws Throwable {
    Node node0 = Node.newString(64, ""=XnL"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test238277,"public void test238277() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test239278,"public void test239278() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test240279,"public void test240279() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    Node node1 = new Node(22, node0, node0, node0, node0, 48, 8);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test241280,"public void test241280() throws Throwable {
    Node node0 = Node.newString(30, ""catch("");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test242281,"public void test242281() throws Throwable {
    Node node0 = Node.newString(97, ""catch("", 97, 97);
    Node node1 = new Node(97, node0, 46, (-2));
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test243282,"public void test243282() throws Throwable {
    Node node0 = Node.newString(93, ""9 F9s%|Z1!'i"");
    Node node1 = new Node(38, node0, node0, node0, node0);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test244283,"public void test244283() throws Throwable {
    Node node0 = new Node(100);
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got OR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test245284,"public void test245284() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    // Undeclared exception!
    try {
        NodeUtil.callHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test246285,"public void test246285() throws Throwable {
    Node node0 = new Node(37, 37, 37);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test247286,"public void test247286() throws Throwable {
    Node node0 = new Node(89);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test248287,"public void test248287() throws Throwable {
    Node node0 = new Node(30, 30, 3719);
    // Undeclared exception!
    try {
        NodeUtil.nodeTypeMayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test249288,"public void test249288() throws Throwable {
    Node node0 = Node.newString(31, "")"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250289,"public void test250289() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertEquals(91, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test250290,"public void test250290() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test250291,"public void test250291() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertEquals(77, node0.getCharno());
}",0,
project,0,test250292,"public void test250292() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test251293,"public void test251293() throws Throwable {
    Node node0 = Node.newString(49, ""=DYN1"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test252294,"public void test252294() throws Throwable {
    Node node0 = Node.newString(113, ""p-%"", (-1386), 92);
    Node node1 = new Node(102, node0);
    Compiler compiler0 = new Compiler();
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test253295,"public void test253295() throws Throwable {
    Node node0 = Node.newString(103, ""nL"", 165, 1042);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test254296,"public void test254296() throws Throwable {
    Node node0 = new Node(37, 37, (-751));
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test255297,"public void test255297() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test255298,"public void test255298() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertEquals(91, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test255299,"public void test255299() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertEquals(77, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test255300,"public void test255300() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""::oQ67/=*"", 91, 77);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test256301,"public void test256301() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    Node node1 = NodeUtil.newExpr(node0);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, set0);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test256302,"public void test256302() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    Node node1 = NodeUtil.newExpr(node0);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, set0);
    assertTrue(boolean0);
}",0,
project,0,test256303,"public void test256303() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    Node node1 = NodeUtil.newExpr(node0);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, set0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test256304,"public void test256304() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    Node node1 = NodeUtil.newExpr(node0);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, set0);
    assertEquals((-1), node1.getLineno());
}",0,"assertEquals(0, node1.getLineno())"
project,0,test256305,"public void test256305() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    Node node1 = NodeUtil.newExpr(node0);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, set0);
    assertTrue(node0.isQualifiedName());
}",0,
project,0,test257306,"public void test257306() throws Throwable {
    Node node0 = new Node(105);
    Node node1 = new Node(85, node0, node0, node0, node0, 48, 8);
    boolean boolean0 = NodeUtil.canBeSideEffected(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test258307,"public void test258307() throws Throwable {
    int int0 = NodeUtil.precedence(4);
    assertEquals(15, int0);
}",1,
project,0,test259308,"public void test259308() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test260309,"public void test260309() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(5);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for goto (type 5)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test261310,"public void test261310() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(6);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ifeq (type 6)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test262311,"public void test262311() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(7);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ifne (type 7)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test263312,"public void test263312() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(8);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setname (type 8)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test264313,"public void test264313() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test265314,"public void test265314() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test266315,"public void test266315() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test267316,"public void test267316() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test268317,"public void test268317() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test269318,"public void test269318() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test270319,"public void test270319() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test271320,"public void test271320() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test272321,"public void test272321() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test273322,"public void test273322() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test274323,"public void test274323() throws Throwable {
    int int0 = NodeUtil.precedence(19);
    assertEquals(10, int0);
}",0,
project,0,test275324,"public void test275324() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test276325,"public void test276325() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test277326,"public void test277326() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test278327,"public void test278327() throws Throwable {
    int int0 = NodeUtil.precedence(23);
    assertEquals(12, int0);
}",0,
project,0,test279328,"public void test279328() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test280329,"public void test280329() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test281330,"public void test281330() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test282331,"public void test282331() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test283332,"public void test283332() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test284333,"public void test284333() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test285334,"public void test285334() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test286335,"public void test286335() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test287336,"public void test287336() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test288337,"public void test288337() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test289338,"public void test289338() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setprop (type 34)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test290339,"public void test290339() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test291340,"public void test291340() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setelem (type 36)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test292341,"public void test292341() throws Throwable {
    int int0 = NodeUtil.precedence(37);
    assertEquals(15, int0);
}",0,
project,0,test293342,"public void test293342() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test294343,"public void test294343() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test295344,"public void test295344() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test296345,"public void test296345() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test297346,"public void test297346() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test298347,"public void test298347() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test299348,"public void test299348() throws Throwable {
    int int0 = NodeUtil.precedence(45);
    assertEquals(8, int0);
}",0,
project,0,test300349,"public void test300349() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test301350,"public void test301350() throws Throwable {
    int int0 = NodeUtil.precedence(47);
    assertEquals(15, int0);
}",0,
project,0,test302351,"public void test302351() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for bindname (type 48)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test303352,"public void test303352() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for throw (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test304353,"public void test304353() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=50> (type 50)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test305354,"public void test305354() throws Throwable {
    int int0 = NodeUtil.precedence(51);
    assertEquals(9, int0);
}",0,
project,0,test306355,"public void test306355() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test307356,"public void test307356() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=53> (type 53)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test308357,"public void test308357() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(54);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for getvar (type 54)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test309358,"public void test309358() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(55);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setvar (type 55)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test310359,"public void test310359() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=56> (type 56)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test311360,"public void test311360() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(57);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=57> (type 57)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test312361,"public void test312361() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=58> (type 58)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test313362,"public void test313362() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=59> (type 59)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test314363,"public void test314363() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(60);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=60> (type 60)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test315364,"public void test315364() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for thisfn (type 61)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test316365,"public void test316365() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test317366,"public void test317366() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test318367,"public void test318367() throws Throwable {
    int int0 = NodeUtil.precedence(65);
    assertEquals(15, int0);
}",0,
project,0,test319368,"public void test319368() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=66> (type 66)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test320369,"public void test320369() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=67> (type 67)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test321370,"public void test321370() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=68> (type 68)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test322371,"public void test322371() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ref_special (type 69)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test323372,"public void test323372() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=70> (type 70)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test324373,"public void test324373() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(71);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=71> (type 71)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test325374,"public void test325374() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=72> (type 72)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test326375,"public void test326375() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=73> (type 73)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test327376,"public void test327376() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=74> (type 74)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test328377,"public void test328377() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=75> (type 75)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test329378,"public void test329378() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(76);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=76> (type 76)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test330379,"public void test330379() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for try (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test331380,"public void test331380() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for semi (type 78)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test332381,"public void test332381() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lb (type 79)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test333382,"public void test333382() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rb (type 80)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test334383,"public void test334383() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lc (type 81)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test335384,"public void test335384() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rc (type 82)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test336385,"public void test336385() throws Throwable {
    int int0 = NodeUtil.precedence(83);
    assertEquals(15, int0);
}",0,
project,0,test337386,"public void test337386() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rp (type 84)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test338387,"public void test338387() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test339388,"public void test339388() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test340389,"public void test340389() throws Throwable {
    int int0 = NodeUtil.precedence(87);
    assertEquals(1, int0);
}",0,
project,0,test341390,"public void test341390() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test342391,"public void test342391() throws Throwable {
    int int0 = NodeUtil.precedence(89);
    assertEquals(1, int0);
}",0,
project,0,test343392,"public void test343392() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test344393,"public void test344393() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test345394,"public void test345394() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test346395,"public void test346395() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test347396,"public void test347396() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test348397,"public void test348397() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test349398,"public void test349398() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test350399,"public void test350399() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test351400,"public void test351400() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test352401,"public void test352401() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for colon (type 99)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test353402,"public void test353402() throws Throwable {
    int int0 = NodeUtil.precedence(100);
    assertEquals(3, int0);
}",0,
project,0,test354403,"public void test354403() throws Throwable {
    int int0 = NodeUtil.precedence(101);
    assertEquals(4, int0);
}",0,
project,0,test355404,"public void test355404() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test356405,"public void test356405() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test357406,"public void test357406() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for dot (type 104)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test358407,"public void test358407() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test359408,"public void test359408() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for export (type 106)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test360409,"public void test360409() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for import (type 107)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test361410,"public void test361410() throws Throwable {
    int int0 = NodeUtil.precedence(108);
    assertEquals(15, int0);
}",0,
project,0,test362411,"public void test362411() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for else (type 109)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test363412,"public void test363412() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for switch (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test364413,"public void test364413() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for case (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test365414,"public void test365414() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for default (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366415,"public void test366415() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for while (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test367416,"public void test367416() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for do (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test368417,"public void test368417() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for for (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test369418,"public void test369418() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for break (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test370419,"public void test370419() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for continue (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371420,"public void test371420() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for var (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test372421,"public void test372421() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for with (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test373422,"public void test373422() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for catch (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test374423,"public void test374423() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for finally (type 121)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test375424,"public void test375424() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test376425,"public void test376425() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for reserved (type 123)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test377426,"public void test377426() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test378427,"public void test378427() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(2);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for enterwith (type 2)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test379428,"public void test379428() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test380429,"public void test380429() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(39);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test381430,"public void test381430() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test382431,"public void test382431() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test383432,"public void test383432() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test384433,"public void test384433() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test385434,"public void test385434() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test386435,"public void test386435() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test387436,"public void test387436() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test388437,"public void test388437() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(118);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test389438,"public void test389438() throws Throwable {
    Node node0 = new Node(90);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test390439,"public void test390439() throws Throwable {
    Node node0 = new Node(89);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(11, int0);
}",0,"assertEquals(1, int0)"
project,0,test391440,"public void test391440() throws Throwable {
    Node node0 = Node.newString(97, ""catch("", 97, 97);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(25, int0);
}",0,"assertEquals(1, int0)"
project,0,test392441,"public void test392441() throws Throwable {
    Node node0 = Node.newString(93, ""com.google.javascript.jscomp.DefaultPassConfig$10"");
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(21, int0);
}",0,"assertEquals(1, int0)"
project,0,test393442,"public void test393442() throws Throwable {
    Node node0 = Node.newString(95, ""Zy "");
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(23, int0);
}",0,"assertEquals(1, int0)"
project,0,test394443,"public void test394443() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assiment op
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test395444,"public void test395444() throws Throwable {
    Node node0 = new Node(127, 127, 64);
    boolean boolean0 = NodeUtil.isExpressionNode(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test396445,"public void test396445() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertEquals(80, node1.getLineno());
}",0,
project,0,test396446,"public void test396446() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test396447,"public void test396447() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test396448,"public void test396448() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertEquals(80, node1.getCharno());
}",1,
project,0,test397449,"public void test397449() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test397450,"public void test397450() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertEquals(110, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test397451,"public void test397451() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertEquals(110, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test397452,"public void test397452() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(node0.isQualifiedName());
}",0,assertTrue(node0.isQualifiedName())
project,0,test398453,"public void test398453() throws Throwable {
    Node node0 = Node.newString(35, ""a5!;a N2(7Lywh%"", 84, 89);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test399454,"public void test399454() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Dv*;f;1\"""", (-46), 88);
    Node node1 = new Node(8, node0, node0, node0, node0, 5, 2264);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 7, compilerOptions0.sourceMapDetailLevel);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test399455,"public void test399455() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Dv*;f;1\"""", (-46), 88);
    Node node1 = new Node(8, node0, node0, node0, node0, 5, 2264);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 7, compilerOptions0.sourceMapDetailLevel);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test399456,"public void test399456() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Dv*;f;1\"""", (-46), 88);
    Node node1 = new Node(8, node0, node0, node0, node0, 5, 2264);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 7, compilerOptions0.sourceMapDetailLevel);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test400457,"public void test400457() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google*javascript.jscomp._odeUtil$VarCollector"", 88, 2894);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(88, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test400458,"public void test400458() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google*javascript.jscomp._odeUtil$VarCollector"", 88, 2894);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test400459,"public void test400459() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google*javascript.jscomp._odeUtil$VarCollector"", 88, 2894);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(2894, node0.getCharno());
}",1,
project,0,test400460,"public void test400460() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google*javascript.jscomp._odeUtil$VarCollector"", 88, 2894);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNull(node1);
}",0,
project,0,test400461,"public void test400461() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google*javascript.jscomp._odeUtil$VarCollector"", 88, 2894);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test401462,"public void test401462() throws Throwable {
    Node node0 = Node.newString(940, "")"");
    boolean boolean0 = NodeUtil.isVar(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test402463,"public void test402463() throws Throwable {
    Node node0 = new Node(118, 118, 118);
    boolean boolean0 = NodeUtil.isVar(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test403464,"public void test403464() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""rk"", (String) null);
    assertFalse(node0.isLocalResultCall());
}",0,assertTrue(node0.isLocalResultCall())
project,0,test404465,"public void test404465() throws Throwable {
    Node node0 = Node.newString(""rI"");
    boolean boolean0 = NodeUtil.isString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test405466,"public void test405466() throws Throwable {
    Node node0 = new Node(100);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test406467,"public void test406467() throws Throwable {
    Node node0 = new Node(80, 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprAssign(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test406468,"public void test406468() throws Throwable {
    Node node0 = new Node(80, 80, 80);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprAssign(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test407469,"public void test407469() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.isAssign(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test408470,"public void test408470() throws Throwable {
    Node node0 = new Node(86);
    boolean boolean0 = NodeUtil.isAssign(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test409471,"public void test409471() throws Throwable {
    Node node0 = new Node(42, 42, 42);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test410472,"public void test410472() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertEquals(130, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test410473,"public void test410473() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test411474,"public void test411474() throws Throwable {
    Node node0 = Node.newString(77, ""<,R3,Np^"", 39, 39);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test412475,"public void test412475() throws Throwable {
    Node node0 = new Node(115);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax();
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test413476,"public void test413476() throws Throwable {
    Node node0 = Node.newString(114, ""rI"");
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test414477,"public void test414477() throws Throwable {
    Node node0 = Node.newString(115, "")"");
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test415478,"public void test415478() throws Throwable {
    Node node0 = Node.newString(113, ""RegExP"");
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test416479,"public void test416479() throws Throwable {
    Node node0 = Node.newString(115, "")"");
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test417480,"public void test417480() throws Throwable {
    Node node0 = Node.newString(114, ""RegExP"");
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test418481,"public void test418481() throws Throwable {
    Node node0 = new Node((-4096));
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test419482,"public void test419482() throws Throwable {
    Node node0 = new Node(105);
    Node node1 = new Node(85, node0, node0, node0, node0, 48, 8);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test420483,"public void test420483() throws Throwable {
    Node node0 = new Node(105);
    node0.addChildAfter(node0, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test421484,"public void test421484() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test422485,"public void test422485() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test423486,"public void test423486() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test424487,"public void test424487() throws Throwable {
    Node node0 = Node.newString(112, "" Sw<=jv=s|arM^Vq"", 112, 112);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test425488,"public void test425488() throws Throwable {
    Node node0 = Node.newString(113, ""RegExp"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test426489,"public void test426489() throws Throwable {
    Node node0 = Node.newString(114, ""XTV85#7JMtIu_<{S[CE"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test427490,"public void test427490() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test428491,"public void test428491() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test429492,"public void test429492() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test430493,"public void test430493() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,
project,0,test431494,"public void test431494() throws Throwable {
    Node node0 = Node.newString(112, ""ux.Lj2"");
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test432495,"public void test432495() throws Throwable {
    Node node0 = new Node(113, 113, 113);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test433496,"public void test433496() throws Throwable {
    Node node0 = new Node(114);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test434497,"public void test434497() throws Throwable {
    Node node0 = new Node(119);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,
project,0,test435498,"public void test435498() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test436499,"public void test436499() throws Throwable {
    Node node0 = new Node((-4096));
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test437500,"public void test437500() throws Throwable {
    Node node0 = Node.newString(97, ""catch("", 97, 97);
    Node node1 = new Node(115, node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test438501,"public void test438501() throws Throwable {
    Node node0 = new Node(111);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test439502,"public void test439502() throws Throwable {
    Node node0 = new Node(112, (-2326), 112);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // DEFAULT does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test440503,"public void test440503() throws Throwable {
    Node node0 = Node.newString(113, ""RegExp"");
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test441504,"public void test441504() throws Throwable {
    Node node0 = new Node(74);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // REF_NS_MEMBER does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test442505,"public void test442505() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""zXGQ6R[X!B *I&lY*Mh"", ""H(qb585z`v+&gM9|+"");
    node0.addChildToFront(node0);
    boolean boolean0 = NodeUtil.isStatement(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test443506,"public void test443506() throws Throwable {
    Node node0 = Node.newString(111, ""~e"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test444507,"public void test444507() throws Throwable {
    Node node0 = new Node(112);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",1,
project,0,test445508,"public void test445508() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test446509,"public void test446509() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", (-473), 35);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test446510,"public void test446510() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", (-473), 35);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test447511,"public void test447511() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""hkN^+v"", 483, 23);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(483, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test447512,"public void test447512() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""hkN^+v"", 483, 23);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(23, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test447513,"public void test447513() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""hkN^+v"", 483, 23);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test448514,"public void test448514() throws Throwable {
    boolean boolean0 = NodeUtil.isLabelName((Node) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test449515,"public void test449515() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test450516,"public void test450516() throws Throwable {
    Node node0 = Node.newString(153, ""XTV85#7JMtIu_<{S[CE"");
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test451517,"public void test451517() throws Throwable {
    Node node0 = new Node(100);
    Node node1 = new Node(77, (-68), 4095);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node1, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: OR of TRY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test452518,"public void test452518() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""XJQ6R[X!B **&lY&Mh"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test453519,"public void test453519() throws Throwable {
    Node node0 = new Node(118);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",1,
project,0,test454520,"public void test454520() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""Infinity"");
    Node node1 = new Node(16, node0, node0);
    NodeUtil.removeChild(node1, node0);
    assertTrue(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test454521,"public void test454521() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""Infinity"");
    Node node1 = new Node(16, node0, node0);
    NodeUtil.removeChild(node1, node0);
    assertTrue(node1.hasOneChild());
}",0,
project,0,test455522,"public void test455522() throws Throwable {
    Node node0 = Node.newString(115, ""~e"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: FOR ~e of FOR ~e
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test456523,"public void test456523() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test457524,"public void test457524() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""Infinity"");
    Node node1 = new Node(41, node0, node0);
    boolean boolean0 = NodeUtil.tryMergeBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test458525,"public void test458525() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""zXGQ6R[X!B *I&lY*Mh"", ""H(qb585z`v+&gM9|+"");
    node0.addChildToFront(node0);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test459526,"public void test459526() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test460527,"public void test460527() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test461528,"public void test461528() throws Throwable {
    Node node0 = new Node(45, 45, (-6));
    boolean boolean0 = NodeUtil.isThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test462529,"public void test462529() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    Node node1 = new Node(22, node0, node0, node0, node0, 48, 8);
    boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test463530,"public void test463530() throws Throwable {
    Node node0 = Node.newString(65, ""FNHS[WTZWSDlNj"");
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test464531,"public void test464531() throws Throwable {
    Node node0 = Node.newString(37, ""5+[=8'\""tERm(<T%X"");
    // Undeclared exception!
    try {
        NodeUtil.isSimpleFunctionObjectCall(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test465532,"public void test465532() throws Throwable {
    Node node0 = Node.newNumber(1241.5603038030308);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test466533,"public void test466533() throws Throwable {
    Node node0 = new Node(47);
    boolean boolean0 = NodeUtil.isLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test467534,"public void test467534() throws Throwable {
    Node node0 = Node.newNumber(1241.560303803);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test468535,"public void test468535() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""goog.asserts.assertInstanceof"", ""var xx=;"");
    // Undeclared exception!
    try {
        NodeUtil.getFnParameters(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test469536,"public void test469536() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test470537,"public void test470537() throws Throwable {
    String string0 = NodeUtil.opToStr(9);
    assertNotNull(string0);
}",0,
project,0,test471539,"public void test471539() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertNotNull(string0);
}",0,
project,0,test472541,"public void test472541() throws Throwable {
    String string0 = NodeUtil.opToStr(10);
    assertEquals(""^"", string0);
}",0,
project,0,test473543,"public void test473543() throws Throwable {
    String string0 = NodeUtil.opToStr(11);
    assertEquals(""&"", string0);
}",0,
project,0,test474545,"public void test474545() throws Throwable {
    String string0 = NodeUtil.opToStr(13);
    assertNotNull(string0);
}",0,
project,0,test475547,"public void test475547() throws Throwable {
    String string0 = NodeUtil.opToStr(14);
    assertNotNull(string0);
}",0,
project,0,test476549,"public void test476549() throws Throwable {
    String string0 = NodeUtil.opToStr(15);
    assertNotNull(string0);
}",0,
project,0,test477551,"public void test477551() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(16);
    assertEquals("">"", string0);
}",1,
project,0,test478552,"public void test478552() throws Throwable {
    String string0 = NodeUtil.opToStr(17);
    assertEquals("">="", string0);
}",0,
project,0,test479553,"public void test479553() throws Throwable {
    String string0 = NodeUtil.opToStr(18);
    assertEquals(""<<"", string0);
}",0,
project,0,test480554,"public void test480554() throws Throwable {
    String string0 = NodeUtil.opToStr(19);
    assertEquals("">>"", string0);
}",0,
project,0,test481555,"public void test481555() throws Throwable {
    String string0 = NodeUtil.opToStr(20);
    assertEquals("">>>"", string0);
}",0,
project,0,test482556,"public void test482556() throws Throwable {
    String string0 = NodeUtil.opToStr(21);
    assertEquals(""+"", string0);
}",0,
project,0,test483557,"public void test483557() throws Throwable {
    String string0 = NodeUtil.opToStr(22);
    assertEquals(""-"", string0);
}",0,
project,0,test484558,"public void test484558() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(23);
    assertEquals(""*"", string0);
}",1,
project,0,test485559,"public void test485559() throws Throwable {
    String string0 = NodeUtil.opToStr(24);
    assertEquals(""/"", string0);
}",0,
project,0,test486560,"public void test486560() throws Throwable {
    String string0 = NodeUtil.opToStr(25);
    assertEquals(""%"", string0);
}",0,
project,0,test487561,"public void test487561() throws Throwable {
    String string0 = NodeUtil.opToStr(26);
    assertEquals(""!"", string0);
}",0,
project,0,test488562,"public void test488562() throws Throwable {
    String string0 = NodeUtil.opToStr(27);
    assertEquals(""~"", string0);
}",0,
project,0,test489563,"public void test489563() throws Throwable {
    String string0 = NodeUtil.opToStr(28);
    assertEquals(""+"", string0);
}",0,
project,0,test490564,"public void test490564() throws Throwable {
    String string0 = NodeUtil.opToStr(29);
    assertNotNull(string0);
}",0,
project,0,test491566,"public void test491566() throws Throwable {
    String string0 = NodeUtil.opToStr(30);
    assertNull(string0);
}",0,
project,0,test492567,"public void test492567() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(31);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 31: DELPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test493568,"public void test493568() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(32);
    assertEquals(""typeof"", string0);
}",1,
project,0,test494569,"public void test494569() throws Throwable {
    String string0 = NodeUtil.opToStr(33);
    assertNull(string0);
}",0,
project,0,test495570,"public void test495570() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 34: SETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test496571,"public void test496571() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(35);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 35: GETELEM
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test497572,"public void test497572() throws Throwable {
    String string0 = NodeUtil.opToStr(36);
    assertNull(string0);
}",0,
project,0,test498573,"public void test498573() throws Throwable {
    String string0 = NodeUtil.opToStr(37);
    assertNull(string0);
}",0,
project,0,test499574,"public void test499574() throws Throwable {
    String string0 = NodeUtil.opToStr(38);
    assertNull(string0);
}",0,
project,0,test500575,"public void test500575() throws Throwable {
    String string0 = NodeUtil.opToStr(39);
    assertNull(string0);
}",0,
project,0,test501576,"public void test501576() throws Throwable {
    String string0 = NodeUtil.opToStr(40);
    assertNull(string0);
}",0,
project,0,test502577,"public void test502577() throws Throwable {
    String string0 = NodeUtil.opToStr(41);
    assertNull(string0);
}",0,
project,0,test503578,"public void test503578() throws Throwable {
    String string0 = NodeUtil.opToStr(42);
    assertNull(string0);
}",0,
project,0,test504579,"public void test504579() throws Throwable {
    String string0 = NodeUtil.opToStr(43);
    assertNull(string0);
}",0,
project,0,test505580,"public void test505580() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(44);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 44: TRUE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test506581,"public void test506581() throws Throwable {
    String string0 = NodeUtil.opToStr(45);
    assertEquals(""==="", string0);
}",0,
project,0,test507582,"public void test507582() throws Throwable {
    String string0 = NodeUtil.opToStr(46);
    assertEquals(""!=="", string0);
}",0,
project,0,test508583,"public void test508583() throws Throwable {
    String string0 = NodeUtil.opToStr(47);
    assertNull(string0);
}",0,
project,0,test509584,"public void test509584() throws Throwable {
    String string0 = NodeUtil.opToStr(48);
    assertNull(string0);
}",0,
project,0,test510585,"public void test510585() throws Throwable {
    String string0 = NodeUtil.opToStr(49);
    assertNull(string0);
}",0,
project,0,test511586,"public void test511586() throws Throwable {
    String string0 = NodeUtil.opToStr(50);
    assertNull(string0);
}",0,
project,0,test512587,"public void test512587() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(51);
    assertEquals(""in"", string0);
}",1,
project,0,test513588,"public void test513588() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(52);
    assertEquals(""instanceof"", string0);
}",1,
project,0,test514589,"public void test514589() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 53: LOCAL_LOAD
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test515590,"public void test515590() throws Throwable {
    String string0 = NodeUtil.opToStr(54);
    assertNull(string0);
}",0,
project,0,test516591,"public void test516591() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(55);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 55: SETVAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test517592,"public void test517592() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 56: CATCH_SCOPE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test518593,"public void test518593() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(57);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 57: ENUM_INIT_KEYS
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test519594,"public void test519594() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 58: ENUM_INIT_VALUES
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test520595,"public void test520595() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 59: ENUM_NEXT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test521596,"public void test521596() throws Throwable {
    String string0 = NodeUtil.opToStr(60);
    assertNull(string0);
}",0,
project,0,test522597,"public void test522597() throws Throwable {
    String string0 = NodeUtil.opToStr(61);
    assertNull(string0);
}",0,
project,0,test523598,"public void test523598() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 62: RETURN_RESULT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test524599,"public void test524599() throws Throwable {
    String string0 = NodeUtil.opToStr(63);
    assertNull(string0);
}",0,
project,0,test525600,"public void test525600() throws Throwable {
    String string0 = NodeUtil.opToStr(64);
    assertNull(string0);
}",0,
project,0,test526601,"public void test526601() throws Throwable {
    String string0 = NodeUtil.opToStr(65);
    assertNull(string0);
}",0,
project,0,test527602,"public void test527602() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 66: SET_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test528603,"public void test528603() throws Throwable {
    String string0 = NodeUtil.opToStr(67);
    assertNull(string0);
}",0,
project,0,test529604,"public void test529604() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 68: REF_CALL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test530605,"public void test530605() throws Throwable {
    String string0 = NodeUtil.opToStr(69);
    assertNull(string0);
}",0,
project,0,test531606,"public void test531606() throws Throwable {
    String string0 = NodeUtil.opToStr(71);
    assertNull(string0);
}",0,
project,0,test532607,"public void test532607() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 72: ESCXMLTEXT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test533608,"public void test533608() throws Throwable {
    String string0 = NodeUtil.opToStr(73);
    assertNull(string0);
}",0,
project,0,test534609,"public void test534609() throws Throwable {
    String string0 = NodeUtil.opToStr(75);
    assertNull(string0);
}",0,
project,0,test535610,"public void test535610() throws Throwable {
    String string0 = NodeUtil.opToStr(76);
    assertNull(string0);
}",0,
project,0,test536611,"public void test536611() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 77: TRY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test537612,"public void test537612() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 78: SEMI
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test538613,"public void test538613() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 79: LB
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test539614,"public void test539614() throws Throwable {
    String string0 = NodeUtil.opToStr(80);
    assertNull(string0);
}",0,
project,0,test540615,"public void test540615() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 81: LC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test541616,"public void test541616() throws Throwable {
    String string0 = NodeUtil.opToStr(82);
    assertNull(string0);
}",0,
project,0,test542617,"public void test542617() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 83: LP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test543618,"public void test543618() throws Throwable {
    String string0 = NodeUtil.opToStr(84);
    assertNull(string0);
}",0,
project,0,test544619,"public void test544619() throws Throwable {
    String string0 = NodeUtil.opToStr(85);
    assertNull(string0);
}",0,
project,0,test545620,"public void test545620() throws Throwable {
    String string0 = NodeUtil.opToStr(86);
    assertEquals(""="", string0);
}",0,
project,0,test546621,"public void test546621() throws Throwable {
    String string0 = NodeUtil.opToStr(87);
    assertEquals(""|="", string0);
}",0,
project,0,test547622,"public void test547622() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(88);
    assertEquals(""^="", string0);
}",1,
project,0,test548623,"public void test548623() throws Throwable {
    String string0 = NodeUtil.opToStr(89);
    assertEquals(""&="", string0);
}",0,
project,0,test549624,"public void test549624() throws Throwable {
    String string0 = NodeUtil.opToStr(90);
    assertEquals(""<<="", string0);
}",0,
project,0,test550625,"public void test550625() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test551626,"public void test551626() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(92);
    assertEquals("">>>="", string0);
}",1,
project,0,test552627,"public void test552627() throws Throwable {
    String string0 = NodeUtil.opToStr(93);
    assertEquals(""+="", string0);
}",0,
project,0,test553628,"public void test553628() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(94);
    assertEquals(""-="", string0);
}",1,
project,0,test554629,"public void test554629() throws Throwable {
    String string0 = NodeUtil.opToStr(95);
    assertEquals(""*="", string0);
}",0,
project,0,test555630,"public void test555630() throws Throwable {
    String string0 = NodeUtil.opToStr(96);
    assertEquals(""/="", string0);
}",0,
project,0,test556631,"public void test556631() throws Throwable {
    String string0 = NodeUtil.opToStr(97);
    assertEquals(""%="", string0);
}",0,
project,0,test557632,"public void test557632() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(98);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 98: HOOK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test558633,"public void test558633() throws Throwable {
    String string0 = NodeUtil.opToStr(99);
    assertNull(string0);
}",0,
project,0,test559634,"public void test559634() throws Throwable {
    String string0 = NodeUtil.opToStr(100);
    assertEquals(""||"", string0);
}",0,
project,0,test560635,"public void test560635() throws Throwable {
    String string0 = NodeUtil.opToStr(101);
    assertEquals(""&&"", string0);
}",0,
project,0,test561636,"public void test561636() throws Throwable {
    String string0 = NodeUtil.opToStr(102);
    assertNull(string0);
}",0,
project,0,test562637,"public void test562637() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(103);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 103: DEC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test563638,"public void test563638() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 104: DOT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test564639,"public void test564639() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(105);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 105: FUNCTION
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test565640,"public void test565640() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 106: EXPORT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test566641,"public void test566641() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 107: IMPORT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test567642,"public void test567642() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 108: IF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test568643,"public void test568643() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 109: ELSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test569644,"public void test569644() throws Throwable {
    String string0 = NodeUtil.opToStr(110);
    assertNull(string0);
}",0,
project,0,test570645,"public void test570645() throws Throwable {
    String string0 = NodeUtil.opToStr(111);
    assertNull(string0);
}",0,
project,0,test571646,"public void test571646() throws Throwable {
    String string0 = NodeUtil.opToStr(112);
    assertNull(string0);
}",0,
project,0,test572647,"public void test572647() throws Throwable {
    String string0 = NodeUtil.opToStr(113);
    assertNull(string0);
}",0,
project,0,test573648,"public void test573648() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 114: DO
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test574649,"public void test574649() throws Throwable {
    String string0 = NodeUtil.opToStr(115);
    assertNull(string0);
}",0,
project,0,test575650,"public void test575650() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 116: BREAK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test576651,"public void test576651() throws Throwable {
    String string0 = NodeUtil.opToStr(117);
    assertNull(string0);
}",0,
project,0,test577652,"public void test577652() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 118: VAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test578653,"public void test578653() throws Throwable {
    String string0 = NodeUtil.opToStr(119);
    assertNull(string0);
}",0,
project,0,test579654,"public void test579654() throws Throwable {
    String string0 = NodeUtil.opToStr(120);
    assertNull(string0);
}",0,
project,0,test580655,"public void test580655() throws Throwable {
    String string0 = NodeUtil.opToStr(121);
    assertNull(string0);
}",0,
project,0,test581656,"public void test581656() throws Throwable {
    String string0 = NodeUtil.opToStr(122);
    assertEquals(""void"", string0);
}",0,
project,0,test582657,"public void test582657() throws Throwable {
    String string0 = NodeUtil.opToStr((-2367));
    assertNull(string0);
}",0,
project,0,test583658,"public void test583658() throws Throwable {
    Node node0 = Node.newString(""Fz9"");
    Node node1 = NodeUtil.newVarNode(""Fz9"", node0);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test584659,"public void test584659() throws Throwable {
    Node node0 = new Node(100);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertFalse(node0.isNoSideEffectsCall());
}",0,assertTrue(node0.isNoSideEffectsCall())
project,0,test585660,"public void test585660() throws Throwable {
    Node node0 = new Node((-4063), 101, 101);
    Vector<Node> vector0 = new Vector<Node>();
    vector0.add(node0);
    // Undeclared exception!
    try {
        NodeUtil.newFunctionNode(""com.google.common.collect.NullsFirstOrdering"", vector0, node0, 4, (-5057));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test586661,"public void test586661() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "" 5__0m3'P&7_12(.B5<"", 7, 0);
    assertEquals(0, node0.getCharno());
}",1,
project,0,test586662,"public void test586662() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "" 5__0m3'P&7_12(.B5<"", 7, 0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test586663,"public void test586663() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "" 5__0m3'P&7_12(.B5<"", 7, 0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test586664,"public void test586664() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "" 5__0m3'P&7_12(.B5<"", 7, 0);
    assertEquals(7, node0.getLineno());
}",1,
project,0,test587665,"public void test587665() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(8, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
project,0,test587666,"public void test587666() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(3, node1.getLineno());
}",0,
project,0,test587667,"public void test587667() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(3, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test587668,"public void test587668() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(8, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test587669,"public void test587669() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test587670,"public void test587670() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = (GoogleCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""&T.=7oJ^^yY&>F3q"", 3, 8);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(0, node1.getChildCount());
}",0,"assertEquals(1, node1.getChildCount())"
project,0,test588671,"public void test588671() throws Throwable {
    Node node0 = new Node(113);
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test589672,"public void test589672() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newName(googleCodingConvention0, ""IXV"", (Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test590673,"public void test590673() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""/="");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test591674,"public void test591674() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""void"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test592675,"public void test592675() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""NaN"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test593676,"public void test593676() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(110, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test593677,"public void test593677() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(110, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test593678,"public void test593678() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test593679,"public void test593679() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.common.collect.StandardRowSortedTable"", 110, 110);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test594680,"public void test594680() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""!"", (-46), (-46));
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test595681,"public void test595681() throws Throwable {
    Node node0 = Node.newString((-8), ""7&)`r#!$G6q @n]"");
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test596682,"public void test596682() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""VsFoop"", (Node) null);
    assertEquals(118, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test596683,"public void test596683() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""VsFoop"", (Node) null);
    assertNotNull(node0);
}",0,
project,0,test597684,"public void test597684() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""!"", (-46), (-46));
    int int0 = NodeUtil.getNameReferenceCount(node0, ""!"");
    assertEquals(1, int0);
}",0,"assertEquals(0, int0)"
project,0,test598685,"public void test598685() throws Throwable {
    Node node0 = Node.newString("""", 3, 16);
    Node node1 = NodeUtil.newVarNode(""com.google.protobuf.DescriptorProtos$MethodOptions"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""JSR"", nodeUtil_MatchDeclaration0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test598686,"public void test598686() throws Throwable {
    Node node0 = Node.newString("""", 3, 16);
    Node node1 = NodeUtil.newVarNode(""com.google.protobuf.DescriptorProtos$MethodOptions"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""JSR"", nodeUtil_MatchDeclaration0);
    assertEquals(118, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test598687,"public void test598687() throws Throwable {
    Node node0 = Node.newString("""", 3, 16);
    Node node1 = NodeUtil.newVarNode(""com.google.protobuf.DescriptorProtos$MethodOptions"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""JSR"", nodeUtil_MatchDeclaration0);
    assertEquals(3, node1.getLineno());
}",0,"assertEquals(0, node1.getLineno())"
project,0,test598688,"public void test598688() throws Throwable {
    Node node0 = Node.newString("""", 3, 16);
    Node node1 = NodeUtil.newVarNode(""com.google.protobuf.DescriptorProtos$MethodOptions"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""JSR"", nodeUtil_MatchDeclaration0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test599689,"public void test599689() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    boolean boolean0 = NodeUtil.containsFunction(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test600690,"public void test600690() throws Throwable {
    Node node0 = new Node(105, 105, 105);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test601692,"public void test601692() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = nodeUtil_MatchShallowStatement0.apply(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test601693,"public void test601693() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+GsUyeJhn!.+Aq4"", (-3), 118);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = nodeUtil_MatchShallowStatement0.apply(node0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test605697,"public void test605697() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""XJQ6R[X!B **&lY&Mh"");
    Node node1 = new Node((-4063), node0, node0);
    int int0 = NodeUtil.getNameReferenceCount(node1, (String) null);
    assertEquals(0, int0);
}",0,
project,0,test606698,"public void test606698() throws Throwable {
    Node node0 = new Node(94);
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(1198);
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_MatchNodeType0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test607699,"public void test607699() throws Throwable {
    Node node0 = Node.newNumber(1571.204828491857);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, sourceMap_DetailLevel0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test608700,"public void test608700() throws Throwable {
    Node node0 = Node.newString(""ENUM_INIT_ARRAY"");
    // Undeclared exception!
    try {
        NodeUtil.hasFinally(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test609701,"public void test609701() throws Throwable {
    Node node0 = new Node(89, 89, 89);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test610702,"public void test610702() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    // Undeclared exception!
    try {
        NodeUtil.hasCatchHandler(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test611703,"public void test611703() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""XJQ6R[X!B **&lY&Mh"");
    boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test612704,"public void test612704() throws Throwable {
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode((Node) null);
    assertNull(jSDocInfo0);
}",0,
project,0,test613705,"public void test613705() throws Throwable {
    Node node0 = Node.newString(""ENUM_INIT_ARRAY"");
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test614706,"public void test614706() throws Throwable {
    Node node0 = Node.newString(""NaN"");
    node0.addSuppression(""NaN"");
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertFalse(jSDocInfo0.isNoCompile());
}",0,assertTrue(jSDocInfo0.isNoCompile())
project,0,test615707,"public void test615707() throws Throwable {
    Node node0 = Node.newString(""ENUM_INIT_ARRAY"");
    Node node1 = new Node(118, node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test616708,"public void test616708() throws Throwable {
    Node node0 = Node.newString(""ENUM_INIT_ARRAY"");
    Node node1 = new Node((-1), node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test617709,"public void test617709() throws Throwable {
    Node node0 = Node.newString(""NaN"");
    Node node1 = new Node(105, node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,assertNotNull(jSDocInfo0)
project,0,test618710,"public void test618710() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test619711,"public void test619711() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test620712,"public void test620712() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""XJQ6R[X!B **&lY&Mh"", ""XJQ6R[X!B **&lY&Mh"");
    String string0 = NodeUtil.getSourceName(node0);
    assertNotNull(string0);
}",0,
project,0,test621714,"public void test621714() throws Throwable {
    Node node0 = Node.newString(113, ""RegExp"");
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test622715,"public void test622715() throws Throwable {
    Node node0 = Node.newString(""Inciniey"");
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test623716,"public void test623716() throws Throwable {
    Node node0 = Node.newNumber((double) 1970);
    Node[] nodeArray0 = new Node[1];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test624717,"public void test624717() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test625718,"public void test625718() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(80, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test625719,"public void test625719() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test625720,"public void test625720() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(80, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test625721,"public void test625721() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test625722,"public void test625722() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""+ 6S%O.PGCiL}Y"", 80, 80);
    NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test626723,"public void test626723() throws Throwable {
    Node node0 = new Node(100);
    Node node1 = new Node(42, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test627724,"public void test627724() throws Throwable {
    Node node0 = new Node(45, 45, (-6));
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test628725,"public void test628725() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test629726,"public void test629726() throws Throwable {
    Node node0 = Node.newString(48, """");
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeBINDNAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test630727,"public void test630727() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test631728,"public void test631728() throws Throwable {
    Node node0 = new Node(57);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_KEYS
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test632729,"public void test632729() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_ID 60
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test633730,"public void test633730() throws Throwable {
    Node node0 = new Node(61);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHISFN
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test634731,"public void test634731() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test635732,"public void test635732() throws Throwable {
    Node node0 = new Node(64, (-1697), 64);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test636733,"public void test636733() throws Throwable {
    Node node0 = new Node(65);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGET_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test637734,"public void test637734() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSET_REF 66
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test638735,"public void test638735() throws Throwable {
    Node node0 = new Node(68);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_CALL
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test639736,"public void test639736() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, (Predicate<Node>) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_SPECIAL 69
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test640737,"public void test640737() throws Throwable {
    Node node0 = new Node(70);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEFAULTNAMESPACE
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test641738,"public void test641738() throws Throwable {
    Node node0 = new Node(71, 118, 118);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLATTR 118
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test642739,"public void test642739() throws Throwable {
    Node node0 = new Node(76, 76, 76);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_NAME 76
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test643740,"public void test643740() throws Throwable {
    Node node0 = Node.newString(78, ""1nfinity"", 78, 78);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSEMI 1nfinity 78
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test644741,"public void test644741() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRP 84
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test645742,"public void test645742() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test646743,"public void test646743() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test647744,"public void test647744() throws Throwable {
    Node node0 = Node.newString(87, ""com/google/javiscript/jscomp/mozilla/rhino/Scriptable"", 87, 87);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test648745,"public void test648745() throws Throwable {
    Node node0 = new Node(88);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test649746,"public void test649746() throws Throwable {
    Node node0 = new Node(89, 89, 89);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test650747,"public void test650747() throws Throwable {
    Node node0 = new Node(91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test651748,"public void test651748() throws Throwable {
    Node node0 = Node.newString(92, ""8I-n^C"", 742, 91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test652749,"public void test652749() throws Throwable {
    Node node0 = new Node(93);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test653750,"public void test653750() throws Throwable {
    Node node0 = new Node(94);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test654751,"public void test654751() throws Throwable {
    Node node0 = Node.newString(95, ""com/google/javascript/jscomp/mozilla/rhino/Scriptable"", 95, 742);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test655752,"public void test655752() throws Throwable {
    Node node0 = Node.newString(97, ""catch("", 97, 97);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test656753,"public void test656753() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test657754,"public void test657754() throws Throwable {
    Node node0 = new Node(100);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test658755,"public void test658755() throws Throwable {
    Node node0 = new Node(101, 101, 189);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test659756,"public void test659756() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test660757,"public void test660757() throws Throwable {
    Node node0 = Node.newString(103, ""F`oD0{gLd/|t'[b/D"", 1887, 1887);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test661758,"public void test661758() throws Throwable {
    Node node0 = new Node(105);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test662759,"public void test662759() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""O3H`f/_"", 440, 440);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertEquals(440, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test662760,"public void test662760() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""O3H`f/_"", 440, 440);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertTrue(boolean0);
}",0,
project,0,test662761,"public void test662761() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""O3H`f/_"", 440, 440);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertEquals(440, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test662762,"public void test662762() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""O3H`f/_"", 440, 440);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
