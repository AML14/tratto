[ {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test033"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test055"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test077"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test088"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1111"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1212"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1313"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1414"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1515"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1616"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1717"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1818"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1919"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2020"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2121"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2323"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2424"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2525"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2626"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2727"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2828"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2929"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3030"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3131"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3232"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3333"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3434"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3535"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3636"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3737"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3838"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3939"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4040"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4141"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4242"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4343"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4444"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4545"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4646"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4747"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4848"
}, {
  "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
  "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4949"
} ]