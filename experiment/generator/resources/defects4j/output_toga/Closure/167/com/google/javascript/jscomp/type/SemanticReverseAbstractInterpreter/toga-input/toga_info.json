{
  "test1212" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Node node0 = new Node(100, 100, 100);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test1212"
  },
  "test4646" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4646() throws Throwable {\n    Node node0 = new Node(102, 102, 915);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.NO_OBJECT_TYPE;\n    FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    Node node1 = new Node(4095, 915, 8);\n    node1.setJSType(functionType0);\n    Node node2 = new Node(12, node1, node0, 81, 29);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node2, (FlowScope) null, false);\n}",
    "testName" : "test4646"
  },
  "test3434" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3434() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(26);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test3434"
  },
  "test2424" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(52, 52, 52);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(60, 60, 60);\n    Node node1 = new Node(51, node0, node0, node0, node0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test1010"
  },
  "test4444" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4444() throws Throwable {\n    Node node0 = new Node(112);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;\n    FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    node0.setJSType(functionType0);\n    Node node1 = new Node(101, node0, node0, 2, 45);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test4444"
  },
  "test3232" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3232() throws Throwable {\n    Node node0 = Node.newNumber((double) 100);\n    Node node1 = new Node(100, node0, 45, 15);\n    FlowScope flowScope0 = mock(FlowScope.class, new ViolatedAssumptionAnswer());\n    doReturn((StaticSlot) null).when(flowScope0).findUniqueRefinedSlot(any(com.google.javascript.jscomp.type.FlowScope.class));\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, flowScope0, true);\n}",
    "testName" : "test3232"
  },
  "test2222" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Node node0 = new Node(1336);\n    Node node1 = new Node(46, node0, 44, 46);\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test2222"
  },
  "test033" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(16);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test033"
  },
  "test077" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Node node0 = new Node(15);\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test077"
  },
  "test1616" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(87, 87, 87);\n    Node node1 = new Node(46, node0, node0, node0, node0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test1616"
  },
  "test3838" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3838() throws Throwable {\n    Node node0 = new Node(102, 102, 102);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    node0.setJSType(jSType0);\n    Node node1 = new Node(12, node0, node0, 46, 35);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test3838"
  },
  "test2828" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2828() throws Throwable {\n    Node node0 = Node.newNumber((double) 101);\n    Node node1 = new Node(101, node0, 45, 15);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test2828"
  },
  "test1414" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    Node node0 = new Node(38);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test1414"
  },
  "test4848" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4848() throws Throwable {\n    Node node0 = new Node(13, 13, 13);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;\n    jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    Node.newString(\"Unknown class name\", 39, 53);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    Node node1 = new Node(111, node0);\n    Node node2 = Node.newString((-507), \"sG\");\n    Node node3 = new Node(36, node1, node1, node2);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test4848"
  },
  "test3636" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3636() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(56);\n    Node node1 = Node.newString(\"%>2GY\");\n    Node node2 = new Node(51, node1, node0, node1);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node2, (FlowScope) null, true);\n}",
    "testName" : "test3636"
  },
  "test2626" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2626() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(111);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test2626"
  },
  "test4242" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4242() throws Throwable {\n    Node node0 = new Node(112, 112, 112);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    node0.setJSType(jSType0);\n    Node node1 = new Node(100, node0, node0, 47, 1);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test4242"
  },
  "test3030" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3030() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(86);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test3030"
  },
  "test2020" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(44, 44, 44);\n    Node node1 = new Node(13, node0, node0, node0, node0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test2020"
  },
  "test4040" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4040() throws Throwable {\n    Node node0 = new Node((-1706), (-1706), (-1706));\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.CHECKED_UNKNOWN_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    node0.setJSType(jSType0);\n    Node node1 = new Node(45, node0, node0, 49, 51);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test4040"
  },
  "test022" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(112);\n    Node node1 = new Node(15, node0, node0, node0, node0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test022"
  },
  "test066" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Node node0 = new Node(101);\n    Node node1 = new Node(12, node0, node0, 46, 35);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test066"
  },
  "test1818" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(13);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test1818"
  },
  "test2323" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(17);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Node node0 = new Node(100);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test1313"
  },
  "test4545" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4545() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;\n    FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    Node node0 = new Node(1);\n    node0.setJSType(functionType0);\n    Node node1 = Node.newString(1, \"\", 16, 1900);\n    Node node2 = new Node(46, node0, node1, 35, 12);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter1 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    semanticReverseAbstractInterpreter1.getPreciserScopeKnowingConditionOutcome(node2, (FlowScope) null, false);\n    semanticReverseAbstractInterpreter1.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test4545"
  },
  "test3535" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3535() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(26);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test3535"
  },
  "test2121" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    Node node0 = new Node(1661);\n    Node node1 = new Node(45, node0, 4, 43);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(45);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test1111"
  },
  "test4343" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4343() throws Throwable {\n    Node node0 = new Node(161, 161, 161);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.DATE_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    node0.setJSType(jSType0);\n    Node node1 = new Node(12, node0, node0, 46, 35);\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    node1.getAncestors();\n    node1.useSourceInfoFrom(node1);\n    node1.addChildrenToBack(node1);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test4343"
  },
  "test3333" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3333() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(39, 39, 39);\n    Node node1 = new Node(33, node0, node0, node0, node0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test3333"
  },
  "test011" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(112);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(16);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(51, 51, 51);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test099"
  },
  "test2727" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2727() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    Node node0 = Node.newString(33, \"\", 33, 33);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test2727"
  },
  "test1717" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    Node node0 = new Node(1661);\n    Node node1 = new Node(45, node0, 4, 43);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test1717"
  },
  "test4949" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4949() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    Node node0 = new Node(32);\n    Node node1 = new Node(12, node0, node0, node0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n}",
    "testName" : "test4949"
  },
  "test3939" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3939() throws Throwable {\n    Node node0 = new Node((-1706), (-1706), (-1706));\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    node0.setJSType(jSType0);\n    Node node1 = new Node(45, node0, node0, 49, 51);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test3939"
  },
  "test2525" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2525() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(62, 62, 62);\n    Node node1 = new Node(52, node0, node0, node0, node0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test2525"
  },
  "test1515" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Node node0 = new Node(101);\n    Node node1 = new Node(12, node0, node0, 46, 35);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test1515"
  },
  "test4747" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4747() throws Throwable {\n    Node node0 = new Node(13, 13, 13);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, false, true, true);\n    Node node1 = new Node(111, node0);\n    JSDocInfo jSDocInfo0 = new JSDocInfo();\n    node1.setJSDocInfo(jSDocInfo0);\n    Node node2 = Node.newString((-507), \"sG\");\n    Node node3 = new Node(36, node1, node1, node2);\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, true);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test4747"
  },
  "test3737" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3737() throws Throwable {\n    Node node0 = new Node(102, 102, 102);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.BOOLEAN_OBJECT_FUNCTION_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    node0.setJSType(jSType0);\n    Node node1 = new Node(12, node0, node0, 46, 35);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test3737"
  },
  "test4141" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4141() throws Throwable {\n    Node node0 = new Node((-1014), (-1014), 12);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSTypeNative jSTypeNative0 = JSTypeNative.NO_TYPE;\n    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);\n    node0.setJSType(jSType0);\n    Node[] nodeArray0 = new Node[0];\n    Node node1 = new Node(1, nodeArray0);\n    Node node2 = new Node(46, node0, node1, 65023, 50);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node2, (FlowScope) null, true);\n}",
    "testName" : "test4141"
  },
  "test3131" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3131() throws Throwable {\n    Node node0 = new Node(101);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test3131"
  },
  "test000" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, (JSTypeRegistry) null);\n    Node node0 = new Node(12);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "protected FlowScope firstPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "firstPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Node node0 = new Node(101);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.firstPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(51);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, false);\n}",
    "testName" : "test088"
  },
  "test2929" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2929() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(14);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test2929"
  },
  "test1919" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.type.SemanticReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(44);\n    Node node1 = new Node(13, node0, node0, node0, node0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(googleCodingConvention0, (JSTypeRegistry) null);\n    semanticReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test1919"
  }
}