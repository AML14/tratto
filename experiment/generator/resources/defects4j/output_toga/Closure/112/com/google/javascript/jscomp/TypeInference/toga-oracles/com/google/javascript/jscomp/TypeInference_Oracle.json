[ {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "Node parseTestCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "Node parseTestCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "Node parseTestCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test044"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "Node parseTestCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test066"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "Node parseTestCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "List<FlowScope> branchedFlowThrough(Node source, FlowScope input)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1010"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "Node parseTestCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2222"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "Node parseTestCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2525"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "Node parseTestCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3939"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "Node parseTestCode(String js)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test5959"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "static BooleanLiteralSet getBooleanOutcomes(BooleanLiteralSet left, BooleanLiteralSet right, boolean condition)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test9191"
}, {
  "className" : "com.google.javascript.jscomp.TypeInference",
  "methodSignature" : "static BooleanLiteralSet getBooleanOutcomes(BooleanLiteralSet left, BooleanLiteralSet right, boolean condition)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test9292"
} ]