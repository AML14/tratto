{
  "test46" : {
    "methodSignature" : "public Node getAstRoot(AbstractCompiler compiler)",
    "methodName" : "getAstRoot",
    "className" : "com.google.javascript.jscomp.JsAst",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test46() throws Throwable {\n    SourceFile sourceFile0 = SourceFile.fromCode(\"|XB12`zHog09(#(_\", \"\");\n    ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    Compiler compiler0 = new Compiler();\n    SourceFile sourceFile1 = SourceFile.fromCode(\"|XB12`zHog09(#(_\", (String) null);\n    ImmutableList<SourceFile> immutableList0 = ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile1);\n    compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) immutableList0, compilerOptions0);\n    JsAst jsAst0 = new JsAst(sourceFile0);\n    Node node0 = jsAst0.getAstRoot(compiler0);\n}",
    "testName" : "test46"
  },
  "test23" : {
    "methodSignature" : "public int getSourcePosition()",
    "methodName" : "getSourcePosition",
    "className" : "com.google.javascript.jscomp.JsAst",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test23() throws Throwable {\n    SourceFile sourceFile0 = SourceFile.fromCode(\"|XB12`zHog09(#(_\", \"\");\n    ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();\n    Compiler compiler0 = new Compiler();\n    ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0);\n    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();\n    compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) arrayList0, compilerOptions0);\n    JsAst jsAst0 = new JsAst(sourceFile0);\n    jsAst0.getAstRoot(compiler0);\n    Node node0 = jsAst0.getAstRoot(compiler0);\n    node0.getSourcePosition();\n}",
    "testName" : "test23"
  },
  "test34" : {
    "methodSignature" : "Node parseTestCode(String js)",
    "methodName" : "parseTestCode",
    "className" : "com.google.javascript.jscomp.JsAst",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34() throws Throwable {\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    Compiler compiler0 = new Compiler();\n    compiler0.parseTestCode(\"|XB12`zHog09(#(_\");\n}",
    "testName" : "test34"
  },
  "test45" : {
    "methodSignature" : "public int getSourcePosition()",
    "methodName" : "getSourcePosition",
    "className" : "com.google.javascript.jscomp.JsAst",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45() throws Throwable {\n    SourceFile sourceFile0 = SourceFile.fromCode(\"|XB12`zHog09(#(_\", \"\");\n    ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    Compiler compiler0 = new Compiler();\n    SourceFile sourceFile1 = SourceFile.fromCode(\"|XB12`zHog09(#(_\", (String) null);\n    ImmutableList<SourceFile> immutableList0 = ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile1);\n    compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) immutableList0, compilerOptions0);\n    JsAst jsAst0 = new JsAst(sourceFile0);\n    Node node0 = jsAst0.getAstRoot(compiler0);\n    node0.getSourcePosition();\n}",
    "testName" : "test45"
  },
  "test00" : {
    "methodSignature" : "public void clearAst()",
    "methodName" : "clearAst",
    "className" : "com.google.javascript.jscomp.JsAst",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    SyntheticAst syntheticAst0 = new SyntheticAst(\"com.google.javascript.rhino.head.ast.ParenthesizedExpression\");\n    SourceFile sourceFile0 = syntheticAst0.getSourceFile();\n    JsAst jsAst0 = new JsAst(sourceFile0);\n    jsAst0.clearAst();\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public String getOriginalPath()",
    "methodName" : "getOriginalPath",
    "className" : "com.google.javascript.jscomp.JsAst",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    SourceFile sourceFile0 = SourceFile.fromFile(\"^,Pl%K\");\n    JsAst jsAst0 = new JsAst(sourceFile0);\n    jsAst0.setSourceFile(sourceFile0);\n    sourceFile0.getOriginalPath();\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "public Node getAstRoot(AbstractCompiler compiler)",
    "methodName" : "getAstRoot",
    "className" : "com.google.javascript.jscomp.JsAst",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    SourceFile sourceFile0 = SourceFile.fromCode(\"|XB12`zHog09(#(_\", \"\");\n    ArrayList<SourceFile> arrayList0 = new ArrayList<SourceFile>();\n    Compiler compiler0 = new Compiler();\n    ImmutableList.of(sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0, sourceFile0);\n    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();\n    compiler0.init((List<SourceFile>) arrayList0, (List<SourceFile>) arrayList0, compilerOptions0);\n    JsAst jsAst0 = new JsAst(sourceFile0);\n    jsAst0.getAstRoot(compiler0);\n    Node node0 = jsAst0.getAstRoot(compiler0);\n}",
    "testName" : "test22"
  }
}