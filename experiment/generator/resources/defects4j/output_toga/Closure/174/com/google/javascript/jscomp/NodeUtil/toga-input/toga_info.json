{
  "test0044" : {
    "methodSignature" : "static boolean functionCallHasSideEffects(Node callNode)",
    "methodName" : "functionCallHasSideEffects",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    Node node0 = null;\n    NodeUtil.functionCallHasSideEffects((Node) null);\n}",
    "testName" : "test0044"
  },
  "test103103" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103103() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, \"3bL7)9C|)EX9==:\");\n    Node node1 = NodeUtil.numberNode(30, node0);\n    node0.checkTreeEquals(node1);\n    ExploitAssigns exploitAssigns0 = new ExploitAssigns();\n    NodeUtil.isGetOrSetKey(node0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Object object0 = new Object();\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    peepholeRemoveDeadCode0.optimizeSubtree(node0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"3bL7)9C|)EX9==:\");\n    Compiler compiler0 = new Compiler(mockPrintStream0);\n    Object object1 = new Object();\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode1 = new PeepholeRemoveDeadCode();\n    Compiler compiler1 = new Compiler((PrintStream) null);\n    peepholeRemoveDeadCode1.endTraversal(compiler0);\n    Node node2 = peepholeRemoveDeadCode0.optimizeSubtree(node1);\n    MockFile mockFile0 = new MockFile(\"this\", \"3bL7)9C|)EX9==:\");\n    File file0 = MockFile.createTempFile(\"this\", \"Ye^E\", (File) mockFile0);\n    SourceFile sourceFile0 = SourceFile.fromFile(file0);\n    nodeUtil_NumbericResultPredicate0.equals(sourceFile0);\n    nodeUtil_NumbericResultPredicate0.apply(node2);\n    NodeUtil.precedence(15);\n}",
    "testName" : "test103103"
  },
  "test03636" : {
    "methodSignature" : "public static String getSourceName(Node n)",
    "methodName" : "getSourceName",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03636() throws Throwable {\n    Node node0 = new Node(107);\n    NodeUtil.isCallOrNewTarget(node0);\n    NodeUtil.getSourceName(node0);\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    nodeUtil_NumbericResultPredicate0.apply(node0);\n    NodeUtil.isCommutative(29);\n    byte[] byteArray0 = new byte[0];\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    NodeUtil.isLatin((String) null);\n    NodeUtil.isEmptyBlock(node0);\n    NodeUtil.getSourceName(node0);\n}",
    "testName" : "test03636"
  },
  "test02424" : {
    "methodSignature" : "public boolean isQuotedString()",
    "methodName" : "isQuotedString",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02424() throws Throwable {\n    int int0 = 12;\n    NodeUtil.precedence(12);\n    Node node0 = Node.newNumber(0.0, (-9), 40);\n    node0.getDouble();\n    Node node1 = NodeUtil.numberNode(0.0, node0);\n    Node node2 = ControlFlowAnalysis.getExceptionHandler(node1);\n    int int1 = 190;\n    Node node3 = new Node(int0, node2, node1, node0, node1, int1, node2.FLAG_ARGUMENTS_UNMODIFIED);\n    node3.isQuotedString();\n}",
    "testName" : "test02424"
  },
  "test05858" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05858() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.precedence(38);\n}",
    "testName" : "test05858"
  },
  "test04848" : {
    "methodSignature" : "static boolean isBooleanResult(Node n)",
    "methodName" : "isBooleanResult",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04848() throws Throwable {\n    Node node0 = Node.newString(1318, \"[#K.lmr7[\", 1318, 0);\n    node0.cloneTree();\n    String string0 = NodeUtil.JSC_PROPERTY_NAME_FN;\n    Node node1 = NodeUtil.getBestLValue(node0);\n    NodeUtil.isStatementBlock(node1);\n    NodeUtil.mayEffectMutableState(node1);\n    NodeUtil.isBooleanResult(node1);\n}",
    "testName" : "test04848"
  },
  "test01212" : {
    "methodSignature" : "static boolean mayEffectMutableState(Node n, AbstractCompiler compiler)",
    "methodName" : "mayEffectMutableState",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01212() throws Throwable {\n    Node node0 = NodeUtil.booleanNode(true);\n    Node node1 = new Node(43, node0, node0, node0, node0);\n    NodeUtil.isPrototypeProperty(node0);\n    Compiler compiler0 = new Compiler();\n    NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    nodeUtil_NumbericResultPredicate0.apply(node1);\n    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();\n    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType((-3832));\n    NodeUtil.has(node1, nodeUtil_NumbericResultPredicate0, nodeUtil_MatchShallowStatement0);\n    NodeUtil.mayEffectMutableState(node1, compiler0);\n}",
    "testName" : "test01212"
  },
  "test02626" : {
    "methodSignature" : "static boolean hasCatchHandler(Node n)",
    "methodName" : "hasCatchHandler",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02626() throws Throwable {\n    Node node0 = NodeUtil.booleanNode(true);\n    Compiler compiler0 = new Compiler();\n    NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);\n    NodeUtil.precedence(42);\n    NodeUtil.hasCatchHandler(node0);\n}",
    "testName" : "test02626"
  },
  "test05656" : {
    "methodSignature" : "public void setType(int type)",
    "methodName" : "setType",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05656() throws Throwable {\n    NodeUtil.opToStrNoFail(21);\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    Node.newString(5731, \"+\");\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"+\");\n    int int0 = (-521);\n    node0.setType(int0);\n}",
    "testName" : "test05656"
  },
  "test07878" : {
    "methodSignature" : "static TernaryValue getPureBooleanValue(Node n)",
    "methodName" : "getPureBooleanValue",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07878() throws Throwable {\n    Node node0 = Node.newString(10, \"_fZ+9+%\");\n    Node node1 = new Node(232, node0, node0, node0, 98, 110);\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.getLoopCodeBlock(node0);\n    NodeUtil.isBleedingFunctionName(node1);\n    NodeUtil.getPureBooleanValue(node0);\n}",
    "testName" : "test07878"
  },
  "test01414" : {
    "methodSignature" : "static boolean hasCatchHandler(Node n)",
    "methodName" : "hasCatchHandler",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01414() throws Throwable {\n    Node node0 = NodeUtil.booleanNode(true);\n    Node node1 = new Node(43, node0, node0, node0, node0);\n    NodeUtil.isPrototypeProperty(node0);\n    Compiler compiler0 = new Compiler();\n    NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);\n    NodeUtil.precedence(42);\n    NodeUtil.hasCatchHandler(node0);\n}",
    "testName" : "test01414"
  },
  "test06868" : {
    "methodSignature" : "public static String getSourceName(Node n)",
    "methodName" : "getSourceName",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06868() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, \"3bL7)9C|)EX9==:\");\n    NodeUtil.isCallOrNewTarget(node0);\n    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, \"fX\", node0, \"fX\");\n    NodeUtil.getSourceName(node1);\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    nodeUtil_NumbericResultPredicate0.apply(node1);\n    NodeUtil.isCommutative(5);\n    byte[] byteArray0 = new byte[0];\n    FileSystemHandling.appendDataToFile((EvoSuiteFile) null, byteArray0);\n    NodeUtil.isLatin(\".'PFYaOwYg3'qp~Rj\");\n    NodeUtil.isEmptyBlock(node1);\n    NodeUtil.getSourceName(node0);\n}",
    "testName" : "test06868"
  },
  "test01616" : {
    "methodSignature" : "public JqueryCodingConvention()",
    "methodName" : "JqueryCodingConvention",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01616() throws Throwable {\n    Node node0 = null;\n    NodeUtil.getSourceName((Node) null);\n    NodeUtil.mayBeString((Node) null, false);\n    JqueryCodingConvention jqueryCodingConvention0 = null;\n    jqueryCodingConvention0 = new JqueryCodingConvention();\n}",
    "testName" : "test01616"
  },
  "test01818" : {
    "methodSignature" : "static boolean isRelationalOperation(Node n)",
    "methodName" : "isRelationalOperation",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01818() throws Throwable {\n    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();\n    Node node0 = null;\n    NodeUtil.isRelationalOperation((Node) null);\n}",
    "testName" : "test01818"
  },
  "test08484" : {
    "methodSignature" : "static boolean hasCatchHandler(Node n)",
    "methodName" : "hasCatchHandler",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08484() throws Throwable {\n    Node[] nodeArray0 = new Node[5];\n    Node node0 = Node.newString(10, \"_fZ+9+%\");\n    Node node1 = new Node(232, node0, node0, node0, 98, 110);\n    Node node2 = NodeUtil.numberNode((-750.88699464128), node1);\n    nodeArray0[0] = node2;\n    Compiler compiler0 = new Compiler();\n    NodeUtil.nodeTypeMayHaveSideEffects(node2, compiler0);\n    NodeUtil.precedence(55);\n    NodeUtil.hasCatchHandler(node2);\n}",
    "testName" : "test08484"
  },
  "test05050" : {
    "methodSignature" : "static boolean isImmutableResult(Node n)",
    "methodName" : "isImmutableResult",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05050() throws Throwable {\n    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();\n    Node node0 = null;\n    NodeUtil.isImmutableResult((Node) null);\n}",
    "testName" : "test05050"
  },
  "test07272" : {
    "methodSignature" : "static boolean isBooleanResult(Node n)",
    "methodName" : "isBooleanResult",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07272() throws Throwable {\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    Node node0 = NodeUtil.booleanNode(true);\n    Node node1 = Node.newNumber(1257.8548, 2, 12);\n    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    NodeUtil.isObjectCallMethod(node1, \"y:3bctW\");\n    StatementFusion statementFusion0 = new StatementFusion(true);\n    Node node2 = statementFusion0.tryFuseStatementsAggressively(node0);\n    NodeUtil.mayEffectMutableState(node2);\n    NodeUtil.isBooleanResult(node0);\n}",
    "testName" : "test07272"
  },
  "test04040" : {
    "methodSignature" : "public static TernaryValue isStrWhiteSpaceChar(int c)",
    "methodName" : "isStrWhiteSpaceChar",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04040() throws Throwable {\n    NodeUtil.getStringNumberValue(\"yO!\");\n    Compiler compiler0 = new Compiler();\n    compiler0.getRoot();\n    NodeUtil.newUndefinedNode((Node) null);\n    Node node0 = compiler0.externAndJsRoot;\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Object object0 = new Object();\n    Node.newString(141, \"6~,MtbYhd\");\n    NodeUtil.isStrWhiteSpaceChar(43);\n}",
    "testName" : "test04040"
  },
  "test06262" : {
    "methodSignature" : "static Node getCatchBlock(Node n)",
    "methodName" : "getCatchBlock",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06262() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createParametersWithVarArgs(jSTypeArray0);\n    node0.wasEmptyNode();\n    NodeUtil.getCatchBlock(node0);\n}",
    "testName" : "test06262"
  },
  "test07070" : {
    "methodSignature" : "public static TernaryValue isStrWhiteSpaceChar(int c)",
    "methodName" : "isStrWhiteSpaceChar",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07070() throws Throwable {\n    NodeUtil.getStringNumberValue(\"\");\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    Integer integer0 = new Integer(1799);\n    Object object0 = new Object();\n    nodeUtil_MatchDeclaration0.equals(object0);\n    Node node0 = Node.newNumber(0.0);\n    node0.setDouble(0.0);\n    NodeUtil.isStrWhiteSpaceChar(109);\n}",
    "testName" : "test07070"
  },
  "test0011" : {
    "methodSignature" : "public static Node newNumber(double number)",
    "methodName" : "newNumber",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    NodeUtil.getStringNumberValue(\"?@{%;&56t6i\");\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    Integer integer0 = new Integer(1799);\n    nodeUtil_MatchDeclaration0.equals(integer0);\n    Node.newNumber(Double.NEGATIVE_INFINITY);\n}",
    "testName" : "test0011"
  },
  "test0055" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    NodeUtil.precedence(12);\n}",
    "testName" : "test0055"
  },
  "test0099" : {
    "methodSignature" : "static boolean mayEffectMutableState(Node n, AbstractCompiler compiler)",
    "methodName" : "mayEffectMutableState",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    Integer integer0 = new Integer(1801);\n    nodeUtil_MatchDeclaration0.equals(integer0);\n    Node node0 = Node.newNumber(Double.NEGATIVE_INFINITY);\n    node0.setDouble(Double.NEGATIVE_INFINITY);\n    NodeUtil.has(node0, nodeUtil_MatchDeclaration0, nodeUtil_MatchDeclaration0);\n    Compiler compiler0 = new Compiler();\n    NodeUtil.mayEffectMutableState(node0, compiler0);\n}",
    "testName" : "test0099"
  },
  "test09292" : {
    "methodSignature" : "static boolean isEmptyBlock(Node block)",
    "methodName" : "isEmptyBlock",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09292() throws Throwable {\n    NodeUtil.precedence(44);\n    FileSystemHandling.createFolder((EvoSuiteFile) null);\n    Node node0 = Node.newString(\"B\\\"gJGS8A;\", 15, 5);\n    Node node1 = NodeUtil.getAssignedValue(node0);\n    node0.clonePropsFrom(node1);\n    node1.setDouble(node0.FREE_CALL);\n    NodeUtil.isStrWhiteSpaceChar(node1.IS_DISPATCHER);\n    NodeUtil.isEmptyBlock(node0);\n}",
    "testName" : "test09292"
  },
  "test06060" : {
    "methodSignature" : "static Node getBestLValueOwner(@Nullable Node lValue)",
    "methodName" : "getBestLValueOwner",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06060() throws Throwable {\n    Node node0 = Node.newString(1318, \"[#K.lmr7[\", 1318, 1318);\n    Node node1 = node0.cloneTree();\n    NodeUtil.mayBeString(node1, true);\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    node1.removeProp(48);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    NodeUtil.mapMainToClone(node0, node0);\n    NodeUtil.getBestLValueOwner(node1);\n}",
    "testName" : "test06060"
  },
  "test03232" : {
    "methodSignature" : "static boolean isSimpleOperatorType(int type)",
    "methodName" : "isSimpleOperatorType",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03232() throws Throwable {\n    Node node0 = Node.newNumber((-2540.3154012789), 5, 5);\n    Node node1 = new Node(107, node0, node0, 107, 1116);\n    node1.isVarArgs();\n    node0.addChildToBack(node1);\n    NodeUtil.isExprCall(node1);\n    NodeUtil.allArgsUnescapedLocal(node0);\n    NodeUtil.getArrayElementStringValue(node1);\n    NodeUtil.isObjectCallMethod(node1, \" vj2m]0\\\"#[1w\");\n    NodeUtil.Visitor nodeUtil_Visitor0 = null;\n    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.valueOf(\" vj2m]0\\\"#[1w\");\n    Object object0 = new Object();\n    sourceMap_DetailLevel0.equals(object0);\n    NodeUtil.visitPreOrder(node0, nodeUtil_Visitor0, sourceMap_DetailLevel0);\n    NodeUtil.isObjectLitKey(node1);\n    NodeUtil.isSimpleOperatorType(node0.SIDE_EFFECT_FLAGS);\n}",
    "testName" : "test03232"
  },
  "test08888" : {
    "methodSignature" : "static String getFunctionName(Node n)",
    "methodName" : "getFunctionName",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08888() throws Throwable {\n    Node node0 = NodeUtil.booleanNode(true);\n    Node node1 = new Node(43, node0, node0, node0, node0);\n    NodeUtil.isPrototypeProperty(node0);\n    Compiler compiler0 = new Compiler();\n    NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    nodeUtil_NumbericResultPredicate0.apply(node1);\n    node1.removeProp(132);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate1 = NodeUtil.NUMBERIC_RESULT_PREDICATE;\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate2 = new NodeUtil.NumbericResultPredicate();\n    NodeUtil.evaluatesToLocalValue(node1, nodeUtil_NumbericResultPredicate2);\n    NodeUtil.getFunctionName(node1);\n}",
    "testName" : "test08888"
  },
  "test102102" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102102() throws Throwable {\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);\n    Node node0 = NodeUtil.booleanNode(true);\n    NodeUtil.getSourceName(node0);\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.precedence(15);\n}",
    "testName" : "test102102"
  },
  "test02020" : {
    "methodSignature" : "public StatementFusion(boolean favorsCommaOverSemiColon)",
    "methodName" : "StatementFusion",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02020() throws Throwable {\n    Node node0 = new Node(17);\n    boolean boolean0 = NodeUtil.isCallOrNewTarget(node0);\n    NodeUtil.opToStrNoFail(4);\n    StatementFusion statementFusion0 = null;\n    statementFusion0 = new StatementFusion(boolean0);\n}",
    "testName" : "test02020"
  },
  "test07676" : {
    "methodSignature" : "static boolean isGetOrSetKey(Node node)",
    "methodName" : "isGetOrSetKey",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07676() throws Throwable {\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    Node node0 = NodeUtil.booleanNode(true);\n    Node node1 = Node.newString(23, \"Mz,\", (-2006), 1868);\n    Node node2 = node1.cloneTree();\n    Node node3 = new Node(2, node1, node1, 56, 115);\n    NodeUtil.isGetOrSetKey(node0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Object object0 = new Object();\n    nodeUtil_NumbericResultPredicate0.apply(node2);\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    Node node4 = peepholeRemoveDeadCode0.optimizeSubtree(node0);\n    nodeUtil_NumbericResultPredicate0.equals(node4);\n    Node node5 = NodeUtil.getBestLValueOwner(node2);\n    nodeUtil_NumbericResultPredicate0.apply((Node) null);\n    nodeUtil_NumbericResultPredicate0.apply(node5);\n    int int0 = 9;\n    NodeUtil.isCommutative(int0);\n    NodeUtil.isGetOrSetKey(node2);\n}",
    "testName" : "test07676"
  },
  "test09898" : {
    "methodSignature" : "static boolean tryMergeBlock(Node block)",
    "methodName" : "tryMergeBlock",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09898() throws Throwable {\n    Integer integer0 = new Integer((-638));\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    Node node0 = new Node((-1217), (-1217), (-638));\n    Node node1 = NodeUtil.newVarNode(\"Infinity\", node0);\n    node0.isEquivalentToTyped(node1);\n    node0.getJSDocInfo();\n    NodeUtil.tryMergeBlock(node0);\n}",
    "testName" : "test09898"
  },
  "test06666" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06666() throws Throwable {\n    Node node0 = Node.newString(1318, \"[#K.lmr7[\", 1318, 1318);\n    Node node1 = node0.cloneTree();\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    NodeUtil.newName(jqueryCodingConvention0, \"RKS'7na6KJ\", node0);\n    Node node2 = NodeUtil.getArgumentForCallOrNew(node1, 1747);\n    NodeUtil.isVarDeclaration(node2);\n    int int0 = 404;\n    NodeUtil.precedence(int0);\n}",
    "testName" : "test06666"
  },
  "test03030" : {
    "methodSignature" : "public String toStringTree()",
    "methodName" : "toStringTree",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03030() throws Throwable {\n    Node node0 = Node.newString((-2753), \"\", (-2753), (-2753));\n    NodeUtil.getStringValue(node0);\n    node0.setChangeTime(18);\n    node0.removeProp((-2753));\n    Node node1 = NodeUtil.getRValueOfLValue(node0);\n    node1.copyInformationFromForTree(node0);\n    node0.getString();\n    node0.toStringTree();\n}",
    "testName" : "test03030"
  },
  "test08686" : {
    "methodSignature" : "static boolean isGetOrSetKey(Node node)",
    "methodName" : "isGetOrSetKey",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08686() throws Throwable {\n    Node node0 = Node.newString(1269, \"\", 1431655764, (-2516));\n    PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();\n    Node node1 = peepholeFoldWithTypes0.optimizeSubtree(node0);\n    Node node2 = node1.cloneTree();\n    Node node3 = new Node(57, node2, node0, 15, 1066);\n    NodeUtil.isGetOrSetKey(node0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Object object0 = new Object();\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate1 = NodeUtil.NUMBERIC_RESULT_PREDICATE;\n    nodeUtil_NumbericResultPredicate1.apply(node3);\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    peepholeRemoveDeadCode0.optimizeSubtree(node3);\n    nodeUtil_NumbericResultPredicate1.equals(\"\");\n    NodeUtil.getBestLValueOwner(node0);\n    nodeUtil_NumbericResultPredicate1.apply(node2);\n    nodeUtil_NumbericResultPredicate0.apply(node3);\n    NodeUtil.isCommutative(201);\n    NodeUtil.isGetOrSetKey(node1);\n}",
    "testName" : "test08686"
  },
  "test02222" : {
    "methodSignature" : "static int getNodeTypeReferenceCount(Node node, int type, Predicate<Node> traverseChildrenPred)",
    "methodName" : "getNodeTypeReferenceCount",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02222() throws Throwable {\n    Node node0 = new Node(107);\n    NodeUtil.isCallOrNewTarget(node0);\n    NodeUtil.getSourceName(node0);\n    StatementFusion statementFusion0 = new StatementFusion(false);\n    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(1);\n    NodeUtil.getNodeTypeReferenceCount(node0, 12, nodeUtil_MatchNodeType0);\n}",
    "testName" : "test02222"
  },
  "test05252" : {
    "methodSignature" : "static boolean isSwitchCase(Node n)",
    "methodName" : "isSwitchCase",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05252() throws Throwable {\n    Node node0 = new Node(107);\n    NodeUtil.isCallOrNewTarget(node0);\n    NodeUtil.getSourceName(node0);\n    StatementFusion statementFusion0 = new StatementFusion(true);\n    Node node1 = statementFusion0.optimizeSubtree(node0);\n    NodeUtil.isSwitchCase(node1);\n}",
    "testName" : "test05252"
  },
  "test07474" : {
    "methodSignature" : "static boolean isExprCall(Node n)",
    "methodName" : "isExprCall",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07474() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    ExploitAssigns exploitAssigns0 = new ExploitAssigns();\n    Node node0 = Node.newString(\"G@H!&{`(r6rw\", 1799, 119);\n    NodeUtil.mayHaveSideEffects(node0);\n    PeepholeFoldConstants.evaluateComparison(536870912, node0, node0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"$a\", \"$a\");\n    Compiler compiler0 = new Compiler(mockPrintStream0);\n    String string0 = \"com.google.javascript.jscomp.DefaultPassConfig$31\";\n    Normalize.parseAndNormalizeTestCode(compiler0, string0);\n    ControlFlowAnalysis.getCatchHandlerForBlock(node0);\n    NodeUtil.isExprCall(node0);\n}",
    "testName" : "test07474"
  },
  "test04242" : {
    "methodSignature" : "static boolean containsType(Node node, int type)",
    "methodName" : "containsType",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04242() throws Throwable {\n    Node node0 = Node.newString(313, \"\");\n    NodeUtil.getLoopCodeBlock(node0);\n    Node node1 = NodeUtil.getRootOfQualifiedName(node0);\n    NodeUtil.isGetOrSetKey(node0);\n    NodeUtil.containsType(node1, node1.IS_DISPATCHER);\n}",
    "testName" : "test04242"
  },
  "test106106" : {
    "methodSignature" : "static Node getPrototypeClassName(Node qName)",
    "methodName" : "getPrototypeClassName",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106106() throws Throwable {\n    PeepholeMinimizeConditions peepholeMinimizeConditions0 = new PeepholeMinimizeConditions(false);\n    int int0 = (-522);\n    Node[] nodeArray0 = new Node[1];\n    Compiler compiler0 = new Compiler();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    tightenTypes0.getTopScope();\n    TightenTypes.ConcreteScope tightenTypes_ConcreteScope0 = tightenTypes0.new ConcreteScope((TightenTypes.ConcreteScope) null);\n    tightenTypes_ConcreteScope0.getRootNode();\n    Node node0 = NodeUtil.getFunctionParameters((Node) null);\n    NodeUtil.getPrototypeClassName(node0);\n}",
    "testName" : "test106106"
  },
  "test01010" : {
    "methodSignature" : "public static String getSourceName(Node n)",
    "methodName" : "getSourceName",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeSyntheticCode(compiler0, \"6^2aU(8*wN9L|W@\", \"6^2aU(8*wN9L|W@\");\n    NodeUtil.getSourceName(node0);\n}",
    "testName" : "test01010"
  },
  "test06464" : {
    "methodSignature" : "static boolean isImmutableValue(Node n)",
    "methodName" : "isImmutableValue",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06464() throws Throwable {\n    FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    Integer integer0 = new Integer(1799);\n    nodeUtil_MatchDeclaration0.equals(integer0);\n    Node node0 = Node.newNumber(Double.NEGATIVE_INFINITY);\n    node0.getDouble();\n    node0.setDouble(Double.NEGATIVE_INFINITY);\n    NodeUtil.isStrWhiteSpaceChar(15);\n    NodeUtil.isImmutableValue(node0);\n}",
    "testName" : "test06464"
  },
  "test08080" : {
    "methodSignature" : "CodingConvention getCodingConvention()",
    "methodName" : "getCodingConvention",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08080() throws Throwable {\n    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();\n    double double0 = (-473.0);\n    NodeUtil.getStringValue((-473.0));\n    ExploitAssigns exploitAssigns0 = new ExploitAssigns();\n    exploitAssigns0.getCodingConvention();\n}",
    "testName" : "test08080"
  },
  "test09090" : {
    "methodSignature" : "static boolean isNameReferenced(Node node, String name)",
    "methodName" : "isNameReferenced",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09090() throws Throwable {\n    Node node0 = new Node(107);\n    NodeUtil.isCallOrNewTarget(node0);\n    NodeUtil.getSourceFile(node0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Integer integer0 = new Integer(37);\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    nodeUtil_MatchDeclaration0.apply(node0);\n    FileSystemHandling.appendStringToFile((EvoSuiteFile) null, \"u\");\n    nodeUtil_MatchDeclaration0.equals(integer0);\n    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType((-171));\n    NodeUtil.has(node0, nodeUtil_NumbericResultPredicate0, nodeUtil_NumbericResultPredicate0);\n    Compiler compiler0 = new Compiler();\n    NodeUtil.mayEffectMutableState(node0, compiler0);\n    NodeUtil.isNameReferenced(node0, \"XML\");\n}",
    "testName" : "test09090"
  },
  "test0022" : {
    "methodSignature" : "static boolean isStatement(Node n)",
    "methodName" : "isStatement",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    Node node0 = Node.newString(1318, \"[#K.lmr7[\", 1318, 0);\n    Node node1 = node0.cloneTree();\n    NodeUtil.isStatementParent(node1);\n    Node node2 = NodeUtil.newQualifiedNameNode((CodingConvention) null, \"[#K.lmr7[\", node0, \"[#K.lmr7[\");\n    NodeUtil.getFunctionBody(node1);\n    String string0 = null;\n    SourceMap.DetailLevel.valueOf(string0);\n    NodeUtil.isStatement(node2);\n}",
    "testName" : "test0022"
  },
  "test105105" : {
    "methodSignature" : "static boolean isNaN(Node n)",
    "methodName" : "isNaN",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105105() throws Throwable {\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    FileSystemHandling.createFolder((EvoSuiteFile) null);\n    Integer integer0 = new Integer(1799);\n    nodeUtil_MatchDeclaration0.equals(integer0);\n    Node node0 = Node.newNumber(Double.NEGATIVE_INFINITY);\n    NodeUtil.precedence(17);\n    NodeUtil.isNaN(node0);\n    NodeUtil.isStrWhiteSpaceChar(115);\n    NodeUtil.isNaN(node0);\n}",
    "testName" : "test105105"
  },
  "test101101" : {
    "methodSignature" : "static boolean isCommutative(int type)",
    "methodName" : "isCommutative",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101101() throws Throwable {\n    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();\n    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);\n    Node node0 = new Node(116);\n    Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);\n    NodeUtil.isPrototypeProperty(node1);\n    peepholeFoldConstants0.mayHaveSideEffects(node1);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Object object0 = new Object();\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    Node node2 = peepholeRemoveDeadCode0.optimizeSubtree(node0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate1 = new NodeUtil.NumbericResultPredicate();\n    Object object1 = new Object();\n    nodeUtil_NumbericResultPredicate1.equals(object1);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate2 = NodeUtil.NUMBERIC_RESULT_PREDICATE;\n    nodeUtil_NumbericResultPredicate2.apply(node2);\n    NodeUtil.isCommutative(15);\n}",
    "testName" : "test101101"
  },
  "test04747" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04747() throws Throwable {\n    Node node0 = new Node(107);\n    NodeUtil.isCallOrNewTarget(node0);\n    NodeUtil.getSourceName(node0);\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.precedence(107);\n}",
    "testName" : "test04747"
  },
  "test01313" : {
    "methodSignature" : "public static String getNearestFunctionName(Node n)",
    "methodName" : "getNearestFunctionName",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01313() throws Throwable {\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    Node node0 = NodeUtil.booleanNode(true);\n    Node.newNumber(1257.8548, 2, 12);\n    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    FileSystemHandling.createFolder((EvoSuiteFile) null);\n    NodeUtil.isValidSimpleName(\"Ljava/lang/Object;D\");\n    NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);\n    NodeUtil.getNearestFunctionName(node0);\n}",
    "testName" : "test01313"
  },
  "test06969" : {
    "methodSignature" : "static boolean mayEffectMutableState(Node n, AbstractCompiler compiler)",
    "methodName" : "mayEffectMutableState",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06969() throws Throwable {\n    Node node0 = NodeUtil.booleanNode(false);\n    Node node1 = NodeUtil.newUndefinedNode(node0);\n    Node node2 = new Node(133, node0, node0, node1, node0);\n    NodeUtil.isPrototypeProperty(node1);\n    Compiler compiler0 = new Compiler();\n    Logger logger0 = Tracer.logger;\n    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);\n    Compiler compiler1 = new Compiler(loggerErrorManager0);\n    NodeUtil.nodeTypeMayHaveSideEffects(node2, compiler1);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    nodeUtil_NumbericResultPredicate0.apply(node2);\n    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();\n    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(147);\n    NodeUtil.has(node2, nodeUtil_MatchShallowStatement0, nodeUtil_MatchNodeType0);\n    NodeUtil.mayEffectMutableState(node1, compiler1);\n}",
    "testName" : "test06969"
  },
  "test05959" : {
    "methodSignature" : "static boolean isStatement(Node n)",
    "methodName" : "isStatement",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05959() throws Throwable {\n    String string0 = \"3I{%;&56t6i\";\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    Node node0 = Node.newNumber(Double.NEGATIVE_INFINITY);\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    NodeUtil.newQualifiedNameNode((CodingConvention) jqueryCodingConvention0, \"DEGENERATE\", node0, \"3I{%;&56t6i\");\n    NodeUtil.getFunctionBody(node0);\n    SourceMap.DetailLevel.valueOf(string0);\n    NodeUtil.isStatement(node0);\n}",
    "testName" : "test05959"
  },
  "test04545" : {
    "methodSignature" : "public ClosureCodingConvention()",
    "methodName" : "ClosureCodingConvention",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04545() throws Throwable {\n    Node node0 = NodeUtil.booleanNode(false);\n    NodeUtil.getBestLValueName(node0);\n    NodeUtil.getPrototypeClassName(node0);\n    NodeUtil.constructorCallHasSideEffects(node0);\n    ClosureCodingConvention closureCodingConvention0 = null;\n    closureCodingConvention0 = new ClosureCodingConvention();\n}",
    "testName" : "test04545"
  },
  "test07979" : {
    "methodSignature" : "static int getNameReferenceCount(Node node, String name)",
    "methodName" : "getNameReferenceCount",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07979() throws Throwable {\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    Node node0 = NodeUtil.booleanNode(true);\n    NodeUtil.isForIn(node0);\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.mayBeString(node0, true);\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    Node node1 = new Node((-248), node0);\n    NodeUtil.newName(jqueryCodingConvention0, \"==\", node0);\n    NodeUtil.getBestJSDocInfo(node1);\n    NodeUtil.getNameReferenceCount(node1, \"parseInt\");\n}",
    "testName" : "test07979"
  },
  "test01515" : {
    "methodSignature" : "static boolean mayHaveSideEffects(Node n)",
    "methodName" : "mayHaveSideEffects",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01515() throws Throwable {\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    Node node0 = NodeUtil.booleanNode(true);\n    Node node1 = Node.newNumber(1257.8548, 2, 12);\n    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();\n    PipedInputStream pipedInputStream0 = new PipedInputStream();\n    FileSystemHandling.createFolder((EvoSuiteFile) null);\n    NodeUtil.isValidSimpleName(\"Ljava/lang/Object;D\");\n    NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);\n    NodeUtil.mayHaveSideEffects(node1);\n}",
    "testName" : "test01515"
  },
  "test06767" : {
    "methodSignature" : "static boolean mayEffectMutableState(Node n, AbstractCompiler compiler)",
    "methodName" : "mayEffectMutableState",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06767() throws Throwable {\n    Node[] nodeArray0 = new Node[5];\n    Node node0 = Node.newString(10, \"_fZ+9+%\");\n    Node node1 = new Node(232, node0, node0, node0, 98, 110);\n    Node node2 = NodeUtil.numberNode((-750.88699464128), node1);\n    nodeArray0[0] = node2;\n    ExploitAssigns exploitAssigns0 = new ExploitAssigns();\n    NodeUtil.isGetOrSetKey(node0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Object object0 = new Object();\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    Node node3 = peepholeRemoveDeadCode0.optimizeSubtree(node1);\n    nodeUtil_NumbericResultPredicate0.equals(node3);\n    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType((-453));\n    NodeUtil.has(node0, nodeUtil_NumbericResultPredicate0, nodeUtil_MatchNodeType0);\n    Compiler compiler0 = new Compiler();\n    NodeUtil.mayEffectMutableState((Node) null, compiler0);\n}",
    "testName" : "test06767"
  },
  "test03535" : {
    "methodSignature" : "public String toStringTree()",
    "methodName" : "toStringTree",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03535() throws Throwable {\n    Node node0 = new Node(107);\n    NodeUtil.isForIn(node0);\n    FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);\n    NodeUtil.isForIn(node0);\n    NodeUtil.getSourceFile(node0);\n    NodeUtil.isExprCall(node0);\n    NodeUtil.getNumberValue(node0);\n    Node node1 = new Node(107);\n    Node node2 = NodeUtil.getBestLValue(node1);\n    String string0 = \" Calls: \";\n    node2.toStringTree();\n}",
    "testName" : "test03535"
  },
  "test08989" : {
    "methodSignature" : "static boolean hasCatchHandler(Node n)",
    "methodName" : "hasCatchHandler",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08989() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, \"3bL7)9C|)EX9==:\");\n    NodeUtil.numberNode(30, node0);\n    ExploitAssigns exploitAssigns0 = new ExploitAssigns();\n    NodeUtil.isGetOrSetKey(node0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Object object0 = new Object();\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    Node node1 = peepholeRemoveDeadCode0.optimizeSubtree(node0);\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"3bL7)9C|)EX9==:\");\n    Compiler compiler0 = new Compiler(mockPrintStream0);\n    Object object1 = new Object();\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode1 = new PeepholeRemoveDeadCode();\n    peepholeRemoveDeadCode0.optimizeSubtree(node0);\n    node1.toString(true, true, true);\n    NodeUtil.isLiteralValue(node1, true);\n    NodeUtil.canBeSideEffected(node1);\n    NodeUtil.hasCatchHandler(node0);\n}",
    "testName" : "test08989"
  },
  "test02525" : {
    "methodSignature" : "public void addChildrenToBack(Node children)",
    "methodName" : "addChildrenToBack",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02525() throws Throwable {\n    double double0 = (-1197.0);\n    Node node0 = null;\n    Node node1 = NodeUtil.numberNode((-1197.0), (Node) null);\n    node1.addChildrenToBack((Node) null);\n}",
    "testName" : "test02525"
  },
  "test05757" : {
    "methodSignature" : "static int getNameReferenceCount(Node node, String name)",
    "methodName" : "getNameReferenceCount",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05757() throws Throwable {\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    Node node0 = NodeUtil.booleanNode(true);\n    NodeUtil.opToStr(32);\n    NodeUtil.isEmptyBlock(node0);\n    NodeUtil.isForIn(node0);\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.mayBeString(node0, false);\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    Node node1 = new Node(1466, node0);\n    Node node2 = NodeUtil.newName(jqueryCodingConvention0, \"Infinity\", node1);\n    NodeUtil.getBestJSDocInfo(node2);\n    NodeUtil.getNameReferenceCount(node2, \"typeof\");\n}",
    "testName" : "test05757"
  },
  "test01717" : {
    "methodSignature" : "static boolean isSwitchCase(Node n)",
    "methodName" : "isSwitchCase",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01717() throws Throwable {\n    NodeUtil.getSourceName((Node) null);\n    NodeUtil.isSwitchCase((Node) null);\n}",
    "testName" : "test01717"
  },
  "test04949" : {
    "methodSignature" : "static boolean isSwitchCase(Node n)",
    "methodName" : "isSwitchCase",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04949() throws Throwable {\n    Node node0 = new Node(104, (-1082), 21);\n    NodeUtil.getSourceName(node0);\n    NodeUtil.isSwitchCase(node0);\n}",
    "testName" : "test04949"
  },
  "test01919" : {
    "methodSignature" : "static boolean isBleedingFunctionName(Node n)",
    "methodName" : "isBleedingFunctionName",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01919() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, \"3bL7)9C|)EX9==:\");\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.getLoopCodeBlock(node0);\n    NodeUtil.isBleedingFunctionName((Node) null);\n}",
    "testName" : "test01919"
  },
  "test03939" : {
    "methodSignature" : "static boolean hasCatchHandler(Node n)",
    "methodName" : "hasCatchHandler",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03939() throws Throwable {\n    Node node0 = NodeUtil.booleanNode(false);\n    Node node1 = new Node((-360), node0, node0, node0, node0);\n    NodeUtil.isPrototypeProperty(node1);\n    Compiler compiler0 = new Compiler();\n    NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);\n    NodeUtil.precedence(1073741823);\n    NodeUtil.hasCatchHandler(node1);\n}",
    "testName" : "test03939"
  },
  "test02929" : {
    "methodSignature" : "static Node newName(CodingConvention convention, String name, Node srcref)",
    "methodName" : "newName",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02929() throws Throwable {\n    Node node0 = Node.newString(1318, \"[#K.lmr7[\", 1318, 1318);\n    Node node1 = node0.cloneTree();\n    NodeUtil.mayBeString(node1, true);\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    NodeUtil.newName(jqueryCodingConvention0, \"RKS'7na6KJ\", node0);\n}",
    "testName" : "test02929"
  },
  "test09595" : {
    "methodSignature" : "static JSType getObjectLitKeyTypeFromValueType(Node key, JSType valueType)",
    "methodName" : "getObjectLitKeyTypeFromValueType",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09595() throws Throwable {\n    NodeUtil.getStringNumberValue(\"yO!\");\n    Compiler compiler0 = new Compiler();\n    compiler0.getRoot();\n    NodeUtil.newUndefinedNode((Node) null);\n    Node node0 = compiler0.externAndJsRoot;\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Object object0 = new Object();\n    Node.newString(141, \"6~,MtbYhd\");\n    NodeUtil.getObjectLitKeyTypeFromValueType((Node) null, (JSType) null);\n}",
    "testName" : "test09595"
  },
  "test06161" : {
    "methodSignature" : "static JSDocInfo getBestJSDocInfo(Node n)",
    "methodName" : "getBestJSDocInfo",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06161() throws Throwable {\n    Node node0 = Node.newString(313, \"\");\n    Compiler compiler0 = new Compiler();\n    Node node1 = compiler0.parseTestCode(\"\");\n    int int0 = (-1003);\n    node0.setType(int0);\n    node0.replaceChildAfter(node1, node1);\n    Node node2 = NodeUtil.getLoopCodeBlock(node0);\n    NodeUtil.getBestJSDocInfo(node2);\n}",
    "testName" : "test06161"
  },
  "test05151" : {
    "methodSignature" : "Node optimizeSubtree(Node subtree)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05151() throws Throwable {\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    Node node0 = NodeUtil.booleanNode(true);\n    Node node1 = Node.newNumber(1257.8548, 2, 12);\n    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();\n    NodeUtil.isEmptyBlock(node1);\n    NodeUtil.isForIn(node1);\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.getLoopCodeBlock(node0);\n    peepholeRemoveDeadCode0.tryFoldWhile((Node) null);\n    PeepholeCollectPropertyAssignments peepholeCollectPropertyAssignments0 = new PeepholeCollectPropertyAssignments();\n    peepholeCollectPropertyAssignments0.optimizeSubtree(node1);\n}",
    "testName" : "test05151"
  },
  "test07373" : {
    "methodSignature" : "static Node getAssignedValue(Node n)",
    "methodName" : "getAssignedValue",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07373() throws Throwable {\n    Node node0 = NodeUtil.booleanNode(true);\n    node0.wasEmptyNode();\n    Compiler compiler0 = new Compiler();\n    NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);\n    NodeUtil.precedence(42);\n    NodeUtil.getStringNumberValue(\" does not have a condition.\");\n    Node node1 = compiler0.externsRoot;\n    Node node2 = NodeUtil.getAssignedValue((Node) null);\n    NodeUtil.getAssignedValue(node2);\n}",
    "testName" : "test07373"
  },
  "test09393" : {
    "methodSignature" : "static Node getCatchBlock(Node n)",
    "methodName" : "getCatchBlock",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09393() throws Throwable {\n    Node node0 = null;\n    Node node1 = NodeUtil.getArgumentForFunction((Node) null, (-1609));\n    NodeUtil.getCatchBlock(node1);\n}",
    "testName" : "test09393"
  },
  "test0033" : {
    "methodSignature" : "static boolean isStatement(Node n)",
    "methodName" : "isStatement",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = Node.newNumber((-794.181), 0, (-454));\n    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, \"G@H!&{`(r6rw\", node0, \"\");\n    NodeUtil.isStatement(node1);\n}",
    "testName" : "test0033"
  },
  "test0077" : {
    "methodSignature" : "static boolean isValidSimpleName(String name)",
    "methodName" : "isValidSimpleName",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    NodeUtil.precedence(14);\n    FileSystemHandling.createFolder((EvoSuiteFile) null);\n    NodeUtil.isValidSimpleName(\"Ljava/lang/Object;D\");\n}",
    "testName" : "test0077"
  },
  "test08181" : {
    "methodSignature" : "static int getNameReferenceCount(Node node, String name)",
    "methodName" : "getNameReferenceCount",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08181() throws Throwable {\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    Integer integer0 = new Integer(1799);\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    Node node0 = Node.newNumber(Double.NEGATIVE_INFINITY);\n    node0.addSuppression(\"gRt!+V\");\n    node0.setDouble(Double.NEGATIVE_INFINITY);\n    NodeUtil.getNameReferenceCount(node0, \"RegExp\");\n}",
    "testName" : "test08181"
  },
  "test07171" : {
    "methodSignature" : "static boolean mayEffectMutableState(Node n)",
    "methodName" : "mayEffectMutableState",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07171() throws Throwable {\n    Node node0 = new Node(107);\n    NodeUtil.isCallOrNewTarget(node0);\n    NodeUtil.getBestLValueName(node0);\n    node0.setChangeTime(18);\n    node0.removeProp((-1527));\n    Node node1 = new Node(22, node0, node0, node0);\n    node1.getChangeTime();\n    NodeUtil.getSourceName(node0);\n    StatementFusion statementFusion0 = new StatementFusion(true);\n    statementFusion0.optimizeSubtree(node1);\n    NodeUtil.mayEffectMutableState(node0);\n}",
    "testName" : "test07171"
  },
  "test04343" : {
    "methodSignature" : "VariableMap getPropertyMap()",
    "methodName" : "getPropertyMap",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04343() throws Throwable {\n    FileSystemHandling.createFolder((EvoSuiteFile) null);\n    NodeUtil.getStringNumberValue(\"6^2aU(8*wN9L|W@\");\n    Compiler compiler0 = new Compiler();\n    Scope.Var scope_Var0 = null;\n    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;\n    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);\n    Node node0 = null;\n    String string0 = \"y9&eGH/n:\";\n    Node node1 = Node.newString(1091, \"y9&eGH/n:\", 1091, 1630);\n    referenceCollectingCallback0.hotSwapScript((Node) null, node1);\n    ReferenceCollectingCallback.ReferenceCollection referenceCollectingCallback_ReferenceCollection0 = referenceCollectingCallback0.getReferences(scope_Var0);\n    ImmutableMap<Scope.Var, ReferenceCollectingCallback.ReferenceCollection> immutableMap0 = ImmutableMap.of(scope_Var0, referenceCollectingCallback_ReferenceCollection0);\n    compiler0.updateGlobalVarReferences(immutableMap0, node1);\n    compiler0.getPropertyMap();\n}",
    "testName" : "test04343"
  },
  "test07777" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07777() throws Throwable {\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.precedence(1318);\n}",
    "testName" : "test07777"
  },
  "test09999" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09999() throws Throwable {\n    Node[] nodeArray0 = new Node[5];\n    Node node0 = Node.newString(10, \"_fZ+9+%\");\n    Node node1 = new Node(232, node0, node0, node0, 98, 110);\n    Node node2 = NodeUtil.numberNode((-750.88699464128), node1);\n    nodeArray0[0] = node2;\n    ExploitAssigns exploitAssigns0 = new ExploitAssigns();\n    NodeUtil.isGetOrSetKey(node0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Object object0 = new Object();\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    Compiler compiler0 = new Compiler((PrintStream) null);\n    peepholeRemoveDeadCode0.endTraversal(compiler0);\n    Node node3 = peepholeRemoveDeadCode0.optimizeSubtree(node1);\n    nodeUtil_NumbericResultPredicate0.equals(node3);\n    nodeUtil_NumbericResultPredicate0.apply(node3);\n    NodeUtil.precedence(32);\n}",
    "testName" : "test09999"
  },
  "test06565" : {
    "methodSignature" : "static boolean hasCatchHandler(Node n)",
    "methodName" : "hasCatchHandler",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06565() throws Throwable {\n    Node node0 = Node.newString(10, \".ZF\");\n    Node node1 = new Node(15, node0, node0, node0, 15, 16);\n    NodeUtil.numberNode(4095, node1);\n    ExploitAssigns exploitAssigns0 = new ExploitAssigns();\n    NodeUtil.isGetOrSetKey(node1);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    Object object0 = new Object();\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    Node node2 = peepholeRemoveDeadCode0.optimizeSubtree(node1);\n    node2.toString(false, false, false);\n    NodeUtil.isLiteralValue(node2, true);\n    NodeUtil.canBeSideEffected(node0);\n    NodeUtil.hasCatchHandler(node1);\n}",
    "testName" : "test06565"
  },
  "test104104" : {
    "methodSignature" : "public static boolean isLValue(Node n)",
    "methodName" : "isLValue",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104104() throws Throwable {\n    Node node0 = Node.newString((-514), \"_fZ+9+%\");\n    Node node1 = new Node((-863), node0, node0, node0, (-4426), 47);\n    NodeUtil.numberNode(56, node1);\n    ExploitAssigns exploitAssigns0 = new ExploitAssigns();\n    Node node2 = Node.newNumber((-473.4953857));\n    node2.setDouble(55);\n    NodeUtil.isStrWhiteSpaceChar(50);\n    NodeUtil.isLValue(node0);\n}",
    "testName" : "test104104"
  },
  "test03333" : {
    "methodSignature" : "static boolean mayBeString(Node n, boolean recurse)",
    "methodName" : "mayBeString",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03333() throws Throwable {\n    Node node0 = Node.newString(1318, \"Mbj\", 1318, 1318);\n    Node node1 = node0.cloneTree();\n    NodeUtil.mayBeString(node1, true);\n}",
    "testName" : "test03333"
  },
  "test08787" : {
    "methodSignature" : "static TernaryValue getPureBooleanValue(Node n)",
    "methodName" : "getPureBooleanValue",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08787() throws Throwable {\n    FileSystemHandling.shouldAllThrowIOExceptions();\n    Node node0 = Node.newString(461845907, \"_fZ+9+%\");\n    Node node1 = new Node(32, node0, node0, node0, 461845907, (-1082));\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.getLoopCodeBlock(node0);\n    NodeUtil.isGet(node1);\n    NodeUtil.getPureBooleanValue((Node) null);\n}",
    "testName" : "test08787"
  },
  "test05555" : {
    "methodSignature" : "public Node(int nodeType)",
    "methodName" : "Node",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05555() throws Throwable {\n    NodeUtil.getStringNumberValue(\"+infinity\");\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    Integer integer0 = new Integer((-6));\n    nodeUtil_MatchDeclaration0.equals(integer0);\n    Node node0 = new Node((-6));\n}",
    "testName" : "test05555"
  },
  "test100100" : {
    "methodSignature" : "static String getFunctionName(Node n)",
    "methodName" : "getFunctionName",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100100() throws Throwable {\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, \"3bL7)9C|)EX9==:\");\n    Node node1 = new Node(51, node0, node0, node0, node0);\n    NodeUtil.isPrototypeProperty(node1);\n    Compiler compiler0 = new Compiler();\n    NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();\n    nodeUtil_NumbericResultPredicate0.apply(node1);\n    node1.removeProp(38);\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate1 = NodeUtil.NUMBERIC_RESULT_PREDICATE;\n    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate2 = new NodeUtil.NumbericResultPredicate();\n    NodeUtil.evaluatesToLocalValue(node1, nodeUtil_NumbericResultPredicate1);\n    NodeUtil.getFunctionName(node1);\n}",
    "testName" : "test100100"
  },
  "test04141" : {
    "methodSignature" : "public Node(int nodeType)",
    "methodName" : "Node",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04141() throws Throwable {\n    Double double0 = NodeUtil.getStringNumberValue(\"u\");\n    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();\n    Integer integer0 = new Integer(21);\n    nodeUtil_MatchDeclaration0.equals(double0);\n    Node node0 = new Node(21);\n}",
    "testName" : "test04141"
  },
  "test09797" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09797() throws Throwable {\n    FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();\n    NodeUtil.precedence(51);\n}",
    "testName" : "test09797"
  },
  "test01111" : {
    "methodSignature" : "VerboseMessageFormatter(SourceExcerptProvider source)",
    "methodName" : "VerboseMessageFormatter",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01111() throws Throwable {\n    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();\n    PeepholeFoldConstants peepholeFoldConstants0 = new PeepholeFoldConstants(false);\n    Node node0 = new Node(32);\n    Node node1 = peepholeFoldConstants0.optimizeSubtree(node0);\n    NodeUtil.isPrototypeProperty(node1);\n    peepholeFoldConstants0.mayHaveSideEffects(node1);\n    MockPrintStream mockPrintStream0 = new MockPrintStream((File) null);\n    Compiler compiler0 = new Compiler(mockPrintStream0);\n    node0.checkTreeEquals(node1);\n    VerboseMessageFormatter verboseMessageFormatter0 = null;\n    verboseMessageFormatter0 = new VerboseMessageFormatter(compiler0);\n}",
    "testName" : "test01111"
  },
  "test06363" : {
    "methodSignature" : "static boolean isPrototypeProperty(Node n)",
    "methodName" : "isPrototypeProperty",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06363() throws Throwable {\n    Node node0 = NodeUtil.booleanNode(true);\n    Node node1 = NodeUtil.getConditionExpression(node0);\n    NodeUtil.isPrototypeProperty(node1);\n}",
    "testName" : "test06363"
  },
  "test03131" : {
    "methodSignature" : "static boolean mayHaveSideEffects(Node n)",
    "methodName" : "mayHaveSideEffects",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03131() throws Throwable {\n    Node node0 = Node.newString(113, \"\");\n    NodeUtil.newExpr(node0);\n    Node node1 = null;\n    NodeUtil.mayHaveSideEffects(node1);\n}",
    "testName" : "test03131"
  },
  "test08585" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08585() throws Throwable {\n    Node.newString(10, \"_fZ+9+%\");\n    NodeUtil.precedence(37);\n}",
    "testName" : "test08585"
  },
  "test02121" : {
    "methodSignature" : "static boolean isControlStructureCodeBlock(Node parent, Node n)",
    "methodName" : "isControlStructureCodeBlock",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02121() throws Throwable {\n    Node node0 = Node.newString(\"cRm.google.javascript.jscomp.Compiler\");\n    node0.isQuotedString();\n    NodeUtil.isControlStructureCodeBlock(node0, node0);\n}",
    "testName" : "test02121"
  },
  "test05353" : {
    "methodSignature" : "static Node getCatchHandlerForBlock(Node block)",
    "methodName" : "getCatchHandlerForBlock",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05353() throws Throwable {\n    Node node0 = Node.newString(10, \"_fZ+9+%\");\n    PeepholeFoldConstants.evaluateComparison((-1044), node0, node0);\n    String string0 = \"?@{%;&56t6i\";\n    MockPrintStream mockPrintStream0 = new MockPrintStream(\"?@{%;&56t6i\", \"?@{%;&56t6i\");\n    Compiler compiler0 = new Compiler(mockPrintStream0);\n    Normalize.parseAndNormalizeTestCode(compiler0, string0);\n    ControlFlowAnalysis.getCatchHandlerForBlock(node0);\n}",
    "testName" : "test05353"
  },
  "test07575" : {
    "methodSignature" : "static boolean isNaN(Node n)",
    "methodName" : "isNaN",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07575() throws Throwable {\n    Node node0 = NodeUtil.booleanNode(true);\n    Compiler compiler0 = new Compiler();\n    NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);\n    NodeUtil.precedence(42);\n    NodeUtil.isNaN(node0);\n}",
    "testName" : "test07575"
  },
  "test09191" : {
    "methodSignature" : "static int precedence(int type)",
    "methodName" : "precedence",
    "className" : "com.google.javascript.jscomp.NodeUtil",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09191() throws Throwable {\n    Node node0 = new Node(107);\n    NodeUtil.isCallOrNewTarget(node0);\n    NodeUtil.getNearestFunctionName(node0);\n    node0.setChangeTime(18);\n    node0.removeProp((-1527));\n    Node node1 = new Node(8, node0, node0, node0);\n    int int0 = new Integer(38);\n    NodeUtil.getSourceName(node0);\n    NodeUtil.precedence(100);\n}",
    "testName" : "test09191"
  }
}