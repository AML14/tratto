focal_method,test_prefix,docstring
"@Override
public void process(Node externs, Node root) {
    hotSwapScript(root, null);
}","public void test00() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""The local variable {0} is in a goog.scope and is not an alias."");
    ScopedAliases scopedAliases0 = new ScopedAliases(compiler0, (PreprocessorSymbolTable) null, (CompilerOptions.AliasTransformationHandler) null);
    scopedAliases0.process(node0, node0);
    assertEquals(57, Node.LAST_PROP);
}",""
"public boolean isFalse() {
    return this.getType() == Token.FALSE;
}","public void test11() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""The local variable {0} is in a goog.scope and is not an alias."");
    Node node1 = new Node(47, node0, 29, 29);
    ScopedAliases scopedAliases0 = new ScopedAliases(compiler0, (PreprocessorSymbolTable) null, (CompilerOptions.AliasTransformationHandler) null);
    scopedAliases0.hotSwapScript(node0, node1);
    assertFalse(node0.isFalse());
}",""
