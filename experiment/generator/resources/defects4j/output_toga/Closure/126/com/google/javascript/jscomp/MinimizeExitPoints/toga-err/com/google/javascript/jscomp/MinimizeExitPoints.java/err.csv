com.google.javascript.jscomp.MinimizeExitPoints,@Test(timeout = 4000)
public void test00() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""function JSCompiler_emptyFn() {  return function() {}}"");
    node0.setType(113);
    MinimizeExitPoints minimizeExitPoints0 = new MinimizeExitPoints(compiler0);
    minimizeExitPoints0.process(node0, node0);
    node0.isCall();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.MinimizeExitPoints,@Test(timeout = 4000)
public void test22() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""7;"");
    MinimizeExitPoints minimizeExitPoints0 = new MinimizeExitPoints(compiler0);
    Node node1 = new Node(115, node0, 34, 40);
    minimizeExitPoints0.process(node0, node1);
    node0.isName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.MinimizeExitPoints,@Test(timeout = 4000)
public void test66() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(""com.google.javascript.jscomp.LinkedFlowScope$FlatFlowScopeCache"");
    MinimizeExitPoints minimizeExitPoints0 = new MinimizeExitPoints(compiler0);
    minimizeExitPoints0.tryMinimizeExits(node0, 40, ""com.google.javascript.jscomp.LinkedFlowScope$FlatFlowScopeCache"");
    node0.isString();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.MinimizeExitPoints,@Test(timeout = 4000)
public void test77() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""7;"");
    MinimizeExitPoints minimizeExitPoints0 = new MinimizeExitPoints(compiler0);
    Node node1 = new Node(115, node0, 34, 40);
    minimizeExitPoints0.tryMinimizeExits(node1, 115, (String) null);
    node1.isNoSideEffectsCall();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
