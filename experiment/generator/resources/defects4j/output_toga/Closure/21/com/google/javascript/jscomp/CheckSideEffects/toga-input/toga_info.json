{
  "test1010" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CheckLevel checkLevel0 = CheckLevel.WARNING;\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"v83UJNj&CNdS\", \"v83UJNj&CNdS\");\n    checkSideEffects0.process(node0, node0);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public boolean isOr()",
    "methodName" : "isOr",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(2918, 2918, 2918);\n    Node node1 = new Node(37, node0, node0, node0, node0, 1, 49);\n    CheckSideEffects.StripProtection checkSideEffects_StripProtection0 = new CheckSideEffects.StripProtection(compiler0);\n    checkSideEffects_StripProtection0.process(node1, node1);\n    node1.isOr();\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public void hotSwapScript(Node scriptRoot, Node originalRoot)",
    "methodName" : "hotSwapScript",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    CheckLevel checkLevel0 = CheckLevel.ERROR;\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects((AbstractCompiler) null, checkLevel0, true);\n    checkSideEffects0.hotSwapScript((Node) null, (Node) null);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public boolean isHook()",
    "methodName" : "isHook",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(2918, 2918, 2918);\n    CheckLevel checkLevel0 = CheckLevel.OFF;\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);\n    Node node1 = new Node(42, node0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkSideEffects0, syntacticScopeCreator0);\n    Node node2 = ControlFlowAnalysis.computeFallThrough(node1);\n    node2.addSuppression(\"D*~Xd80Ivxq2zL`G\");\n    checkSideEffects0.visit(nodeTraversal0, node2, node1);\n    node1.isHook();\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CheckLevel checkLevel0 = CheckLevel.OFF;\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, false);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"tVl=OSGtw,MX\", \"com.google.javascrip.jsomp.SourceKle\");\n    checkSideEffects0.process(node0, node0);\n    node0.getCharno();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public boolean isIn()",
    "methodName" : "isIn",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node((-3043));\n    CheckLevel checkLevel0 = CheckLevel.WARNING;\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);\n    Node node1 = new Node(85, node0);\n    Node node2 = new Node(54, node1);\n    checkSideEffects0.process(node2, node1);\n    node1.isIn();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CheckLevel checkLevel0 = CheckLevel.OFF;\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, false);\n    Node node0 = Node.newNumber((double) 115);\n    Node node1 = new Node(115, node0);\n    checkSideEffects0.process(node0, node1);\n    node0.getCharno();\n}",
    "testName" : "test099"
  },
  "test000" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CheckLevel checkLevel0 = CheckLevel.OFF;\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);\n    Node node0 = compiler0.parseTestCode(\"pfiltO\");\n    Node node1 = new Node(85, node0);\n    Node node2 = new Node(85, node1);\n    checkSideEffects0.process(node0, node1);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CheckLevel checkLevel0 = CheckLevel.ERROR;\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);\n    Node node0 = compiler0.parseTestCode(\";oHN\");\n    checkSideEffects0.process(node0, node0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(2918, 2918, 2918);\n    CheckLevel checkLevel0 = CheckLevel.OFF;\n    Node node1 = new Node(37, node0, node0, node0, node0, 85, 49);\n    Node node2 = new Node(85, node1);\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkSideEffects0);\n    checkSideEffects0.visit(nodeTraversal0, node0, node2);\n    node0.getChildCount();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    CheckLevel checkLevel0 = CheckLevel.OFF;\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);\n    Node node0 = Node.newString(\"b\\\"K:FjrPe>~m}Ffe]K2\", 85, 85);\n    Node node1 = new Node(85, node0);\n    Node node2 = new Node(125, node1);\n    checkSideEffects0.process(node1, node1);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean isIn()",
    "methodName" : "isIn",
    "className" : "com.google.javascript.jscomp.CheckSideEffects",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();\n    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();\n    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, compilerOptions0.checkUnreachableCode, false);\n    Node node0 = compiler0.parseInputs();\n    checkSideEffects0.process(node0, node0);\n    node0.isIn();\n}",
    "testName" : "test088"
  }
}