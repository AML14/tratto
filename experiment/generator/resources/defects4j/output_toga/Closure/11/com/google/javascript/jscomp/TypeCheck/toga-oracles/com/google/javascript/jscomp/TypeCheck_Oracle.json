[ {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "double getTypedPercent()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0011"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public TypeCheck(AbstractCompiler compiler, ReverseAbstractInterpreter reverseInterpreter, JSTypeRegistry typeRegistry, CheckLevel reportMissingOverride, CheckLevel reportUnknownTypes)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0022"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void process(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0033"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void process(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0044"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0055"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0066"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0077"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0088"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0099"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public String getSourceName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertNotNull(nodeTraversal0.getSourceName())",
  "exception" : "",
  "testName" : "test01010"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test01111"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01212"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01313"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01414"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01515"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01616"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01717"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01818"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01819"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isGetProp()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isGetProp())",
  "exception" : "",
  "testName" : "test01920"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isTry()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isTry())",
  "exception" : "",
  "testName" : "test02021"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getLineNumber()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, nodeTraversal0.getLineNumber())",
  "exception" : "",
  "testName" : "test02122"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isWhile()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02223"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02324"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02425"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isGetElem()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isGetElem())",
  "exception" : "",
  "testName" : "test02526"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02627"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02728"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02829"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02930"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03031"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03132"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03233"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03334"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node1.hasChildren())",
  "exception" : "",
  "testName" : "test03435"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isInc()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isInc())",
  "exception" : "",
  "testName" : "test03536"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03637"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03738"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isDo()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node1.isDo())",
  "exception" : "",
  "testName" : "test03839"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03940"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04041"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isAdd()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.isAdd())",
  "exception" : "",
  "testName" : "test04142"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04243"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.hasChildren())",
  "exception" : "",
  "testName" : "test04344"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04445"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isInc()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isInc())",
  "exception" : "",
  "testName" : "test04546"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04647"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04748"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04849"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public double getProgress()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test04950"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05051"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05152"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05253"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05354"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05455"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05556"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05657"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05758"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05859"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05960"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06061"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06162"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06364"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06465"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test06466"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06567"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06668"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isGetProp()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isGetProp())",
  "exception" : "",
  "testName" : "test06769"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06870"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isTry()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isTry())",
  "exception" : "",
  "testName" : "test06971"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07072"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07173"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07274"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isWith()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isWith())",
  "exception" : "",
  "testName" : "test07375"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isBlock()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07476"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07577"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isAssignAdd()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isAssignAdd())",
  "exception" : "",
  "testName" : "test07678"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07779"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07880"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isInstanceOf()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test07981"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isInstanceOf()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isInstanceOf())",
  "exception" : "",
  "testName" : "test08082"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08183"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node1.getType())",
  "exception" : "",
  "testName" : "test08284"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isThrow()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08385"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08486"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isGetElem()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isGetElem())",
  "exception" : "",
  "testName" : "test08587"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08688"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08789"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08890"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08991"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09092"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09193"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09294"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09395"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09496"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09597"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09698"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09799"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test098100"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099101"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test100102"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test101103"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test102104"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test103105"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104106"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test105107"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test106108"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean isNE()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node1.isNE())",
  "exception" : "",
  "testName" : "test107109"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(compiler0.hasErrors())",
  "exception" : "",
  "testName" : "test109111"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test109112"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test110113"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test111114"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node0.hasOneChild())",
  "exception" : "",
  "testName" : "test112115"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test113116"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test114117"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test115118"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getErrorCount())",
  "exception" : "",
  "testName" : "test116119"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test116120"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test117121"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test118122"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test119123"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test120124"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test121125"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test122126"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test122127"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test123128"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test124129"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getErrorCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test124130"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public boolean hasErrors()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test124131"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test125132"
}, {
  "className" : "com.google.javascript.jscomp.TypeCheck",
  "methodSignature" : "double getTypedPercent()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test126133"
} ]