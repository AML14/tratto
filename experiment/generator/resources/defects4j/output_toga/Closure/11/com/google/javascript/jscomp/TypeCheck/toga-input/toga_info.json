{
  "test118122" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test118122() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-337.2963172611317));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(120, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node1, node1);\n}",
    "testName" : "test118122"
  },
  "test124129" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124129() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(120.23565214940986);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = Node.newString(18, \"120.23565214940986\", 42, 50);\n    node1.addChildrenToFront(node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test124129"
  },
  "test08890" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08890() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(126, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test08890"
  },
  "test0000" : {
    "methodSignature" : "double getTypedPercent()",
    "methodName" : "getTypedPercent",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0000() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(100.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) typeCheck0);\n    typeCheck0.getTypedPercent();\n}",
    "testName" : "test0000"
  },
  "test0088" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0088() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null, (ScopeCreator) null);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    Node[] nodeArray0 = new Node[1];\n    nodeArray0[0] = node0;\n    Node node1 = new Node(86, nodeArray0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test0088"
  },
  "test107109" : {
    "methodSignature" : "public boolean isNE()",
    "methodName" : "isNE",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test107109() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.397032153444));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(147, node0, node0, node0);\n    typeCheck0.visit((NodeTraversal) null, node1, node1);\n    node1.isNE();\n}",
    "testName" : "test107109"
  },
  "test06870" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06870() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"(Fissing)\");\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null, (ScopeCreator) null);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    Node[] nodeArray0 = new Node[1];\n    nodeArray0[0] = node0;\n    Node node1 = new Node(101, nodeArray0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test06870"
  },
  "test02425" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02425() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-0.5912830825981322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(19, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test02425"
  },
  "test03637" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03637() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(33, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test03637"
  },
  "test01212" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01212() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(4, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test01212"
  },
  "test04849" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04849() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-0.5912830825981322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(50, \"-0.5912830825981322\");\n    Node node2 = new Node(27, node1, node1);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node2, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test04849"
  },
  "test05657" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05657() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3798.9136336228316));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(61, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test05657"
  },
  "test02829" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02829() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3799.2415238348367));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(25, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test02829"
  },
  "test01616" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01616() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.095944977192));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(8, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test01616"
  },
  "test113116" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test113116() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(53.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(154, node0, node0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test113116"
  },
  "test121125" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test121125() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(2796.94971040167);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node0, node0);\n}",
    "testName" : "test121125"
  },
  "test04041" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04041() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(42, node0, node0);\n    typeCheck0.visit((NodeTraversal) null, node1, node1);\n}",
    "testName" : "test04041"
  },
  "test07274" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07274() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(2796.94971040167);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(107, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test07274"
  },
  "test09294" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09294() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.397032153444));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(131, node0, node0);\n    typeCheck0.visit((NodeTraversal) null, node1, node0);\n}",
    "testName" : "test09294"
  },
  "test0011" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.095944977192));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(35, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test0011"
  },
  "test0099" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0099() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3799.2415238348367));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(105, node0, node0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test0099"
  },
  "test06061" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06061() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-0.5912830825981322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(78, \"6\", 0, 1163);\n    typeCheck0.visit((NodeTraversal) null, node1, node1);\n}",
    "testName" : "test06061"
  },
  "test08082" : {
    "methodSignature" : "public boolean isInstanceOf()",
    "methodName" : "isInstanceOf",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08082() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(116, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    node1.isInstanceOf();\n}",
    "testName" : "test08082"
  },
  "test02021" : {
    "methodSignature" : "public boolean isTry()",
    "methodName" : "isTry",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02021() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(12, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    node1.isTry();\n}",
    "testName" : "test02021"
  },
  "test07678" : {
    "methodSignature" : "public boolean isAssignAdd()",
    "methodName" : "isAssignAdd",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07678() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.397032153444));\n    compiler0.toSource(node0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, (JSTypeRegistry) null);\n    Node node1 = new Node(112, node0, node0, node0);\n    typeCheck0.visit((NodeTraversal) null, node1, node1);\n    node1.isAssignAdd();\n}",
    "testName" : "test07678"
  },
  "test03233" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03233() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.3970322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(29, \"-3797.3970322\", (-1309), 2);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test03233"
  },
  "test06466" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06466() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3799.2415238348367));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(87, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test06466"
  },
  "test04445" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04445() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3798.9136336228316));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(46, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test04445"
  },
  "test05253" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05253() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    compiler0.initCompilerOptionsIfTesting();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = Node.newString(\"left operand\", 158, 158);\n    Node node1 = new Node(54, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test05253"
  },
  "test09698" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09698() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.095944977192));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(136, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, (ScopeCreator) null);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test09698"
  },
  "test06465" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06465() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3799.2415238348367));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(87, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test06465"
  },
  "test08486" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08486() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(121, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test08486"
  },
  "test102104" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test102104() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    compiler0.initCompilerOptionsIfTesting();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);\n    Node node1 = new Node(142, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test102104"
  },
  "test02930" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02930() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3798.9136336228316));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(26, node0, node0);\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_NormalizeStatements0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    node1.getLineno();\n}",
    "testName" : "test02930"
  },
  "test110113" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test110113() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.392558868223));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(150, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test110113"
  },
  "test126133" : {
    "methodSignature" : "double getTypedPercent()",
    "methodName" : "getTypedPercent",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test126133() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(2796.94971040167);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    double double0 = typeCheck0.getTypedPercent();\n}",
    "testName" : "test126133"
  },
  "test122126" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122126() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-1256.818033));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(30, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test122126"
  },
  "test08991" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08991() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.39703215344));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(127, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test08991"
  },
  "test116120" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116120() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    Node node0 = compiler0.parseTestCode(\"(Fissing)\");\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    CheckLevel checkLevel0 = CheckLevel.ERROR;\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0, (Scope) null, (ScopeCreator) null, compilerOptions0.checkMissingGetCssNameLevel, checkLevel0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) typeCheck0);\n    compiler0.hasErrors();\n}",
    "testName" : "test116120"
  },
  "test122127" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test122127() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-1256.818033));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(30, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test122127"
  },
  "test0022" : {
    "methodSignature" : "public TypeCheck(AbstractCompiler compiler, ReverseAbstractInterpreter reverseInterpreter, JSTypeRegistry typeRegistry, CheckLevel reportMissingOverride, CheckLevel reportUnknownTypes)",
    "methodName" : "TypeCheck",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0022() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    CheckLevel checkLevel0 = CheckLevel.OFF;\n    TypeCheck typeCheck0 = null;\n    typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0, checkLevel0, checkLevel0);\n}",
    "testName" : "test0022"
  },
  "test04950" : {
    "methodSignature" : "public double getProgress()",
    "methodName" : "getProgress",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04950() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-0.5912830825981322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(51, node0, node0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n    compiler0.getProgress();\n}",
    "testName" : "test04950"
  },
  "test06971" : {
    "methodSignature" : "public boolean isTry()",
    "methodName" : "isTry",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06971() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3798.103125621546));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    Node node1 = new Node(103, node0);\n    typeCheck0.visit(nodeTraversal0, node1, (Node) null);\n    node1.isTry();\n}",
    "testName" : "test06971"
  },
  "test105107" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test105107() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.3970322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(145, node0, node0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test105107"
  },
  "test01313" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01313() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.392558868223));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(5, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test01313"
  },
  "test03738" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03738() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3799.2415238348367));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(36, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test03738"
  },
  "test099101" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099101() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.397032153444));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(139, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test099101"
  },
  "test04546" : {
    "methodSignature" : "public boolean isInc()",
    "methodName" : "isInc",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04546() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-0.5912830825981322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(47, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    node1.isInc();\n}",
    "testName" : "test04546"
  },
  "test02526" : {
    "methodSignature" : "public boolean isGetElem()",
    "methodName" : "isGetElem",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02526() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(closureCodingConvention0);\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(21, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    node0.isGetElem();\n}",
    "testName" : "test02526"
  },
  "test05758" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05758() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"(Fissing)\");\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null, (ScopeCreator) null);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    Node[] nodeArray0 = new Node[1];\n    nodeArray0[0] = node0;\n    Node node1 = new Node(65, nodeArray0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test05758"
  },
  "test07779" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07779() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-0.5912830825981322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(113, \"M)=y<b\", 36, 904);\n    typeCheck0.visit((NodeTraversal) null, node1, (Node) null);\n}",
    "testName" : "test07779"
  },
  "test01717" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01717() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(100.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = Node.newString(9, \"100\", 42, 50);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test01717"
  },
  "test111114" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test111114() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.392558868223));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(152, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test111114"
  },
  "test06162" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06162() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(79, \"0\", 0, 55);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test06162"
  },
  "test09395" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09395() throws Throwable {\n    Node node0 = Node.newNumber((-1302.779));\n    Compiler compiler0 = new Compiler();\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(133, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test09395"
  },
  "test08183" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08183() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.095944977192));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(117, \"could not determine the type of this expression\", 4095, 51);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test08183"
  },
  "test0033" : {
    "methodSignature" : "public void process(Node externsRoot, Node jsRoot)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0033() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3822.821875544676));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(37, node0, node0);\n    typeCheck0.processForTesting(node0, node0);\n    typeCheck0.process(node0, node1);\n}",
    "testName" : "test0033"
  },
  "test09799" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09799() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.361670421556));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(137, \"\", 4095, 484);\n    typeCheck0.visit((NodeTraversal) null, node1, node1);\n}",
    "testName" : "test09799"
  },
  "test03334" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03334() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-1256.818033));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(30, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test03334"
  },
  "test06567" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06567() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(95, \"0\", 0, 55);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test06567"
  },
  "test08587" : {
    "methodSignature" : "public boolean isGetElem()",
    "methodName" : "isGetElem",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08587() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.095944977192));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(122, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    node0.isGetElem();\n}",
    "testName" : "test08587"
  },
  "test04142" : {
    "methodSignature" : "public boolean isAdd()",
    "methodName" : "isAdd",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04142() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    CompilerOptions compilerOptions0 = compiler0.options;\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    Node node1 = new Node(43, node0, node0);\n    typeCheck0.visit((NodeTraversal) null, node1, node0);\n    node0.isAdd();\n}",
    "testName" : "test04142"
  },
  "test07375" : {
    "methodSignature" : "public boolean isWith()",
    "methodName" : "isWith",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07375() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3798.103125621546));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node[] nodeArray0 = new Node[0];\n    Node node1 = new Node(108, nodeArray0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    node1.isWith();\n}",
    "testName" : "test07375"
  },
  "test100102" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test100102() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3798.103125621546));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(140, node0, node0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test100102"
  },
  "test02122" : {
    "methodSignature" : "public int getLineNumber()",
    "methodName" : "getLineNumber",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02122() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry((ErrorReporter) null);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(13, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    nodeTraversal0.getLineNumber();\n}",
    "testName" : "test02122"
  },
  "test05354" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05354() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3848.777093703922));\n    compiler0.toSource(node0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(55, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test05354"
  },
  "test124131" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124131() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(120.23565214940986);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = Node.newString(18, \"120.23565214940986\", 42, 50);\n    node1.addChildrenToFront(node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test124131"
  },
  "test124130" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test124130() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(120.23565214940986);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = Node.newString(18, \"120.23565214940986\", 42, 50);\n    node1.addChildrenToFront(node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test124130"
  },
  "test116119" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test116119() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(jqueryCodingConvention0, jSTypeRegistry0);\n    Node node0 = compiler0.parseTestCode(\"(Fissing)\");\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    CheckLevel checkLevel0 = CheckLevel.ERROR;\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0, (Scope) null, (ScopeCreator) null, compilerOptions0.checkMissingGetCssNameLevel, checkLevel0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) typeCheck0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test116119"
  },
  "test07880" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07880() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(114, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test07880"
  },
  "test120124" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test120124() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3799.2415238348367));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(118, \"-3799.2415238348367\", 123, 36);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node1, node1);\n}",
    "testName" : "test120124"
  },
  "test0044" : {
    "methodSignature" : "public void process(Node externsRoot, Node jsRoot)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0044() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3822.821875544676));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(37, node0, node0);\n    typeCheck0.processForTesting(node0, node0);\n    typeCheck0.process(node1, node0);\n}",
    "testName" : "test0044"
  },
  "test103105" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test103105() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-1256.818033));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(143, \"-1256.818033\", (-4317), (-1024));\n    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, typedScopeCreator0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test103105"
  },
  "test05859" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05859() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null, typedScopeCreator0);\n    Node node1 = new Node(67, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test05859"
  },
  "test02627" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02627() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.095944977192));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(23, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test02627"
  },
  "test03435" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03435() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3798.9136336228316));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = Node.newString(31, \"module.exports\", 32, 29);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    node1.hasChildren();\n}",
    "testName" : "test03435"
  },
  "test06668" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06668() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(2796.94971040167);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(97, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test06668"
  },
  "test01414" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01414() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-1256.818033));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(6, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test01414"
  },
  "test04647" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04647() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(100.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(48, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test04647"
  },
  "test125132" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test125132() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3822.821875544676));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    node0.addSuppression(\"-3822.821875544676\");\n    Node node1 = new Node(37, node0, node0);\n    typeCheck0.processForTesting(node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test125132"
  },
  "test03839" : {
    "methodSignature" : "public boolean isDo()",
    "methodName" : "isDo",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03839() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(\"0\", 2, 45);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n    node1.isDo();\n}",
    "testName" : "test03839"
  },
  "test01819" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01819() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-0.5912830825981322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(10, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test01819"
  },
  "test01818" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01818() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-0.5912830825981322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(10, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test01818"
  },
  "test05051" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05051() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-1256.818033));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(52, \"pa=clE4\", 32, 139);\n    typeCheck0.visit((NodeTraversal) null, node1, node1);\n}",
    "testName" : "test05051"
  },
  "test09496" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09496() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(555.79856696);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, typedScopeCreator0);\n    Node node1 = new Node(134, node0, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test09496"
  },
  "test119123" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test119123() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    compiler0.initCompilerOptionsIfTesting();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, typedScopeCreator0);\n    JSType[] jSTypeArray0 = new JSType[0];\n    Node node0 = jSTypeRegistry0.createOptionalParameters(jSTypeArray0);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node0, node0);\n}",
    "testName" : "test119123"
  },
  "test08284" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08284() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.39703215344));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(119, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    node1.getType();\n}",
    "testName" : "test08284"
  },
  "test0055" : {
    "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
    "methodName" : "processForTesting",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0055() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.397032153444));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(42, node0, node0);\n    typeCheck0.processForTesting(node0, node0);\n    typeCheck0.processForTesting(node1, node0);\n}",
    "testName" : "test0055"
  },
  "test07072" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07072() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(2796.94971040167);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(105, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test07072"
  },
  "test05455" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05455() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.3970322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(58, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test05455"
  },
  "test106108" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test106108() throws Throwable {\n    Node node0 = Node.newNumber(0.0);\n    Compiler compiler0 = new Compiler();\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, reverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(146, node0, node0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test106108"
  },
  "test08688" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08688() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.392558868223));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(123, 2279, 46);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test08688"
  },
  "test02223" : {
    "methodSignature" : "public boolean isWhile()",
    "methodName" : "isWhile",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02223() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3848.777093703922));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(15, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    node1.isWhile();\n}",
    "testName" : "test02223"
  },
  "test03031" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03031() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-0.5912830825981322));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(27, node0, node0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test03031"
  },
  "test01010" : {
    "methodSignature" : "public String getSourceName()",
    "methodName" : "getSourceName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01010() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.397032153444));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(125, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    nodeTraversal0.getSourceName();\n}",
    "testName" : "test01010"
  },
  "test04243" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04243() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3798.9136336228316));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(44, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test04243"
  },
  "test07476" : {
    "methodSignature" : "public boolean isBlock()",
    "methodName" : "isBlock",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07476() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.39703215344));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(110, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    node1.isBlock();\n}",
    "testName" : "test07476"
  },
  "test098100" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test098100() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    Node node1 = Node.newString(138, \"-3845.997638529466\", (-38), 53);\n    GroupVariableDeclarations groupVariableDeclarations0 = new GroupVariableDeclarations(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, groupVariableDeclarations0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test098100"
  },
  "test03940" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03940() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(41, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test03940"
  },
  "test01920" : {
    "methodSignature" : "public boolean isGetProp()",
    "methodName" : "isGetProp",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01920() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.361670421556));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(11, node0, node0);\n    typeCheck0.visit((NodeTraversal) null, node1, node0);\n    node0.isGetProp();\n}",
    "testName" : "test01920"
  },
  "test09092" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09092() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3799.2415238348367));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(128, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test09092"
  },
  "test114117" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test114117() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(1, \"0\", 0, 55);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test114117"
  },
  "test0066" : {
    "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
    "methodName" : "processForTesting",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0066() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    Node node0 = compiler0.parseTestCode(\"(Fissing)\");\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    JSTypeNative jSTypeNative0 = JSTypeNative.URI_ERROR_FUNCTION_TYPE;\n    FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);\n    Scope scope0 = new Scope(node0, functionType0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0, scope0, (ScopeCreator) null, compilerOptions0.checkGlobalNamesLevel, compilerOptions0.checkGlobalNamesLevel);\n    typeCheck0.processForTesting(node0, node0);\n}",
    "testName" : "test0066"
  },
  "test05960" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05960() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.392558868223));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(71, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test05960"
  },
  "test101103" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test101103() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.095944977192));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(141, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test101103"
  },
  "test07981" : {
    "methodSignature" : "public boolean isInstanceOf()",
    "methodName" : "isInstanceOf",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07981() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Node node0 = Node.newNumber(0.0);\n    Compiler compiler0 = new Compiler();\n    CheckLevel checkLevel0 = CheckLevel.OFF;\n    CheckSideEffects checkSideEffects0 = new CheckSideEffects(compiler0, checkLevel0, true);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkSideEffects0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention(jqueryCodingConvention0);\n    SemanticReverseAbstractInterpreter semanticReverseAbstractInterpreter0 = new SemanticReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, semanticReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(115, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    node1.isInstanceOf();\n}",
    "testName" : "test07981"
  },
  "test04748" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04748() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3848.777093703922));\n    compiler0.toSource(node0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(49, node0, node0, node0, 12, 30);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test04748"
  },
  "test02324" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02324() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(16, 4095, 52);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test02324"
  },
  "test01515" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01515() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(2796.94971040167);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(7, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test01515"
  },
  "test03536" : {
    "methodSignature" : "public boolean isInc()",
    "methodName" : "isInc",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03536() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3822.821875544676));\n    compiler0.toSource(node0);\n    Node node1 = new Node(32, node0, node0);\n    CompilerOptions compilerOptions0 = compiler0.options;\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    node1.isInc();\n}",
    "testName" : "test03536"
  },
  "test06769" : {
    "methodSignature" : "public boolean isGetProp()",
    "methodName" : "isGetProp",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06769() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.39703215344));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(closureCodingConvention0, jSTypeRegistry0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, closureReverseAbstractInterpreter0, jSTypeRegistry0);\n    Node node1 = new Node(98, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    node0.isGetProp();\n}",
    "testName" : "test06769"
  },
  "test02728" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test02728() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.095944977192));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(24, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test02728"
  },
  "test115118" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test115118() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(2796.94971040167);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(100, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test115118"
  },
  "test08385" : {
    "methodSignature" : "public boolean isThrow()",
    "methodName" : "isThrow",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08385() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-337.2963172611317));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(120, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    node0.isThrow();\n}",
    "testName" : "test08385"
  },
  "test123128" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test123128() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3822.821875544676));\n    compiler0.toSource(node0);\n    Node node1 = new Node(37, node0, node0);\n    CompilerOptions compilerOptions0 = compiler0.options;\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n    compiler0.getWarningCount();\n}",
    "testName" : "test123128"
  },
  "test07173" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07173() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.833598160275));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node[] nodeArray0 = new Node[1];\n    nodeArray0[0] = node0;\n    Node node1 = new Node(106, nodeArray0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test07173"
  },
  "test117121" : {
    "methodSignature" : "boolean visitName(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visitName",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test117121() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(2523.33497);\n    compiler0.toSource(node0);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(105, node0, node0);\n    boolean boolean0 = typeCheck0.visitName(nodeTraversal0, node0, node1);\n}",
    "testName" : "test117121"
  },
  "test05152" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05152() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(53, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test05152"
  },
  "test0077" : {
    "methodSignature" : "public Scope processForTesting(Node externsRoot, Node jsRoot)",
    "methodName" : "processForTesting",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0077() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    compiler0.initCompilerOptionsIfTesting();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node0 = new Node((-611));\n    typeCheck0.processForTesting(node0, node0);\n}",
    "testName" : "test0077"
  },
  "test09193" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09193() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Node node0 = Node.newNumber(0.0);\n    Compiler compiler0 = new Compiler();\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = Node.newString(129, \"2P-e3_m9p.z&pzf\", 110, 16);\n    typeCheck0.visit((NodeTraversal) null, node1, node0);\n}",
    "testName" : "test09193"
  },
  "test08789" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test08789() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.392558868223));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, syntacticScopeCreator0);\n    Node node1 = new Node(124, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n}",
    "testName" : "test08789"
  },
  "test04344" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test04344() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber(0.0);\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(45, node0, node0);\n    typeCheck0.visit((NodeTraversal) null, node1, node0);\n    node0.hasChildren();\n}",
    "testName" : "test04344"
  },
  "test07577" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test07577() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.392558868223));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(111, node0, node0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test07577"
  },
  "test05556" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test05556() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    compiler0.parseTestCode(\"s{^d|&[+'\");\n    CompilerOptions compilerOptions0 = new CompilerOptions();\n    CleanupPasses cleanupPasses0 = new CleanupPasses(compilerOptions0);\n    ExternExportsPass externExportsPass0 = new ExternExportsPass(compiler0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, externExportsPass0, (ScopeCreator) null);\n    TypeCheck typeCheck0 = cleanupPasses0.makeTypeCheck(compiler0);\n    Node[] nodeArray0 = new Node[0];\n    Node node0 = new Node(60, nodeArray0);\n    typeCheck0.visit(nodeTraversal0, node0, node0);\n}",
    "testName" : "test05556"
  },
  "test06364" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test06364() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3796.095944977192));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(84, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test06364"
  },
  "test01111" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test01111() throws Throwable {\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3822.821875544676));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(37, node0, node0);\n    typeCheck0.processForTesting(node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test01111"
  },
  "test09597" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test09597() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-1812.2566530474));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(135, node0, node0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test09597"
  },
  "test03132" : {
    "methodSignature" : "public void visit(NodeTraversal t, Node n, Node parent)",
    "methodName" : "visit",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test03132() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3797.397032153444));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(28, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node1);\n}",
    "testName" : "test03132"
  },
  "test104106" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test104106() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3845.997638529466));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(144, node0, node0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) typeCheck0);\n}",
    "testName" : "test104106"
  },
  "test109111" : {
    "methodSignature" : "public boolean hasErrors()",
    "methodName" : "hasErrors",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109111() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-6276.1144453));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(149, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.hasErrors();\n}",
    "testName" : "test109111"
  },
  "test109112" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test109112() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-6276.1144453));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    Node node1 = new Node(149, node0, node0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test109112"
  },
  "test112115" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.TypeCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test112115() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newNumber((-3798.9136336228316));\n    compiler0.toSource(node0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    TypeCheck typeCheck0 = new TypeCheck(compiler0, (ReverseAbstractInterpreter) null, jSTypeRegistry0);\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);\n    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0, jqueryCodingConvention0);\n    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, typeCheck0, typedScopeCreator0);\n    Node node1 = new Node(153, node0, node0);\n    typeCheck0.visit(nodeTraversal0, node1, node0);\n    node0.hasOneChild();\n}",
    "testName" : "test112115"
  }
}