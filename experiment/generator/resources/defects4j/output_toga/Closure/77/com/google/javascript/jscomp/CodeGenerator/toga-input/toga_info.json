{
  "test1212" : {
    "methodSignature" : "void addList(Node firstInList)",
    "methodName" : "addList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addList((Node) null);\n}",
    "testName" : "test1212"
  },
  "test2323" : {
    "methodSignature" : "static String identifierEscape(String s)",
    "methodName" : "identifierEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2323() throws Throwable {\n    String string0 = CodeGenerator.identifierEscape(\"onRange\\u00120\\n\\u0007options\\u0018\\u0007 \\u0001(\\u000B2\\u001F.google.protobuf.MessageOptions\\u001A,\\n\\u000EExtensionRange\\u0012\\r\\n\\u0005start\\u0018\\u0001 \\u0001(\\u0005\\u0012\\u000B\\n\\u0003end\\u0018\\u0002 \\u0001(\\u0005\\\"\\u0094\\u0005\\n\\u0014FieldDescriptorProto\\u0012\\f\\n\\u0004name\\u0018\\u0001 \\u0001(\\t\\u0012\\u000E\\n\\u0006number\\u0018\\u0003 \\u0001(\\u0005\\u0012:\\n\\u0005label\\u0018\\u0004 \\u0001(\\u000E2+.google.protobuf.FieldDescriptorProto.Label\\u00128\\n\\u0004type\\u0018\\u0005 \\u0001(\\u000E2*.google.protobuf.FieldDescriptorProto.Type\\u0012\\u0011\\n\\ttype_name\\u0018\\u0006 \\u0001(\\t\\u0012\\u0010\\n\\bextendee\\u0018\\u0002 \\u0001(\\t\\u0012\\u0015\\n\\rdefault_value\\u0018\\u0007 \\u0001(\\t\\u0012.\\n\\u0007options\\u0018\\b \\u0001(\\u000B2\\u001D.google.protobuf.FieldOptions\\\"\\u00B6\\u0002\\n\\u0004Type\\u0012\\u000F\\n\\u000BTYP\");\n}",
    "testName" : "test2323"
  },
  "test1313" : {
    "methodSignature" : "void addArrayList(Node firstInList)",
    "methodName" : "addArrayList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addArrayList((Node) null);\n}",
    "testName" : "test1313"
  },
  "test2424" : {
    "methodSignature" : "static String identifierEscape(String s)",
    "methodName" : "identifierEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2424() throws Throwable {\n    String string0 = CodeGenerator.identifierEscape(\"some\");\n}",
    "testName" : "test2424"
  },
  "test1010" : {
    "methodSignature" : "void addList(Node firstInList)",
    "methodName" : "addList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Node node0 = new Node(85);\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addList(node0);\n}",
    "testName" : "test1010"
  },
  "test2121" : {
    "methodSignature" : "static String regexpEscape(String s)",
    "methodName" : "regexpEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    String string0 = CodeGenerator.regexpEscape(\"</script-t^1:{`^lt\");\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "void addLeftExpr(Node n, int minPrecedence, Context context)",
    "methodName" : "addLeftExpr",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Node node0 = Node.newNumber((-1193.2049));\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;\n    codeGenerator0.addLeftExpr(node0, 9, codeGenerator_Context0);\n}",
    "testName" : "test1111"
  },
  "test2222" : {
    "methodSignature" : "static String regexpEscape(String s)",
    "methodName" : "regexpEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    String string0 = CodeGenerator.regexpEscape(\"OPN'p(xBa,fMyp\\\"/7`<\");\n}",
    "testName" : "test2222"
  },
  "test011" : {
    "methodSignature" : "void addArrayList(Node firstInList)",
    "methodName" : "addArrayList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Node node0 = Node.newNumber((-1.0));\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addArrayList(node0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "static String escapeToDoubleQuotedJsString(String s)",
    "methodName" : "escapeToDoubleQuotedJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(\"onRange\\u00120\\n\\u0007options\\u0018\\u0007 \\u0001(\\u000B2\\u001F.google.protobuf.MessageOptions\\u001A,\\n\\u000EExtensionRange\\u0012\\r\\n\\u0005start\\u0018\\u0001 \\u0001(\\u0005\\u0012\\u000B\\n\\u0003end\\u0018\\u0002 \\u0001(\\u0005\\\"\\u0094\\u0005\\n\\u0014FieldDescriptorProto\\u0012\\f\\n\\u0004name\\u0018\\u0001 \\u0001(\\t\\u0012\\u000E\\n\\u0006number\\u0018\\u0003 \\u0001(\\u0005\\u0012:\\n\\u0005label\\u0018\\u0004 \\u0001(\\u000E2+.google.protobuf.FieldDescriptorProto.Label\\u00128\\n\\u0004type\\u0018\\u0005 \\u0001(\\u000E2*.google.protobuf.FieldDescriptorProto.Type\\u0012\\u0011\\n\\ttype_name\\u0018\\u0006 \\u0001(\\t\\u0012\\u0010\\n\\bextendee\\u0018\\u0002 \\u0001(\\t\\u0012\\u0015\\n\\rdefault_value\\u0018\\u0007 \\u0001(\\t\\u0012.\\n\\u0007options\\u0018\\b \\u0001(\\u000B2\\u001D.google.protobuf.FieldOptions\\\"\\u00B6\\u0002\\n\\u0004Type\\u0012\\u000F\\n\\u000BTYP\");\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "void addCaseBody(Node caseBody)",
    "methodName" : "addCaseBody",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addCaseBody((Node) null);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "void addList(Node firstInList, boolean isArrayOrFunctionArgument)",
    "methodName" : "addList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Node node0 = Node.newNumber(2.0);\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addList(node0, false);\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "CodeGenerator(CodeConsumer consumer, Charset outputCharset)",
    "methodName" : "CodeGenerator",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Charset charset0 = Charset.defaultCharset();\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "static String jsString(String s, CharsetEncoder outputCharsetEncoder)",
    "methodName" : "jsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Charset charset0 = Charset.defaultCharset();\n    CharsetEncoder charsetEncoder0 = charset0.newEncoder();\n    String string0 = CodeGenerator.jsString(\"iam GU*+0'Zh\\\"F=TLR\", charsetEncoder0);\n}",
    "testName" : "test1616"
  },
  "test1717" : {
    "methodSignature" : "static String escapeToDoubleQuotedJsString(String s)",
    "methodName" : "escapeToDoubleQuotedJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(\"~>sM`;26gClq@:\");\n}",
    "testName" : "test1717"
  },
  "test1414" : {
    "methodSignature" : "void addAllSiblings(Node n)",
    "methodName" : "addAllSiblings",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addAllSiblings((Node) null);\n}",
    "testName" : "test1414"
  },
  "test1515" : {
    "methodSignature" : "static String jsString(String s, CharsetEncoder outputCharsetEncoder)",
    "methodName" : "jsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Charset charset0 = Charset.forName(\"default\");\n    CharsetEncoder charsetEncoder0 = charset0.newEncoder();\n    String string0 = CodeGenerator.jsString(\"onRange\\u00120\\n\\u0007optons\\u0018\\u0007 \\u0001(\\u000B2\\u001F.google.protobuf.MessageOptions\\u001A,\\n\\u000EExtensio_Range\\u0012\\r\\n\\u0005start\\u0018\\u0001 \\u0001(\\u0005\\u0012\\u000B\\n>end\\u0018\\u0002 \\u0001(y\\\"\\u0094\\u0005\\n\\u0014FieldDescmiptor~roto\\u0012\\f\\n\\u0004name\\u0018\\u0001\\u0001(\\t\\u0012\\u000E\\n\\u0006number\\u0018 \\u0001\\u0005\\u0012:\\n\\u0005label\\u0018\\u0004 \\u0001(\\u000E2+.go'gle.protobuf.FieldDescrSptorProto.Label\\u00128\\n\\u0004type\\u0018H \\u0001(\\u000E2*.google.protobufBFieldDMscriptorProto.Type\\u0012\\u0011\\ttyZe_name\\u0018\\u0006 \\u0001(\\t\\u0012\\u0010\\nHextendee\\u0018\\u0002 \\u0001(\\t\\u0015\\n\\rdefault_value\\u0018\\u0007 \\u0001(\\t\\u0012\\n\\u0007options\\u0018\\b 6\\u000B2\\u001D.google.protobuf.FieldBptions\\\"\\u00B6\\u0002\\n\\u0004TypE\\u0012\\u000F\\n\\u000BTYP\", charsetEncoder0);\n}",
    "testName" : "test1515"
  },
  "test2020" : {
    "methodSignature" : "static String regexpEscape(String s)",
    "methodName" : "regexpEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    String string0 = CodeGenerator.regexpEscape(\"@$qpaU:3&u]>,-yOuKv\");\n}",
    "testName" : "test2020"
  },
  "test000" : {
    "methodSignature" : "void addList(Node firstInList, boolean isArrayOrFunctionArgument, Context lhsContext)",
    "methodName" : "addList",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Node node0 = new Node(51);\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;\n    codeGenerator0.addList(node0, false, codeGenerator_Context0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "static String regexpEscape(String s)",
    "methodName" : "regexpEscape",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    String string0 = CodeGenerator.regexpEscape(\"6M4<!-->]%+\");\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public void tagAsStrict()",
    "methodName" : "tagAsStrict",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.tagAsStrict();\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "void addAllSiblings(Node n)",
    "methodName" : "addAllSiblings",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Node node0 = new Node((-3311));\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);\n    codeGenerator0.addAllSiblings(node0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "CodeGenerator(CodeConsumer consumer, Charset outputCharset)",
    "methodName" : "CodeGenerator",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Charset charset0 = Charset.forName(\"default\");\n    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "static String escapeToDoubleQuotedJsString(String s)",
    "methodName" : "escapeToDoubleQuotedJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(\"LJjc->}.+(s'\\\"\\\"[\");\n}",
    "testName" : "test1818"
  },
  "test1919" : {
    "methodSignature" : "static String escapeToDoubleQuotedJsString(String s)",
    "methodName" : "escapeToDoubleQuotedJsString",
    "className" : "com.google.javascript.jscomp.CodeGenerator",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(\"K^^T&TY]]>eP*S\");\n}",
    "testName" : "test1919"
  }
}