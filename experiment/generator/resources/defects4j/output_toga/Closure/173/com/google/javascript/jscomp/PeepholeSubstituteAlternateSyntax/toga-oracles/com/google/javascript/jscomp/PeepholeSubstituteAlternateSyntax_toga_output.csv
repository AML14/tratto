project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(47);
    node0.setType(85);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals(2, Node.FLAG_THIS_UNMODIFIED);
}",0,
project,0,test011,"public void test011() throws Throwable {
    Node node0 = Node.newString(4, ""miss&ng goog.getCssName around literal ''{0}''"");
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals(49, Node.DIRECT_EVAL);
}",0,
project,0,test022,"public void test022() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    Node node0 = new Node(44);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node0 = Node.newNumber(0.0);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals(39, Node.EMPTY_BLOCK);
}",0,
project,0,test055,"public void test055() throws Throwable {
    Node node0 = new Node(30);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Compiler compiler0 = new Compiler();
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isRegExp());
}",0,assertTrue(node1.isRegExp())
project,0,test066,"public void test066() throws Throwable {
    Node node0 = new Node(37);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Compiler compiler0 = new Compiler();
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    Node node0 = new Node(37);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    node0.addChildToFront(node0);
    Compiler compiler0 = new Compiler();
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node0 = new Node(47);
    node0.setType(85);
    Node node1 = new Node(29, node0, node0, node0, node0, 40, 30);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node2.hasOneChild());
}",0,assertFalse(node2.hasOneChild())
project,0,test089,"public void test089() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node0 = new Node(47);
    node0.setType(85);
    Node node1 = new Node(29, node0, node0, node0, node0, 40, 30);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertNotNull(node2);
}",0,
project,0,test0910,"public void test0910() throws Throwable {
    Node node0 = new Node(38, 38, 38);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Compiler compiler0 = new Compiler();
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isTypeOf());
}",0,assertTrue(node1.isTypeOf())
project,0,test1011,"public void test1011() throws Throwable {
    Node node0 = new Node(37, 37, 37);
    Node node1 = new Node(4, node0, node0, node0, node0, 8, 15);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertFalse(node2.isCall());
}",0,
project,0,test1112,"public void test1112() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals(43, node1.getCharno());
}",0,"assertEquals(1, node1.getCharno())"
project,0,test1213,"public void test1213() throws Throwable {
    Node node0 = new Node(63);
    node0.addChildToFront(node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals(4, Node.FLAG_ARGUMENTS_UNMODIFIED);
}",0,
project,0,test1314,"public void test1314() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = Node.newString("""");
    node0.addChildToFront(node1);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals(42, Node.SIDE_EFFECT_FLAGS);
}",0,
project,0,test1415,"public void test1415() throws Throwable {
    Node node0 = new Node(63, 63, 63);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isAdd());
}",0,assertTrue(node1.isAdd())
project,0,test1516,"public void test1516() throws Throwable {
    boolean boolean0 = PeepholeSubstituteAlternateSyntax.containsUnicodeEscape(""s1}hD8y_MOh}oR[|,"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test1617,"public void test1617() throws Throwable {
    boolean boolean0 = PeepholeSubstituteAlternateSyntax.containsUnicodeEscape(""tT;(< ,vN9~{TwrG"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
