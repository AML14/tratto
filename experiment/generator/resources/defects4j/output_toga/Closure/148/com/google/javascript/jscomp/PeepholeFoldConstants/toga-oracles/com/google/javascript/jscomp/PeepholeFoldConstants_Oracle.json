[ {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0000"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0011"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0022"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.hasChildren())",
  "exception" : "",
  "testName" : "test0023"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0034"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.hasChildren())",
  "exception" : "",
  "testName" : "test0035"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test0046"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0057"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test0068"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0079"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test00810"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test00911"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasChildren())",
  "exception" : "",
  "testName" : "test01012"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getChildCount())",
  "exception" : "",
  "testName" : "test01113"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test01214"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01315"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test01416"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01517"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasChildren())",
  "exception" : "",
  "testName" : "test01618"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01719"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01820"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test01921"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getChildCount())",
  "exception" : "",
  "testName" : "test02022"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test02123"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasChildren())",
  "exception" : "",
  "testName" : "test02224"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test02325"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getChildCount())",
  "exception" : "",
  "testName" : "test02426"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02527"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getType())",
  "exception" : "",
  "testName" : "test02628"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasChildren())",
  "exception" : "",
  "testName" : "test02729"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getChildCount())",
  "exception" : "",
  "testName" : "test02830"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test02931"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasChildren())",
  "exception" : "",
  "testName" : "test03032"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test03133"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test03234"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test03335"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasChildren())",
  "exception" : "",
  "testName" : "test03436"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test03537"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03638"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03739"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test03840"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test03941"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test04042"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getLineno())",
  "exception" : "",
  "testName" : "test04143"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasChildren())",
  "exception" : "",
  "testName" : "test04244"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test04345"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasChildren())",
  "exception" : "",
  "testName" : "test04446"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test04547"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test04648"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getType())",
  "exception" : "",
  "testName" : "test04749"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test04850"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test04951"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test05052"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test05153"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05254"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getChildCount())",
  "exception" : "",
  "testName" : "test05355"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test05456"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasChildren())",
  "exception" : "",
  "testName" : "test05557"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getCharno())",
  "exception" : "",
  "testName" : "test05658"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test05759"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getChildCount())",
  "exception" : "",
  "testName" : "test05860"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasChildren())",
  "exception" : "",
  "testName" : "test05961"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasChildren())",
  "exception" : "",
  "testName" : "test06062"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06163"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test06264"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test06365"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test06466"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06567"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test06668"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasChildren())",
  "exception" : "",
  "testName" : "test06769"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test06870"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getCharno())",
  "exception" : "",
  "testName" : "test06971"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getCharno())",
  "exception" : "",
  "testName" : "test07072"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getCharno())",
  "exception" : "",
  "testName" : "test07173"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getCharno())",
  "exception" : "",
  "testName" : "test07274"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test07375"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test07476"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test07577"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test07678"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getChildCount())",
  "exception" : "",
  "testName" : "test07779"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test07880"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getChildCount())",
  "exception" : "",
  "testName" : "test07981"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test08082"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getLineno())",
  "exception" : "",
  "testName" : "test08183"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasChildren())",
  "exception" : "",
  "testName" : "test08284"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test08385"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasChildren())",
  "exception" : "",
  "testName" : "test08486"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08587"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertFalse(node3.hasChildren())",
  "exception" : "",
  "testName" : "test08688"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getChildCount())",
  "exception" : "",
  "testName" : "test08789"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test08890"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test08991"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09092"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test09193"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test09294"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09395"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node2.getType())",
  "exception" : "",
  "testName" : "test09496"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09597"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09698"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test09799"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test098100"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test099101"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node2.hasChildren())",
  "exception" : "",
  "testName" : "test100102"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test101103"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test102104"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test103105"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test104106"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test105107"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test106108"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(1, node3.getChildCount())",
  "exception" : "",
  "testName" : "test107109"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test108110"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node4.getCharno())",
  "exception" : "",
  "testName" : "test109111"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test110112"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test111113"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test112114"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test113115"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getType()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getType())",
  "exception" : "",
  "testName" : "test114116"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test115117"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getChildCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getChildCount())",
  "exception" : "",
  "testName" : "test116118"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test117119"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test118120"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean isUnscopedQualifiedName()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test119121"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node4.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test120122"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasChildren())",
  "exception" : "",
  "testName" : "test121123"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getLineno())",
  "exception" : "",
  "testName" : "test122124"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasChildren())",
  "exception" : "",
  "testName" : "test123125"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test124126"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test125127"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test126128"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test127129"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test128130"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test129131"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test130132"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test131133"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test132134"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test133135"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getCharno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, node3.getCharno())",
  "exception" : "",
  "testName" : "test134136"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test135137"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test136138"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasMoreThanOneChild()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasMoreThanOneChild())",
  "exception" : "",
  "testName" : "test137139"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public boolean hasChildren()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node3.hasChildren())",
  "exception" : "",
  "testName" : "test138140"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "Node optimizeSubtree(Node subtree)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test139141"
}, {
  "className" : "com.google.javascript.jscomp.PeepholeFoldConstants",
  "methodSignature" : "public int getLineno()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test140142"
} ]