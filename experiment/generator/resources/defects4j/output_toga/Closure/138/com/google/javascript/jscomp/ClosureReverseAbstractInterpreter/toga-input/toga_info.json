{
  "test00" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.ClosureReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(1);\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    FlowScope flowScope0 = closureReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node0, (FlowScope) null, true);\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.ClosureReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node((-1230));\n    Node node1 = new Node(37, node0, node0, 10, 46);\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    FlowScope flowScope0 = closureReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node1, (FlowScope) null, false);\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.ClosureReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node((-1230));\n    Node node1 = new Node(38);\n    Node node2 = new Node(37, node0, node1, 10, 46);\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    FlowScope flowScope0 = closureReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node2, (FlowScope) null, false);\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.ClosureReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node((-1225), (-1225), (-1225));\n    Node node1 = new Node(21, 21, 33);\n    Node node2 = new Node(33, node0, 42, 26);\n    Node node3 = new Node(37, node2, node1, 10, 46);\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    FlowScope flowScope0 = closureReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node3, (FlowScope) null, true);\n}",
    "testName" : "test33"
  },
  "test44" : {
    "methodSignature" : "public FlowScope getPreciserScopeKnowingConditionOutcome(Node condition, FlowScope blindScope, boolean outcome)",
    "methodName" : "getPreciserScopeKnowingConditionOutcome",
    "className" : "com.google.javascript.jscomp.ClosureReverseAbstractInterpreter",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test44() throws Throwable {\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    Node node0 = new Node(1);\n    Node node1 = new Node(42, 17, 0);\n    Node node2 = new Node(33, node0, 42, 26);\n    Node node3 = new Node(37, node2, node1, 10, 46);\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ClosureReverseAbstractInterpreter closureReverseAbstractInterpreter0 = new ClosureReverseAbstractInterpreter(googleCodingConvention0, jSTypeRegistry0);\n    FlowScope flowScope0 = closureReverseAbstractInterpreter0.getPreciserScopeKnowingConditionOutcome(node3, (FlowScope) null, true);\n}",
    "testName" : "test44"
  }
}