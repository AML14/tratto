focal_method,test_prefix,docstring
"public int getType() {
    return type;
}","public void test000() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    AstRoot astRoot0 = new AstRoot();
    EmptyExpression emptyExpression0 = new EmptyExpression(11);
    astRoot0.addChild(emptyExpression0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public boolean hasOneChild() {
    return first != null && first == last;
}","public void test001() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    AstRoot astRoot0 = new AstRoot();
    EmptyExpression emptyExpression0 = new EmptyExpression(11);
    astRoot0.addChild(emptyExpression0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
    assertTrue(node0.hasOneChild());
}","/**
 * Check for one child more efficiently than by iterating over all the
 * children as is done with Node.getChildCount().
 *
 * @return Whether the node has exactly one child.
 */"
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test012() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    ObjectLiteral objectLiteral0 = new ObjectLiteral(8);
    objectLiteral0.setIsDestructuring(true);
    astRoot0.addChild(objectLiteral0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    ErrorCollector errorCollector0 = new ErrorCollector();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector"", e);
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test023() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    ObjectProperty objectProperty0 = new ObjectProperty(170, 2);
    astRoot0.addChild(objectProperty0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test034() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    AstRoot astRoot0 = new AstRoot(5);
    DoLoop doLoop0 = new DoLoop(12, 22);
    astRoot0.addChild(doLoop0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test045() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot();
    ElementGet elementGet0 = new ElementGet(astRoot0, astRoot0);
    astRoot0.addChild(elementGet0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, toolErrorReporter0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public int getType() {
    return type;
}","public void test056() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    AstRoot astRoot0 = new AstRoot();
    Block block0 = new Block();
    astRoot0.addChild(block0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public boolean hasChildren() {
    return first != null;
}","public void test057() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    AstRoot astRoot0 = new AstRoot();
    Block block0 = new Block();
    astRoot0.addChild(block0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertTrue(node0.hasChildren());
}",""
"public int getType() {
    return type;
}","public void test068() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    AstRoot astRoot0 = new AstRoot();
    Name name0 = new Name(13, ""language version"");
    ExpressionStatement expressionStatement0 = new ExpressionStatement(1, 1, name0);
    astRoot0.addChild(expressionStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test079() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot();
    WhileLoop whileLoop0 = new WhileLoop();
    astRoot0.addChild(whileLoop0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""jj/,ua-"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public int getType() {
    return type;
}","public void test0810() throws Throwable {
    ErrorCollector errorCollector0 = new ErrorCollector();
    AstRoot astRoot0 = new AstRoot(10);
    NumberLiteral numberLiteral0 = new NumberLiteral();
    astRoot0.addChild(numberLiteral0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getCharno() {
    return extractCharno(sourcePosition);
}","public void test0811() throws Throwable {
    ErrorCollector errorCollector0 = new ErrorCollector();
    AstRoot astRoot0 = new AstRoot(10);
    NumberLiteral numberLiteral0 = new NumberLiteral();
    astRoot0.addChild(numberLiteral0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals((-1), node0.getCharno());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test0912() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    AstRoot astRoot0 = new AstRoot();
    ParenthesizedExpression parenthesizedExpression0 = new ParenthesizedExpression();
    astRoot0.addChild(parenthesizedExpression0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1013() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot(7);
    ThrowStatement throwStatement0 = new ThrowStatement();
    astRoot0.addChild(throwStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1114() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    AstRoot astRoot0 = new AstRoot();
    NewExpression newExpression0 = new NewExpression(26, 160);
    astRoot0.addChild(newExpression0);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, toolErrorReporter0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1215() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    AstRoot astRoot0 = new AstRoot();
    StringLiteral stringLiteral0 = new StringLiteral();
    astRoot0.addChild(stringLiteral0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // StringNode: str is null
        //
        verifyException(""com.google.javascript.rhino.Node$StringNode"", e);
    }
}",""
"public int getType() {
    return type;
}","public void test1316() throws Throwable {
    Context context0 = new Context();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    AstRoot astRoot0 = new AstRoot();
    Name name0 = new Name(13, ""language version"");
    PropertyGet propertyGet0 = new PropertyGet(name0, name0, 5);
    astRoot0.addChild(propertyGet0);
    ErrorReporter errorReporter0 = context0.getErrorReporter();
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, errorReporter0);
    assertEquals(132, node0.getType());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1417() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    AstRoot astRoot0 = new AstRoot();
    WithStatement withStatement0 = new WithStatement();
    astRoot0.addChild(withStatement0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1518() throws Throwable {
    ErrorCollector errorCollector0 = new ErrorCollector();
    AstRoot astRoot0 = new AstRoot();
    ForInLoop forInLoop0 = new ForInLoop();
    astRoot0.addChild(forInLoop0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1619() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    AstRoot astRoot0 = new AstRoot();
    ForLoop forLoop0 = new ForLoop(25, 4);
    astRoot0.addChild(forLoop0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1720() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot(17);
    ConditionalExpression conditionalExpression0 = new ConditionalExpression();
    astRoot0.addChild(conditionalExpression0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test1821() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    astRoot0.setType(0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector"", e);
    }
}",""
"public int getType() {
    return type;
}","public void test1922() throws Throwable {
    AstRoot astRoot0 = new AstRoot(4);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
    Comment comment0 = new Comment(140, 2, token_CommentType0, ""3&&P)',=1."");
    astRoot0.addComment(comment0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    IRFactory.transformTree(astRoot0, ""error reporter"", config0, toolErrorReporter0);
    Node node0 = IRFactory.transformTree(astRoot0, """", config0, toolErrorReporter0);
    assertEquals(132, node0.getType());
}",""
"public int getCharno() {
    return extractCharno(sourcePosition);
}","public void test1923() throws Throwable {
    AstRoot astRoot0 = new AstRoot(4);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
    Comment comment0 = new Comment(140, 2, token_CommentType0, ""3&&P)',=1."");
    astRoot0.addComment(comment0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    IRFactory.transformTree(astRoot0, ""error reporter"", config0, toolErrorReporter0);
    Node node0 = IRFactory.transformTree(astRoot0, """", config0, toolErrorReporter0);
    assertEquals((-1), node0.getCharno());
}",""
"public int getType() {
    return type;
}","public void test2024() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    RegExpLiteral regExpLiteral0 = new RegExpLiteral();
    regExpLiteral0.setValue(""language version"");
    AstRoot astRoot0 = new AstRoot();
    astRoot0.addChild(regExpLiteral0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getCharno() {
    return extractCharno(sourcePosition);
}","public void test2125() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot(6);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment((-1), 13, token_CommentType0, ""error reporter"");
    astRoot0.addComment(comment0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals((-1), node0.getCharno());
}",""
"public int getType() {
    return type;
}","public void test2126() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot(6);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment((-1), 13, token_CommentType0, ""error reporter"");
    astRoot0.addComment(comment0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getType() {
    return type;
}","public void test2227() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    Token.CommentType token_CommentType0 = Token.CommentType.LINE;
    Comment comment0 = new Comment(160, 0, token_CommentType0, ""language version"");
    astRoot0.setJsDocNode(comment0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, toolErrorReporter0);
    assertEquals(132, node0.getType());
}",""
"public int getType() {
    return type;
}","public void test2328() throws Throwable {
    Context context0 = new Context();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot(1);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorReporter errorReporter0 = context0.getErrorReporter();
    Node node0 = IRFactory.transformTree(astRoot0, "":\n"", config0, errorReporter0);
    assertEquals(132, node0.getType());
}",""
"public int getCharno() {
    return extractCharno(sourcePosition);
}","public void test2429() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ArrayLiteral arrayLiteral0 = new ArrayLiteral();
    AstRoot astRoot0 = new AstRoot(8);
    astRoot0.setType(129);
    astRoot0.addChild(arrayLiteral0);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, toolErrorReporter0);
    assertEquals((-1), node0.getCharno());
}",""
"public int getType() {
    return type;
}","public void test2430() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ArrayLiteral arrayLiteral0 = new ArrayLiteral();
    AstRoot astRoot0 = new AstRoot(8);
    astRoot0.setType(129);
    astRoot0.addChild(arrayLiteral0);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, toolErrorReporter0);
    assertEquals(125, node0.getType());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test2531() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ArrayLiteral arrayLiteral0 = new ArrayLiteral();
    arrayLiteral0.setIsDestructuring(true);
    AstRoot astRoot0 = new AstRoot();
    astRoot0.addChild(arrayLiteral0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""export"", config0, errorCollector0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector"", e);
    }
}",""
"public int getType() {
    return type;
}","public void test2632() throws Throwable {
    AstRoot astRoot0 = new AstRoot(140);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    BreakStatement breakStatement0 = new BreakStatement(1);
    astRoot0.addChild(breakStatement0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, (ErrorReporter) null);
    assertEquals(132, node0.getType());
}",""
"public int getLineno() {
    return extractLineno(sourcePosition);
}","public void test2633() throws Throwable {
    AstRoot astRoot0 = new AstRoot(140);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    BreakStatement breakStatement0 = new BreakStatement(1);
    astRoot0.addChild(breakStatement0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, (ErrorReporter) null);
    assertEquals((-1), node0.getLineno());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test2734() throws Throwable {
    AstRoot astRoot0 = new AstRoot();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    BreakStatement breakStatement0 = new BreakStatement(1);
    Name name0 = new Name();
    breakStatement0.setBreakLabel(name0);
    astRoot0.addChild(breakStatement0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, toolErrorReporter0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // StringNode: str is null
        //
        verifyException(""com.google.javascript.rhino.Node$StringNode"", e);
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test2835() throws Throwable {
    Context context0 = new Context();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot(1);
    CatchClause catchClause0 = new CatchClause(7, 2);
    Name name0 = new Name(1, 0, ""language version"");
    catchClause0.setVarName(name0);
    astRoot0.addChild(catchClause0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorReporter errorReporter0 = context0.getErrorReporter();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, "":\n"", config0, errorReporter0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public int getType() {
    return type;
}","public void test2936() throws Throwable {
    AstRoot astRoot0 = new AstRoot(0);
    ContinueStatement continueStatement0 = new ContinueStatement();
    astRoot0.addChild(continueStatement0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getLineno() {
    return extractLineno(sourcePosition);
}","public void test2937() throws Throwable {
    AstRoot astRoot0 = new AstRoot(0);
    ContinueStatement continueStatement0 = new ContinueStatement();
    astRoot0.addChild(continueStatement0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals((-1), node0.getLineno());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3038() throws Throwable {
    Context context0 = new Context();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot();
    Name name0 = new Name(23);
    ContinueStatement continueStatement0 = new ContinueStatement(name0);
    astRoot0.addChild(continueStatement0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorReporter errorReporter0 = context0.getErrorReporter();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, errorReporter0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // StringNode: str is null
        //
        verifyException(""com.google.javascript.rhino.Node$StringNode"", e);
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3139() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot();
    FunctionNode functionNode0 = new FunctionNode();
    astRoot0.addChild(functionNode0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, toolErrorReporter0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3240() throws Throwable {
    Context context0 = new Context();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    AstRoot astRoot0 = new AstRoot(2);
    Name name0 = new Name(140, 2, ""error reporter"");
    FunctionNode functionNode0 = new FunctionNode(2, name0);
    astRoot0.addChild(functionNode0);
    ErrorReporter errorReporter0 = context0.getErrorReporter();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""AawK"", config0, errorReporter0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3341() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Label label0 = new Label(180, 150, ""language version"");
    LabeledStatement labeledStatement0 = new LabeledStatement(1);
    labeledStatement0.addLabel(label0);
    labeledStatement0.addLabel(label0);
    AstRoot astRoot0 = new AstRoot();
    astRoot0.addChild(labeledStatement0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorCollector errorCollector0 = new ErrorCollector();
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3442() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot();
    Name name0 = new Name(1, ""package"");
    astRoot0.addChild(name0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.mozilla.rhino.ast.ErrorCollector"", e);
    }
}",""
"public int getType() {
    return type;
}","public void test3543() throws Throwable {
    AstRoot astRoot0 = new AstRoot(6);
    ObjectLiteral objectLiteral0 = new ObjectLiteral();
    astRoot0.addChild(objectLiteral0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    ErrorCollector errorCollector0 = new ErrorCollector();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getCharno() {
    return extractCharno(sourcePosition);
}","public void test3544() throws Throwable {
    AstRoot astRoot0 = new AstRoot(6);
    ObjectLiteral objectLiteral0 = new ObjectLiteral();
    astRoot0.addChild(objectLiteral0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    ErrorCollector errorCollector0 = new ErrorCollector();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
    assertEquals((-1), node0.getCharno());
}",""
"public int getType() {
    return type;
}","public void test3645() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    ReturnStatement returnStatement0 = new ReturnStatement();
    AstRoot astRoot0 = new AstRoot(1);
    astRoot0.addChild(returnStatement0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getLineno() {
    return extractLineno(sourcePosition);
}","public void test3646() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    ReturnStatement returnStatement0 = new ReturnStatement();
    AstRoot astRoot0 = new AstRoot(1);
    astRoot0.addChild(returnStatement0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Node node0 = IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
    assertEquals((-1), node0.getLineno());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3747() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    ReturnStatement returnStatement0 = new ReturnStatement(12);
    AstRoot astRoot0 = new AstRoot(1);
    astRoot0.addChild(returnStatement0);
    returnStatement0.setReturnValue(astRoot0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, toolErrorReporter0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test3848() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot();
    SwitchCase switchCase0 = new SwitchCase(7, 160);
    switchCase0.setExpression(astRoot0);
    astRoot0.addChild(switchCase0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public int getType() {
    return type;
}","public void test3949() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot();
    SwitchCase switchCase0 = new SwitchCase(7, 160);
    astRoot0.addChild(switchCase0);
    ErrorCollector errorCollector0 = new ErrorCollector();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getType() {
    return type;
}","public void test4050() throws Throwable {
    ErrorCollector errorCollector0 = new ErrorCollector();
    AstRoot astRoot0 = new AstRoot();
    VariableDeclaration variableDeclaration0 = new VariableDeclaration(7, 2);
    astRoot0.addChild(variableDeclaration0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public int getCharno() {
    return extractCharno(sourcePosition);
}","public void test4151() throws Throwable {
    ErrorCollector errorCollector0 = new ErrorCollector();
    AstRoot astRoot0 = new AstRoot(1);
    VariableDeclaration variableDeclaration0 = new VariableDeclaration();
    astRoot0.addChild(variableDeclaration0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals((-1), node0.getCharno());
}",""
"public int getType() {
    return type;
}","public void test4152() throws Throwable {
    ErrorCollector errorCollector0 = new ErrorCollector();
    AstRoot astRoot0 = new AstRoot(1);
    VariableDeclaration variableDeclaration0 = new VariableDeclaration();
    astRoot0.addChild(variableDeclaration0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    Node node0 = IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorCollector0);
    assertEquals(132, node0.getType());
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4253() throws Throwable {
    ErrorCollector errorCollector0 = new ErrorCollector();
    AstRoot astRoot0 = new AstRoot(1);
    VariableDeclaration variableDeclaration0 = new VariableDeclaration(2);
    VariableInitializer variableInitializer0 = new VariableInitializer();
    variableDeclaration0.addVariable(variableInitializer0);
    astRoot0.addChild(variableDeclaration0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""language version"", config0, errorCollector0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4354() throws Throwable {
    Context context0 = new Context();
    TreeSet<String> treeSet0 = new TreeSet<String>();
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
    ErrorReporter errorReporter0 = context0.getErrorReporter();
    AstRoot astRoot0 = new AstRoot();
    FunctionCall functionCall0 = new FunctionCall();
    astRoot0.addChild(functionCall0);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""error reporter"", config0, errorReporter0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
"public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter) {
    IRFactory irFactory = new IRFactory(sourceString, node.getSourceName(), config, errorReporter);
    Node irNode = irFactory.transform(node);
    if (node.getComments() != null) {
        for (Comment comment : node.getComments()) {
            if (comment.getCommentType() == JSDOC && !comment.isParsed()) {
                irFactory.handlePossibleFileOverviewJsDoc(comment);
            }
        }
    }
    irFactory.setFileOverviewJsDoc(irNode);
    return irNode;
}","public void test4455() throws Throwable {
    TreeSet<String> treeSet0 = new TreeSet<String>();
    AstRoot astRoot0 = new AstRoot();
    ExpressionStatement expressionStatement0 = new ExpressionStatement(astRoot0, true);
    astRoot0.addChild(expressionStatement0);
    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
    // Undeclared exception!
    try {
        IRFactory.transformTree(astRoot0, ""use strict"", config0, toolErrorReporter0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",""
