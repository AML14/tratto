{
  "test3038" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3038() throws Throwable {\n    Context context0 = new Context();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name(23);\n    ContinueStatement continueStatement0 = new ContinueStatement(name0);\n    astRoot0.addChild(continueStatement0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorReporter errorReporter0 = context0.getErrorReporter();\n    IRFactory.transformTree(astRoot0, \"language version\", config0, errorReporter0);\n}",
    "testName" : "test3038"
  },
  "test2227" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2227() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    Token.CommentType token_CommentType0 = Token.CommentType.LINE;\n    Comment comment0 = new Comment(160, 0, token_CommentType0, \"language version\");\n    astRoot0.setJsDocNode(comment0);\n    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, toolErrorReporter0);\n    node0.getType();\n}",
    "testName" : "test2227"
  },
  "test1215" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1215() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    AstRoot astRoot0 = new AstRoot();\n    StringLiteral stringLiteral0 = new StringLiteral();\n    astRoot0.addChild(stringLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n}",
    "testName" : "test1215"
  },
  "test1013" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1013() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot(7);\n    ThrowStatement throwStatement0 = new ThrowStatement();\n    astRoot0.addChild(throwStatement0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n}",
    "testName" : "test1013"
  },
  "test2024" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2024() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    RegExpLiteral regExpLiteral0 = new RegExpLiteral();\n    regExpLiteral0.setValue(\"language version\");\n    AstRoot astRoot0 = new AstRoot();\n    astRoot0.addChild(regExpLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test2024"
  },
  "test034" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test034() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    AstRoot astRoot0 = new AstRoot(5);\n    DoLoop doLoop0 = new DoLoop(12, 22);\n    astRoot0.addChild(doLoop0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n}",
    "testName" : "test034"
  },
  "test1619" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1619() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    AstRoot astRoot0 = new AstRoot();\n    ForLoop forLoop0 = new ForLoop(25, 4);\n    astRoot0.addChild(forLoop0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n}",
    "testName" : "test1619"
  },
  "test2429" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2429() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ArrayLiteral arrayLiteral0 = new ArrayLiteral();\n    AstRoot astRoot0 = new AstRoot(8);\n    astRoot0.setType(129);\n    astRoot0.addChild(arrayLiteral0);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, toolErrorReporter0);\n    node0.getCharno();\n}",
    "testName" : "test2429"
  },
  "test1417" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1417() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    AstRoot astRoot0 = new AstRoot();\n    WithStatement withStatement0 = new WithStatement();\n    astRoot0.addChild(withStatement0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n}",
    "testName" : "test1417"
  },
  "test068" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test068() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name(13, \"language version\");\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(1, 1, name0);\n    astRoot0.addChild(expressionStatement0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test068"
  },
  "test2632" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2632() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(140);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    BreakStatement breakStatement0 = new BreakStatement(1);\n    astRoot0.addChild(breakStatement0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, (ErrorReporter) null);\n    node0.getType();\n}",
    "testName" : "test2632"
  },
  "test3646" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3646() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ReturnStatement returnStatement0 = new ReturnStatement();\n    AstRoot astRoot0 = new AstRoot(1);\n    astRoot0.addChild(returnStatement0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n    node0.getLineno();\n}",
    "testName" : "test3646"
  },
  "test2633" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2633() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(140);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    BreakStatement breakStatement0 = new BreakStatement(1);\n    astRoot0.addChild(breakStatement0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, (ErrorReporter) null);\n    node0.getLineno();\n}",
    "testName" : "test2633"
  },
  "test3645" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3645() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ReturnStatement returnStatement0 = new ReturnStatement();\n    AstRoot astRoot0 = new AstRoot(1);\n    astRoot0.addChild(returnStatement0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test3645"
  },
  "test2430" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2430() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ArrayLiteral arrayLiteral0 = new ArrayLiteral();\n    AstRoot astRoot0 = new AstRoot(8);\n    astRoot0.setType(129);\n    astRoot0.addChild(arrayLiteral0);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, toolErrorReporter0);\n    node0.getType();\n}",
    "testName" : "test2430"
  },
  "test3442" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3442() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name(1, \"package\");\n    astRoot0.addChild(name0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n}",
    "testName" : "test3442"
  },
  "test4455" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4455() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot();\n    ExpressionStatement expressionStatement0 = new ExpressionStatement(astRoot0, true);\n    astRoot0.addChild(expressionStatement0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    IRFactory.transformTree(astRoot0, \"use strict\", config0, toolErrorReporter0);\n}",
    "testName" : "test4455"
  },
  "test023" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test023() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ObjectProperty objectProperty0 = new ObjectProperty(170, 2);\n    astRoot0.addChild(objectProperty0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n}",
    "testName" : "test023"
  },
  "test1821" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1821() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    astRoot0.setType(0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n}",
    "testName" : "test1821"
  },
  "test0810" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0810() throws Throwable {\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    AstRoot astRoot0 = new AstRoot(10);\n    NumberLiteral numberLiteral0 = new NumberLiteral();\n    astRoot0.addChild(numberLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test0810"
  },
  "test0811" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0811() throws Throwable {\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    AstRoot astRoot0 = new AstRoot(10);\n    NumberLiteral numberLiteral0 = new NumberLiteral();\n    astRoot0.addChild(numberLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getCharno();\n}",
    "testName" : "test0811"
  },
  "test3848" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3848() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot();\n    SwitchCase switchCase0 = new SwitchCase(7, 160);\n    switchCase0.setExpression(astRoot0);\n    astRoot0.addChild(switchCase0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n}",
    "testName" : "test3848"
  },
  "test2835" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2835() throws Throwable {\n    Context context0 = new Context();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot(1);\n    CatchClause catchClause0 = new CatchClause(7, 2);\n    Name name0 = new Name(1, 0, \"language version\");\n    catchClause0.setVarName(name0);\n    astRoot0.addChild(catchClause0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorReporter errorReporter0 = context0.getErrorReporter();\n    IRFactory.transformTree(astRoot0, \":\\n\", config0, errorReporter0);\n}",
    "testName" : "test2835"
  },
  "test057" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test057() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block();\n    astRoot0.addChild(block0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.hasChildren();\n}",
    "testName" : "test057"
  },
  "test3240" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3240() throws Throwable {\n    Context context0 = new Context();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    AstRoot astRoot0 = new AstRoot(2);\n    Name name0 = new Name(140, 2, \"error reporter\");\n    FunctionNode functionNode0 = new FunctionNode(2, name0);\n    astRoot0.addChild(functionNode0);\n    ErrorReporter errorReporter0 = context0.getErrorReporter();\n    IRFactory.transformTree(astRoot0, \"AawK\", config0, errorReporter0);\n}",
    "testName" : "test3240"
  },
  "test4253" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4253() throws Throwable {\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    AstRoot astRoot0 = new AstRoot(1);\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration(2);\n    VariableInitializer variableInitializer0 = new VariableInitializer();\n    variableDeclaration0.addVariable(variableInitializer0);\n    astRoot0.addChild(variableDeclaration0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n}",
    "testName" : "test4253"
  },
  "test4050" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4050() throws Throwable {\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    AstRoot astRoot0 = new AstRoot();\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration(7, 2);\n    astRoot0.addChild(variableDeclaration0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test4050"
  },
  "test2126" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2126() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot(6);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Token.CommentType token_CommentType0 = Token.CommentType.LINE;\n    Comment comment0 = new Comment((-1), 13, token_CommentType0, \"error reporter\");\n    astRoot0.addComment(comment0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test2126"
  },
  "test1114" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1114() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    AstRoot astRoot0 = new AstRoot();\n    NewExpression newExpression0 = new NewExpression(26, 160);\n    astRoot0.addChild(newExpression0);\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, toolErrorReporter0);\n}",
    "testName" : "test1114"
  },
  "test2125" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2125() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot(6);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Token.CommentType token_CommentType0 = Token.CommentType.LINE;\n    Comment comment0 = new Comment((-1), 13, token_CommentType0, \"error reporter\");\n    astRoot0.addComment(comment0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getCharno();\n}",
    "testName" : "test2125"
  },
  "test3139" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3139() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot();\n    FunctionNode functionNode0 = new FunctionNode();\n    astRoot0.addChild(functionNode0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, toolErrorReporter0);\n}",
    "testName" : "test3139"
  },
  "test012" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test012() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    ObjectLiteral objectLiteral0 = new ObjectLiteral(8);\n    objectLiteral0.setIsDestructuring(true);\n    astRoot0.addChild(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n}",
    "testName" : "test012"
  },
  "test056" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test056() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    AstRoot astRoot0 = new AstRoot();\n    Block block0 = new Block();\n    astRoot0.addChild(block0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test056"
  },
  "test1518" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1518() throws Throwable {\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    AstRoot astRoot0 = new AstRoot();\n    ForInLoop forInLoop0 = new ForInLoop();\n    astRoot0.addChild(forInLoop0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n}",
    "testName" : "test1518"
  },
  "test2328" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2328() throws Throwable {\n    Context context0 = new Context();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot(1);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorReporter errorReporter0 = context0.getErrorReporter();\n    Node node0 = IRFactory.transformTree(astRoot0, \":\\n\", config0, errorReporter0);\n    node0.getType();\n}",
    "testName" : "test2328"
  },
  "test1316" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1316() throws Throwable {\n    Context context0 = new Context();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    AstRoot astRoot0 = new AstRoot();\n    Name name0 = new Name(13, \"language version\");\n    PropertyGet propertyGet0 = new PropertyGet(name0, name0, 5);\n    astRoot0.addChild(propertyGet0);\n    ErrorReporter errorReporter0 = context0.getErrorReporter();\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, errorReporter0);\n    node0.getType();\n}",
    "testName" : "test1316"
  },
  "test3544" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3544() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(6);\n    ObjectLiteral objectLiteral0 = new ObjectLiteral();\n    astRoot0.addChild(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n    node0.getCharno();\n}",
    "testName" : "test3544"
  },
  "test1720" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1720() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot(17);\n    ConditionalExpression conditionalExpression0 = new ConditionalExpression();\n    astRoot0.addChild(conditionalExpression0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n}",
    "testName" : "test1720"
  },
  "test2531" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2531() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ArrayLiteral arrayLiteral0 = new ArrayLiteral();\n    arrayLiteral0.setIsDestructuring(true);\n    AstRoot astRoot0 = new AstRoot();\n    astRoot0.addChild(arrayLiteral0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"export\", config0, errorCollector0);\n}",
    "testName" : "test2531"
  },
  "test3543" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3543() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(6);\n    ObjectLiteral objectLiteral0 = new ObjectLiteral();\n    astRoot0.addChild(objectLiteral0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test3543"
  },
  "test4354" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4354() throws Throwable {\n    Context context0 = new Context();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorReporter errorReporter0 = context0.getErrorReporter();\n    AstRoot astRoot0 = new AstRoot();\n    FunctionCall functionCall0 = new FunctionCall();\n    astRoot0.addChild(functionCall0);\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorReporter0);\n}",
    "testName" : "test4354"
  },
  "test000" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    AstRoot astRoot0 = new AstRoot();\n    EmptyExpression emptyExpression0 = new EmptyExpression(11);\n    astRoot0.addChild(emptyExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test000"
  },
  "test0912" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test0912() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    AstRoot astRoot0 = new AstRoot();\n    ParenthesizedExpression parenthesizedExpression0 = new ParenthesizedExpression();\n    astRoot0.addChild(parenthesizedExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n}",
    "testName" : "test0912"
  },
  "test2937" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2937() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(0);\n    ContinueStatement continueStatement0 = new ContinueStatement();\n    astRoot0.addChild(continueStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getLineno();\n}",
    "testName" : "test2937"
  },
  "test3949" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3949() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot();\n    SwitchCase switchCase0 = new SwitchCase(7, 160);\n    astRoot0.addChild(switchCase0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test3949"
  },
  "test001" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test001() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    AstRoot astRoot0 = new AstRoot();\n    EmptyExpression emptyExpression0 = new EmptyExpression(11);\n    astRoot0.addChild(emptyExpression0);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n    node0.hasOneChild();\n}",
    "testName" : "test001"
  },
  "test045" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test045() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot();\n    ElementGet elementGet0 = new ElementGet(astRoot0, astRoot0);\n    astRoot0.addChild(elementGet0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);\n    IRFactory.transformTree(astRoot0, \"language version\", config0, toolErrorReporter0);\n}",
    "testName" : "test045"
  },
  "test2936" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2936() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(0);\n    ContinueStatement continueStatement0 = new ContinueStatement();\n    astRoot0.addChild(continueStatement0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test2936"
  },
  "test3747" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3747() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    ReturnStatement returnStatement0 = new ReturnStatement(12);\n    AstRoot astRoot0 = new AstRoot(1);\n    astRoot0.addChild(returnStatement0);\n    returnStatement0.setReturnValue(astRoot0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    IRFactory.transformTree(astRoot0, \"language version\", config0, toolErrorReporter0);\n}",
    "testName" : "test3747"
  },
  "test2734" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2734() throws Throwable {\n    AstRoot astRoot0 = new AstRoot();\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    BreakStatement breakStatement0 = new BreakStatement(1);\n    Name name0 = new Name();\n    breakStatement0.setBreakLabel(name0);\n    astRoot0.addChild(breakStatement0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    IRFactory.transformTree(astRoot0, \"language version\", config0, toolErrorReporter0);\n}",
    "testName" : "test2734"
  },
  "test1922" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1922() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(4);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment(140, 2, token_CommentType0, \"3&&P)',=1.\");\n    astRoot0.addComment(comment0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, toolErrorReporter0);\n    Node node0 = IRFactory.transformTree(astRoot0, \"\", config0, toolErrorReporter0);\n    node0.getType();\n}",
    "testName" : "test1922"
  },
  "test1923" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1923() throws Throwable {\n    AstRoot astRoot0 = new AstRoot(4);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;\n    Comment comment0 = new Comment(140, 2, token_CommentType0, \"3&&P)',=1.\");\n    astRoot0.addComment(comment0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);\n    IRFactory.transformTree(astRoot0, \"error reporter\", config0, toolErrorReporter0);\n    Node node0 = IRFactory.transformTree(astRoot0, \"\", config0, toolErrorReporter0);\n    node0.getCharno();\n}",
    "testName" : "test1923"
  },
  "test079" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test079() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    AstRoot astRoot0 = new AstRoot();\n    WhileLoop whileLoop0 = new WhileLoop();\n    astRoot0.addChild(whileLoop0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"jj/,ua-\", config0, errorCollector0);\n}",
    "testName" : "test079"
  },
  "test3341" : {
    "methodSignature" : "public static Node transformTree(AstRoot node, String sourceString, Config config, ErrorReporter errorReporter)",
    "methodName" : "transformTree",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3341() throws Throwable {\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Label label0 = new Label(180, 150, \"language version\");\n    LabeledStatement labeledStatement0 = new LabeledStatement(1);\n    labeledStatement0.addLabel(label0);\n    labeledStatement0.addLabel(label0);\n    AstRoot astRoot0 = new AstRoot();\n    astRoot0.addChild(labeledStatement0);\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    IRFactory.transformTree(astRoot0, \"language version\", config0, errorCollector0);\n}",
    "testName" : "test3341"
  },
  "test4152" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4152() throws Throwable {\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    AstRoot astRoot0 = new AstRoot(1);\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChild(variableDeclaration0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getType();\n}",
    "testName" : "test4152"
  },
  "test4151" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.parsing.IRFactory",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4151() throws Throwable {\n    ErrorCollector errorCollector0 = new ErrorCollector();\n    AstRoot astRoot0 = new AstRoot(1);\n    VariableDeclaration variableDeclaration0 = new VariableDeclaration();\n    astRoot0.addChild(variableDeclaration0);\n    TreeSet<String> treeSet0 = new TreeSet<String>();\n    Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;\n    Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);\n    Node node0 = IRFactory.transformTree(astRoot0, \"error reporter\", config0, errorCollector0);\n    node0.getCharno();\n}",
    "testName" : "test4151"
  }
}