project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    Node node0 = new Node(51, 51, 51);
    CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
    // Undeclared exception!
    try {
        codeGenerator0.addList(node0, false, codeGenerator_Context0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test011,"public void test011() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    Node node0 = Node.newString(""-^LmUek7'&^Q$,qPju"");
    // Undeclared exception!
    try {
        codeGenerator0.addArrayList(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    String string0 = CodeGenerator.regexpEscape(""G@tT@r:=]>9N `'K("");
    assertEquals(""/G@tT@r:=]>9N `'K(/"", string0);
}",0,
project,0,test033,"public void test033() throws Throwable {
    String string0 = CodeGenerator.jsString(""E_DOUBLE\u0010\u0001\u0012\u000E\n\nTYPE_FLOATC\u0002v\u000E?\n#YE_INT64\u0010\u0003\u0012\u000F\u000BTYP_UINT64\u0010:\u0012\u000E\nTPE_I_T32{9\u0012\u0010\n\fTYPE_FIXED64\u0010\u0006\u0012\u0010\n\fTYPE_FIXED32\u0010\u0007\u0012\r\n\tTPE_BOOL\u0010\b\u0012\n\u000BTYP_TRING\u0010\t\u0012\u000E\n\nTYPE_GOUP\u0010\n\u0012\u0010\fYPE_MESSAE\u0010\u000B\u0012\u000E\n\n/YPE_YTS\u0010\f\u0012\u000F\n\u000BTYPE_IT32\u0010\r\u0012\r\n\tTYPE_ENUM\u0010\u000E\u0012\u0011J\rTYPE_SFIXED32\u0010\u000F\u0012\u0011\n\rTYPE_SFIXED64\u0010\u0010\u0012\u000F\n\u000BTYPE_SINT32S\u0012.\n\u000BTYPE_SIT64\u0010\u0012\""C\n\u0005Labl..)\u000ELABEL:OPTIONAL\u0010\u0012\u0012\n\u000ELABEL_REQUIRD\u0010\u0002\u0012\u0012\u000ERBEREPEATED\u0010\u0003\""\u008C\n\u0013EnumDes(riptorProto\u0012\f\n\u0004namI\u0018\u0001"", (CharsetEncoder) null);
    assertEquals(""'E_DOUBLE\\u0010\\u0001\\u0012\\u000e\\n\\nTYPE_FLOATC\\u0002v\\u000e?\\n#YE_INT64\\u0010\\u0003\\u0012\\u000f\\u000bTYP_UINT64\\u0010:\\u0012\\u000e\\nTPE_I_T32{9\\u0012\\u0010\\n\\u000cTYPE_FIXED64\\u0010\\u0006\\u0012\\u0010\\n\\u000cTYPE_FIXED32\\u0010\\u0007\\u0012\\r\\n\\tTPE_BOOL\\u0010\\u0008\\u0012\\n\\u000bTYP_TRING\\u0010\\t\\u0012\\u000e\\n\\nTYPE_GOUP\\u0010\\n\\u0012\\u0010\\u000cYPE_MESSAE\\u0010\\u000b\\u0012\\u000e\\n\\n/YPE_YTS\\u0010\\u000c\\u0012\\u000f\\n\\u000bTYPE_IT32\\u0010\\r\\u0012\\r\\n\\tTYPE_ENUM\\u0010\\u000e\\u0012\\u0011J\\rTYPE_SFIXED32\\u0010\\u000f\\u0012\\u0011\\n\\rTYPE_SFIXED64\\u0010\\u0010\\u0012\\u000f\\n\\u000bTYPE_SINT32S\\u0012.\\n\\u000bTYPE_SIT64\\u0010\\u0012\""C\\n\\u0005Labl..)\\u000eLABEL:OPTIONAL\\u0010\\u0012\\u0012\\n\\u000eLABEL_REQUIRD\\u0010\\u0002\\u0012\\u0012\\u000eRBEREPEATED\\u0010\\u0003\""\\u008c\\n\\u0013EnumDes(riptorProto\\u0012\\u000c\\n\\u0004namI\\u0018\\u0001'"", string0);
}",0,
project,0,test044,"public void test044() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.addList(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.tagAsStrict();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test066,"public void test066() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString("":J]]>"");
    assertEquals(""\"":J]]\\>\"""", string0);
}",0,assertNotNull(string0)
project,0,test077,"public void test077() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.addCaseBody((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test088,"public void test088() throws Throwable {
    Node node0 = Node.newString("",[k#o"");
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.addAllSiblings(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test099,"public void test099() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    Node node0 = new Node(107, 107, 107);
    // Undeclared exception!
    try {
        codeGenerator0.addList(node0, false);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for import (type 107)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test1010,"public void test1010() throws Throwable {
    Charset charset0 = Charset.forName(""default"");
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    Charset charset0 = Charset.defaultCharset();
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null, charset0);
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    Node node0 = Node.newNumber((-32.092457627454955));
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    // Undeclared exception!
    try {
        codeGenerator0.addExpr(node0, 47);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    Node node0 = Node.newString(""-^LmUek7'&^Q$,qPju"");
    CodeGenerator.Context codeGenerator_Context0 = CodeGenerator.Context.IN_FOR_INIT_CLAUSE;
    // Undeclared exception!
    try {
        codeGenerator0.addList(node0, false, codeGenerator_Context0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.CodeGenerator"", e);
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    codeGenerator0.addList((Node) null);
}",1,
project,0,test1515,"public void test1515() throws Throwable {
    CodeGenerator codeGenerator0 = new CodeGenerator((CodeConsumer) null);
    codeGenerator0.addAllSiblings((Node) null);
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    String string0 = CodeGenerator.jsString(""Mei[&'=f^.k"", (CharsetEncoder) null);
    assertEquals(""\""Mei[&'=f^.k\"""", string0);
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    Charset charset0 = Charset.defaultCharset();
    CharsetEncoder charsetEncoder0 = charset0.newEncoder();
    String string0 = CodeGenerator.strEscape(""\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012\u001C\n\u0014experimental_map_key\u0018\t \u0001(\t\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption\""/\n\u0005CType\u0012\n\n\u0006STRING\u0010\u0000\u0012\b\n\u0004CORD\u0010\u0001\u0012\u0010\n\fSTRING_PIECE\u0010\u0002*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""]\n\u000BEnumOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""b\n\u0010EnumValueOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""`\n\u000EServiceOptions\u0012C\n"", 'x', ""\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012\u001C\n\u0014experimental_map_key\u0018\t \u0001(\t\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption\""/\n\u0005CType\u0012\n\n\u0006STRING\u0010\u0000\u0012\b\n\u0004CORD\u0010\u0001\u0012\u0010\n\fSTRING_PIECE\u0010\u0002*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""]\n\u000BEnumOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""b\n\u0010EnumValueOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""`\n\u000EServiceOptions\u0012C\n"", ""\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012\u001C\n\u0014experimental_map_key\u0018\t \u0001(\t\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption\""/\n\u0005CType\u0012\n\n\u0006STRING\u0010\u0000\u0012\b\n\u0004CORD\u0010\u0001\u0012\u0010\n\fSTRING_PIECE\u0010\u0002*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""]\n\u000BEnumOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""b\n\u0010EnumValueOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""`\n\u000EServiceOptions\u0012C\n"", ""\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012\u001C\n\u0014experimental_map_key\u0018\t \u0001(\t\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption\""/\n\u0005CType\u0012\n\n\u0006STRING\u0010\u0000\u0012\b\n\u0004CORD\u0010\u0001\u0012\u0010\n\fSTRING_PIECE\u0010\u0002*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""]\n\u000BEnumOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""b\n\u0010EnumValueOptions\u0012C\n\u0014uninterpreted_option\u0018\u00E7\u0007 \u0003(\u000B2$.google.protobuf.UninterpretedOption*\t\b\u00E8\u0007\u0010\u0080\u0080\u0080\u0080\u0002\""`\n\u000EServiceOptions\u0012C\n"", charsetEncoder0);
    assertNotNull(string0);
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString("":a&<!-->"");
    assertEquals(""\"":a&<\\!--\\>\"""", string0);
}",0,assertNotNull(string0)
project,0,test1919,"public void test1919() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(""*>$b/l)A}m*qS"");
    assertEquals(""\""*>$b/l)A}m*qS\"""", string0);
}",0,assertNotNull(string0)
project,0,test2020,"public void test2020() throws Throwable {
    String string0 = CodeGenerator.regexpEscape("":a&!-4qn->"");
    assertEquals(""/:a&!-4qn->/"", string0);
}",0,
project,0,test2121,"public void test2121() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(""&m_3</scriptf}"");
    assertEquals(""\""&m_3<\\/scriptf}\"""", string0);
}",0,assertNotNull(string0)
project,0,test2222,"public void test2222() throws Throwable {
    String string0 = CodeGenerator.escapeToDoubleQuotedJsString(""`<sRFfLs"");
    assertEquals(""\""`<sRFfLs\"""", string0);
}",0,assertNotNull(string0)
project,0,test2323,"public void test2323() throws Throwable {
    String string0 = CodeGenerator.identifierEscape(""E_DOUBLE\u0010\u0001\u0012\u000E\n\nTYPE_FLOAT\u0010\u0002\u0012\u000E\n\nTYPE_INT64\u0010\u0003\u0012\u000F\n\u000BTYPE_UINT64\u0010\u0004\u0012\u000E\n\nTYPE_INT32\u0010\u0005\u0012\u0010\n\fTYPE_FIXED64\u0010\u0006\u0012\u0010\n\fTYPE_FIXED32\u0010\u0007\u0012\r\n\tTYPE_BOOL\u0010\b\u0012\u000F\n\u000BTYPE_STRING\u0010\t\u0012\u000E\n\nTYPE_GROUP\u0010\n\u0012\u0010\n\fYPE_MESSAGE\u0010\u000B\u0012\u000E\n\nTYPE_BYTES\u0010\f\u0012\u000F\n\u000BTYPE_UINT32\u0010\r\u0012\r\n\tTYPE_ENUM\u0010\u000E\u0012\u0011\n\rTYPE_SFIXED32\u0010\u000F\u0012\u0011\n\rTYPE_SFIXED64\u0010\u0010\u0012\u000F\n\u000BTYPE_SINT32\u0010\u0011\u0012\u000F\n\u000BTYPE_SINT64\u0010\u0012\""C\n\u0005Label\u0012\u0012\n\u000ELABEL_OPTIONAL\u0010\u0001\u0012\u0012\n\u000ELABEL_REQUIRED\u0010\u0002\u0012\u0012\n\u000ELABEL_REPEATED\u0010\u0003\""\u008C\u0001\n\u0013EnumDescriptorProto\u0012\f\n\u0004name\u0018\u0001"");
    assertNotNull(string0);
}",0,
project,0,test2424,"public void test2424() throws Throwable {
    String string0 = CodeGenerator.identifierEscape(""OTHER"");
    assertEquals(""OTHER"", string0);
}",0,assertNotNull(string0)
