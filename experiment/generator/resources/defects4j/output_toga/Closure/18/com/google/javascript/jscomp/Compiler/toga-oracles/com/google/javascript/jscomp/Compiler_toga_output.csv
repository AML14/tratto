project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.toSource((JSModule) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test0011,"public void test0011() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.toSourceArray();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.toSource();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test0033,"public void test0033() throws Throwable {
    Compiler compiler0 = new Compiler();
    Compiler.CodeBuilder compiler_CodeBuilder0 = new Compiler.CodeBuilder();
    Node node0 = Node.newNumber((-974.8539));
    // Undeclared exception!
    try {
        compiler0.toSource(compiler_CodeBuilder0, (-2559), node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test0044,"public void test0044() throws Throwable {
    File file0 = MockFile.createTempFile(""goog.isArray"", ""goog.isArray"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(file0);
    Compiler compiler0 = new Compiler(mockPrintStream0);
    // Undeclared exception!
    try {
        compiler0.toSourceArray((JSModule) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test0055,"public void test0055() throws Throwable {
    Logger logger0 = Logger.getAnonymousLogger();
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    JSSourceFile[] jSSourceFileArray0 = new JSSourceFile[1];
    JSModule[] jSModuleArray0 = new JSModule[3];
    // Undeclared exception!
    try {
        compiler0.init(jSSourceFileArray0, jSModuleArray0, (CompilerOptions) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test0066,"public void test0066() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.resetUniqueNameId();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test0077,"public void test0077() throws Throwable {
    Compiler compiler0 = new Compiler();
    Stack<SourceFile> stack0 = new Stack<SourceFile>();
    ArrayList<JSModule> arrayList0 = new ArrayList<JSModule>();
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compileModules((List<SourceFile>) stack0, (List<JSModule>) arrayList0, compilerOptions0);
    compiler0.parseInputs();
    assertFalse(compiler0.isTypeCheckingEnabled());
}",0,assertTrue(compiler0.isTypeCheckingEnabled())
project,0,test0078,"public void test0078() throws Throwable {
    Compiler compiler0 = new Compiler();
    Stack<SourceFile> stack0 = new Stack<SourceFile>();
    ArrayList<JSModule> arrayList0 = new ArrayList<JSModule>();
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compileModules((List<SourceFile>) stack0, (List<JSModule>) arrayList0, compilerOptions0);
    compiler0.parseInputs();
    MockFile mockFile0 = new MockFile(""unexpected: "", ""Bad dependency: {0} -> {1}. Modules must be listed in dependency order."");
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile((File) mockFile0);
    JsAst jsAst0 = new JsAst(jSSourceFile0);
    compiler0.addNewScript(jsAst0);
    assertTrue(compiler0.hasErrors());
}",0,assertTrue(compiler0.hasErrors())
project,0,test00910,"public void test00910() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    // Undeclared exception!
    try {
        compiler0.getCssRenamingMap();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test01011,"public void test01011() throws Throwable {
    Compiler compiler0 = new Compiler();
    boolean boolean0 = compiler0.hasRegExpGlobalReferences();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01012,"public void test01012() throws Throwable {
    Compiler compiler0 = new Compiler();
    boolean boolean0 = compiler0.hasRegExpGlobalReferences();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test01113,"public void test01113() throws Throwable {
    Compiler compiler0 = new Compiler();
    Compiler.IntermediateState compiler_IntermediateState0 = compiler0.getState();
    compiler0.setState(compiler_IntermediateState0);
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test01214,"public void test01214() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.disableThreads();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test01315,"public void test01315() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.parseSyntheticCode(""Duplicte input {0}"", ""Duplicte input {0}"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test01416,"public void test01416() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.rebuildInputsFromModules();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test01517,"public void test01517() throws Throwable {
    Compiler compiler0 = new Compiler();
    boolean boolean0 = compiler0.precheck();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test01518,"public void test01518() throws Throwable {
    Compiler compiler0 = new Compiler();
    boolean boolean0 = compiler0.precheck();
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01619,"public void test01619() throws Throwable {
    String string0 = Compiler.getReleaseDate();
    assertEquals(""2023/11/03 15:39"", string0);
}",0,
project,0,test01720,"public void test01720() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.computeCFG();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test01821,"public void test01821() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.getPropertyMap();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test01922,"public void test01922() throws Throwable {
    String string0 = Compiler.getReleaseVersion();
    assertEquals(""Unversioned directory"", string0);
}",0,
project,0,test02023,"public void test02023() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.processDefines();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.DefaultPassConfig"", e);
    }
}",0,
project,0,test02124,"public void test02124() throws Throwable {
    // Undeclared exception!
    try {
        Compiler.runCallableWithLargeStack((Callable<Object>) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // java.lang.NullPointerException
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test02225,"public void test02225() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.languageMode();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test02326,"public void test02326() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.setCssRenamingMap((CssRenamingMap) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test02427,"public void test02427() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.getWarningCount();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test02528,"public void test02528() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.getVariableMap();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test02629,"public void test02629() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.getFunctionalInformationMap();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test02730,"public void test02730() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.parse();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test02831,"public void test02831() throws Throwable {
    Compiler compiler0 = new Compiler();
    SourceFile sourceFile0 = SourceFile.fromFile(""!NjVE\"":o:'^od||M"");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile(sourceFile0, sourceFile0, compilerOptions0);
    // Undeclared exception!
    try {
        compiler0.ensureLibraryInjected((String) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test02932,"public void test02932() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.recordFunctionInformation();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test03033,"public void test03033() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    JSSourceFile[] jSSourceFileArray0 = new JSSourceFile[0];
    // Undeclared exception!
    try {
        compiler0.compile(jSSourceFileArray0, jSSourceFileArray0, (CompilerOptions) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test03134,"public void test03134() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.getModuleGraph();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test03235,"public void test03235() throws Throwable {
    Logger logger0 = Tracer.logger;
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    compiler0.getSourceMap();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test03336,"public void test03336() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.isTypeCheckingEnabled();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test03437,"public void test03437() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    compiler0.getInputsForTesting();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test03538,"public void test03538() throws Throwable {
    Compiler compiler0 = new Compiler();
    CompilerOptions compilerOptions0 = compiler0.getOptions();
    JSModule[] jSModuleArray0 = new JSModule[0];
    // Undeclared exception!
    try {
        compiler0.compile((JSSourceFile[]) null, jSModuleArray0, compilerOptions0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test03639,"public void test03639() throws Throwable {
    Compiler compiler0 = new Compiler();
    CodeChangeHandler.RecentChange codeChangeHandler_RecentChange0 = compiler0.recentChange;
    compiler0.removeChangeHandler(codeChangeHandler_RecentChange0);
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test03740,"public void test03740() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.getInputsById();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.Collections$UnmodifiableMap"", e);
    }
}",0,
project,0,test03841,"public void test03841() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.setHasRegExpGlobalReferences(false);
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test03942,"public void test03942() throws Throwable {
    Compiler compiler0 = new Compiler();
    MockFile mockFile0 = new MockFile(""2L).R<U@:8[PYeE<]V"");
    Charset charset0 = Charset.defaultCharset();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile((File) mockFile0, charset0);
    JSModule[] jSModuleArray0 = new JSModule[1];
    // Undeclared exception!
    try {
        compiler0.compile(jSSourceFile0, jSModuleArray0, (CompilerOptions) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test04043,"public void test04043() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.getMessages();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test04144,"public void test04144() throws Throwable {
    Logger logger0 = Logger.getAnonymousLogger();
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    compiler0.getExternsForTesting();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test04245,"public void test04245() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.removeTryCatchFinally();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test04346,"public void test04346() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.getTopScope();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test04952,"public void test04952() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""GGco'%"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    // Undeclared exception!
    try {
        compiler0.toSource((Node) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Cannot build without root node being specified
        //
        verifyException(""com.google.javascript.jscomp.CodePrinter$Builder"", e);
    }
}",0,
project,0,test05053,"public void test05053() throws Throwable {
    Compiler compiler0 = new Compiler();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test05054,"public void test05054() throws Throwable {
    Compiler compiler0 = new Compiler();
    Vector<SourceFile> vector0 = new Vector<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compilerOptions0.setCheckSymbols(true);
    compiler0.compile((List<SourceFile>) vector0, (List<SourceFile>) vector0, compilerOptions0);
    assertEquals(1.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test05155,"public void test05155() throws Throwable {
    Compiler compiler0 = new Compiler();
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compilerOptions0.sourceMapOutputPath = ""goog.tweak.registerBoolean"";
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test05156,"public void test05156() throws Throwable {
    Compiler compiler0 = new Compiler();
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compilerOptions0.sourceMapOutputPath = ""goog.tweak.registerBoolean"";
    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();
    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
    assertEquals(1.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test05257,"public void test05257() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""variables, functions, and arguments cannot be deleted in ES5 strict mode"");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    JSSourceFile[] jSSourceFileArray0 = new JSSourceFile[2];
    jSSourceFileArray0[0] = jSSourceFile0;
    jSSourceFileArray0[1] = jSSourceFile0;
    compiler0.init(jSSourceFileArray0, jSSourceFileArray0, compilerOptions0);
    assertEquals(2, compiler0.getErrorCount());
}",0,"assertEquals(0, compiler0.getErrorCount())"
project,0,test05258,"public void test05258() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""variables, functions, and arguments cannot be deleted in ES5 strict mode"");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    JSSourceFile[] jSSourceFileArray0 = new JSSourceFile[2];
    jSSourceFileArray0[0] = jSSourceFile0;
    jSSourceFileArray0[1] = jSSourceFile0;
    compiler0.init(jSSourceFileArray0, jSSourceFileArray0, compilerOptions0);
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test05359,"public void test05359() throws Throwable {
    Compiler compiler0 = new Compiler();
    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
    // Undeclared exception!
    try {
        compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test05460,"public void test05460() throws Throwable {
    Compiler compiler0 = new Compiler();
    Vector<SourceFile> vector0 = new Vector<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile((List<SourceFile>) vector0, (List<SourceFile>) vector0, compilerOptions0);
    ArrayList<JSModule> arrayList0 = new ArrayList<JSModule>();
    // Undeclared exception!
    try {
        compiler0.compileModules((List<SourceFile>) vector0, (List<JSModule>) arrayList0, compilerOptions0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test05561,"public void test05561() throws Throwable {
    Callable<ConstCheck> callable0 = (Callable<ConstCheck>) mock(Callable.class, new ViolatedAssumptionAnswer());
    doReturn((Object) null).when(callable0).call();
    ConstCheck constCheck0 = Compiler.runCallable(callable0, false, false);
    assertNull(constCheck0);
}",1,
project,0,test05662,"public void test05662() throws Throwable {
    Callable<CrossModuleMethodMotion> callable0 = (Callable<CrossModuleMethodMotion>) mock(Callable.class, new ViolatedAssumptionAnswer());
    doReturn((Object) null).when(callable0).call();
    CrossModuleMethodMotion crossModuleMethodMotion0 = Compiler.runCallable(callable0, false, true);
    assertNull(crossModuleMethodMotion0);
}",1,
project,0,test05763,"public void test05763() throws Throwable {
    // Undeclared exception!
    try {
        Compiler.runCallable((Callable<CrossModuleMethodMotion>) null, false, false);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // java.lang.NullPointerException
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test05864,"public void test05864() throws Throwable {
    // Undeclared exception!
    try {
        Compiler.runCallable((Callable<CrossModuleMethodMotion>) null, false, true);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // java.lang.NullPointerException
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test05965,"public void test05965() throws Throwable {
    Compiler compiler0 = new Compiler();
    PassConfig passConfig0 = compiler0.createPassConfigInternal();
    compiler0.setPassConfig(passConfig0);
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test06066,"public void test06066() throws Throwable {
    Compiler compiler0 = new Compiler();
    PassConfig passConfig0 = compiler0.getPassConfig();
    // Undeclared exception!
    try {
        compiler0.setPassConfig(passConfig0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // this.passes has already been assigned
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test06167,"public void test06167() throws Throwable {
    Compiler compiler0 = new Compiler();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();
    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
    compiler0.stripCode(compilerOptions0.aliasableStrings, compilerOptions0.stripTypePrefixes, compilerOptions0.stripNamePrefixes, compilerOptions0.aliasableStrings);
    assertFalse(compilerOptions0.optimizeArgumentsArray);
}",0,
project,0,test06268,"public void test06268() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""*pJ?d%<~l"");
    compiler0.check();
    assertEquals(0.2, compiler0.getProgress(), 0.01);
}",0,
project,0,test06369,"public void test06369() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.endPass();
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Tracer should not be null at the end of a pass.
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test06470,"public void test06470() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.reportCodeChange();
    // Undeclared exception!
    try {
        compiler0.optimize();
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test06571,"public void test06571() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""variables, functions, and arguments cannot be deleted in ES5 strict mode"", ""!NjVE\"":o:'^od||M"");
    compiler0.areNodesEqualForInlining(node0, node0);
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test06673,"public void test06673() throws Throwable {
    Compiler compiler0 = new Compiler();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();
    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
    assertEquals(1.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test06674,"public void test06674() throws Throwable {
    Compiler compiler0 = new Compiler();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();
    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
    CompilerInput compilerInput0 = compiler0.getSynthesizedExternsInput();
    ReferenceCollectingCallback.Reference referenceCollectingCallback_Reference0 = ReferenceCollectingCallback.Reference.createRefForTest(compilerInput0);
    InputId inputId0 = referenceCollectingCallback_Reference0.getInputId();
    compiler0.removeExternInput(inputId0);
    assertEquals(""{SyntheticVarsDeclar}"", compilerInput0.getName());
}",0,
project,0,test06775,"public void test06775() throws Throwable {
    SourceFile sourceFile0 = SourceFile.fromFile(""4k"");
    Vector<SourceFile> vector0 = new Vector<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    MockPrintStream mockPrintStream0 = new MockPrintStream(""com.google.javascript.jscomp.AbstractMessageFormatter$Color"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    compiler0.compile((List<SourceFile>) vector0, (List<SourceFile>) vector0, compilerOptions0);
    JsAst jsAst0 = new JsAst(sourceFile0);
    compiler0.addNewScript(jsAst0);
    // Undeclared exception!
    try {
        compiler0.addIncrementalSourceAst(jsAst0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Duplicate input 4k
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test06876,"public void test06876() throws Throwable {
    SourceFile sourceFile0 = SourceFile.fromFile(""4k"");
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""4k"");
    JsAst jsAst0 = new JsAst(sourceFile0);
    compiler0.addIncrementalSourceAst(jsAst0);
    // Undeclared exception!
    try {
        compiler0.replaceScript(jsAst0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test06977,"public void test06977() throws Throwable {
    SourceFile sourceFile0 = SourceFile.fromFile(""4k"");
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""4k"");
    JsAst jsAst0 = new JsAst(sourceFile0);
    compiler0.addIncrementalSourceAst(jsAst0);
    // Undeclared exception!
    try {
        compiler0.addNewScript(jsAst0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Input already exists: 4k
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test07078,"public void test07078() throws Throwable {
    Compiler compiler0 = new Compiler();
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();
    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
    ReverseAbstractInterpreter reverseAbstractInterpreter0 = compiler0.getReverseAbstractInterpreter();
    ReverseAbstractInterpreter reverseAbstractInterpreter1 = compiler0.getReverseAbstractInterpreter();
    assertSame(reverseAbstractInterpreter1, reverseAbstractInterpreter0);
}",0,
project,0,test07179,"public void test07179() throws Throwable {
    Compiler compiler0 = new Compiler();
    Vector<SourceFile> vector0 = new Vector<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile((List<SourceFile>) vector0, (List<SourceFile>) vector0, compilerOptions0);
    InlineProperties inlineProperties0 = new InlineProperties(compiler0);
    TypedScopeCreator typedScopeCreator0 = new TypedScopeCreator(compiler0);
}",0,
project,0,test07280,"public void test07280() throws Throwable {
    Compiler compiler0 = new Compiler();
    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
    compiler0.getSynthesizedExternsInput();
    Node node0 = compiler0.parseInputs();
    assertFalse(node0.isAdd());
}",0,assertTrue(node0.isAdd())
project,0,test07381,"public void test07381() throws Throwable {
    Compiler compiler0 = new Compiler();
    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
    compiler0.processAMDAndCommonJSModules();
    assertEquals(0, compiler0.getWarningCount());
}",0,
project,0,test07482,"public void test07482() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""M+cS}@$n{0u@t@EE"");
    compiler0.parseTestCode(""M+cS}@$n{0u@t@EE"");
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test07987,"public void test07987() throws Throwable {
    Compiler compiler0 = new Compiler();
    Vector<SourceFile> vector0 = new Vector<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compilerOptions0.ideMode = true;
    compiler0.compile((List<SourceFile>) vector0, (List<SourceFile>) vector0, compilerOptions0);
    compiler0.optimize();
    assertEquals(1.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test08088,"public void test08088() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""*pJ?d%<~l"");
    boolean boolean0 = compiler0.isInliningForbidden();
    assertFalse(boolean0);
}",0,
project,0,test08089,"public void test08089() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""*pJ?d%<~l"");
    boolean boolean0 = compiler0.isInliningForbidden();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test08191,"public void test08191() throws Throwable {
    Compiler compiler0 = new Compiler();
    Vector<SourceFile> vector0 = new Vector<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile((List<SourceFile>) vector0, (List<SourceFile>) vector0, compilerOptions0);
    boolean boolean0 = compiler0.acceptEcmaScript5();
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test08292,"public void test08292() throws Throwable {
    Compiler compiler0 = new Compiler();
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    CompilerOptions.LanguageMode compilerOptions_LanguageMode0 = CompilerOptions.LanguageMode.ECMASCRIPT5;
    compilerOptions0.setLanguageIn(compilerOptions_LanguageMode0);
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode("",^"", ""!NjVL\"":o:'^od||M"");
    JSSourceFile[] jSSourceFileArray0 = new JSSourceFile[7];
    jSSourceFileArray0[0] = jSSourceFile0;
    jSSourceFileArray0[1] = jSSourceFile0;
    jSSourceFileArray0[2] = jSSourceFile0;
    jSSourceFileArray0[3] = jSSourceFile0;
    jSSourceFileArray0[4] = jSSourceFile0;
    jSSourceFileArray0[5] = jSSourceFile0;
    jSSourceFileArray0[6] = jSSourceFile0;
    compiler0.compile((SourceFile) jSSourceFile0, jSSourceFileArray0, compilerOptions0);
    assertTrue(jSSourceFile0.isExtern());
}",0,assertTrue(jSSourceFile0.isExtern())
project,0,test08293,"public void test08293() throws Throwable {
    Compiler compiler0 = new Compiler();
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    CompilerOptions.LanguageMode compilerOptions_LanguageMode0 = CompilerOptions.LanguageMode.ECMASCRIPT5;
    compilerOptions0.setLanguageIn(compilerOptions_LanguageMode0);
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode("",^"", ""!NjVL\"":o:'^od||M"");
    JSSourceFile[] jSSourceFileArray0 = new JSSourceFile[7];
    jSSourceFileArray0[0] = jSSourceFile0;
    jSSourceFileArray0[1] = jSSourceFile0;
    jSSourceFileArray0[2] = jSSourceFile0;
    jSSourceFileArray0[3] = jSSourceFile0;
    jSSourceFileArray0[4] = jSSourceFile0;
    jSSourceFileArray0[5] = jSSourceFile0;
    jSSourceFileArray0[6] = jSSourceFile0;
    compiler0.compile((SourceFile) jSSourceFile0, jSSourceFileArray0, compilerOptions0);
    compiler0.parseInputs();
    assertEquals(2, compiler0.getErrorCount());
}",0,"assertEquals(0, compiler0.getErrorCount())"
project,0,test08394,"public void test08394() throws Throwable {
    Compiler compiler0 = new Compiler();
    SourceFile sourceFile0 = SourceFile.fromFile(""fk"");
    Vector<SourceFile> vector0 = new Vector<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile((List<SourceFile>) vector0, (List<SourceFile>) vector0, compilerOptions0);
    EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile(""fk"");
    FileSystemHandling.appendStringToFile(evoSuiteFile0, ""com.google.javascript.jscomp.Compiler$IntermediateState"");
    JsAst jsAst0 = new JsAst(sourceFile0);
    compiler0.addNewScript(jsAst0);
    assertTrue(compiler0.hasErrors());
}",0,
project,0,test08495,"public void test08495() throws Throwable {
    Compiler compiler0 = new Compiler();
    // Undeclared exception!
    try {
        compiler0.throwInternalError(""A1b_3yH6oVq,6|}azO"", (Exception) null);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // INTERNAL COMPILER ERROR.
        // Please report this problem.
        // A1b_3yH6oVq,6|}azO
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",1,
project,0,test08596,"public void test08596() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""JSC_BASE_CLASS_ERROR"");
    // Undeclared exception!
    try {
        compiler0.optimize();
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
    }
}",0,
project,0,test08697,"public void test08697() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.getSourceRegion((String) null, 8506);
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test08798,"public void test08798() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""*pJ?d%<~l"");
    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();
    CompilerOptions compilerOptions0 = compiler0.getOptions();
    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test08899,"public void test08899() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(""*pJ?g%~l"", "":rb[Ps+]^DnBZdH.ui"");
    JSSourceFile[] jSSourceFileArray0 = new JSSourceFile[0];
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile((SourceFile) jSSourceFile0, jSSourceFileArray0, compilerOptions0);
    assertTrue(jSSourceFile0.isExtern());
}",0,assertTrue(jSSourceFile0.isExtern())
project,0,test088100,"public void test088100() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(""*pJ?g%~l"", "":rb[Ps+]^DnBZdH.ui"");
    JSSourceFile[] jSSourceFileArray0 = new JSSourceFile[0];
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile((SourceFile) jSSourceFile0, jSSourceFileArray0, compilerOptions0);
    assertTrue(compiler0.hasErrors());
}",0,assertTrue(compiler0.hasErrors())
project,0,test089101,"public void test089101() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.getSourceRegion((String) null, (-1));
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test090102,"public void test090102() throws Throwable {
    SourceFile sourceFile0 = SourceFile.fromFile(""4k"");
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""4k"");
    JsAst jsAst0 = new JsAst(sourceFile0);
    compiler0.addIncrementalSourceAst(jsAst0);
    compiler0.getSourceRegion(""4k"", 48);
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test091103,"public void test091103() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSModule jSModule0 = new JSModule(""com.google.javascript.rhino.head.gen."");
    // Undeclared exception!
    try {
        compiler0.getNodeForCodeInsertion(jSModule0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Root module has no inputs
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",1,
project,0,test092104,"public void test092104() throws Throwable {
    Compiler compiler0 = new Compiler();
    LinkedList<SourceFile> linkedList0 = new LinkedList<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile((List<SourceFile>) linkedList0, (List<SourceFile>) linkedList0, compilerOptions0);
    // Undeclared exception!
    try {
        compiler0.ensureLibraryInjected(""// Input %num%"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.io.Reader"", e);
    }
}",0,
project,0,test093105,"public void test093105() throws Throwable {
    Compiler compiler0 = new Compiler();
    Stack<SourceFile> stack0 = new Stack<SourceFile>();
    LinkedList<JSModule> linkedList0 = new LinkedList<JSModule>();
    CompilerOptions compilerOptions0 = compiler0.newCompilerOptions();
    compiler0.compileModules((List<SourceFile>) stack0, (List<JSModule>) linkedList0, compilerOptions0);
    // Undeclared exception!
    try {
        compiler0.getNodeForCodeInsertion((JSModule) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // No inputs
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",1,
project,0,test094106,"public void test094106() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSModule jSModule0 = new JSModule(""com.google.javascript.rhino.head.gen."");
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""computeCFG"");
    jSModule0.add((SourceFile) jSSourceFile0);
    // Undeclared exception!
    try {
        compiler0.getNodeForCodeInsertion(jSModule0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test095107,"public void test095107() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.getAstDotGraph();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test096109,"public void test096109() throws Throwable {
    Compiler compiler0 = new Compiler();
    Vector<SourceFile> vector0 = new Vector<SourceFile>();
    CompilerOptions compilerOptions0 = new CompilerOptions();
    compiler0.compile((List<SourceFile>) vector0, (List<SourceFile>) vector0, compilerOptions0);
    String string0 = compiler0.getAstDotGraph();
    assertEquals(""digraph AST {\n  node [color=lightblue2, style=filled];\n  node0 [label=\""BLOCK\""];\n  node1 [label=\""SCRIPT\""];\n  node0 -> node1 [weight=1];\n  node1 -> RETURN [label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n  node0 -> RETURN [label=\""SYN_BLOCK\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n  node0 -> node1 [label=\""UNCOND\"", fontcolor=\""red\"", weight=0.01, color=\""red\""];\n}\n"", string0);
}",0,
project,0,test097110,"public void test097110() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode(""*pJ?d%<~l"");
    compiler0.getErrorManager();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test098111,"public void test098111() throws Throwable {
    Compiler compiler0 = new Compiler();
    ErrorManager errorManager0 = compiler0.getErrorManager();
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test098112,"public void test098112() throws Throwable {
    Compiler compiler0 = new Compiler();
    ErrorManager errorManager0 = compiler0.getErrorManager();
    assertNotNull(errorManager0);
}",0,
project,0,test099113,"public void test099113() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""PassConfigs must eventually delegate to the DefaultPassConfig"");
    TreeMap<Scope.Var, ReferenceCollectingCallback.ReferenceCollection> treeMap0 = new TreeMap<Scope.Var, ReferenceCollectingCallback.ReferenceCollection>();
    // Undeclared exception!
    try {
        compiler0.updateGlobalVarReferences(treeMap0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""java.util.Collections$UnmodifiableCollection"", e);
    }
}",0,
project,0,test100114,"public void test100114() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    TreeMap<Scope.Var, ReferenceCollectingCallback.ReferenceCollection> treeMap0 = new TreeMap<Scope.Var, ReferenceCollectingCallback.ReferenceCollection>();
    Node node0 = Node.newString(""Root module has no inputs"");
    // Undeclared exception!
    try {
        compiler0.updateGlobalVarReferences(treeMap0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test102117,"public void test102117() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.setProgress(68.4);
    assertEquals(1.0, compiler0.getProgress(), 0.01);
}",0,
project,0,test103118,"public void test103118() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.setProgress((-1.0));
    assertEquals(0.0, compiler0.getProgress(), 0.01);
}",0,
