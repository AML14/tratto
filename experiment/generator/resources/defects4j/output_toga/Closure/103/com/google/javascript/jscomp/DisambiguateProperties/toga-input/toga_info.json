{
  "test1212" : {
    "methodSignature" : "T getTypeWithProperty(String field, T type)",
    "methodName" : "getTypeWithProperty",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    DisambiguateProperties<ConcreteType> disambiguateProperties0 = DisambiguateProperties.forConcreteTypeSystem(compiler0, tightenTypes0);\n    ConcreteType.ConcreteInstanceType concreteType_ConcreteInstanceType0 = new ConcreteType.ConcreteInstanceType(tightenTypes0, objectType0);\n    ConcreteType concreteType0 = disambiguateProperties0.getTypeWithProperty(\"DisambiguateProperties$AbstractScoingCallback\", concreteType_ConcreteInstanceType0);\n}",
    "testName" : "test1212"
  },
  "test1313" : {
    "methodSignature" : "T getTypeWithProperty(String field, T type)",
    "methodName" : "getTypeWithProperty",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    ConcreteType concreteType0 = ConcreteType.NONE;\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    DisambiguateProperties<ConcreteType> disambiguateProperties0 = DisambiguateProperties.forConcreteTypeSystem(compiler0, tightenTypes0);\n    ConcreteType concreteType1 = disambiguateProperties0.getTypeWithProperty(\"TightenTypes pass appears to be stuck in an infinite loop.\", concreteType0);\n}",
    "testName" : "test1313"
  },
  "test1010" : {
    "methodSignature" : "T getTypeWithProperty(String field, T type)",
    "methodName" : "getTypeWithProperty",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();\n    NamedType namedType0 = new NamedType(jSTypeRegistry0, \"TightenTypes pass appears to be stuck in an infinite loop.\", \"TightenTypes pass appears to be stuck in an infinite loop.\", 28, 1);\n    JSType jSType0 = disambiguateProperties0.getTypeWithProperty(\"prototype\", namedType0);\n}",
    "testName" : "test1010"
  },
  "test1111" : {
    "methodSignature" : "public boolean isStringValueType()",
    "methodName" : "isStringValueType",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();\n    NamedType namedType0 = new NamedType(jSTypeRegistry0, \"TightenTypes pass appears to be stuck in an infinite loop.\", \"TightenTypes pass appears to be stuck in an infinite loop.\", 18, 44);\n    NamedType namedType1 = (NamedType) disambiguateProperties0.getTypeWithProperty(\"Not declared as a type name\", namedType0);\n    namedType1.isStringValueType();\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    DisambiguateProperties<ConcreteType> disambiguateProperties0 = DisambiguateProperties.forConcreteTypeSystem(compiler0, tightenTypes0);\n    disambiguateProperties0.process((Node) null, (Node) null);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"com.gogle.javascrirt.jscomp.DisambiguateProperties$AbstractSopingCallback\", \"com.gogle.javascrirt.jscomp.DisambiguateProperties$AbstractSopingCallback\");\n    DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);\n    Node node1 = Node.newNumber((double) 11);\n    disambiguateProperties0.process(node1, node0);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(64);\n    DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);\n    disambiguateProperties0.process(node0, node0);\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "Multimap<String, Collection<T>> getRenamedTypesForTesting()",
    "methodName" : "getRenamedTypesForTesting",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"com.google.javascript.jscomp.DisambiguateProperties$AbstractScopingCallback\", \"com.google.javascript.jscomp.DisambiguateProperties$AbstractScopingCallback\");\n    DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);\n    disambiguateProperties0.process(node0, node0);\n    Multimap<String, Collection<JSType>> multimap0 = disambiguateProperties0.getRenamedTypesForTesting();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "T getTypeWithProperty(String field, T type)",
    "methodName" : "getTypeWithProperty",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    NamedType namedType0 = new NamedType(jSTypeRegistry0, \"com.google.common.base.Suppliers$ExpiringMemoizingSupplier\", \"prototype\", 2266, 480);\n    EnumType enumType0 = jSTypeRegistry0.createEnumType(\"Not declared as a type name\", namedType0);\n    EnumElementType enumElementType0 = enumType0.getElementsType();\n    JSType jSType0 = enumElementType0.findPropertyType(\"=~!{Lx-=2GZ\");\n    FunctionType functionType0 = new FunctionType(jSTypeRegistry0, \"g3[X/&5T#mv\", (Node) null, (Node) null, jSType0);\n    BooleanType booleanType0 = mock(BooleanType.class, new ViolatedAssumptionAnswer());\n    doReturn(functionType0, enumType0).when(booleanType0).autoboxesTo();\n    Visitor<BooleanType> visitor0 = (Visitor<BooleanType>) mock(Visitor.class, new ViolatedAssumptionAnswer());\n    doReturn(booleanType0).when(visitor0).caseFunctionType(any(com.google.javascript.rhino.jstype.FunctionType.class));\n    BooleanType booleanType1 = functionType0.visit(visitor0);\n    JSType jSType1 = disambiguateProperties0.getTypeWithProperty(\"=~!{Lx-=2GZ\", booleanType1);\n}",
    "testName" : "test099"
  },
  "test1414" : {
    "methodSignature" : "T getTypeWithProperty(String field, T type)",
    "methodName" : "getTypeWithProperty",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    DisambiguateProperties<ConcreteType> disambiguateProperties0 = DisambiguateProperties.forConcreteTypeSystem(compiler0, tightenTypes0);\n    ConcreteType concreteType0 = ConcreteType.ALL;\n    ConcreteType concreteType1 = disambiguateProperties0.getTypeWithProperty(\"TightenTypes pass appears to be stuck in an infinite loop.\", concreteType0);\n}",
    "testName" : "test1414"
  },
  "test000" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseSyntheticCode(\"com.google.javascript.jscomp.DisambiguateProperties$AbstractScopingCallback\", \"com.google.javascript.jscomp.DisambiguateProperties$AbstractScopingCallback\");\n    DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);\n    disambiguateProperties0.process(node0, node0);\n    disambiguateProperties0.process(node0, node0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "T getTypeWithProperty(String field, T type)",
    "methodName" : "getTypeWithProperty",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    TightenTypes tightenTypes0 = new TightenTypes(compiler0);\n    DisambiguateProperties<ConcreteType> disambiguateProperties0 = DisambiguateProperties.forConcreteTypeSystem(compiler0, tightenTypes0);\n    ConcreteType concreteType0 = ConcreteType.ALL;\n    ConcreteType[] concreteTypeArray0 = new ConcreteType[9];\n    concreteTypeArray0[1] = concreteType0;\n    ConcreteType.ConcreteUnionType concreteType_ConcreteUnionType0 = new ConcreteType.ConcreteUnionType(concreteTypeArray0);\n    disambiguateProperties0.getTypeWithProperty(\"TightenTypes pass appears to be stuck in an infinite loop.\", concreteType_ConcreteUnionType0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"TightenTypes pass appears to be stuck in an infinite loop.\");\n    DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);\n    Node node1 = new Node(64, node0, (-1), 39);\n    disambiguateProperties0.process(node1, node1);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = compiler0.parseTestCode(\"TightenTypes pass appears to be stuck in an infinite loop.\");\n    DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);\n    Node node1 = new Node(64, node0, 25, 39);\n    disambiguateProperties0.process(node0, node1);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "T getTypeWithProperty(String field, T type)",
    "methodName" : "getTypeWithProperty",
    "className" : "com.google.javascript.jscomp.DisambiguateProperties",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType();\n    DisambiguateProperties<JSType> disambiguateProperties0 = DisambiguateProperties.forJSTypeSystem(compiler0);\n    JSType jSType0 = jSTypeRegistry0.createOptionalType(objectType0);\n    JSType jSType1 = disambiguateProperties0.getTypeWithProperty(\" instances of \", jSType0);\n}",
    "testName" : "test088"
  }
}