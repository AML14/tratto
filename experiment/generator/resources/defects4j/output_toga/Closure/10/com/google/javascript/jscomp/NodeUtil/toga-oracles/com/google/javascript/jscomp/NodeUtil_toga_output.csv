project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0000,"public void test0000() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.isNameReferenced(node0, ""-"", nodeUtil_BooleanResultPredicate0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0001,"public void test0001() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.isNameReferenced(node0, ""-"", nodeUtil_BooleanResultPredicate0);
    assertTrue(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test0012,"public void test0012() throws Throwable {
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(34);
    Node node0 = new Node(34);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 34
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test0023,"public void test0023() throws Throwable {
    Node node0 = Node.newString(""T7Sy92eFqD%ux5K;;_"", (-1466), (-2593));
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 48);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test0034,"public void test0034() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.containsFunction((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil$MatchNodeType"", e);
    }
}",0,
project,0,test0045,"public void test0045() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test0056,"public void test0056() throws Throwable {
    Node node0 = new Node(147);
    boolean boolean0 = NodeUtil.isFunctionObjectCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0067,"public void test0067() throws Throwable {
    Node node0 = new Node(104, 88, (-2908));
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0078,"public void test0078() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertFalse(node0.isGetProp());
}",0,assertTrue(node0.isGetProp())
project,0,test0079,"public void test0079() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test00810,"public void test00810() throws Throwable {
    Node node0 = new Node(151);
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test00911,"public void test00911() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01012,"public void test01012() throws Throwable {
    Node node0 = new Node(79, 79, 79);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01113,"public void test01113() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got HOOK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01214,"public void test01214() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test01315,"public void test01315() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention(jqueryCodingConvention0);
    Node node0 = new Node((-12), 184, 147);
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""."", node0, ""."");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.stripTypePrefixes);
    assertTrue(boolean0);
}",0,
project,0,test01316,"public void test01316() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention(jqueryCodingConvention0);
    Node node0 = new Node((-12), 184, 147);
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""."", node0, ""."");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.stripTypePrefixes);
    assertTrue(node1.hasMoreThanOneChild());
}",0,assertTrue(node1.hasMoreThanOneChild())
project,0,test01317,"public void test01317() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention(jqueryCodingConvention0);
    Node node0 = new Node((-12), 184, 147);
    Node node1 = NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""."", node0, ""."");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.stripTypePrefixes);
    assertEquals(147, node1.getCharno());
}",0,
project,0,test01418,"public void test01418() throws Throwable {
    Node node0 = new Node(70);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForFunction(node0, 41);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test01519,"public void test01519() throws Throwable {
    Node node0 = new Node(163);
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newName(jqueryCodingConvention0, (String) null, node0, (String) null);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // StringNode: str is null
        //
        verifyException(""com.google.javascript.rhino.Node$StringNode"", e);
    }
}",0,
project,0,test01620,"public void test01620() throws Throwable {
    Node node0 = new Node(85, 85, 85);
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01721,"public void test01721() throws Throwable {
    Node node0 = Node.newString(421, ""8B|=1yD;.lXT(FYG"");
    int int0 = NodeUtil.getNameReferenceCount(node0, ""=J\""Ls-x;"");
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test01822,"public void test01822() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01923,"public void test01923() throws Throwable {
    Node node0 = new Node(30);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test02024,"public void test02024() throws Throwable {
    Node node0 = Node.newString(""B-c5o"");
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got STRING
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02125,"public void test02125() throws Throwable {
    Node node0 = new Node(65256);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionBody(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test02226,"public void test02226() throws Throwable {
    Node node0 = new Node(21);
    boolean boolean0 = NodeUtil.isFunctionObjectApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02327,"public void test02327() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getFunctionParameters((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test02428,"public void test02428() throws Throwable {
    Node node0 = new Node(116);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02529,"public void test02529() throws Throwable {
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    Node node0 = Node.newString(42, ""6wY"", 103, 41);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test02630,"public void test02630() throws Throwable {
    Node node0 = new Node(63);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test02731,"public void test02731() throws Throwable {
    Node node0 = new Node(99, 99, 99);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test02832,"public void test02832() throws Throwable {
    Node node0 = new Node(64);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test02933,"public void test02933() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03034,"public void test03034() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03135,"public void test03135() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03236,"public void test03236() throws Throwable {
    Node node0 = new Node(101);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03337,"public void test03337() throws Throwable {
    Node node0 = new Node((-425));
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getImpureBooleanValue(node1);
    assertEquals(1, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test03338,"public void test03338() throws Throwable {
    Node node0 = new Node((-425));
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getImpureBooleanValue(node1);
    assertNotSame(node0, node1);
}",0,
project,0,test03439,"public void test03439() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getPureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03540,"public void test03540() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""?hpb1*keojrpMe(fr7"");
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test03641,"public void test03641() throws Throwable {
    Node node0 = Node.newNumber((double) 0, 139, 111);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test03742,"public void test03742() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test03843,"public void test03843() throws Throwable {
    Node node0 = new Node(41);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test03944,"public void test03944() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test04045,"public void test04045() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.getImpureBooleanValue(node0);
    assertTrue(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test04046,"public void test04046() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(44, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04147,"public void test04147() throws Throwable {
    Node node0 = new Node(47, 2076, 16);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test04248,"public void test04248() throws Throwable {
    Node node0 = Node.newString(63, ""!ESQQnJgD/{Vz+32GL"", 110, 4367);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test04349,"public void test04349() throws Throwable {
    Node node0 = new Node(64, 111, 94);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test04450,"public void test04450() throws Throwable {
    Node node0 = new Node(148);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getPureBooleanValue(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test04451,"public void test04451() throws Throwable {
    Node node0 = new Node(148);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.getPureBooleanValue(node1);
    assertNotSame(node0, node1);
}",0,
project,0,test04552,"public void test04552() throws Throwable {
    Node node0 = Node.newString("""");
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test04653,"public void test04653() throws Throwable {
    Node node0 = Node.newNumber((double) 159, (-1696), 1068);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test04754,"public void test04754() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(""false"", string0);
}",0,
project,0,test04856,"public void test04856() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""+u)C"");
    String string0 = NodeUtil.getStringValue(node0);
    assertNull(string0);
}",0,
project,0,test04957,"public void test04957() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertTrue(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test04958,"public void test04958() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,
project,0,test05060,"public void test05060() throws Throwable {
    Node node0 = Node.newString(""freeze"", (-30), (-30));
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""freeze"", string0);
}",0,
project,0,test05161,"public void test05161() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(41, node0, node0, (-2394), 8233);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""null"", string0);
}",0,
project,0,test05162,"public void test05162() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(41, node0, node0, (-2394), 8233);
    String string0 = NodeUtil.getStringValue(node1);
    assertFalse(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test05263,"public void test05263() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(35, node0, node0, node0, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,assertNotNull(string0)
project,0,test05365,"public void test05365() throws Throwable {
    Node node0 = new Node(63);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test05467,"public void test05467() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"", 154, 9);
    Node node1 = new Node(64, node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test05569,"public void test05569() throws Throwable {
    Node node0 = new Node(151, 151, 151);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test05571,"public void test05571() throws Throwable {
    Node node0 = new Node(151, 151, 151);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(151, node1.getLineno());
}",0,
project,0,test05672,"public void test05672() throws Throwable {
    Node node0 = new Node(154);
    // Undeclared exception!
    try {
        NodeUtil.getArrayElementStringValue(node0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // STRING_KEY is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test05773,"public void test05773() throws Throwable {
    Node node0 = new Node(143);
    Node node1 = new Node(10, node0, node0, node0, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertNull(string0);
}",0,
project,0,test05874,"public void test05874() throws Throwable {
    Node node0 = Node.newNumber(758.720087545682, 4095, 2);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""758.720087545682"", string0);
}",0,assertNotNull(string0)
project,0,test05975,"public void test05975() throws Throwable {
    Node node0 = new Node(151, 151, 151);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals("""", string0);
}",0,
project,0,test05977,"public void test05977() throws Throwable {
    Node node0 = new Node(151, 151, 151);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals(618647, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test06078,"public void test06078() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getNumberValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test06179,"public void test06179() throws Throwable {
    Node node0 = Node.newString(137, ""z'4h4d6"", 102, 137);
    Node node1 = new Node(29, node0, node0, 22, 15);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",1,
project,0,test06280,"public void test06280() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test06381,"public void test06381() throws Throwable {
    Node node0 = Node.newNumber(1.0, (-4121), (-4121));
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(1.0, (double) double0, 0.01);
}",0,
project,0,test06482,"public void test06482() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test06583,"public void test06583() throws Throwable {
    Node node0 = new Node(41, 50, 31);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",1,
project,0,test06684,"public void test06684() throws Throwable {
    Node node0 = new Node(43);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06785,"public void test06785() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(1.0, (double) double0, 0.01);
}",0,
project,0,test06886,"public void test06886() throws Throwable {
    Node node0 = new Node(154);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test06988,"public void test06988() throws Throwable {
    Node node0 = new Node(173);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test07089,"public void test07089() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = Node.newString(154, "")UCvX{#oj6),g,7i5_"", 154, 154);
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""undefined"", node0);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test07191,"public void test07191() throws Throwable {
    Node node0 = new Node(29);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test07292,"public void test07292() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""<="");
    assertNotNull(double0);
}",0,
project,0,test07394,"public void test07394() throws Throwable {
    Node node0 = Node.newString(""-&<&"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test07496,"public void test07496() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""+)}L*R"");
    assertNotNull(double0);
}",0,
project,0,test07598,"public void test07598() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""-infinity"");
    assertNull(double0);
}",0,
project,0,test07699,"public void test07699() throws Throwable {
    String string0 = NodeUtil.trimJsWhiteSpace(""Strings used more than once:\n"");
    assertEquals(""Strings used more than once:"", string0);
}",0,assertNotNull(string0)
project,0,test077100,"public void test077100() throws Throwable {
    String string0 = NodeUtil.trimJsWhiteSpace("" *YZs8%zfr-m)/>*`:"");
    assertEquals(""*YZs8%zfr-m)/>*`:"", string0);
}",0,assertNotNull(string0)
project,0,test078101,"public void test078101() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(9);
}",0,
project,0,test079102,"public void test079102() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(12);
}",0,
project,0,test080103,"public void test080103() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(13);
}",0,
project,0,test081104,"public void test081104() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(8233);
}",0,
project,0,test082105,"public void test082105() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(8200);
}",0,
project,0,test083106,"public void test083106() throws Throwable {
    Node node0 = new Node(126);
    String string0 = NodeUtil.getNearestFunctionName(node0);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test084107,"public void test084107() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.isLiteralValue(node0, true);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test085108,"public void test085108() throws Throwable {
    Node node0 = new Node(50, 50, 50);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 50
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test086109,"public void test086109() throws Throwable {
    Node node0 = new Node(143);
    Node node1 = new Node(29, node0);
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test087110,"public void test087110() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test088111,"public void test088111() throws Throwable {
    Node node0 = new Node(156);
    Node node1 = new Node(39, node0, 1, 53);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test089112,"public void test089112() throws Throwable {
    Node node0 = Node.newString(""_or{c/h!jMM6"", 85, 85);
    Node node1 = new Node(87, node0, node0, 46, 48);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test090113,"public void test090113() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""+u)C"");
    Node node1 = new Node(41, node0, node0, node0, node0);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test091114,"public void test091114() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(node0.isTrue());
}",0,assertFalse(node0.isTrue())
project,0,test091115,"public void test091115() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(43, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test092116,"public void test092116() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test092117,"public void test092117() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.evaluatesToLocalValue(node0);
    assertEquals(44, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test093118,"public void test093118() throws Throwable {
    Node node0 = new Node((-266));
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertTrue(boolean0);
}",0,
project,0,test094119,"public void test094119() throws Throwable {
    Node node0 = Node.newString(8200, "".infinity"", 738, 738);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""Infinity"", node0);
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test095120,"public void test095120() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    Node node1 = new Node(12, node0, 44, 44);
    boolean boolean0 = NodeUtil.isSymmetricOperation(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test096121,"public void test096121() throws Throwable {
    Node node0 = new Node(1220);
    Node node1 = new Node(45, node0, node0, node0);
    boolean boolean0 = NodeUtil.isSymmetricOperation(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test097122,"public void test097122() throws Throwable {
    Node node0 = Node.newString(46, ""JSCompiler_returnArg"", 109, 32);
    ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
    // Undeclared exception!
    try {
        reorderConstantExpression0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test098123,"public void test098123() throws Throwable {
    Node node0 = new Node(26);
    ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
    Node node1 = reorderConstantExpression0.optimizeSubtree(node0);
    assertFalse(node1.isFalse());
}",0,assertTrue(node1.isFalse())
project,0,test099124,"public void test099124() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    Node node1 = new Node(15, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isRelationalOperation(node1);
    assertTrue(boolean0);
}",1,
project,0,test099125,"public void test099125() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    Node node1 = new Node(15, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isRelationalOperation(node1);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(0, node0.getChildCount())"
project,0,test100126,"public void test100126() throws Throwable {
    Node node0 = Node.newString(16, ""JSCompiler_returnArg"", 38, 43);
    ReorderConstantExpression reorderConstantExpression0 = new ReorderConstantExpression();
    // Undeclared exception!
    try {
        reorderConstantExpression0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test101127,"public void test101127() throws Throwable {
    int int0 = NodeUtil.getInverseOperator(14);
    assertEquals(16, int0);
}",1,
project,0,test102128,"public void test102128() throws Throwable {
    int int0 = NodeUtil.getInverseOperator(1431);
    assertEquals((-1), int0);
}",0,"assertEquals(0, int0)"
project,0,test103129,"public void test103129() throws Throwable {
    int int0 = NodeUtil.getInverseOperator(15);
    assertEquals(17, int0);
}",0,"assertEquals(0, int0)"
project,0,test104130,"public void test104130() throws Throwable {
    int int0 = NodeUtil.getInverseOperator(16);
    assertEquals(14, int0);
}",0,"assertEquals(0, int0)"
project,0,test105131,"public void test105131() throws Throwable {
    int int0 = NodeUtil.getInverseOperator(17);
    assertEquals(15, int0);
}",0,"assertEquals(0, int0)"
project,0,test106132,"public void test106132() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test107133,"public void test107133() throws Throwable {
    Node node0 = new Node(64, 111, 94);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test108134,"public void test108134() throws Throwable {
    Node node0 = new Node(91);
    Node node1 = new Node(105, node0, node0, 46, 48);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertFalse(boolean0);
}",0,
project,0,test109135,"public void test109135() throws Throwable {
    Node node0 = new Node(91);
    Node node1 = new Node(105, node0, node0, 46, 48);
    // Undeclared exception!
    try {
        NodeUtil.isLiteralValue(node1, true);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test110136,"public void test110136() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"");
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test111137,"public void test111137() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
    assertTrue(boolean0);
}",0,
project,0,test111138,"public void test111138() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
    assertFalse(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test112139,"public void test112139() throws Throwable {
    Node node0 = new Node(11);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test113140,"public void test113140() throws Throwable {
    Node node0 = new Node(154);
    Node node1 = new Node(12, node0, node0, node0, node0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test114141,"public void test114141() throws Throwable {
    Node node0 = new Node(137, 137, 137);
    Node node1 = new Node(15, node0);
    Stack<String> stack0 = new Stack<String>();
    TreeSet<String> treeSet0 = new TreeSet<String>(stack0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test115142,"public void test115142() throws Throwable {
    Node node0 = new Node(17, 82, 1988);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test116143,"public void test116143() throws Throwable {
    Node node0 = new Node(19);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test117144,"public void test117144() throws Throwable {
    Node node0 = Node.newString(21, ""o}6GuzK3\""DgaN\""IJ"", (-3315), 240);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test118145,"public void test118145() throws Throwable {
    Node node0 = new Node(23, 61, 1988);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, set0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test119146,"public void test119146() throws Throwable {
    Node node0 = new Node(25, 1, 55);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test120147,"public void test120147() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test121148,"public void test121148() throws Throwable {
    Node node0 = new Node(28);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test122149,"public void test122149() throws Throwable {
    Node node0 = Node.newString(29, "">>>="");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test123150,"public void test123150() throws Throwable {
    Node node0 = new Node(30);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test124151,"public void test124151() throws Throwable {
    Node node0 = new Node(25, (-4024), (-4024));
    Node node1 = new Node(31, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test125152,"public void test125152() throws Throwable {
    Node node0 = new Node(68);
    Node node1 = new Node(32, node0, node0, node0, node0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test126153,"public void test126153() throws Throwable {
    Node node0 = new Node(34);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
    assertFalse(boolean0);
}",0,
project,0,test127154,"public void test127154() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "">>>="");
    Node node1 = new Node(36, node0, node0, node0, node0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test128155,"public void test128155() throws Throwable {
    Node node0 = new Node(37);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNamePrefixes);
    assertFalse(boolean0);
}",0,
project,0,test129156,"public void test129156() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "">="");
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test130157,"public void test130157() throws Throwable {
    Node node0 = Node.newNumber((double) (-1340));
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertTrue(boolean0);
}",0,
project,0,test131158,"public void test131158() throws Throwable {
    Node node0 = Node.newString(""$]/CD"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test132159,"public void test132159() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""+u)C"");
    Node node1 = new Node(41, node0, node0, node0, node0);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test133160,"public void test133160() throws Throwable {
    Node node0 = new Node(42, 55, 12);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(boolean0);
}",0,
project,0,test134161,"public void test134161() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
    assertTrue(boolean0);
}",0,
project,0,test134162,"public void test134162() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
    assertEquals(43, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test135163,"public void test135163() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    treeSet0.add(""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test135164,"public void test135164() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    TreeSet<String> treeSet0 = new TreeSet<String>();
    treeSet0.add(""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertFalse(node0.isName());
}",0,assertTrue(node0.isName())
project,0,test136165,"public void test136165() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test137166,"public void test137166() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test138167,"public void test138167() throws Throwable {
    Node node0 = new Node(143);
    Node node1 = new Node(10, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertTrue(boolean0);
}",0,
project,0,test139168,"public void test139168() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test140169,"public void test140169() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(12);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test141170,"public void test141170() throws Throwable {
    Node node0 = new Node(13);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test142171,"public void test142171() throws Throwable {
    Node node0 = new Node(14);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test143172,"public void test143172() throws Throwable {
    Node node0 = new Node(137, 137, 137);
    Node node1 = new Node(15, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test144173,"public void test144173() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(16);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test145174,"public void test145174() throws Throwable {
    Node node0 = new Node(17, 17, 17);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test146175,"public void test146175() throws Throwable {
    Node node0 = new Node(98);
    Node node1 = new Node(18, node0, 45, 36);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test147176,"public void test147176() throws Throwable {
    Node node0 = new Node(19);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test148177,"public void test148177() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(20);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test149178,"public void test149178() throws Throwable {
    Node node0 = new Node(21);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test150179,"public void test150179() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(22);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test151180,"public void test151180() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test152181,"public void test152181() throws Throwable {
    Node node0 = Node.newString(24, ""yp5X"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test153182,"public void test153182() throws Throwable {
    Node node0 = new Node(25, 25, 25);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test154183,"public void test154183() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(27);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test155184,"public void test155184() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(28);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test156185,"public void test156185() throws Throwable {
    Node node0 = Node.newString(""-&<&"");
    Node node1 = new Node(29, node0);
    boolean boolean0 = NodeUtil.isSimpleOperator(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test157186,"public void test157186() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test158187,"public void test158187() throws Throwable {
    Node node0 = new Node(156, 16, 16);
    Node node1 = new Node(31, node0, 29, 52);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test159188,"public void test159188() throws Throwable {
    Node node0 = new Node(32, 2365, 2365);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test160189,"public void test160189() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test160190,"public void test160190() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test161191,"public void test161191() throws Throwable {
    Node node0 = new Node(34);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test162192,"public void test162192() throws Throwable {
    Node node0 = new Node(36);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 36
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test163193,"public void test163193() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(37);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test164194,"public void test164194() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(38);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test165195,"public void test165195() throws Throwable {
    Node node0 = Node.newString(""%M:`&`W4n"");
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test166196,"public void test166196() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test167197,"public void test167197() throws Throwable {
    Node node0 = new Node(1220);
    Node node1 = new Node(45, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test168198,"public void test168198() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(46, node0, 4, 4095);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test168199,"public void test168199() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(46, node0, 4, 4095);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test169200,"public void test169200() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test170201,"public void test170201() throws Throwable {
    Node node0 = new Node(48);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 48
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test171202,"public void test171202() throws Throwable {
    Node node0 = new Node(139, 139, 139);
    Node node1 = new Node(49, node0, node0);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test172203,"public void test172203() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test173204,"public void test173204() throws Throwable {
    Node node0 = new Node(52, (-820), 52);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test174205,"public void test174205() throws Throwable {
    Node node0 = new Node(53);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test175206,"public void test175206() throws Throwable {
    Node node0 = Node.newString(""d_I&9AJW]["", 64, 64);
    Node node1 = new Node(54, node0, node0, 45, 8);
    PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
    boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test176207,"public void test176207() throws Throwable {
    Node node0 = new Node(55);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test177208,"public void test177208() throws Throwable {
    Node node0 = new Node(56, 12, 56);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 56
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test178209,"public void test178209() throws Throwable {
    Node node0 = new Node(57, 118, 57);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test179210,"public void test179210() throws Throwable {
    Node node0 = new Node(58);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test180211,"public void test180211() throws Throwable {
    Node node0 = new Node(61);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test181212,"public void test181212() throws Throwable {
    Node node0 = new Node(62);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test182213,"public void test182213() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test183214,"public void test183214() throws Throwable {
    Node node0 = Node.newString(26, "")UCvX{#oj6),g,7i5_"");
    Node node1 = new Node(64, node0);
    boolean boolean0 = NodeUtil.isSimpleOperator(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test184215,"public void test184215() throws Throwable {
    Node node0 = new Node(65);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 65
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test185216,"public void test185216() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test186217,"public void test186217() throws Throwable {
    Node node0 = new Node(68, 68, 68);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test187218,"public void test187218() throws Throwable {
    Node node0 = new Node(69);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test188219,"public void test188219() throws Throwable {
    Node node0 = new Node(70);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test189220,"public void test189220() throws Throwable {
    Node node0 = new Node(71);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 71
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test190221,"public void test190221() throws Throwable {
    Node node0 = new Node(72);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test191222,"public void test191222() throws Throwable {
    Node node0 = new Node(74);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 74
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test192223,"public void test192223() throws Throwable {
    Node node0 = new Node(75, 75, 75);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 75
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test193224,"public void test193224() throws Throwable {
    Node node0 = new Node(76);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 76
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test194225,"public void test194225() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY 77
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test195226,"public void test195226() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,
project,0,test196227,"public void test196227() throws Throwable {
    Node node0 = new Node(80);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test197228,"public void test197228() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(81);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test198229,"public void test198229() throws Throwable {
    Node node0 = new Node(82);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test199230,"public void test199230() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) linkedList0);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodePARAM_LIST
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test200231,"public void test200231() throws Throwable {
    Node node0 = new Node(85);
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    boolean boolean0 = peepholeRemoveDeadCode0.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test201232,"public void test201232() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test202233,"public void test202233() throws Throwable {
    Node node0 = new Node(48);
    Node node1 = new Node(88, node0, 1, 43);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test203234,"public void test203234() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(89);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test204235,"public void test204235() throws Throwable {
    Node node0 = new Node(90, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test205236,"public void test205236() throws Throwable {
    Node node0 = new Node(91);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test206237,"public void test206237() throws Throwable {
    Node node0 = Node.newString(92, ""variable {0} is undeclared"", (-9), 92);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test207238,"public void test207238() throws Throwable {
    Node node0 = new Node(93, 93, 93);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test208239,"public void test208239() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(94);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test209240,"public void test209240() throws Throwable {
    Node node0 = new Node(95);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test210241,"public void test210241() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test211242,"public void test211242() throws Throwable {
    Node node0 = new Node(35);
    Node node1 = new Node(97, node0, 88, 1861);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test212243,"public void test212243() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test213244,"public void test213244() throws Throwable {
    Node node0 = new Node(99, 99, 99);
    PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
    boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test214245,"public void test214245() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test215246,"public void test215246() throws Throwable {
    Node node0 = new Node(102, 98, 98);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216247,"public void test216247() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test217248,"public void test217248() throws Throwable {
    Node node0 = Node.newString(104, ""variable {0} is undeclared"", 92, 92);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 104
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test218249,"public void test218249() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test219250,"public void test219250() throws Throwable {
    Node node0 = new Node(106, 106, 106);
    PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
    boolean boolean0 = peepholeFoldWithTypes0.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test220251,"public void test220251() throws Throwable {
    Node node0 = new Node(107, (-1779), (-1779));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test221252,"public void test221252() throws Throwable {
    Node node0 = new Node(108, 2287, 2287);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeIF 2287
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test222253,"public void test222253() throws Throwable {
    Node node0 = new Node(109, (-1750), (-1750));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test223254,"public void test223254() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(110);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test224255,"public void test224255() throws Throwable {
    Node node0 = new Node(112, 2165, (-1687));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225256,"public void test225256() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test226257,"public void test226257() throws Throwable {
    Node node0 = new Node(114, 113, 279);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test227258,"public void test227258() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test228259,"public void test228259() throws Throwable {
    Node node0 = new Node(117);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test229260,"public void test229260() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(118);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test230261,"public void test230261() throws Throwable {
    Node node0 = new Node(66);
    Node node1 = new Node(120, node0, node0, 17, 42);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchDeclaration0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCATCH 17
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test231262,"public void test231262() throws Throwable {
    Node node0 = new Node(121);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test232263,"public void test232263() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"", 154, 9);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test232264,"public void test232264() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"", 154, 9);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test232265,"public void test232265() throws Throwable {
    Node node0 = Node.newString(9, "")UCvX{#oj6),g,7i5_"", 154, 9);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(154, node1.getLineno());
}",0,
project,0,test233266,"public void test233266() throws Throwable {
    Node node0 = new Node((-4107), (-4107), (-4107));
    Node node1 = new Node(30, node0, 36, 2);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test234267,"public void test234267() throws Throwable {
    Node node0 = new Node(36, 103, (-1459145716));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test235268,"public void test235268() throws Throwable {
    Node node0 = new Node(156);
    Node node1 = new Node(37, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test236269,"public void test236269() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""null"");
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    // Undeclared exception!
    try {
        peepholeRemoveDeadCode0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test237270,"public void test237270() throws Throwable {
    Node node0 = new Node(84);
    Node node1 = new Node(42, node0, (-519), 37);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test238271,"public void test238271() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(true);
    boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test239272,"public void test239272() throws Throwable {
    Node node0 = new Node(154);
    Node node1 = new Node(47, node0, node0, 55, 55);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test240273,"public void test240273() throws Throwable {
    Node node0 = new Node(49);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test241274,"public void test241274() throws Throwable {
    Node node0 = new Node(50, 50, 50);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test242275,"public void test242275() throws Throwable {
    Node node0 = new Node(51);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test243276,"public void test243276() throws Throwable {
    Node node0 = new Node(65);
    PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
    boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test244277,"public void test244277() throws Throwable {
    Node node0 = new Node(71);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test245278,"public void test245278() throws Throwable {
    Node node0 = new Node(74);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test246279,"public void test246279() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = new Node(76, node0, 1, 41);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test247280,"public void test247280() throws Throwable {
    Node node0 = new Node(77, 77, 97);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test248281,"public void test248281() throws Throwable {
    Vector<JSType> vector0 = new Vector<JSType>();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test249282,"public void test249282() throws Throwable {
    Node node0 = new Node(59);
    Node node1 = new Node(100, node0, 3406, 1394);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250283,"public void test250283() throws Throwable {
    Node node0 = new Node(101);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test251284,"public void test251284() throws Throwable {
    Node node0 = new Node(104, (-1408), (-1716));
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test252285,"public void test252285() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test253286,"public void test253286() throws Throwable {
    Node node0 = new Node(110, 957, 957);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test254287,"public void test254287() throws Throwable {
    Node node0 = new Node(111, 102, 137);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test255288,"public void test255288() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test256289,"public void test256289() throws Throwable {
    Node node0 = new Node(4, 190, 4);
    Node node1 = NodeUtil.newVarNode(""function"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(node1.isVar());
}",0,
project,0,test256290,"public void test256290() throws Throwable {
    Node node0 = new Node(4, 190, 4);
    Node node1 = NodeUtil.newVarNode(""function"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(190, node1.getLineno());
}",0,
project,0,test256291,"public void test256291() throws Throwable {
    Node node0 = new Node(4, 190, 4);
    Node node1 = NodeUtil.newVarNode(""function"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test256292,"public void test256292() throws Throwable {
    Node node0 = new Node(4, 190, 4);
    Node node1 = NodeUtil.newVarNode(""function"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(node0.hasOneChild());
}",0,assertFalse(node0.hasOneChild())
project,0,test257293,"public void test257293() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test258294,"public void test258294() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test259295,"public void test259295() throws Throwable {
    Node node0 = new Node(124);
    PeepholeReplaceKnownMethods peepholeReplaceKnownMethods0 = new PeepholeReplaceKnownMethods(false);
    boolean boolean0 = peepholeReplaceKnownMethods0.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test260296,"public void test260296() throws Throwable {
    Node node0 = new Node(125, 2371, 2371);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test261297,"public void test261297() throws Throwable {
    Node node0 = Node.newString(126, "")UCvX{#oj6),g,7i5_"", 61, 131);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test262298,"public void test262298() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test263299,"public void test263299() throws Throwable {
    Node node0 = new Node(128);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test264300,"public void test264300() throws Throwable {
    Node node0 = new Node(131);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test265301,"public void test265301() throws Throwable {
    Node node0 = new Node(132, 2371, 2371);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test266302,"public void test266302() throws Throwable {
    Node node0 = new Node(133);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test267303,"public void test267303() throws Throwable {
    Node node0 = new Node(134);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test268304,"public void test268304() throws Throwable {
    Node node0 = new Node(135);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test269305,"public void test269305() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    Node node1 = new Node(136, node0, 43, 55);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test270306,"public void test270306() throws Throwable {
    Node node0 = new Node(98);
    Node node1 = new Node(138, node0, 45, 36);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test271307,"public void test271307() throws Throwable {
    Node node0 = new Node(139, 139, 139);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test272308,"public void test272308() throws Throwable {
    Node node0 = new Node(143);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test273309,"public void test273309() throws Throwable {
    Node node0 = new Node(144, 144, 144);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test274310,"public void test274310() throws Throwable {
    Node node0 = new Node(145);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test275311,"public void test275311() throws Throwable {
    Node node0 = new Node(147);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test276312,"public void test276312() throws Throwable {
    Node node0 = new Node(148);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test277313,"public void test277313() throws Throwable {
    Node node0 = new Node(150);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test278314,"public void test278314() throws Throwable {
    Node node0 = new Node(151);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test279315,"public void test279315() throws Throwable {
    Node node0 = new Node(152);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test280316,"public void test280316() throws Throwable {
    Node node0 = new Node(153, 153, 153);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test281317,"public void test281317() throws Throwable {
    Node node0 = new Node(154);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test282318,"public void test282318() throws Throwable {
    Node node0 = new Node(64, 111, 94);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test283319,"public void test283319() throws Throwable {
    Node node0 = new Node(64, 111, 94);
    node0.addChildToFront(node0);
    // Undeclared exception!
    try {
        NodeUtil.getPureBooleanValue(node0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
    }
}",0,
project,0,test284320,"public void test284320() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test285321,"public void test285321() throws Throwable {
    Node node0 = new Node(119, 145, 119);
    Node node1 = new Node(30, node0, 51, 42);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test286322,"public void test286322() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test287323,"public void test287323() throws Throwable {
    Node node0 = new Node(31);
    PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
    boolean boolean0 = peepholeFoldWithTypes0.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test288324,"public void test288324() throws Throwable {
    Node node0 = new Node(105);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test289325,"public void test289325() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test290326,"public void test290326() throws Throwable {
    Node node0 = new Node(49);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test291327,"public void test291327() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test292328,"public void test292328() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",1,
project,0,test293329,"public void test293329() throws Throwable {
    Node node0 = new Node(30, 35, 0);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, compilerOptions0.stripNameSuffixes);
    assertTrue(boolean0);
}",0,
project,0,test294330,"public void test294330() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, compilerOptions0.stripNamePrefixes);
    assertTrue(boolean0);
}",0,
project,0,test295331,"public void test295331() throws Throwable {
    Node node0 = new Node(37, 16, 8232);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, compilerOptions0.stripTypes);
    assertTrue(boolean0);
}",0,
project,0,test296332,"public void test296332() throws Throwable {
    Node node0 = new Node(105);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.canBeSideEffected(node0, compilerOptions0.stripTypes);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test297333,"public void test297333() throws Throwable {
    Node node0 = new Node(70);
    Node node1 = new Node(31, node0, node0, 12, 47);
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test298334,"public void test298334() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.aliasableStrings);
    assertFalse(node1.isName());
}",0,assertTrue(node1.isName())
project,0,test298335,"public void test298335() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.aliasableStrings);
    assertTrue(boolean0);
}",0,
project,0,test298336,"public void test298336() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, compilerOptions0.aliasableStrings);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test299337,"public void test299337() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test300338,"public void test300338() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test301339,"public void test301339() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test302340,"public void test302340() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test303341,"public void test303341() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test304342,"public void test304342() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test305343,"public void test305343() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test306344,"public void test306344() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test307345,"public void test307345() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test308346,"public void test308346() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test309347,"public void test309347() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test310348,"public void test310348() throws Throwable {
    int int0 = NodeUtil.precedence(19);
    assertEquals(10, int0);
}",0,
project,0,test311349,"public void test311349() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test312350,"public void test312350() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test313351,"public void test313351() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test314352,"public void test314352() throws Throwable {
    int int0 = NodeUtil.precedence(23);
    assertEquals(12, int0);
}",0,
project,0,test315353,"public void test315353() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test316354,"public void test316354() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test317355,"public void test317355() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test318356,"public void test318356() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test319357,"public void test319357() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test320358,"public void test320358() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test321359,"public void test321359() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test322360,"public void test322360() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test323361,"public void test323361() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test324362,"public void test324362() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test325363,"public void test325363() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 34
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test326364,"public void test326364() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test327365,"public void test327365() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 36
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test328366,"public void test328366() throws Throwable {
    int int0 = NodeUtil.precedence(37);
    assertEquals(15, int0);
}",0,
project,0,test329367,"public void test329367() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test330368,"public void test330368() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test331369,"public void test331369() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test332370,"public void test332370() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test333371,"public void test333371() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test334372,"public void test334372() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test335373,"public void test335373() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test336374,"public void test336374() throws Throwable {
    int int0 = NodeUtil.precedence(45);
    assertEquals(8, int0);
}",0,
project,0,test337375,"public void test337375() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test338376,"public void test338376() throws Throwable {
    int int0 = NodeUtil.precedence(47);
    assertEquals(15, int0);
}",0,
project,0,test339377,"public void test339377() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 48
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test340378,"public void test340378() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for THROW (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test341379,"public void test341379() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 50
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test342380,"public void test342380() throws Throwable {
    int int0 = NodeUtil.precedence(51);
    assertEquals(9, int0);
}",0,
project,0,test343381,"public void test343381() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test344382,"public void test344382() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(53);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 53
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test345383,"public void test345383() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(54);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 54
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test346384,"public void test346384() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(55);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 55
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test347385,"public void test347385() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(57);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 57
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test348386,"public void test348386() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 58
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test349387,"public void test349387() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 59
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test350388,"public void test350388() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(61);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 61
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test351389,"public void test351389() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(62);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 62
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test352390,"public void test352390() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test353391,"public void test353391() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test354392,"public void test354392() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(65);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 65
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test355393,"public void test355393() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(66);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 66
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test356394,"public void test356394() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 67
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test357395,"public void test357395() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 68
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test358396,"public void test358396() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 69
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test359397,"public void test359397() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 70
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test360398,"public void test360398() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(71);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 71
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test361399,"public void test361399() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 72
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test362400,"public void test362400() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 74
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test363401,"public void test363401() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(75);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 75
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test364402,"public void test364402() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(76);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 76
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test365403,"public void test365403() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for TRY (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366404,"public void test366404() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 79
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test367405,"public void test367405() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(80);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 80
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test368406,"public void test368406() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 81
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test369407,"public void test369407() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 82
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test370408,"public void test370408() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for PARAM_LIST (type 83)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371409,"public void test371409() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 84
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test372410,"public void test372410() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test373411,"public void test373411() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test374412,"public void test374412() throws Throwable {
    int int0 = NodeUtil.precedence(87);
    assertEquals(1, int0);
}",0,
project,0,test375413,"public void test375413() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test376414,"public void test376414() throws Throwable {
    int int0 = NodeUtil.precedence(89);
    assertEquals(1, int0);
}",0,
project,0,test377415,"public void test377415() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test378416,"public void test378416() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test379417,"public void test379417() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test380418,"public void test380418() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test381419,"public void test381419() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test382420,"public void test382420() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test383421,"public void test383421() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test384422,"public void test384422() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test385423,"public void test385423() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test386424,"public void test386424() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 99
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test387425,"public void test387425() throws Throwable {
    int int0 = NodeUtil.precedence(100);
    assertEquals(3, int0);
}",0,
project,0,test388426,"public void test388426() throws Throwable {
    int int0 = NodeUtil.precedence(101);
    assertEquals(4, int0);
}",0,
project,0,test389427,"public void test389427() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test390428,"public void test390428() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 104
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test391429,"public void test391429() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test392430,"public void test392430() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 106
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test393431,"public void test393431() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 107
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test394432,"public void test394432() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for IF (type 108)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test395433,"public void test395433() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 109
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test396434,"public void test396434() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for SWITCH (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test397435,"public void test397435() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for CASE (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test398436,"public void test398436() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for DEFAULT_CASE (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test399437,"public void test399437() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for WHILE (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test400438,"public void test400438() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for DO (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test401439,"public void test401439() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for FOR (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test402440,"public void test402440() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for BREAK (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test403441,"public void test403441() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for CONTINUE (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test404442,"public void test404442() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for VAR (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test405443,"public void test405443() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for WITH (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test406444,"public void test406444() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for CATCH (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test407445,"public void test407445() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 121
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test408446,"public void test408446() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test409447,"public void test409447() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 123
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test410448,"public void test410448() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test411449,"public void test411449() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(125);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for BLOCK (type 125)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test412450,"public void test412450() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(126);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for LABEL (type 126)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test413451,"public void test413451() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(127);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 127
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test414452,"public void test414452() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(128);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 128
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test415453,"public void test415453() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(129);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 129
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test416454,"public void test416454() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(130);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for EXPR_RESULT (type 130)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test417455,"public void test417455() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(131);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 131
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test418456,"public void test418456() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(132);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for SCRIPT (type 132)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test419457,"public void test419457() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(133);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 133
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test420458,"public void test420458() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(134);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 134
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test421459,"public void test421459() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(135);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 135
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test422460,"public void test422460() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(136);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 136
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test423461,"public void test423461() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(137);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 137
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test424462,"public void test424462() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(138);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 138
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test425463,"public void test425463() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(139);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 139
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test426464,"public void test426464() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(140);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 140
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test427465,"public void test427465() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(141);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 141
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test428466,"public void test428466() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(142);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 142
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test429467,"public void test429467() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(143);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 143
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test430468,"public void test430468() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(144);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 144
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test431469,"public void test431469() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(145);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 145
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test432470,"public void test432470() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(146);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 146
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test433471,"public void test433471() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(147);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for GETTER_DEF (type 147)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test434472,"public void test434472() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(148);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for SETTER_DEF (type 148)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test435473,"public void test435473() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(149);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for CONST (type 149)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test436474,"public void test436474() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(150);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 150
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test437475,"public void test437475() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(151);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 151
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test438476,"public void test438476() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(152);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for DEBUGGER (type 152)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test439477,"public void test439477() throws Throwable {
    int int0 = NodeUtil.precedence(154);
    assertEquals(15, int0);
}",0,
project,0,test440478,"public void test440478() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(4);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for RETURN (type 4)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test441479,"public void test441479() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""49Xi}"");
    boolean boolean0 = NodeUtil.isNullOrUndefined(node0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test442480,"public void test442480() throws Throwable {
    Node node0 = new Node(31);
    Node node1 = new Node(41, node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals("""", string0);
}",0,
project,0,test443481,"public void test443481() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.isBooleanResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test444482,"public void test444482() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test445483,"public void test445483() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.isBooleanResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test446484,"public void test446484() throws Throwable {
    Node node0 = new Node(100);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test447485,"public void test447485() throws Throwable {
    Node node0 = new Node(16, 16, 16);
    Node node1 = new Node(101, node0, 51, 16);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test448486,"public void test448486() throws Throwable {
    Node node0 = new Node(85);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.anyResultsMatch(node0, predicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test449487,"public void test449487() throws Throwable {
    Node node0 = new Node(86);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.anyResultsMatch(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test450488,"public void test450488() throws Throwable {
    Node node0 = new Node(98);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.anyResultsMatch(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test451489,"public void test451489() throws Throwable {
    Node node0 = new Node(100, 16, 113);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.anyResultsMatch(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test452490,"public void test452490() throws Throwable {
    Node node0 = new Node(159, 16, 16);
    Node node1 = new Node(101, node0, 51, 16);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.anyResultsMatch(node1, nodeUtil_MatchShallowStatement0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test453491,"public void test453491() throws Throwable {
    Node node0 = new Node(156, 16, (-937));
    Node node1 = new Node(101, node0, 51, 16);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    boolean boolean0 = NodeUtil.anyResultsMatch(node1, predicate0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test454492,"public void test454492() throws Throwable {
    Node node0 = new Node(9, 113, 9);
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test455493,"public void test455493() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test456494,"public void test456494() throws Throwable {
    Node node0 = new Node(18);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test458496,"public void test458496() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = new Node(20, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test459497,"public void test459497() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(23, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test459498,"public void test459498() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(23, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(43, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test460499,"public void test460499() throws Throwable {
    Node node0 = new Node(25, 1, 31);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test461500,"public void test461500() throws Throwable {
    Node node0 = new Node(28, 28, 28);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test462501,"public void test462501() throws Throwable {
    Node node0 = new Node(3644, (-937), 3644);
    Node node1 = new Node(29, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test463502,"public void test463502() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test464503,"public void test464503() throws Throwable {
    Node node0 = Node.newNumber(0.0, 79, 80);
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test465504,"public void test465504() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test466505,"public void test466505() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.isNumericResultHelper(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test467506,"public void test467506() throws Throwable {
    Node node0 = new Node(21);
    Node node1 = NodeUtil.newVarNode("",[F\""q"", node0);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertEquals(1, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test467507,"public void test467507() throws Throwable {
    Node node0 = new Node(21);
    Node node1 = NodeUtil.newVarNode("",[F\""q"", node0);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test468508,"public void test468508() throws Throwable {
    Node node0 = new Node(101);
    Node node1 = new Node(12, node0, 44, 44);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test469509,"public void test469509() throws Throwable {
    Node node0 = new Node((-2432));
    Node node1 = new Node(13, node0, 40, (-223));
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test470510,"public void test470510() throws Throwable {
    Node node0 = new Node(14);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test471511,"public void test471511() throws Throwable {
    Node node0 = new Node(137, 137, 137);
    Node node1 = new Node(15, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test472512,"public void test472512() throws Throwable {
    Node node0 = new Node(17, 2371, 2371);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    int int0 = NodeUtil.getCount(node0, nodeUtil_BooleanResultPredicate0, nodeUtil_BooleanResultPredicate0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test473513,"public void test473513() throws Throwable {
    Node node0 = new Node(98);
    Node node1 = new Node(18, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test474514,"public void test474514() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(23, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test474515,"public void test474515() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(23, node0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test475516,"public void test475516() throws Throwable {
    Node node0 = Node.newString(24, ""y5X"");
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test476517,"public void test476517() throws Throwable {
    Node node0 = new Node(25, 2, 31);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test477518,"public void test477518() throws Throwable {
    Node node0 = new Node(28);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test478519,"public void test478519() throws Throwable {
    Node node0 = Node.newString(""-&<&"");
    Node node1 = new Node(29, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test479520,"public void test479520() throws Throwable {
    Node node0 = new Node(74);
    Node node1 = new Node(31, node0, node0, 12, 47);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test480521,"public void test480521() throws Throwable {
    Node node0 = new Node(32, 2365, 2365);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    int int0 = NodeUtil.getCount(node0, nodeUtil_BooleanResultPredicate0, nodeUtil_BooleanResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test481522,"public void test481522() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test481523,"public void test481523() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test482524,"public void test482524() throws Throwable {
    Node node0 = new Node(34);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",1,
project,0,test483525,"public void test483525() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test484526,"public void test484526() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "">>>="");
    Node node1 = new Node(36, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test485527,"public void test485527() throws Throwable {
    Node node0 = new Node(173);
    Node node1 = new Node(37, node0, node0, node0);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_BooleanResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test486528,"public void test486528() throws Throwable {
    Node node0 = Node.newNumber(1.0, (-4121), (-4121));
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 38, nodeUtil_BooleanResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test487529,"public void test487529() throws Throwable {
    Node node0 = Node.newString(""_or{c/h!jMM6"", 85, 85);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test488530,"public void test488530() throws Throwable {
    Node node0 = new Node((-2385), 17, 112);
    Node node1 = new Node(41, node0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test489531,"public void test489531() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(42, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test489532,"public void test489532() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(42, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test490533,"public void test490533() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test491534,"public void test491534() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(45, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test491535,"public void test491535() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(45, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test492536,"public void test492536() throws Throwable {
    Node node0 = Node.newString(46, ""JSCompiler_returnArg"", 109, 32);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test493537,"public void test493537() throws Throwable {
    Node node0 = new Node(47, 2076, 16);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 118, nodeUtil_BooleanResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test494538,"public void test494538() throws Throwable {
    Node node0 = new Node(3, 3, 3);
    Node node1 = new Node(48, node0, 54, 8);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test495539,"public void test495539() throws Throwable {
    Node node0 = new Node(49, 31, 51);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 16, nodeUtil_BooleanResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test496540,"public void test496540() throws Throwable {
    Node node0 = new Node(50, 50, 50);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test498542,"public void test498542() throws Throwable {
    Node node0 = new Node((-1305), (-1305), (-1305));
    Node node1 = new Node(52, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test499543,"public void test499543() throws Throwable {
    Node node0 = new Node(122, 122, 122);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test500544,"public void test500544() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test501545,"public void test501545() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(32);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test502546,"public void test502546() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test503547,"public void test503547() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test504548,"public void test504548() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test505549,"public void test505549() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test506550,"public void test506550() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(24);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test507551,"public void test507551() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test508552,"public void test508552() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test509553,"public void test509553() throws Throwable {
    Node node0 = new Node(89);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test510554,"public void test510554() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assignment op:FALSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test511555,"public void test511555() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(10, int0);
}",0,"assertEquals(1, int0)"
project,0,test512556,"public void test512556() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    assertTrue(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test512557,"public void test512557() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    node0.setType(92);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(20, int0);
}",0,"assertEquals(1, int0)"
project,0,test513558,"public void test513558() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test514559,"public void test514559() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.DefaultPassConfig$60"", ""j:Q:"");
    assertEquals(1, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test515560,"public void test515560() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""null"");
    ExploitAssigns exploitAssigns0 = new ExploitAssigns();
    Node node1 = exploitAssigns0.optimizeSubtree(node0);
    assertFalse(node1.isEmpty());
}",0,assertTrue(node1.isEmpty())
project,0,test516561,"public void test516561() throws Throwable {
    Node node0 = new Node(76);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test517562,"public void test517562() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test518563,"public void test518563() throws Throwable {
    Node node0 = Node.newString(""m"");
    Node node1 = new Node(113, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test519564,"public void test519564() throws Throwable {
    Node node0 = new Node(156);
    Node node1 = new Node(39, node0, 1, 53);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test520565,"public void test520565() throws Throwable {
    Node node0 = Node.newString(""m"");
    Node node1 = new Node(113, node0, node0, node0, node0);
    Node node2 = NodeUtil.getLoopCodeBlock(node1);
    assertFalse(node2.isObjectLit());
}",0,assertTrue(node2.isObjectLit())
project,0,test521566,"public void test521566() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test522567,"public void test522567() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test523568,"public void test523568() throws Throwable {
    Node node0 = new Node(77);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test524569,"public void test524569() throws Throwable {
    Node node0 = new Node(108, (-2447), (-937));
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test525570,"public void test525570() throws Throwable {
    Node node0 = new Node(110, 957, 957);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test526571,"public void test526571() throws Throwable {
    Node node0 = new Node(112, (-937), (-1687));
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test527572,"public void test527572() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test528573,"public void test528573() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test529574,"public void test529574() throws Throwable {
    Node node0 = new Node(119);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test530575,"public void test530575() throws Throwable {
    Node node0 = Node.newString(120, ""F"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test531576,"public void test531576() throws Throwable {
    Node node0 = Node.newString(126, "")UCvX{#oj6),g,7i5_"", 61, 131);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test532577,"public void test532577() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test533578,"public void test533578() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test534579,"public void test534579() throws Throwable {
    Node node0 = new Node(112);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test535580,"public void test535580() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test536581,"public void test536581() throws Throwable {
    Node node0 = Node.newString(126, "")UCvX{#oj6),g,7i5_"", 61, 131);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test537582,"public void test537582() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test538583,"public void test538583() throws Throwable {
    Node node0 = new Node(115, 26, 838);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test539584,"public void test539584() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // FALSE 43 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test540585,"public void test540585() throws Throwable {
    Node node0 = new Node(112, 2165, (-1687));
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // DEFAULT_CASE does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test541586,"public void test541586() throws Throwable {
    Node node0 = new Node(113);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test542587,"public void test542587() throws Throwable {
    Node node0 = new Node(115);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test543588,"public void test543588() throws Throwable {
    Node node0 = new Node(139);
    Node node1 = new Node(125, node0, node0, node0);
    boolean boolean0 = NodeUtil.isStatementBlock(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test544589,"public void test544589() throws Throwable {
    Node node0 = new Node(125, 2371, 2371);
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test545590,"public void test545590() throws Throwable {
    Node node0 = new Node(132, 2371, 2371);
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test546591,"public void test546591() throws Throwable {
    Node node0 = new Node(112, (-1687), (-1687));
    Node node1 = new Node(55, node0, node0, 1, 4113);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test547592,"public void test547592() throws Throwable {
    Node node0 = new Node(32, 2365, 2365);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test548593,"public void test548593() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = Node.newString(154, """", 154, 154);
    Node node1 = NodeUtil.newName(googleCodingConvention0, """", node0);
    boolean boolean0 = NodeUtil.isReferenceName(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test549594,"public void test549594() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = Node.newString(""qD Q46J`b"", (-9), (-9));
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""qD Q46J`b"", node0);
    boolean boolean0 = NodeUtil.isReferenceName(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test550595,"public void test550595() throws Throwable {
    Node node0 = new Node(156, 16, (-914));
    Node node1 = new Node(101, node0, 51, 16);
    Compiler compiler0 = new Compiler();
    Node node2 = compiler0.parseTestCode(""779/J)"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node2, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test551596,"public void test551596() throws Throwable {
    Node node0 = new Node(85);
    Node node1 = new Node(76, node0, 1, 41);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: COMMA of COMMA
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test552597,"public void test552597() throws Throwable {
    Node node0 = new Node(77, 8199, 8199);
    NodeUtil.maybeAddFinally(node0);
    assertEquals(1, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test552598,"public void test552598() throws Throwable {
    Node node0 = new Node(77, 8199, 8199);
    NodeUtil.maybeAddFinally(node0);
    assertTrue(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test553599,"public void test553599() throws Throwable {
    Node node0 = new Node(105);
    Node node1 = new Node(53, node0, (-824), 55);
    boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test554600,"public void test554600() throws Throwable {
    Node node0 = Node.newString(""d_I&9AJW]["", 64, 64);
    boolean boolean0 = NodeUtil.isBleedingFunctionName(node0);
    assertFalse(boolean0);
}",0,
project,0,test555601,"public void test555601() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""f"");
    // Undeclared exception!
    try {
        NodeUtil.isBleedingFunctionName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test556602,"public void test556602() throws Throwable {
    Node node0 = new Node(58);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test557603,"public void test557603() throws Throwable {
    Node node0 = Node.newString(63, ""!ESQQnJgD/{Vz+32GL"", 110, 4367);
    Node node1 = new Node(37, node0, node0, 39, (-31));
    boolean boolean0 = NodeUtil.isObjectCallMethod(node1, ""!ESQQnJgD/{Vz+32GL"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test558604,"public void test558604() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test559605,"public void test559605() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node1);
    assertFalse(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test559606,"public void test559606() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test560607,"public void test560607() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""M4aU*3HqbT!8cIf"");
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertFalse(boolean0);
}",1,
project,0,test561608,"public void test561608() throws Throwable {
    Node node0 = new Node(8257);
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test562609,"public void test562609() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0);
    boolean boolean0 = NodeUtil.isLValue(node1);
    assertTrue(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test562610,"public void test562610() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0);
    boolean boolean0 = NodeUtil.isLValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test563611,"public void test563611() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "".%"");
    Node node1 = new Node(19, node0, node0, 40, 1675);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertFalse(boolean0);
}",1,
project,0,test563612,"public void test563612() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "".%"");
    Node node1 = new Node(19, node0, node0, 40, 1675);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test564613,"public void test564613() throws Throwable {
    Node node0 = new Node(147);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test565614,"public void test565614() throws Throwable {
    Node node0 = new Node(154, 154, 154);
    Node node1 = new Node(49, node0, node0, 1545, 49);
    // Undeclared exception!
    try {
        NodeUtil.getBestLValueName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test566615,"public void test566615() throws Throwable {
    Node node0 = new Node(147);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // GETTER_DEF is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test567616,"public void test567616() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected node type: WITH 119
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test568617,"public void test568617() throws Throwable {
    Node node0 = new Node(154);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: UnsupportedOperationException"");
    } catch (UnsupportedOperationException e) {
        //
        // STRING_KEY is not a string node
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test569618,"public void test569618() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, (JSType) null);
    assertNull(jSType0);
}",0,assertNotNull(jSType0)
project,0,test570619,"public void test570619() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseVoidType();
    Node node0 = new Node(105);
    JSType jSType1 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, jSType0);
    assertFalse(jSType1.isFunctionPrototypeType());
}",0,assertFalse(jSType1.isFunctionPrototypeType())
project,0,test571620,"public void test571620() throws Throwable {
    Node node0 = new Node(147, 2588, 2588);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test572621,"public void test572621() throws Throwable {
    Node node0 = new Node(58, 1099, 1099);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test573622,"public void test573622() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(9);
    assertEquals(""|"", string0);
}",1,
project,0,test574623,"public void test574623() throws Throwable {
    String string0 = NodeUtil.opToStr(45);
    assertEquals(""==="", string0);
}",0,
project,0,test575624,"public void test575624() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(10);
    assertEquals(""^"", string0);
}",1,
project,0,test576625,"public void test576625() throws Throwable {
    String string0 = NodeUtil.opToStr(11);
    assertEquals(""&"", string0);
}",0,
project,0,test577626,"public void test577626() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertEquals(""=="", string0);
}",0,
project,0,test578627,"public void test578627() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(13);
    assertEquals(""!="", string0);
}",1,
project,0,test579628,"public void test579628() throws Throwable {
    String string0 = NodeUtil.opToStr(14);
    assertEquals(""<"", string0);
}",0,
project,0,test580629,"public void test580629() throws Throwable {
    String string0 = NodeUtil.opToStr(15);
    assertEquals(""<="", string0);
}",0,
project,0,test581630,"public void test581630() throws Throwable {
    String string0 = NodeUtil.opToStr(16);
    assertEquals("">"", string0);
}",0,
project,0,test582631,"public void test582631() throws Throwable {
    String string0 = NodeUtil.opToStr(17);
    assertEquals("">="", string0);
}",0,
project,0,test583632,"public void test583632() throws Throwable {
    String string0 = NodeUtil.opToStr(18);
    assertEquals(""<<"", string0);
}",0,
project,0,test584633,"public void test584633() throws Throwable {
    String string0 = NodeUtil.opToStr(19);
    assertEquals("">>"", string0);
}",0,
project,0,test585634,"public void test585634() throws Throwable {
    String string0 = NodeUtil.opToStr(20);
    assertEquals("">>>"", string0);
}",0,
project,0,test586635,"public void test586635() throws Throwable {
    String string0 = NodeUtil.opToStr(21);
    assertEquals(""+"", string0);
}",0,
project,0,test587636,"public void test587636() throws Throwable {
    String string0 = NodeUtil.opToStr(22);
    assertEquals(""-"", string0);
}",0,
project,0,test588637,"public void test588637() throws Throwable {
    String string0 = NodeUtil.opToStr(23);
    assertEquals(""*"", string0);
}",0,
project,0,test589638,"public void test589638() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(24);
    assertEquals(""/"", string0);
}",1,
project,0,test590639,"public void test590639() throws Throwable {
    String string0 = NodeUtil.opToStr(25);
    assertEquals(""%"", string0);
}",0,
project,0,test591640,"public void test591640() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(26);
    assertEquals(""!"", string0);
}",1,
project,0,test592641,"public void test592641() throws Throwable {
    String string0 = NodeUtil.opToStr(27);
    assertEquals(""~"", string0);
}",0,
project,0,test593642,"public void test593642() throws Throwable {
    String string0 = NodeUtil.opToStr(28);
    assertEquals(""+"", string0);
}",0,
project,0,test594643,"public void test594643() throws Throwable {
    String string0 = NodeUtil.opToStr(29);
    assertNotNull(string0);
}",0,
project,0,test595645,"public void test595645() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(30);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 30: NEW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test596646,"public void test596646() throws Throwable {
    String string0 = NodeUtil.opToStr(31);
    assertNull(string0);
}",0,
project,0,test597647,"public void test597647() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(32);
    assertEquals(""typeof"", string0);
}",1,
project,0,test598648,"public void test598648() throws Throwable {
    String string0 = NodeUtil.opToStr(33);
    assertNull(string0);
}",0,
project,0,test599649,"public void test599649() throws Throwable {
    String string0 = NodeUtil.opToStr(34);
    assertNull(string0);
}",0,
project,0,test600650,"public void test600650() throws Throwable {
    String string0 = NodeUtil.opToStr(35);
    assertNull(string0);
}",0,
project,0,test601651,"public void test601651() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(36);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 36
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test602652,"public void test602652() throws Throwable {
    String string0 = NodeUtil.opToStr(37);
    assertNull(string0);
}",0,
project,0,test603653,"public void test603653() throws Throwable {
    String string0 = NodeUtil.opToStr(38);
    assertNull(string0);
}",0,
project,0,test604654,"public void test604654() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(39);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 39: NUMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test605655,"public void test605655() throws Throwable {
    String string0 = NodeUtil.opToStr(40);
    assertNull(string0);
}",0,
project,0,test606656,"public void test606656() throws Throwable {
    String string0 = NodeUtil.opToStr(41);
    assertNull(string0);
}",0,
project,0,test607657,"public void test607657() throws Throwable {
    String string0 = NodeUtil.opToStr(42);
    assertNull(string0);
}",0,
project,0,test608658,"public void test608658() throws Throwable {
    String string0 = NodeUtil.opToStr(43);
    assertNull(string0);
}",0,
project,0,test609659,"public void test609659() throws Throwable {
    String string0 = NodeUtil.opToStr(44);
    assertNull(string0);
}",0,
project,0,test610660,"public void test610660() throws Throwable {
    String string0 = NodeUtil.opToStr(46);
    assertEquals(""!=="", string0);
}",0,
project,0,test611661,"public void test611661() throws Throwable {
    String string0 = NodeUtil.opToStr(47);
    assertNull(string0);
}",0,
project,0,test612662,"public void test612662() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(48);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 48
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test613663,"public void test613663() throws Throwable {
    String string0 = NodeUtil.opToStr(49);
    assertNull(string0);
}",0,
project,0,test614664,"public void test614664() throws Throwable {
    String string0 = NodeUtil.opToStr(50);
    assertNull(string0);
}",0,
project,0,test615665,"public void test615665() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(51);
    assertEquals(""in"", string0);
}",1,
project,0,test616666,"public void test616666() throws Throwable {
    String string0 = NodeUtil.opToStr(52);
    assertEquals(""instanceof"", string0);
}",0,
project,0,test617667,"public void test617667() throws Throwable {
    String string0 = NodeUtil.opToStr(53);
    assertNull(string0);
}",0,
project,0,test618668,"public void test618668() throws Throwable {
    String string0 = NodeUtil.opToStr(54);
    assertNull(string0);
}",0,
project,0,test619669,"public void test619669() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(55);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 55
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test620670,"public void test620670() throws Throwable {
    String string0 = NodeUtil.opToStr(56);
    assertNull(string0);
}",0,
project,0,test621671,"public void test621671() throws Throwable {
    String string0 = NodeUtil.opToStr(57);
    assertNull(string0);
}",0,
project,0,test622672,"public void test622672() throws Throwable {
    String string0 = NodeUtil.opToStr(58);
    assertNull(string0);
}",0,
project,0,test623673,"public void test623673() throws Throwable {
    String string0 = NodeUtil.opToStr(59);
    assertNull(string0);
}",0,
project,0,test624674,"public void test624674() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail('<');
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 60
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test625675,"public void test625675() throws Throwable {
    String string0 = NodeUtil.opToStr(61);
    assertNull(string0);
}",0,
project,0,test626676,"public void test626676() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(62);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 62
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test627677,"public void test627677() throws Throwable {
    String string0 = NodeUtil.opToStr(63);
    assertNull(string0);
}",0,
project,0,test628678,"public void test628678() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(64);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 64: OBJECTLIT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test629679,"public void test629679() throws Throwable {
    String string0 = NodeUtil.opToStr(65);
    assertNull(string0);
}",0,
project,0,test630680,"public void test630680() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(66);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 66
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test631681,"public void test631681() throws Throwable {
    String string0 = NodeUtil.opToStr(67);
    assertNull(string0);
}",0,
project,0,test632682,"public void test632682() throws Throwable {
    String string0 = NodeUtil.opToStr(68);
    assertNull(string0);
}",0,
project,0,test633683,"public void test633683() throws Throwable {
    String string0 = NodeUtil.opToStr(70);
    assertNull(string0);
}",0,
project,0,test634684,"public void test634684() throws Throwable {
    String string0 = NodeUtil.opToStr(71);
    assertNull(string0);
}",0,
project,0,test635685,"public void test635685() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(72);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 72
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test636686,"public void test636686() throws Throwable {
    String string0 = NodeUtil.opToStr(73);
    assertNull(string0);
}",0,
project,0,test637687,"public void test637687() throws Throwable {
    String string0 = NodeUtil.opToStr(74);
    assertNull(string0);
}",0,
project,0,test638688,"public void test638688() throws Throwable {
    String string0 = NodeUtil.opToStr(75);
    assertNull(string0);
}",0,
project,0,test639689,"public void test639689() throws Throwable {
    String string0 = NodeUtil.opToStr(76);
    assertNull(string0);
}",0,
project,0,test640690,"public void test640690() throws Throwable {
    String string0 = NodeUtil.opToStr(77);
    assertNull(string0);
}",0,
project,0,test641691,"public void test641691() throws Throwable {
    String string0 = NodeUtil.opToStr(78);
    assertNull(string0);
}",0,
project,0,test642692,"public void test642692() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(79);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 79
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test643693,"public void test643693() throws Throwable {
    String string0 = NodeUtil.opToStr(80);
    assertNull(string0);
}",0,
project,0,test644694,"public void test644694() throws Throwable {
    String string0 = NodeUtil.opToStr(81);
    assertNull(string0);
}",0,
project,0,test645695,"public void test645695() throws Throwable {
    String string0 = NodeUtil.opToStr(83);
    assertNull(string0);
}",0,
project,0,test646696,"public void test646696() throws Throwable {
    String string0 = NodeUtil.opToStr(84);
    assertNull(string0);
}",0,
project,0,test647697,"public void test647697() throws Throwable {
    String string0 = NodeUtil.opToStr(85);
    assertNull(string0);
}",0,
project,0,test648698,"public void test648698() throws Throwable {
    String string0 = NodeUtil.opToStr(86);
    assertEquals(""="", string0);
}",0,
project,0,test649699,"public void test649699() throws Throwable {
    String string0 = NodeUtil.opToStr(87);
    assertEquals(""|="", string0);
}",0,
project,0,test650700,"public void test650700() throws Throwable {
    String string0 = NodeUtil.opToStr(88);
    assertEquals(""^="", string0);
}",0,
project,0,test651701,"public void test651701() throws Throwable {
    String string0 = NodeUtil.opToStr(89);
    assertEquals(""&="", string0);
}",0,
project,0,test652702,"public void test652702() throws Throwable {
    String string0 = NodeUtil.opToStr(90);
    assertEquals(""<<="", string0);
}",0,
project,0,test653703,"public void test653703() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test654704,"public void test654704() throws Throwable {
    String string0 = NodeUtil.opToStr(92);
    assertEquals("">>>="", string0);
}",0,
project,0,test655705,"public void test655705() throws Throwable {
    String string0 = NodeUtil.opToStr(93);
    assertEquals(""+="", string0);
}",0,
project,0,test656706,"public void test656706() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(94);
    assertEquals(""-="", string0);
}",1,
project,0,test657707,"public void test657707() throws Throwable {
    String string0 = NodeUtil.opToStr(95);
    assertEquals(""*="", string0);
}",0,
project,0,test658708,"public void test658708() throws Throwable {
    String string0 = NodeUtil.opToStr(96);
    assertEquals(""/="", string0);
}",0,
project,0,test659709,"public void test659709() throws Throwable {
    String string0 = NodeUtil.opToStr(97);
    assertEquals(""%="", string0);
}",0,
project,0,test660710,"public void test660710() throws Throwable {
    String string0 = NodeUtil.opToStr(98);
    assertNull(string0);
}",0,
project,0,test661711,"public void test661711() throws Throwable {
    String string0 = NodeUtil.opToStr(99);
    assertNull(string0);
}",0,
project,0,test662712,"public void test662712() throws Throwable {
    String string0 = NodeUtil.opToStr(100);
    assertEquals(""||"", string0);
}",0,
project,0,test663713,"public void test663713() throws Throwable {
    String string0 = NodeUtil.opToStr(101);
    assertEquals(""&&"", string0);
}",0,
project,0,test664714,"public void test664714() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(102);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 102: INC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test665715,"public void test665715() throws Throwable {
    String string0 = NodeUtil.opToStr(103);
    assertNull(string0);
}",0,
project,0,test666716,"public void test666716() throws Throwable {
    String string0 = NodeUtil.opToStr(104);
    assertNull(string0);
}",0,
project,0,test667717,"public void test667717() throws Throwable {
    String string0 = NodeUtil.opToStr(105);
    assertNull(string0);
}",0,
project,0,test668718,"public void test668718() throws Throwable {
    String string0 = NodeUtil.opToStr(106);
    assertNull(string0);
}",0,
project,0,test669719,"public void test669719() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(107);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 107
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test670720,"public void test670720() throws Throwable {
    String string0 = NodeUtil.opToStr(108);
    assertNull(string0);
}",0,
project,0,test671721,"public void test671721() throws Throwable {
    String string0 = NodeUtil.opToStr(109);
    assertNull(string0);
}",0,
project,0,test672722,"public void test672722() throws Throwable {
    String string0 = NodeUtil.opToStr(110);
    assertNull(string0);
}",0,
project,0,test673723,"public void test673723() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 111: CASE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test674724,"public void test674724() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 112: DEFAULT_CASE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test675725,"public void test675725() throws Throwable {
    String string0 = NodeUtil.opToStr(113);
    assertNull(string0);
}",0,
project,0,test676726,"public void test676726() throws Throwable {
    String string0 = NodeUtil.opToStr(114);
    assertNull(string0);
}",0,
project,0,test677727,"public void test677727() throws Throwable {
    String string0 = NodeUtil.opToStr(115);
    assertNull(string0);
}",0,
project,0,test678728,"public void test678728() throws Throwable {
    String string0 = NodeUtil.opToStr(116);
    assertNull(string0);
}",0,
project,0,test679729,"public void test679729() throws Throwable {
    String string0 = NodeUtil.opToStr(117);
    assertNull(string0);
}",0,
project,0,test680730,"public void test680730() throws Throwable {
    String string0 = NodeUtil.opToStr(118);
    assertNull(string0);
}",0,
project,0,test681731,"public void test681731() throws Throwable {
    String string0 = NodeUtil.opToStr(119);
    assertNull(string0);
}",0,
project,0,test682732,"public void test682732() throws Throwable {
    String string0 = NodeUtil.opToStr(120);
    assertNull(string0);
}",0,
project,0,test683733,"public void test683733() throws Throwable {
    String string0 = NodeUtil.opToStr(121);
    assertNull(string0);
}",0,
project,0,test684734,"public void test684734() throws Throwable {
    String string0 = NodeUtil.opToStr(122);
    assertEquals(""void"", string0);
}",0,
project,0,test685735,"public void test685735() throws Throwable {
    String string0 = NodeUtil.opToStr(7);
    assertNull(string0);
}",0,
project,0,test686736,"public void test686736() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""infinity"");
    Node node1 = NodeUtil.newVarNode(""checkType"", node0);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test687737,"public void test687737() throws Throwable {
    Node node0 = new Node(35, 35, 35);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertNull(node0.getSourceFileName());
}",0,assertNotNull(node0.getSourceFileName())
project,0,test688738,"public void test688738() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""@\rS8TDI/YY="");
    NodeUtil.getRootOfQualifiedName(node0);
    assertFalse(node0.isGetProp());
}",0,assertTrue(node0.isGetProp())
project,0,test688739,"public void test688739() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention(googleCodingConvention0);
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""@\rS8TDI/YY="");
    NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test689740,"public void test689740() throws Throwable {
    Node node0 = new Node(14);
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test690741,"public void test690741() throws Throwable {
    Node node0 = Node.newString(738, ""T&(Gf3*l{c"", 18, 1425);
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""PROPERTY"", node0);
    assertFalse(node1.hasMoreThanOneChild());
}",0,assertTrue(node1.hasMoreThanOneChild())
project,0,test691742,"public void test691742() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""function"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test692743,"public void test692743() throws Throwable {
    boolean boolean0 = NodeUtil.isValidQualifiedName(""PROPERTY"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test693744,"public void test693744() throws Throwable {
    boolean boolean0 = NodeUtil.isValidQualifiedName(""UTF-16LE."");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test694745,"public void test694745() throws Throwable {
    boolean boolean0 = NodeUtil.isValidQualifiedName("".~]LIvezO*_.`e"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test695746,"public void test695746() throws Throwable {
    boolean boolean0 = NodeUtil.isValidQualifiedName(""j:Q:"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test696747,"public void test696747() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test697748,"public void test697748() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, "">>>="");
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test698749,"public void test698749() throws Throwable {
    Node node0 = new Node((-4935));
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test699750,"public void test699750() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNull(node1);
}",0,
project,0,test699751,"public void test699751() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test699752,"public void test699752() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test700753,"public void test700753() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertEquals(48, Node.DIRECTIVES);
}",0,
project,0,test701754,"public void test701754() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""3"", (Node) null);
    assertEquals(8, Node.FLAG_NO_THROWS);
}",0,
project,0,test702755,"public void test702755() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""."");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test702756,"public void test702756() throws Throwable {
    Node node0 = new Node(3);
    Node node1 = NodeUtil.newVarNode(""."", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""."");
    assertFalse(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test703757,"public void test703757() throws Throwable {
    Node node0 = new Node(151);
    Node node1 = NodeUtil.newVarNode(""Oa{PJ<iJ[:0G"", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""mEw.9s7x!(Y"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test703758,"public void test703758() throws Throwable {
    Node node0 = new Node(151);
    Node node1 = NodeUtil.newVarNode(""Oa{PJ<iJ[:0G"", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""mEw.9s7x!(Y"");
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test704759,"public void test704759() throws Throwable {
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(63);
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.allResultsMatch(node0, nodeUtil_MatchNodeType0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test705760,"public void test705760() throws Throwable {
    Node node0 = Node.newString(154, "")UCvX{#oj6),g,7i5_"", 154, 154);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = NodeUtil.anyResultsMatch(node0, nodeUtil_MatchDeclaration0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test707762,"public void test707762() throws Throwable {
    Node node0 = new Node(112);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    int int0 = NodeUtil.getCount(node0, nodeUtil_MatchShallowStatement0, nodeUtil_NumbericResultPredicate0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test708763,"public void test708763() throws Throwable {
    Node node0 = Node.newString(""8B|=1yD;.lXT(FYG"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""o!k%l5%Ho,?S3t'muH)"", nodeUtil_MatchShallowStatement0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test708764,"public void test708764() throws Throwable {
    Node node0 = Node.newString(""8B|=1yD;.lXT(FYG"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.isNameReferenced(node1, ""o!k%l5%Ho,?S3t'muH)"", nodeUtil_MatchShallowStatement0);
    assertTrue(node1.isVoid());
}",0,assertTrue(node1.isVoid())
project,0,test709765,"public void test709765() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    Node node1 = NodeUtil.newVarNode("".infinity"", node0);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    int int0 = NodeUtil.getCount(node1, predicate0, predicate0);
    assertEquals(3, int0);
}",0,"assertEquals(1, int0)"
project,0,test709766,"public void test709766() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    Node node1 = NodeUtil.newVarNode("".infinity"", node0);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    int int0 = NodeUtil.getCount(node1, predicate0, predicate0);
    assertEquals(119, node1.getCharno());
}",0,
project,0,test710767,"public void test710767() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test711768,"public void test711768() throws Throwable {
    Node node0 = new Node(28);
    Node node1 = new Node(52, node0, node0, node0, node0, 50, 1);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node1, (NodeUtil.Visitor) null, predicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test712769,"public void test712769() throws Throwable {
    Node node0 = Node.newString(""-&<&"");
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    boolean boolean0 = NodeUtil.isConstantByConvention(googleCodingConvention0, node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test713770,"public void test713770() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""_Vg'G\u0005-XxY5s$"");
    Compiler compiler0 = new Compiler();
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
    // Undeclared exception!
    try {
        peepholeFoldWithTypes0.error(compiler0.MOTION_ITERATIONS_ERROR, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.AbstractPeepholeOptimization"", e);
    }
}",0,
project,0,test714771,"public void test714771() throws Throwable {
    Node node0 = new Node(22);
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test715772,"public void test715772() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""v>>@cg"", ""E"");
    StaticSourceFile staticSourceFile0 = NodeUtil.getSourceFile(node0);
    assertEquals(""[testcode]"", staticSourceFile0.getName());
}",0,assertNotNull(staticSourceFile0.getName())
project,0,test716773,"public void test716773() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.getSourceFile(node0);
    assertTrue(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test716774,"public void test716774() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    NodeUtil.getSourceFile(node0);
    assertEquals(44, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test717775,"public void test717775() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "".%"");
    NodeUtil.getInputId(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test717776,"public void test717776() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, "".%"");
    NodeUtil.getInputId(node0);
    assertTrue(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test718777,"public void test718777() throws Throwable {
    Node node0 = new Node((-971));
    Node[] nodeArray0 = new Node[1];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test719778,"public void test719778() throws Throwable {
    Node node0 = new Node(31);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, compilerOptions0.sourceMapDetailLevel);
    assertTrue(boolean0);
}",0,
project,0,test720779,"public void test720779() throws Throwable {
    Node node0 = new Node(32, 1436, 37);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test721780,"public void test721780() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test721781,"public void test721781() throws Throwable {
    JqueryCodingConvention jqueryCodingConvention0 = new JqueryCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(jqueryCodingConvention0, ""com.google.javascript.jscomp.JsMessage$1"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test722782,"public void test722782() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test722783,"public void test722783() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(43, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test723784,"public void test723784() throws Throwable {
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    Node node0 = Node.newString(45, ""6wY"", 45, 1966);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertTrue(boolean0);
}",0,
project,0,test724785,"public void test724785() throws Throwable {
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    Node node0 = Node.newString(47, ""6wY"", 3, 62);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, predicate0);
    assertTrue(boolean0);
}",0,
project,0,test725786,"public void test725786() throws Throwable {
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(51);
    Node node0 = new Node(51);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
    assertTrue(boolean0);
}",0,
project,0,test726787,"public void test726787() throws Throwable {
    Node node0 = new Node(52, (-804), 52);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test727788,"public void test727788() throws Throwable {
    Node node0 = new Node(53);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 53
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test728789,"public void test728789() throws Throwable {
    Node node0 = new Node(54, 55, (-1536));
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 54
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test729790,"public void test729790() throws Throwable {
    Node node0 = new Node(55, 55, 55);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 55
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test730791,"public void test730791() throws Throwable {
    Node node0 = new Node(59);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 59
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test731792,"public void test731792() throws Throwable {
    Node node0 = Node.newString(61, ""/="", 61, 61);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 61
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test732793,"public void test732793() throws Throwable {
    Node node0 = new Node(62);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 62
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test733794,"public void test733794() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test734795,"public void test734795() throws Throwable {
    Node node0 = new Node(64, 111, 94);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test735796,"public void test735796() throws Throwable {
    Node node0 = new Node(66, 66, 66);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 66
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test736797,"public void test736797() throws Throwable {
    Node node0 = new Node(68, 68, 68);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 68
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test737798,"public void test737798() throws Throwable {
    Node node0 = new Node(69);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 69
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test738799,"public void test738799() throws Throwable {
    Node node0 = new Node(70);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 70
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test739800,"public void test739800() throws Throwable {
    Node node0 = new Node(72, 72, (-139));
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 72
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test740801,"public void test740801() throws Throwable {
    Node node0 = new Node(80);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 80
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test741802,"public void test741802() throws Throwable {
    Node node0 = new Node(82);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 82
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test742803,"public void test742803() throws Throwable {
    Node node0 = new Node(84);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 84
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test743804,"public void test743804() throws Throwable {
    Node node0 = new Node(85);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test744805,"public void test744805() throws Throwable {
    Node node0 = new Node(86);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, compilerOptions0.sourceMapDetailLevel);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test745806,"public void test745806() throws Throwable {
    Node node0 = new Node(87, 87, 87);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test746807,"public void test746807() throws Throwable {
    Node node0 = new Node(88);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test747808,"public void test747808() throws Throwable {
    Node node0 = new Node(90);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test748809,"public void test748809() throws Throwable {
    Node node0 = new Node(91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test749810,"public void test749810() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    node0.setType(92);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test750811,"public void test750811() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test751812,"public void test751812() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test752813,"public void test752813() throws Throwable {
    Node node0 = new Node(99, 99, 99);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // 99
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test753814,"public void test753814() throws Throwable {
    Node node0 = new Node(101);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test754815,"public void test754815() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test755816,"public void test755816() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test756817,"public void test756817() throws Throwable {
    Node node0 = new Node(105);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test757818,"public void test757818() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""p"", node0);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, predicate0);
    assertEquals(43, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test757819,"public void test757819() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""p"", node0);
    Predicate<Node> predicate0 = NodeUtil.MATCH_NOT_FUNCTION;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, predicate0);
    assertTrue(boolean0);
}",0,
project,0,test758820,"public void test758820() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test759821,"public void test759821() throws Throwable {
    Node node0 = new Node(3812, 3812, (-613));
    node0.addSuppression(""$\""QjR(}5jt@%1"");
    JSDocInfo jSDocInfo0 = NodeUtil.getBestJSDocInfo(node0);
    assertNull(jSDocInfo0.getSourceName());
}",0,assertNotNull(jSDocInfo0.getSourceName())
project,0,test760822,"public void test760822() throws Throwable {
    Node node0 = new Node(32, 2365, 2365);
    JSDocInfo jSDocInfo0 = NodeUtil.getBestJSDocInfo(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test761823,"public void test761823() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    NodeUtil.getBestJSDocInfo(node0);
    assertFalse(node0.isTrue());
}",0,assertTrue(node0.isTrue())
project,0,test761824,"public void test761824() throws Throwable {
    Node node0 = NodeUtil.booleanNode(false);
    Node node1 = new Node(35, node0, node0, node0, node0);
    NodeUtil.getBestJSDocInfo(node0);
    assertEquals(43, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test762825,"public void test762825() throws Throwable {
    Node node0 = new Node((-1687));
    NodeUtil.newVarNode(""Y"", node0);
    NodeUtil.getBestJSDocInfo(node0);
    assertFalse(node0.hasOneChild());
}",0,assertFalse(node0.hasOneChild())
project,0,test762826,"public void test762826() throws Throwable {
    Node node0 = new Node((-1687));
    NodeUtil.newVarNode(""Y"", node0);
    NodeUtil.getBestJSDocInfo(node0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test763827,"public void test763827() throws Throwable {
    Node node0 = new Node(91);
    Node node1 = new Node(105, node0, node0, 46, 48);
    JSDocInfo jSDocInfo0 = NodeUtil.getBestJSDocInfo(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test764828,"public void test764828() throws Throwable {
    Node node0 = new Node(139);
    Node node1 = new Node(125, node0, node0, node0);
    Node node2 = NodeUtil.getBestLValue(node0);
    assertNull(node2);
}",0,"assertEquals(node1, node2)"
project,0,test765829,"public void test765829() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    Node node1 = new Node(12, node0, 44, 44);
    Node node2 = NodeUtil.getRValueOfLValue(node0);
    assertNull(node2);
}",0,
project,0,test766830,"public void test766830() throws Throwable {
    Node node0 = NodeUtil.getBestLValueOwner((Node) null);
    assertNull(node0);
}",0,
project,0,test767831,"public void test767831() throws Throwable {
    Node node0 = new Node(98);
    Node node1 = NodeUtil.getBestLValueOwner(node0);
    assertNull(node1);
}",0,
project,0,test768832,"public void test768832() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(0, node0, node0, node0, node0);
    NodeUtil.getBestLValueOwner(node0);
    assertEquals(44, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test768833,"public void test768833() throws Throwable {
    Node node0 = NodeUtil.booleanNode(true);
    Node node1 = new Node(0, node0, node0, node0, node0);
    NodeUtil.getBestLValueOwner(node0);
    assertFalse(node0.isFalse());
}",0,assertTrue(node0.isFalse())
project,0,test769834,"public void test769834() throws Throwable {
    String string0 = NodeUtil.getBestLValueName((Node) null);
    assertNull(string0);
}",0,
project,0,test770835,"public void test770835() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    String string0 = NodeUtil.getBestLValueName(node0);
    assertNull(string0);
}",0,
project,0,test771836,"public void test771836() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    Node node1 = new Node(26, node0, node0, node0, node0, 48, 4095);
    String string0 = NodeUtil.getBestLValueName(node0);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test772837,"public void test772837() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    Node node1 = new Node(55, node0, node0);
    boolean boolean0 = NodeUtil.isExpressionResultUsed(node0);
    assertTrue(boolean0);
}",0,
project,0,test773838,"public void test773838() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    NodeUtil.newExpr(node0);
    // Undeclared exception!
    try {
        NodeUtil.isExecutedExactlyOnce(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test774839,"public void test774839() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    node0.addChildToFront(node0);
    // Undeclared exception!
    NodeUtil.isExecutedExactlyOnce(node0);
}",0,
project,0,test775840,"public void test775840() throws Throwable {
    Node node0 = new Node(105);
    node0.addChildToFront(node0);
    boolean boolean0 = NodeUtil.isExecutedExactlyOnce(node0);
    assertTrue(boolean0);
}",0,
project,0,test776841,"public void test776841() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSType[] jSTypeArray0 = new JSType[0];
    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
    Node node1 = NodeUtil.numberNode(Double.NEGATIVE_INFINITY, node0);
    assertEquals(29, node1.getType());
}",0,
project,0,test777842,"public void test777842() throws Throwable {
    Node node0 = new Node(98);
    Node node1 = NodeUtil.numberNode(Double.NaN, node0);
    assertEquals(38, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test778843,"public void test778843() throws Throwable {
    Node node0 = NodeUtil.numberNode(Double.POSITIVE_INFINITY, (Node) null);
    assertFalse(node0.isNumber());
}",0,assertTrue(node0.isNumber())
project,0,test778844,"public void test778844() throws Throwable {
    Node node0 = NodeUtil.numberNode(Double.POSITIVE_INFINITY, (Node) null);
    assertNotNull(node0);
}",0,
project,0,test779845,"public void test779845() throws Throwable {
    Node node0 = Node.newString(""&%HC^\""wA:p"", 15, 9);
    Node node1 = NodeUtil.numberNode(9, node0);
    assertTrue(node1.isNumber());
}",0,
project,0,test779846,"public void test779846() throws Throwable {
    Node node0 = Node.newString(""&%HC^\""wA:p"", 15, 9);
    Node node1 = NodeUtil.numberNode(9, node0);
    assertEquals(9, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
