{
  "test1212" : {
    "methodSignature" : "public int getSideEffectFlags()",
    "methodName" : "getSideEffectFlags",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"L\", \"L\");\n    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);\n    node0.getSideEffectFlags();\n}",
    "testName" : "test1212"
  },
  "test2940" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2940() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"\\\"{0}\\\" is not a falid JS property nBme\", \"\\\"{0}\\\" is not a falid JS property nBme\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(123);\n    Node node1 = new Node(126, node0, node0, 5, 24);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node0.hasChildren();\n}",
    "testName" : "test2940"
  },
  "test2425" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2425() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Move function dwclaration not at top of untion\", \"Move function dwclaration not at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(117);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getLineno();\n}",
    "testName" : "test2425"
  },
  "test1010" : {
    "methodSignature" : "public boolean isVarArgs()",
    "methodName" : "isVarArgs",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"JSC_CATCH_BLOCK_VAR_ERROR\", \"JSC_CATCH_BLOCK_VAR_ERROR\");\n    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);\n    node0.isVarArgs();\n}",
    "testName" : "test1010"
  },
  "test2223" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2223() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"ANu:S2G\", \"ANu:S2G\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(115);\n    Node node1 = new Node(126, node0, node0, 1, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getChildCount();\n}",
    "testName" : "test2223"
  },
  "test2222" : {
    "methodSignature" : "public boolean hasMoreThanOneChild()",
    "methodName" : "hasMoreThanOneChild",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2222() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"ANu:S2G\", \"ANu:S2G\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(115);\n    Node node1 = new Node(126, node0, node0, 1, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.hasMoreThanOneChild();\n}",
    "testName" : "test2222"
  },
  "test033" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"S_AT7H_BOCK_VAR_ERROR\", \"Igj@6Ysuo(5I\");\n    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, true);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_PropagateConstantAnnotationsOverVars0);\n}",
    "testName" : "test033"
  },
  "test1616" : {
    "methodSignature" : "static Node parseAndNormalizeTestCode(AbstractCompiler compiler, String code, String prefix)",
    "methodName" : "parseAndNormalizeTestCode",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    AbstractCompiler.LifeCycleStage abstractCompiler_LifeCycleStage0 = AbstractCompiler.LifeCycleStage.NORMALIZED_OBFUSCATED;\n    compiler0.setLifeCycleStage(abstractCompiler_LifeCycleStage0);\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler\", \"com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler\");\n}",
    "testName" : "test1616"
  },
  "test1414" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(147);\n    Normalize normalize0 = new Normalize(compiler0, true);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test1414"
  },
  "test2427" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2427() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Move function dwclaration not at top of untion\", \"Move function dwclaration not at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(117);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.hasOneChild();\n}",
    "testName" : "test2427"
  },
  "test2426" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2426() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Move function dwclaration not at top of untion\", \"Move function dwclaration not at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(117);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getChildCount();\n}",
    "testName" : "test2426"
  },
  "test3550" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3550() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"\", \"\");\n    Node node1 = new Node(105, node0, node0, 2, 1);\n    node0.addChildrenToFront(node1);\n    Normalize normalize0 = new Normalize(compiler0, true);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test3550"
  },
  "test2020" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"c*/V\", \"c*/V\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);\n    node0.setType(113);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n}",
    "testName" : "test2020"
  },
  "test2631" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2631() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Move function dwclaration not at top of untion\", \"Move function dwclaration not at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);\n    node0.setType(120);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n}",
    "testName" : "test2631"
  },
  "test3448" : {
    "methodSignature" : "public boolean hasMoreThanOneChild()",
    "methodName" : "hasMoreThanOneChild",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3448() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Str%ig\", \"Str%ig\");\n    Node node1 = compiler0.parseTestCode(\"Str%ig\");\n    node0.addChildToBack(node1);\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(118);\n    Node node2 = new Node(126, node0, node0, 5, 24);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node2, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node0.hasMoreThanOneChild();\n}",
    "testName" : "test3448"
  },
  "test3246" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3246() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"%yX!!Ld^i\", \"%yX!!Ld^i\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);\n    node0.setType(118);\n    Node node1 = new Node(125, node0, node0, 140, 2);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n}",
    "testName" : "test3246"
  },
  "test022" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"function ySCompile_emptyFn() {  return function() {}}\", \"function ySCompile_emptyFn() {  return function() {}}\");\n    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, true);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_PropagateConstantAnnotationsOverVars0);\n}",
    "testName" : "test022"
  },
  "test2837" : {
    "methodSignature" : "public boolean hasMoreThanOneChild()",
    "methodName" : "hasMoreThanOneChild",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2837() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"May onlB lend proerties to bject types. X0} has type {1}.\", \"May onlB lend proerties to bject types. X0} has type {1}.\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(122);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.hasMoreThanOneChild();\n}",
    "testName" : "test2837"
  },
  "test3449" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3449() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Str%ig\", \"Str%ig\");\n    Node node1 = compiler0.parseTestCode(\"Str%ig\");\n    node0.addChildToBack(node1);\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(118);\n    Node node2 = new Node(126, node0, node0, 5, 24);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node2, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node0.hasOneChild();\n}",
    "testName" : "test3449"
  },
  "test2836" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2836() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"May onlB lend proerties to bject types. X0} has type {1}.\", \"May onlB lend proerties to bject types. X0} has type {1}.\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(122);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getChildCount();\n}",
    "testName" : "test2836"
  },
  "test2835" : {
    "methodSignature" : "public boolean hasChildren()",
    "methodName" : "hasChildren",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2835() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"May onlB lend proerties to bject types. X0} has type {1}.\", \"May onlB lend proerties to bject types. X0} has type {1}.\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(122);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node0.hasChildren();\n}",
    "testName" : "test2835"
  },
  "test1818" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"JSC_CATCH_BLOCK_VAR_ERRO\", \"JSC_CATCH_BLOCK_VAR_ERRO\");\n    Normalize normalize0 = new Normalize(compiler0, true);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test1818"
  },
  "test3042" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3042() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Fove function dwclaration ot at top of untion\", \"Fove function dwclaration ot at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(124);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node0.hasOneChild();\n}",
    "testName" : "test3042"
  },
  "test3041" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3041() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Fove function dwclaration ot at top of untion\", \"Fove function dwclaration ot at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(124);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getChildCount();\n}",
    "testName" : "test3041"
  },
  "test3044" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3044() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Fove function dwclaration ot at top of untion\", \"Fove function dwclaration ot at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(124);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getCharno();\n}",
    "testName" : "test3044"
  },
  "test3043" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3043() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Fove function dwclaration ot at top of untion\", \"Fove function dwclaration ot at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(124);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getLineno();\n}",
    "testName" : "test3043"
  },
  "test2324" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2324() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"ANu:S2G\", \"ANu:S2G\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);\n    node0.setType(116);\n    Node node1 = new Node(126, node0, node0, 1, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n}",
    "testName" : "test2324"
  },
  "test1313" : {
    "methodSignature" : "public boolean isUnscopedQualifiedName()",
    "methodName" : "isUnscopedQualifiedName",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler\", \"com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler\");\n    node0.isUnscopedQualifiedName();\n}",
    "testName" : "test1313"
  },
  "test2121" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2121() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Fove function dwclaration ot a^ top of untion\", \"Fove function dwclaration ot a^ top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);\n    node0.setType(114);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n}",
    "testName" : "test2121"
  },
  "test1111" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;\n    Normalize.parseAndNormalizeTestCode(compiler0, \"JSC_CATCH_BLOCK_VAR_ERYO\", \"JSC_CATCH_BLOCK_VAR_ERYO\");\n    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);\n    Node node0 = compiler0.parseSyntheticCode(\"JSC_CATCH_BLOCK_VAR_ERYO\");\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);\n}",
    "testName" : "test1111"
  },
  "test011" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"+\", \"+\");\n    Node node1 = new Node(15, node0);\n    Normalize normalize0 = new Normalize(compiler0, true);\n    normalize0.process(node0, node0);\n    normalize0.process(node0, node0);\n    node0.getCharno();\n}",
    "testName" : "test011"
  },
  "test055" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;\n    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, false);\n    Node node0 = compiler0.parseSyntheticCode(\"S_AT7H_BOCK_VAR_ERROR\", \"S_AT7H_BOCK_VAR_ERROR\");\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_PropagateConstantAnnotationsOverVars0);\n}",
    "testName" : "test055"
  },
  "test099" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"L\", \"L\");\n    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, false);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);\n}",
    "testName" : "test099"
  },
  "test2529" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2529() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"(WA?\", \"(WA?\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(119);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node0.hasOneChild();\n}",
    "testName" : "test2529"
  },
  "test1717" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Node.newString(\"=Q\");\n    Node node1 = new Node(31, node0, node0, node0, node0, 49, 0);\n    Normalize normalize0 = new Normalize(compiler0, true);\n    normalize0.process(node1, node1);\n}",
    "testName" : "test1717"
  },
  "test1515" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = new Node(148, 148, 148);\n    Normalize normalize0 = new Normalize(compiler0, false);\n    normalize0.process(node0, node0);\n}",
    "testName" : "test1515"
  },
  "test2528" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2528() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"(WA?\", \"(WA?\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(119);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getChildCount();\n}",
    "testName" : "test2528"
  },
  "test3347" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3347() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"%yX!!Ld^i\", \"%yX!!Ld^i\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);\n    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();\n    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);\n    Vector<JSType> vector0 = new Vector<JSType>();\n    Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);\n    node0.addChildToFront(node1);\n    node0.setType(118);\n    Node node2 = new Node(125, node0, node0, 140, 2);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node2, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n}",
    "testName" : "test3347"
  },
  "test2733" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2733() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Move function dwclaration not at top of untion\", \"Move function dwclaration not at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(121);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getCharno();\n}",
    "testName" : "test2733"
  },
  "test2732" : {
    "methodSignature" : "public int getChildCount()",
    "methodName" : "getChildCount",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2732() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Move function dwclaration not at top of untion\", \"Move function dwclaration not at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(121);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getChildCount();\n}",
    "testName" : "test2732"
  },
  "test3145" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3145() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"f/)K\", \"f/)K\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(126);\n    Node node1 = new Node(126, node0, node0, 6, 41);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n}",
    "testName" : "test3145"
  },
  "test2530" : {
    "methodSignature" : "public boolean hasMoreThanOneChild()",
    "methodName" : "hasMoreThanOneChild",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2530() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"(WA?\", \"(WA?\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(119);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.hasMoreThanOneChild();\n}",
    "testName" : "test2530"
  },
  "test000" : {
    "methodSignature" : "static Node getBoilerplateCode(AbstractCompiler compiler, @Nullable String logFunction)",
    "methodName" : "getBoilerplateCode",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    RuntimeTypeCheck.getBoilerplateCode((AbstractCompiler) null, \"\");\n}",
    "testName" : "test000"
  },
  "test044" : {
    "methodSignature" : "public static void traverse(AbstractCompiler compiler, Node root, Callback cb)",
    "methodName" : "traverse",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;\n    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, true);\n    Node node0 = compiler0.parseSyntheticCode(\"S_AT7H_BOCK_VAR_ERROR\", \"S_AT7H_BOCK_VAR_ERROR\");\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_PropagateConstantAnnotationsOverVars0);\n}",
    "testName" : "test044"
  },
  "test088" : {
    "methodSignature" : "public boolean isOnlyModifiesThisCall()",
    "methodName" : "isOnlyModifiesThisCall",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"function JSCompiler_emptyFn() {  return function() {}}\", \"function JSCompiler_emptyFn() {  return function() {}}\");\n    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);\n    node0.isOnlyModifiesThisCall();\n}",
    "testName" : "test088"
  },
  "test2939" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2939() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"\\\"{0}\\\" is not a falid JS property nBme\", \"\\\"{0}\\\" is not a falid JS property nBme\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(123);\n    Node node1 = new Node(126, node0, node0, 5, 24);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node0.hasOneChild();\n}",
    "testName" : "test2939"
  },
  "test2938" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2938() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"\\\"{0}\\\" is not a falid JS property nBme\", \"\\\"{0}\\\" is not a falid JS property nBme\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(123);\n    Node node1 = new Node(126, node0, node0, 5, 24);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getCharno();\n}",
    "testName" : "test2938"
  },
  "test2734" : {
    "methodSignature" : "public int getLineno()",
    "methodName" : "getLineno",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2734() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Move function dwclaration not at top of untion\", \"Move function dwclaration not at top of untion\");\n    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);\n    node0.setType(121);\n    Node node1 = new Node(126, node0, node0, 15, 40);\n    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);\n    node1.getLineno();\n}",
    "testName" : "test2734"
  },
  "test1919" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.Normalize",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();\n    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;\n    Normalize normalize0 = new Normalize(compiler0, true);\n    Node node0 = compiler0.parseTestCode(\"S_AT7H_OCK_VAR_ERROR\");\n    normalize0.process(node0, node0);\n}",
    "testName" : "test1919"
  }
}