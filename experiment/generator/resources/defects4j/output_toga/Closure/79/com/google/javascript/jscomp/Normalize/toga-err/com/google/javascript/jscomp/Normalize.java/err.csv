com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test000() throws Throwable {
    RuntimeTypeCheck.getBoilerplateCode((AbstractCompiler) null, """");
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test011() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""+"", ""+"");
    Node node1 = new Node(15, node0);
    Normalize normalize0 = new Normalize(compiler0, true);
    normalize0.process(node0, node0);
    normalize0.process(node0, node0);
    node0.getCharno();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test022() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""function ySCompile_emptyFn() {  return function() {}}"", ""function ySCompile_emptyFn() {  return function() {}}"");
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, true);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_PropagateConstantAnnotationsOverVars0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test033() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""S_AT7H_BOCK_VAR_ERROR"", ""Igj@6Ysuo(5I"");
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, true);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_PropagateConstantAnnotationsOverVars0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test044() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, true);
    Node node0 = compiler0.parseSyntheticCode(""S_AT7H_BOCK_VAR_ERROR"", ""S_AT7H_BOCK_VAR_ERROR"");
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_PropagateConstantAnnotationsOverVars0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test055() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;
    Normalize.PropagateConstantAnnotationsOverVars normalize_PropagateConstantAnnotationsOverVars0 = new Normalize.PropagateConstantAnnotationsOverVars(compiler0, false);
    Node node0 = compiler0.parseSyntheticCode(""S_AT7H_BOCK_VAR_ERROR"", ""S_AT7H_BOCK_VAR_ERROR"");
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_PropagateConstantAnnotationsOverVars0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test066() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""[SqKW5ra{K'pBQP|w7_"", ""[SqKW5ra{K'pBQP|w7_"");
    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);
    normalize_VerifyConstants0.process(node0, node0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_79b/src/com/google/javascript/jscomp/Normalize/VerifyConstants.java
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test077() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""[SqKW5r{K'pBQP|wq_"", ""[SqKW5r{K'pBQP|wq_"");
    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);
    Node node1 = new Node(30, node0, 9, 0);
    normalize_VerifyConstants0.process(node1, node0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_79b/src/com/google/javascript/jscomp/Normalize/VerifyConstants.java
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test088() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""function JSCompiler_emptyFn() {  return function() {}}"", ""function JSCompiler_emptyFn() {  return function() {}}"");
    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);
    node0.isOnlyModifiesThisCall();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test099() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""L"", ""L"");
    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, false);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test1010() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""JSC_CATCH_BLOCK_VAR_ERROR"", ""JSC_CATCH_BLOCK_VAR_ERROR"");
    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);
    node0.isVarArgs();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test1111() throws Throwable {
    Compiler compiler0 = new Compiler();
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    compiler0.defaultCodingConvention = (CodingConvention) googleCodingConvention0;
    Normalize.parseAndNormalizeTestCode(compiler0, ""JSC_CATCH_BLOCK_VAR_ERYO"", ""JSC_CATCH_BLOCK_VAR_ERYO"");
    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);
    Node node0 = compiler0.parseSyntheticCode(""JSC_CATCH_BLOCK_VAR_ERYO"");
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test1212() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""L"", ""L"");
    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node0, (NodeTraversal.Callback) normalize_VerifyConstants0);
    node0.getSideEffectFlags();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test1313() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler"", ""com.google.javascript.jscomp.Normalize$DuplicateDeclarationHandler"");
    node0.isUnscopedQualifiedName();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2020() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""c*/V"", ""c*/V"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);
    node0.setType(113);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2121() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Fove function dwclaration ot a^ top of untion"", ""Fove function dwclaration ot a^ top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);
    node0.setType(114);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2222() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""ANu:S2G"", ""ANu:S2G"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(115);
    Node node1 = new Node(126, node0, node0, 1, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.hasMoreThanOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2223() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""ANu:S2G"", ""ANu:S2G"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(115);
    Node node1 = new Node(126, node0, node0, 1, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getChildCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2324() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""ANu:S2G"", ""ANu:S2G"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);
    node0.setType(116);
    Node node1 = new Node(126, node0, node0, 1, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2425() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Move function dwclaration not at top of untion"", ""Move function dwclaration not at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(117);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getLineno();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2426() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Move function dwclaration not at top of untion"", ""Move function dwclaration not at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(117);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getChildCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2427() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Move function dwclaration not at top of untion"", ""Move function dwclaration not at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(117);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.hasOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2528() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""(WA?"", ""(WA?"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(119);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getChildCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2529() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""(WA?"", ""(WA?"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(119);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node0.hasOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2530() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""(WA?"", ""(WA?"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(119);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.hasMoreThanOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2631() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Move function dwclaration not at top of untion"", ""Move function dwclaration not at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);
    node0.setType(120);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2732() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Move function dwclaration not at top of untion"", ""Move function dwclaration not at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(121);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getChildCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2733() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Move function dwclaration not at top of untion"", ""Move function dwclaration not at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(121);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getCharno();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2734() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Move function dwclaration not at top of untion"", ""Move function dwclaration not at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(121);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getLineno();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2835() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""May onlB lend proerties to bject types. X0} has type {1}."", ""May onlB lend proerties to bject types. X0} has type {1}."");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(122);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node0.hasChildren();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2836() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""May onlB lend proerties to bject types. X0} has type {1}."", ""May onlB lend proerties to bject types. X0} has type {1}."");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(122);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getChildCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2837() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""May onlB lend proerties to bject types. X0} has type {1}."", ""May onlB lend proerties to bject types. X0} has type {1}."");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(122);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.hasMoreThanOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2938() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""\""{0}\"" is not a falid JS property nBme"", ""\""{0}\"" is not a falid JS property nBme"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(123);
    Node node1 = new Node(126, node0, node0, 5, 24);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getCharno();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2939() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""\""{0}\"" is not a falid JS property nBme"", ""\""{0}\"" is not a falid JS property nBme"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(123);
    Node node1 = new Node(126, node0, node0, 5, 24);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node0.hasOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test2940() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""\""{0}\"" is not a falid JS property nBme"", ""\""{0}\"" is not a falid JS property nBme"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(123);
    Node node1 = new Node(126, node0, node0, 5, 24);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node0.hasChildren();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test3041() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Fove function dwclaration ot at top of untion"", ""Fove function dwclaration ot at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(124);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getChildCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test3042() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Fove function dwclaration ot at top of untion"", ""Fove function dwclaration ot at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(124);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node0.hasOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test3043() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Fove function dwclaration ot at top of untion"", ""Fove function dwclaration ot at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(124);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getLineno();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test3044() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Fove function dwclaration ot at top of untion"", ""Fove function dwclaration ot at top of untion"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(124);
    Node node1 = new Node(126, node0, node0, 15, 40);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node1.getCharno();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test3145() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""f/)K"", ""f/)K"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(126);
    Node node1 = new Node(126, node0, node0, 6, 41);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test3246() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""%yX!!Ld^i"", ""%yX!!Ld^i"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);
    node0.setType(118);
    Node node1 = new Node(125, node0, node0, 140, 2);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node1, (NodeTraversal.Callback) normalize_NormalizeStatements0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test3347() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""%yX!!Ld^i"", ""%yX!!Ld^i"");
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, true);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    Vector<JSType> vector0 = new Vector<JSType>();
    Node node1 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) vector0);
    node0.addChildToFront(node1);
    node0.setType(118);
    Node node2 = new Node(125, node0, node0, 140, 2);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node2, (NodeTraversal.Callback) normalize_NormalizeStatements0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test3448() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Str%ig"", ""Str%ig"");
    Node node1 = compiler0.parseTestCode(""Str%ig"");
    node0.addChildToBack(node1);
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(118);
    Node node2 = new Node(126, node0, node0, 5, 24);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node2, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node0.hasMoreThanOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.Normalize,@Test(timeout = 4000)
public void test3449() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Str%ig"", ""Str%ig"");
    Node node1 = compiler0.parseTestCode(""Str%ig"");
    node0.addChildToBack(node1);
    Normalize.NormalizeStatements normalize_NormalizeStatements0 = new Normalize.NormalizeStatements(compiler0, false);
    node0.setType(118);
    Node node2 = new Node(126, node0, node0, 5, 24);
    NodeTraversal.traverse((AbstractCompiler) compiler0, node2, (NodeTraversal.Callback) normalize_NormalizeStatements0);
    node0.hasOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
