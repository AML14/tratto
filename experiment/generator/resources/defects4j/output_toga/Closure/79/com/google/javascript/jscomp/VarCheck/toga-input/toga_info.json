{
  "test34" : {
    "methodSignature" : "public int getErrorCount()",
    "methodName" : "getErrorCount",
    "className" : "com.google.javascript.jscomp.VarCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test34() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"function JSCompiler_reurnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\", \"function JSCompiler_reurnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\");\n    Node node1 = new Node(125, node0);\n    VarCheck varCheck0 = new VarCheck(compiler0);\n    varCheck0.process(node0, node0);\n    compiler0.getErrorCount();\n}",
    "testName" : "test34"
  },
  "test45" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.VarCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test45() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"com.google.javascript.jscomp.AstChangeProxy\", \"com.google.javascript.jscomp.AstChangeProxy\");\n    VarCheck varCheck0 = new VarCheck(compiler0);\n    varCheck0.process(node0, node0);\n}",
    "testName" : "test45"
  },
  "test56" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.VarCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test56() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"JSC_INVALID_FUNCTION_DECL\", \"JSC_INVALID_FUNCTION_DECL\");\n    VarCheck varCheck0 = new VarCheck(compiler0);\n    varCheck0.process(node0, node0);\n}",
    "testName" : "test56"
  },
  "test00" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.VarCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test00() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"function JSCompiler_reurnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\", \"function JSCompiler_reurnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\");\n    node0.setType(14);\n    Node node1 = new Node(41, node0, node0, node0, node0);\n    VarCheck varCheck0 = new VarCheck(compiler0);\n    varCheck0.process(node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test00"
  },
  "test11" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.VarCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test11() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"function JSCompiler_returnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\", \"function JSCompiler_returnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\");\n    Node node1 = new Node(14, node0);\n    VarCheck varCheck0 = new VarCheck(compiler0);\n    varCheck0.process(node0, node0);\n}",
    "testName" : "test11"
  },
  "test22" : {
    "methodSignature" : "public void process(Node externs, Node root)",
    "methodName" : "process",
    "className" : "com.google.javascript.jscomp.VarCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test22() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"W\", \"W\");\n    Node node1 = new Node(2, node0);\n    VarCheck varCheck0 = new VarCheck(compiler0, true);\n    varCheck0.process(node0, node0);\n}",
    "testName" : "test22"
  },
  "test33" : {
    "methodSignature" : "public int getWarningCount()",
    "methodName" : "getWarningCount",
    "className" : "com.google.javascript.jscomp.VarCheck",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test33() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"function JSCompiler_reurnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\", \"function JSCompiler_reurnArg(JSCompiler_returnArg_value) {  return function() {return JSCompiler_returnArg_value}}\");\n    Node node1 = new Node(125, node0);\n    VarCheck varCheck0 = new VarCheck(compiler0);\n    varCheck0.process(node0, node0);\n    compiler0.getWarningCount();\n}",
    "testName" : "test33"
  }
}