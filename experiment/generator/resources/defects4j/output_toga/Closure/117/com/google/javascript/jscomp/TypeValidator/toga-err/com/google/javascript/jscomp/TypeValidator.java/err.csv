com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test000() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseNumberType();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
    FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
    typeValidator0.expectSwitchMatchesCase(nodeTraversal0, node0, jSType0, functionType0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test011() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.ERROR;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    typeValidator0.expectValidTypeofName(nodeTraversal0, node0, ""?"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test022() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_VerifyConstants0);
    TightenTypes tightenTypes0 = new TightenTypes(compiler0);
    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();
    JSTypeNative jSTypeNative0 = JSTypeNative.GLOBAL_THIS;
    ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
    typeValidator0.expectNumber(nodeTraversal0, node0, objectType0, ""variable {0} redefined with type {1}, original definition at {2}:{3} with type {4}"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test023() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    Normalize.VerifyConstants normalize_VerifyConstants0 = new Normalize.VerifyConstants(compiler0, true);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, normalize_VerifyConstants0);
    TightenTypes tightenTypes0 = new TightenTypes(compiler0);
    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();
    JSTypeNative jSTypeNative0 = JSTypeNative.GLOBAL_THIS;
    ObjectType objectType0 = jSTypeRegistry0.getNativeObjectType(jSTypeNative0);
    typeValidator0.expectNumber(nodeTraversal0, node0, objectType0, ""variable {0} redefined with type {1}, original definition at {2}:{3} with type {4}"");
    objectType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test034() throws Throwable {
    Compiler compiler0 = new Compiler();
    compiler0.parseTestCode("" 9+NY"");
    InlineProperties inlineProperties0 = new InlineProperties(compiler0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test056() throws Throwable {
    DiagnosticType diagnosticType0 = PureFunctionIdentifier.INVALID_MODIFIES_ANNOTATION;
    JSError jSError0 = JSError.make(diagnosticType0, (String[]) null);
    TypeValidator.TypeMismatch typeValidator_TypeMismatch0 = new TypeValidator.TypeMismatch((JSType) null, (JSType) null, jSError0);
    String string0 = typeValidator_TypeMismatch0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_117b/src/com/google/javascript/jscomp/TypeValidator/TypeMismatch.java
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test078() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    TightenTypes tightenTypes0 = new TightenTypes(compiler0);
    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    typeValidator0.expectActualObject(nodeTraversal0, node0, objectType0, ""Object#Element"");
    objectType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test079() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    TightenTypes tightenTypes0 = new TightenTypes(compiler0);
    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    typeValidator0.expectActualObject(nodeTraversal0, node0, objectType0, ""Object#Element"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test0810() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("""");
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseNumberType();
    TypeValidator typeValidator0 = compiler0.getTypeValidator();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    typeValidator0.expectActualObject(nodeTraversal0, node0, jSType0, ""msg.continue.nonloop"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test0911() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""array access"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    CheckRegExp checkRegExp0 = new CheckRegExp(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkRegExp0);
    typeValidator0.expectAnyObject(nodeTraversal0, node0, objectType0, ""Not declared as a type name"");
    objectType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1012() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("""");
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseNumberType();
    TypeValidator typeValidator0 = compiler0.getTypeValidator();
    CheckLevel checkLevel0 = CheckLevel.OFF;
    CheckMissingReturn checkMissingReturn0 = new CheckMissingReturn(compiler0, checkLevel0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingReturn0);
    typeValidator0.expectAnyObject(nodeTraversal0, node0, jSType0, ""Object#Element"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1113() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    JSTypeNative jSTypeNative0 = JSTypeNative.NO_RESOLVED_TYPE;
    FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
    typeValidator0.expectAnyObject(nodeTraversal0, node0, functionType0, ""Unknown class name"");
    functionType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1114() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    JSTypeNative jSTypeNative0 = JSTypeNative.NO_RESOLVED_TYPE;
    FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
    typeValidator0.expectAnyObject(nodeTraversal0, node0, functionType0, ""Unknown class name"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1215() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    TemplateType templateType0 = jSTypeRegistry0.createTemplateType("" 9+NY"");
    typeValidator0.expectString(nodeTraversal0, node0, templateType0, "" 9+NY"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1316() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    TightenTypes tightenTypes0 = new TightenTypes(compiler0);
    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    typeValidator0.expectString(nodeTraversal0, node0, objectType0, ""Object#Element"");
    objectType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1317() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    TightenTypes tightenTypes0 = new TightenTypes(compiler0);
    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    typeValidator0.expectString(nodeTraversal0, node0, objectType0, ""Object#Element"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1418() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    TemplateType templateType0 = jSTypeRegistry0.createTemplateType("" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0, (ScopeCreator) null);
    typeValidator0.expectNumber(nodeTraversal0, node0, templateType0, """");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1519() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    TemplateType templateType0 = jSTypeRegistry0.createTemplateType("" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0, (ScopeCreator) null);
    typeValidator0.expectBitwiseable(nodeTraversal0, node0, templateType0, """");
    node0.isComma();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1620() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""array access"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    CheckRegExp checkRegExp0 = new CheckRegExp(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkRegExp0);
    typeValidator0.expectBitwiseable(nodeTraversal0, node0, objectType0, ""Not declared as a type name"");
    objectType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1621() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""array access"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    CheckRegExp checkRegExp0 = new CheckRegExp(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkRegExp0);
    typeValidator0.expectBitwiseable(nodeTraversal0, node0, objectType0, ""Not declared as a type name"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1823() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""array access"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, ""array access"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    typeValidator0.expectStringOrNumber(nodeTraversal0, node0, objectType0, ""zv-y[|0/N!e9sHo}"");
    objectType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1824() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""array access"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, ""array access"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    typeValidator0.expectStringOrNumber(nodeTraversal0, node0, objectType0, ""zv-y[|0/N!e9sHo}"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test1925() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""vH_ljC#t"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
    EnumType enumType0 = jSTypeRegistry0.createEnumType(""X{SHS)D6L_E6"", node0, templateType0);
    RemoveUnusedClassProperties removeUnusedClassProperties0 = new RemoveUnusedClassProperties(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, removeUnusedClassProperties0);
    typeValidator0.expectStringOrNumber(nodeTraversal0, (Node) null, enumType0, ""Named type with empty name component"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test2026() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""array access"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    CheckRegExp checkRegExp0 = new CheckRegExp(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkRegExp0);
    boolean boolean0 = typeValidator0.expectNotNullOrUndefined(nodeTraversal0, node0, objectType0, ""Not declared as a type name"", objectType0);
    objectType0.hasCachedValues();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test2229() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    TemplateType templateType0 = jSTypeRegistry0.createTemplateType("" 9+NY"");
    typeValidator0.expectSwitchMatchesCase(nodeTraversal0, node0, templateType0, templateType0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test2330() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseNumberType();
    JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
    FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
    typeValidator0.expectSwitchMatchesCase(nodeTraversal0, node0, functionType0, jSType0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test2734() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseNumberType();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
    FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
    boolean boolean0 = typeValidator0.expectCanAssignTo(nodeTraversal0, node0, functionType0, jSType0, ""Not declared as a type name"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test2836() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0);
    TightenTypes tightenTypes0 = new TightenTypes(compiler0);
    JSTypeRegistry jSTypeRegistry0 = tightenTypes0.getTypeRegistry();
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseNumberType();
    typeValidator0.expectArgumentMatchesParameter(nodeTraversal0, node0, jSType0, jSType0, node0, 4095);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test3038() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""array access"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    ObjectType objectType0 = jSTypeRegistry0.createAnonymousObjectType(jSDocInfo0);
    CheckRegExp checkRegExp0 = new CheckRegExp(compiler0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkRegExp0);
    typeValidator0.expectCanOverride(nodeTraversal0, node0, objectType0, objectType0, ""Not declared as a constructor"", objectType0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test3341() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    CheckMissingGetCssName checkMissingGetCssName0 = new CheckMissingGetCssName(compiler0, checkLevel0, "" 9+NY"");
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    TemplateType templateType0 = jSTypeRegistry0.createTemplateType("" 9+NY"");
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, checkMissingGetCssName0, (ScopeCreator) null);
    typeValidator0.expectSuperType(nodeTraversal0, node0, templateType0, templateType0);
    node0.isIf();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test3442() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("""");
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    TemplateType templateType0 = jSTypeRegistry0.createTemplateType(""Q\""'"");
    ReferenceCollectingCallback.Behavior referenceCollectingCallback_Behavior0 = ReferenceCollectingCallback.DO_NOTHING_BEHAVIOR;
    ReferenceCollectingCallback referenceCollectingCallback0 = new ReferenceCollectingCallback(compiler0, referenceCollectingCallback_Behavior0);
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    JSType jSType0 = jSTypeRegistry0.createOptionalType(templateType0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, referenceCollectingCallback0, syntacticScopeCreator0);
    typeValidator0.expectCanCast(nodeTraversal0, node0, jSType0, jSType0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test3543() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""vH_ljC#t"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
    EnumType enumType0 = jSTypeRegistry0.createEnumType(""X{SHS)D6L_E6"", node0, templateType0);
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseNumberType();
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    JSType jSType1 = jSTypeRegistry0.createOptionalType(enumType0);
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null, syntacticScopeCreator0);
    typeValidator0.expectCanCast(nodeTraversal0, node0, jSType1, jSType0);
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test3745() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    JSTypeNative jSTypeNative0 = JSTypeNative.DATE_FUNCTION_TYPE;
    FunctionType functionType0 = jSTypeRegistry0.getNativeFunctionType(jSTypeNative0);
    typeValidator0.expectAllInterfaceProperties(nodeTraversal0, node0, functionType0);
    functionType0.isInterface();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test3846() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode("" 9+NY"");
    TypeValidator typeValidator0 = new TypeValidator(compiler0);
    JSTypeRegistry jSTypeRegistry0 = compiler0.getTypeRegistry();
    TemplateType templateType0 = jSTypeRegistry0.getObjectElementKey();
    EnumType enumType0 = jSTypeRegistry0.createEnumType(""Not declared as a constructor"", node0, templateType0);
    ObjectType objectType0 = enumType0.getImplicitPrototype();
    NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, (NodeTraversal.Callback) null);
    boolean boolean0 = typeValidator0.expectCanAssignToPropertyOf(nodeTraversal0, node0, objectType0, enumType0, node0, ""Not declared as a constructor"");
    compiler0.getWarningCount();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test4150() throws Throwable {
    DiagnosticType diagnosticType0 = PureFunctionIdentifier.INVALID_MODIFIES_ANNOTATION;
    JSError jSError0 = JSError.make(diagnosticType0, (String[]) null);
    TypeValidator.TypeMismatch typeValidator_TypeMismatch0 = new TypeValidator.TypeMismatch((JSType) null, (JSType) null, jSError0);
    boolean boolean0 = typeValidator_TypeMismatch0.equals((Object) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_117b/src/com/google/javascript/jscomp/TypeValidator/TypeMismatch.java
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test4251() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(1722, 1722, 1722);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    String[] stringArray0 = new String[0];
    JSError jSError0 = JSError.make(""JSC_OPTIMIZE_LOOP_ERROR"", node0, checkLevel0, compiler0.MOTION_ITERATIONS_ERROR, stringArray0);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    TemplateType templateType0 = jSTypeRegistry0.createTemplateType(""JSC_OPTIMIZE_LOOP_ERROR"");
    TypeValidator.TypeMismatch typeValidator_TypeMismatch0 = new TypeValidator.TypeMismatch(templateType0, templateType0, jSError0);
    boolean boolean0 = typeValidator_TypeMismatch0.equals(typeValidator_TypeMismatch0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_117b/src/com/google/javascript/jscomp/TypeValidator/TypeMismatch.java
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test4352() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node((-3449), (-3449), 249);
    String[] stringArray0 = new String[2];
    JSError jSError0 = JSError.make(""[Y0yVz2@?8^u"", node0, compiler0.OPTIMIZE_LOOP_ERROR.level, compiler0.MOTION_ITERATIONS_ERROR, stringArray0);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    TemplateType templateType0 = jSTypeRegistry0.createTemplateType("""");
    TypeValidator.TypeMismatch typeValidator_TypeMismatch0 = new TypeValidator.TypeMismatch(templateType0, templateType0, jSError0);
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseNumberType();
    TypeValidator.TypeMismatch typeValidator_TypeMismatch1 = new TypeValidator.TypeMismatch(jSType0, jSType0, jSError0);
    boolean boolean0 = typeValidator_TypeMismatch0.equals(typeValidator_TypeMismatch1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_117b/src/com/google/javascript/jscomp/TypeValidator/TypeMismatch.java
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test4453() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(1722, 1722, 1722);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    String[] stringArray0 = new String[0];
    JSError jSError0 = JSError.make(""JSC_OPTIMIZE_LOOP_ERROR"", node0, checkLevel0, compiler0.MOTION_ITERATIONS_ERROR, stringArray0);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    TemplateType templateType0 = jSTypeRegistry0.createTemplateType(""JSC_OPTIMIZE_LOOP_ERROR"");
    TypeValidator.TypeMismatch typeValidator_TypeMismatch0 = new TypeValidator.TypeMismatch(templateType0, templateType0, jSError0);
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseNumberType();
    TypeValidator.TypeMismatch typeValidator_TypeMismatch1 = new TypeValidator.TypeMismatch(templateType0, jSType0, jSError0);
    boolean boolean0 = typeValidator_TypeMismatch0.equals(typeValidator_TypeMismatch1);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_117b/src/com/google/javascript/jscomp/TypeValidator/TypeMismatch.java
com.google.javascript.jscomp.TypeValidator,@Test(timeout = 4000)
public void test4454() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = new Node(1722, 1722, 1722);
    CheckLevel checkLevel0 = CheckLevel.WARNING;
    String[] stringArray0 = new String[0];
    JSError jSError0 = JSError.make(""JSC_OPTIMIZE_LOOP_ERROR"", node0, checkLevel0, compiler0.MOTION_ITERATIONS_ERROR, stringArray0);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    TemplateType templateType0 = jSTypeRegistry0.createTemplateType(""JSC_OPTIMIZE_LOOP_ERROR"");
    TypeValidator.TypeMismatch typeValidator_TypeMismatch0 = new TypeValidator.TypeMismatch(templateType0, templateType0, jSError0);
    ModificationVisitor modificationVisitor0 = new ModificationVisitor(jSTypeRegistry0);
    JSType jSType0 = modificationVisitor0.caseNumberType();
    TypeValidator.TypeMismatch typeValidator_TypeMismatch1 = new TypeValidator.TypeMismatch(templateType0, jSType0, jSError0);
    boolean boolean0 = typeValidator_TypeMismatch0.equals(typeValidator_TypeMismatch1);
    typeValidator_TypeMismatch1.equals((Object) typeValidator_TypeMismatch0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_117b/src/com/google/javascript/jscomp/TypeValidator/TypeMismatch.java
