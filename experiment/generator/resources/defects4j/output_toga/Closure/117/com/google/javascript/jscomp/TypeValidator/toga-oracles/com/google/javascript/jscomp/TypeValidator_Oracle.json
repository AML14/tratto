[ {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test000"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test011"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test022"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean hasCachedValues()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(objectType0.hasCachedValues())",
  "exception" : "",
  "testName" : "test023"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "InlineProperties(AbstractCompiler compiler)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test034"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "void setShouldReport(boolean report)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test045"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "boolean expectObject(NodeTraversal t, Node n, JSType type, String msg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test067"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean hasCachedValues()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test078"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test079"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test0810"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean hasCachedValues()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test0911"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test1012"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean hasCachedValues()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(functionType0.hasCachedValues())",
  "exception" : "",
  "testName" : "test1113"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test1114"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test1215"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean hasCachedValues()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1316"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1317"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1418"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean isComma()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isComma())",
  "exception" : "",
  "testName" : "test1519"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean hasCachedValues()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1620"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1621"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "void expectStringOrNumber(NodeTraversal t, Node n, JSType type, String msg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1722"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean hasCachedValues()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(objectType0.hasCachedValues())",
  "exception" : "",
  "testName" : "test1823"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1824"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test1925"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean hasCachedValues()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2026"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "boolean expectNotNullOrUndefined(NodeTraversal t, Node n, JSType type, String msg, JSType expectedType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2027"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "boolean expectNotNullOrUndefined(NodeTraversal t, Node n, JSType type, String msg, JSType expectedType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2128"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test2229"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2330"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "boolean expectCanAssignToPropertyOf(NodeTraversal t, Node n, JSType rightType, JSType leftType, Node owner, String propName)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2431"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "boolean expectCanAssignToPropertyOf(NodeTraversal t, Node n, JSType rightType, JSType leftType, Node owner, String propName)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2532"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "boolean expectCanAssignTo(NodeTraversal t, Node n, JSType rightType, JSType leftType, String msg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2633"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test2734"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "boolean expectCanAssignTo(NodeTraversal t, Node n, JSType rightType, JSType leftType, String msg)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(boolean0)",
  "exception" : "",
  "testName" : "test2735"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2836"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "void expectArgumentMatchesParameter(NodeTraversal t, Node n, JSType argType, JSType paramType, Node callNode, int ordinal)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test2937"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertEquals(0, compiler0.getWarningCount())",
  "exception" : "",
  "testName" : "test3038"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "void expectCanOverride(NodeTraversal t, Node n, JSType overridingType, JSType hiddenType, String propertyName, JSType ownerType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3139"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "void expectSuperType(NodeTraversal t, Node n, ObjectType superObject, ObjectType subObject)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3240"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean isIf()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(node0.isIf())",
  "exception" : "",
  "testName" : "test3341"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3442"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3543"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "Var expectUndeclaredVariable(String sourceName, CompilerInput input, Node n, Node parent, Var var, String variableName, JSType newType)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3644"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public boolean isInterface()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "assertTrue(functionType0.isInterface())",
  "exception" : "",
  "testName" : "test3745"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "public int getWarningCount()",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3846"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "boolean expectCanAssignToPropertyOf(NodeTraversal t, Node n, JSType rightType, JSType leftType, Node owner, String propName)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3847"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "String getReadableJSTypeName(Node n, boolean dereference)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test3948"
}, {
  "className" : "com.google.javascript.jscomp.TypeValidator",
  "methodSignature" : "String getReadableJSTypeName(Node n, boolean dereference)",
  "oracleType" : "NON_AXIOMATIC",
  "oracle" : "",
  "exception" : "",
  "testName" : "test4049"
} ]