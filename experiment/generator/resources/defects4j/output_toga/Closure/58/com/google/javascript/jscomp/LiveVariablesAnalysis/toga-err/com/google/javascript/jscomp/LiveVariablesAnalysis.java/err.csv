com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test000() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""g5xD3>UEB(/^Ayc{\""o"", ""g5xD3>UEB(/^Ayc{\""o"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, false);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    Set<Scope.Var> set0 = liveVariablesAnalysis0.getEscapedLocals();
    set0.size();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_58b/src/java/util/Set.java
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test022() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    ControlFlowGraph.Branch controlFlowGraph_Branch0 = ControlFlowGraph.Branch.ON_EX;
    controlFlowGraph0.connectToImplicitReturn(node0, controlFlowGraph_Branch0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(5);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test033() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    LiveVariablesAnalysis.LiveVariableLattice liveVariablesAnalysis_LiveVariableLattice0 = liveVariablesAnalysis0.createInitialEstimateLattice();
    liveVariablesAnalysis_LiveVariableLattice0.isLive((Scope.Var) null);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_58b/src/com/google/javascript/jscomp/LiveVariablesAnalysis/LiveVariableLattice.java
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test044() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    LiveVariablesAnalysis.LiveVariableLattice liveVariablesAnalysis_LiveVariableLattice0 = liveVariablesAnalysis0.createInitialEstimateLattice();
    String string0 = liveVariablesAnalysis_LiveVariableLattice0.toString();
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_58b/src/com/google/javascript/jscomp/LiveVariablesAnalysis/LiveVariableLattice.java
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test055() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, false, false);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    LiveVariablesAnalysis.LiveVariableLattice liveVariablesAnalysis_LiveVariableLattice0 = liveVariablesAnalysis0.createInitialEstimateLattice();
    boolean boolean0 = liveVariablesAnalysis_LiveVariableLattice0.isLive(0);
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_58b/src/com/google/javascript/jscomp/LiveVariablesAnalysis/LiveVariableLattice.java
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test066() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""}A=P@Yq[Qhyj"", ""}A=P@Yq[Qhyj"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    LiveVariablesAnalysis.LiveVariableLattice liveVariablesAnalysis_LiveVariableLattice0 = liveVariablesAnalysis0.createEntryLattice();
    LiveVariablesAnalysis.LiveVariableLattice liveVariablesAnalysis_LiveVariableLattice1 = liveVariablesAnalysis0.join(liveVariablesAnalysis_LiveVariableLattice0, liveVariablesAnalysis_LiveVariableLattice0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test077() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""g5xD3>UE?$(/^Ayc{\""o"", ""g5xD3>UE?$(/^Ayc{\""o"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    LiveVariablesAnalysis.LiveVariableLattice liveVariablesAnalysis_LiveVariableLattice0 = liveVariablesAnalysis0.createInitialEstimateLattice();
    boolean boolean0 = liveVariablesAnalysis_LiveVariableLattice0.equals(""g5xD3>UE?$(/^Ayc{\""o"");
},ERROR,java.nio.file.NoSuchFileException,/home/star_usit_group/tratto/experiment/generator/resources/defects4j/temp/Closure_58b/src/com/google/javascript/jscomp/LiveVariablesAnalysis/LiveVariableLattice.java
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test088() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""g5xD3>UE?$(/^Ayc{\""o"", ""g5xD3>UE?$(/^Ayc{\""o"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    ControlFlowGraph.Branch controlFlowGraph_Branch0 = ControlFlowGraph.Branch.ON_FALSE;
    controlFlowGraph0.connect(node0, controlFlowGraph_Branch0, node0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(0);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test099() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""R"", ""R"");
    Node node1 = Node.newString(118, ""R"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node1, (Scope) null);
    node1.addChildrenToFront(node0);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(32);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test1010() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""eJp {+KUEi:~ !9q=Xw,"", ""eJp {+KUEi:~ !9q=Xw,"");
    Node node1 = Node.newString(98, ""eJp {+KUEi:~ !9q=Xw,"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(4);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test1111() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "")Gg8=cacX>>r|gD"", "")Gg8=cacX>>r|gD"");
    Node node1 = Node.newString(100, ""Should be unreachable."");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(2);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test1212() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""%"", ""%"");
    Node node1 = Node.newString(101, ""%"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(35);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test1313() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""ep {+KEi:~ !q=Xw9"", ""ep {+KEi:~ !q=Xw9"");
    Node node1 = Node.newString(105, ""ep {+KEi:~ !q=Xw9"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(14);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test1414() throws Throwable {
    Compiler compiler0 = new Compiler();
    Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    Node node0 = Node.newString(108, """");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(5);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test1515() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""%"", ""%"");
    Node node1 = Node.newString(113, ""%"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(15);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test1616() throws Throwable {
    Compiler compiler0 = new Compiler();
    Normalize.parseAndNormalizeTestCode(compiler0, ""U.Pv<"", ""U.Pv<"");
    Node node0 = Node.newString(114, ""U.Pv<"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(1);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test1717() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscmp.LiveVaiabesAnalysis$LiveVariableJoinOp"", ""com.google.javascript.jscmp.LiveVaiabesAnalysis$LiveVariableJoinOp"");
    Node node1 = Node.newString(115, ""com.google.javascript.jscmp.LiveVaiabesAnalysis$LiveVariableJoinOp"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(36);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test1818() throws Throwable {
    Compiler compiler0 = new Compiler();
    Normalize.parseAndNormalizeTestCode(compiler0, ""R"", ""R"");
    Node node0 = Node.newString(125, ""9TS[fA;KO;9<kLRW"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node0, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node0, (Scope) null);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(1024);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test1919() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, """", """");
    Node node1 = Node.newString(118, """");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node1, (Scope) null);
    node1.addChildrenToFront(node0);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(20);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test2020() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""`"", ""`"");
    Node node1 = Node.newString(97, ""`"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node1, (Scope) null);
    node1.addChildrenToFront(node0);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(19);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.LiveVariablesAnalysis,@Test(timeout = 4000)
public void test2121() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseSyntheticCode(""R"", ""R"");
    Node node1 = Node.newString(118, ""R"");
    ControlFlowGraph<Node> controlFlowGraph0 = new ControlFlowGraph<Node>(node1, true, true);
    SyntacticScopeCreator syntacticScopeCreator0 = new SyntacticScopeCreator(compiler0);
    Scope scope0 = syntacticScopeCreator0.createScope(node1, (Scope) null);
    scope0.declare(""R"", node0, (JSType) null, (CompilerInput) null, true);
    node1.addChildrenToFront(node0);
    LiveVariablesAnalysis liveVariablesAnalysis0 = new LiveVariablesAnalysis(controlFlowGraph0, scope0, compiler0);
    liveVariablesAnalysis0.analyze(32);
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
