project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test000,"public void test000() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node((-1474), (-1474), (-1474));
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertEquals(29, Node.JSDOC_INFO_PROP);
}",0,
project,0,test011,"public void test011() throws Throwable {
    Node node0 = new Node(49);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.areMatchingExits(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.ControlFlowAnalysis"", e);
    }
}",0,
project,0,test022,"public void test022() throws Throwable {
    Node node0 = new Node(4, 55, 40);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test033,"public void test033() throws Throwable {
    Node node0 = Node.newNumber(479.7);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = new Node(26, node0, node0, node0, node0, 49, 40);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test044,"public void test044() throws Throwable {
    Node node0 = new Node(43);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test055,"public void test055() throws Throwable {
    Node node0 = new Node(44, 44, 44);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isAssignAdd());
}",0,assertTrue(node1.isAssignAdd())
project,0,test066,"public void test066() throws Throwable {
    Node node0 = new Node(49);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test077,"public void test077() throws Throwable {
    Node node0 = new Node(63);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isEmpty());
}",0,assertTrue(node1.isEmpty())
project,0,test088,"public void test088() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(85, 85, 85);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isThrow());
}",0,assertTrue(node1.isThrow())
project,0,test099,"public void test099() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node((-1474), (-1474), (-1474));
    Node node1 = new Node(108, node0, node0, node0, node0, 39, 46);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test1010,"public void test1010() throws Throwable {
    Node node0 = new Node(113, 113, 113);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test1111,"public void test1111() throws Throwable {
    Node node0 = new Node(114);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test1212,"public void test1212() throws Throwable {
    Node node0 = new Node(130, 130, 130);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test1313,"public void test1313() throws Throwable {
    Node node0 = Node.newNumber((-4193.0));
    Node node1 = new Node(4, 55, 40);
    Node node2 = new Node(8, node1, node0, 15, 53);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test1414,"public void test1414() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    Compiler compiler0 = new Compiler();
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isAnd());
}",0,assertTrue(node1.isAnd())
project,0,test1515,"public void test1515() throws Throwable {
    Node node0 = Node.newNumber(1626.0);
    Node node1 = new Node(37, node0, node0, node0, node0, 53, 37);
    Compiler compiler0 = new Compiler();
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test1616,"public void test1616() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR 115
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test1717,"public void test1717() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node1 = new Node(115, node0, node0, node0, node0, 52, 55);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR 52
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test1818,"public void test1818() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    node0.addChildToFront(node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR 115
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test1919,"public void test1919() throws Throwable {
    Node node0 = new Node(37, 53, 100);
    Compiler compiler0 = new Compiler();
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.Compiler"", e);
    }
}",0,
project,0,test2020,"public void test2020() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node0 = new Node(85, 85, 85);
    Node node1 = new Node(85, node0, node0, node0, node0, 55, 40);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertNotNull(node2);
}",0,
project,0,test2021,"public void test2021() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node0 = new Node(85, 85, 85);
    Node node1 = new Node(85, node0, node0, node0, node0, 55, 40);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node2.hasOneChild());
}",0,
project,0,test2122,"public void test2122() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    Node node1 = new Node(125, node0, node0, node0, node0, 53, 125);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertEquals(125, node2.getType());
}",0,"assertEquals(0, node2.getType())"
project,0,test2223,"public void test2223() throws Throwable {
    Node node0 = new Node(38, 38, 38);
    Compiler compiler0 = new Compiler();
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isBlock());
}",0,assertTrue(node1.isBlock())
project,0,test2324,"public void test2324() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = new Node(4, node0, node0, node0, node0, 54, 30);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test2425,"public void test2425() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure((Node) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2526,"public void test2526() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test2627,"public void test2627() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""Y"");
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.isPure(node0);
}",0,
project,0,test2728,"public void test2728() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node0 = Node.newString(""\u2028"");
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2829,"public void test2829() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node1 = new Node(4, node0, node0, node0, node0, 54, 30);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.areMatchingExits(node1, node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test2930,"public void test2930() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = Node.newNumber(0.0);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.areMatchingExits(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test3031,"public void test3031() throws Throwable {
    Node node0 = new Node(4);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isExceptionPossible(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test3132,"public void test3132() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = new Node(4, node0, node0, node0, node0, 16, 441);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isExceptionPossible(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test3233,"public void test3233() throws Throwable {
    Node node0 = Node.newNumber(479.7);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    node0.setType(46);
    Node node1 = new Node(26, node0, node0, node0, node0, 49, 40);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test3334,"public void test3334() throws Throwable {
    Node node0 = Node.newNumber((-2584.919495491));
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    node0.setType(45);
    Node node1 = new Node(26, node0, node0, node0, node0, 49, 40);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test3435,"public void test3435() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node1 = new Node(26, node0, node0, node0, node0, 0, 40);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertNotNull(node2);
}",0,
project,0,test3436,"public void test3436() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node1 = new Node(26, node0, node0, node0, node0, 0, 40);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertEquals(40, node2.getCharno());
}",0,"assertEquals(0, node2.getCharno())"
project,0,test3537,"public void test3537() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = new Node(108, node0, node0, node0, node0, 12, 4095);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertNotNull(node2);
}",0,
project,0,test3538,"public void test3538() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = new Node(108, node0, node0, node0, node0, 12, 4095);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertTrue(node2.hasOneChild());
}",0,assertFalse(node2.hasOneChild())
project,0,test3639,"public void test3639() throws Throwable {
    Node node0 = Node.newNumber((-1.0));
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    node0.setType(26);
    Node node1 = new Node(26, node0, node0, node0, node0, 16, 2);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test3740,"public void test3740() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(98);
    Node node1 = new Node(98, node0, node0, node0, node0, 55, 55);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test3841,"public void test3841() throws Throwable {
    Node node0 = new Node(44);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test3942,"public void test3942() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = new Node(63, node0, node0, node0, node0, 4095, 39);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    assertEquals(46, Node.IS_NAMESPACE);
}",0,
project,0,test4043,"public void test4043() throws Throwable {
    Node node0 = new Node(63);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    assertFalse(node1.isFor());
}",0,assertTrue(node1.isFor())
project,0,test4144,"public void test4144() throws Throwable {
    boolean boolean0 = PeepholeSubstituteAlternateSyntax.containsUnicodeEscape(""bcR4Qsho-Mo(G?"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
