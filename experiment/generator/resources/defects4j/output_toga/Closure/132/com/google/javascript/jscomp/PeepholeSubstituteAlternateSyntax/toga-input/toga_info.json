{
  "test1212" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1212() throws Throwable {\n    Node node0 = new Node(130, 130, 130);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1212"
  },
  "test2324" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2324() throws Throwable {\n    Node node0 = Node.newNumber(0.0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = new Node(4, node0, node0, node0, node0, 54, 30);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test2324"
  },
  "test3435" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3435() throws Throwable {\n    Node node0 = Node.newNumber(0.0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node1 = new Node(26, node0, node0, node0, node0, 0, 40);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3435"
  },
  "test1313" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1313() throws Throwable {\n    Node node0 = Node.newNumber((-4193.0));\n    Node node1 = new Node(4, 55, 40);\n    Node node2 = new Node(8, node1, node0, 15, 53);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1313"
  },
  "test2425" : {
    "methodSignature" : "boolean isPure(Node n)",
    "methodName" : "isPure",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2425() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure((Node) null);\n}",
    "testName" : "test2425"
  },
  "test3436" : {
    "methodSignature" : "public int getCharno()",
    "methodName" : "getCharno",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3436() throws Throwable {\n    Node node0 = Node.newNumber(0.0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node1 = new Node(26, node0, node0, node0, node0, 0, 40);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n    node2.getCharno();\n}",
    "testName" : "test3436"
  },
  "test1010" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1010() throws Throwable {\n    Node node0 = new Node(113, 113, 113);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1010"
  },
  "test2122" : {
    "methodSignature" : "public int getType()",
    "methodName" : "getType",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2122() throws Throwable {\n    Node node0 = Node.newNumber(0.0);\n    Node node1 = new Node(125, node0, node0, node0, node0, 53, 125);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n    node2.getType();\n}",
    "testName" : "test2122"
  },
  "test3233" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3233() throws Throwable {\n    Node node0 = Node.newNumber(479.7);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    node0.setType(46);\n    Node node1 = new Node(26, node0, node0, node0, node0, 49, 40);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3233"
  },
  "test1111" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1111() throws Throwable {\n    Node node0 = new Node(114);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1111"
  },
  "test2223" : {
    "methodSignature" : "public boolean isBlock()",
    "methodName" : "isBlock",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2223() throws Throwable {\n    Node node0 = new Node(38, 38, 38);\n    Compiler compiler0 = new Compiler();\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isBlock();\n}",
    "testName" : "test2223"
  },
  "test3334" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3334() throws Throwable {\n    Node node0 = Node.newNumber((-2584.919495491));\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    node0.setType(45);\n    Node node1 = new Node(26, node0, node0, node0, node0, 49, 40);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3334"
  },
  "test011" : {
    "methodSignature" : "boolean areMatchingExits(Node nodeThis, Node nodeThat)",
    "methodName" : "areMatchingExits",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test011() throws Throwable {\n    Node node0 = new Node(49);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.areMatchingExits(node0, node0);\n}",
    "testName" : "test011"
  },
  "test033" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test033() throws Throwable {\n    Node node0 = Node.newNumber(479.7);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = new Node(26, node0, node0, node0, node0, 49, 40);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test033"
  },
  "test055" : {
    "methodSignature" : "public boolean isAssignAdd()",
    "methodName" : "isAssignAdd",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test055() throws Throwable {\n    Node node0 = new Node(44, 44, 44);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isAssignAdd();\n}",
    "testName" : "test055"
  },
  "test077" : {
    "methodSignature" : "public boolean isEmpty()",
    "methodName" : "isEmpty",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test077() throws Throwable {\n    Node node0 = new Node(63);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isEmpty();\n}",
    "testName" : "test077"
  },
  "test099" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test099() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node((-1474), (-1474), (-1474));\n    Node node1 = new Node(108, node0, node0, node0, node0, 39, 46);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test099"
  },
  "test1616" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1616() throws Throwable {\n    Node node0 = new Node(115, 115, 115);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1616"
  },
  "test2728" : {
    "methodSignature" : "boolean isPure(Node n)",
    "methodName" : "isPure",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2728() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node0 = Node.newString(\"\\u2028\");\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);\n}",
    "testName" : "test2728"
  },
  "test1717" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1717() throws Throwable {\n    Node node0 = new Node(43, 43, 43);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node1 = new Node(115, node0, node0, node0, node0, 52, 55);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1717"
  },
  "test2829" : {
    "methodSignature" : "boolean areMatchingExits(Node nodeThis, Node nodeThat)",
    "methodName" : "areMatchingExits",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2829() throws Throwable {\n    Node node0 = Node.newNumber(0.0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node1 = new Node(4, node0, node0, node0, node0, 54, 30);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.areMatchingExits(node1, node1);\n}",
    "testName" : "test2829"
  },
  "test1414" : {
    "methodSignature" : "public boolean isAnd()",
    "methodName" : "isAnd",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1414() throws Throwable {\n    Node node0 = new Node(30, 30, 30);\n    Compiler compiler0 = new Compiler();\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isAnd();\n}",
    "testName" : "test1414"
  },
  "test2526" : {
    "methodSignature" : "boolean isPure(Node n)",
    "methodName" : "isPure",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2526() throws Throwable {\n    Node node0 = new Node(115, 115, 115);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);\n}",
    "testName" : "test2526"
  },
  "test3538" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3538() throws Throwable {\n    Node node0 = Node.newNumber(0.0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = new Node(108, node0, node0, node0, node0, 12, 4095);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n    node2.hasOneChild();\n}",
    "testName" : "test3538"
  },
  "test3537" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3537() throws Throwable {\n    Node node0 = Node.newNumber(0.0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = new Node(108, node0, node0, node0, node0, 12, 4095);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3537"
  },
  "test1515" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1515() throws Throwable {\n    Node node0 = Node.newNumber(1626.0);\n    Node node1 = new Node(37, node0, node0, node0, node0, 53, 37);\n    Compiler compiler0 = new Compiler();\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test1515"
  },
  "test2627" : {
    "methodSignature" : "boolean isPure(Node n)",
    "methodName" : "isPure",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2627() throws Throwable {\n    Compiler compiler0 = new Compiler();\n    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, \"Y\");\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.isPure(node0);\n}",
    "testName" : "test2627"
  },
  "test3639" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3639() throws Throwable {\n    Node node0 = Node.newNumber((-1.0));\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    node0.setType(26);\n    Node node1 = new Node(26, node0, node0, node0, node0, 16, 2);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3639"
  },
  "test3031" : {
    "methodSignature" : "boolean isExceptionPossible(Node n)",
    "methodName" : "isExceptionPossible",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3031() throws Throwable {\n    Node node0 = new Node(4);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isExceptionPossible(node0);\n}",
    "testName" : "test3031"
  },
  "test4144" : {
    "methodSignature" : "static boolean containsUnicodeEscape(String s)",
    "methodName" : "containsUnicodeEscape",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4144() throws Throwable {\n    boolean boolean0 = PeepholeSubstituteAlternateSyntax.containsUnicodeEscape(\"bcR4Qsho-Mo(G?\");\n}",
    "testName" : "test4144"
  },
  "test2021" : {
    "methodSignature" : "public boolean hasOneChild()",
    "methodName" : "hasOneChild",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2021() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node0 = new Node(85, 85, 85);\n    Node node1 = new Node(85, node0, node0, node0, node0, 55, 40);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node2.hasOneChild();\n}",
    "testName" : "test2021"
  },
  "test3132" : {
    "methodSignature" : "boolean isExceptionPossible(Node n)",
    "methodName" : "isExceptionPossible",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3132() throws Throwable {\n    Node node0 = new Node(115, 115, 115);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node1 = new Node(4, node0, node0, node0, node0, 16, 441);\n    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isExceptionPossible(node1);\n}",
    "testName" : "test3132"
  },
  "test2020" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2020() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node0 = new Node(85, 85, 85);\n    Node node1 = new Node(85, node0, node0, node0, node0, 55, 40);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test2020"
  },
  "test4043" : {
    "methodSignature" : "public boolean isFor()",
    "methodName" : "isFor",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test4043() throws Throwable {\n    Node node0 = new Node(63);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isFor();\n}",
    "testName" : "test4043"
  },
  "test3841" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3841() throws Throwable {\n    Node node0 = new Node(44);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test3841"
  },
  "test2930" : {
    "methodSignature" : "boolean areMatchingExits(Node nodeThis, Node nodeThat)",
    "methodName" : "areMatchingExits",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test2930() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = Node.newNumber(0.0);\n    peepholeSubstituteAlternateSyntax0.areMatchingExits(node0, node0);\n}",
    "testName" : "test2930"
  },
  "test3942" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3942() throws Throwable {\n    Node node0 = new Node(63);\n    Node node1 = new Node(63, node0, node0, node0, node0, 4095, 39);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3942"
  },
  "test3740" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test3740() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(98);\n    Node node1 = new Node(98, node0, node0, node0, node0, 55, 55);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);\n}",
    "testName" : "test3740"
  },
  "test000" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test000() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node((-1474), (-1474), (-1474));\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test000"
  },
  "test022" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test022() throws Throwable {\n    Node node0 = new Node(4, 55, 40);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test022"
  },
  "test044" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test044() throws Throwable {\n    Node node0 = new Node(43);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test044"
  },
  "test066" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test066() throws Throwable {\n    Node node0 = new Node(49);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test066"
  },
  "test088" : {
    "methodSignature" : "public boolean isThrow()",
    "methodName" : "isThrow",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test088() throws Throwable {\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    Node node0 = new Node(85, 85, 85);\n    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n    node1.isThrow();\n}",
    "testName" : "test088"
  },
  "test1818" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1818() throws Throwable {\n    Node node0 = new Node(115, 115, 115);\n    node0.addChildToFront(node0);\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1818"
  },
  "test1919" : {
    "methodSignature" : "public Node optimizeSubtree(Node node)",
    "methodName" : "optimizeSubtree",
    "className" : "com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax",
    "testPrefix" : "@Test(timeout = 4000)\npublic void test1919() throws Throwable {\n    Node node0 = new Node(37, 53, 100);\n    Compiler compiler0 = new Compiler();\n    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);\n    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);\n    peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);\n}",
    "testName" : "test1919"
  }
}