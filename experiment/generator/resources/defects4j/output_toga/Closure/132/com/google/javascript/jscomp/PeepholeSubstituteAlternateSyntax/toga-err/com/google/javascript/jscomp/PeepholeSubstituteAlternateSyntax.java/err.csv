com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax,@Test(timeout = 4000)
public void test055() throws Throwable {
    Node node0 = new Node(44, 44, 44);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    node1.isAssignAdd();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax,@Test(timeout = 4000)
public void test077() throws Throwable {
    Node node0 = new Node(63);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    node1.isEmpty();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax,@Test(timeout = 4000)
public void test088() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = new Node(85, 85, 85);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    node1.isThrow();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax,@Test(timeout = 4000)
public void test1414() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    Compiler compiler0 = new Compiler();
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    node1.isAnd();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax,@Test(timeout = 4000)
public void test2021() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node0 = new Node(85, 85, 85);
    Node node1 = new Node(85, node0, node0, node0, node0, 55, 40);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    node2.hasOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax,@Test(timeout = 4000)
public void test2122() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    Node node1 = new Node(125, node0, node0, node0, node0, 53, 125);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    node2.getType();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax,@Test(timeout = 4000)
public void test2223() throws Throwable {
    Node node0 = new Node(38, 38, 38);
    Compiler compiler0 = new Compiler();
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    peepholeSubstituteAlternateSyntax0.beginTraversal(compiler0);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    node1.isBlock();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax,@Test(timeout = 4000)
public void test3436() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node1 = new Node(26, node0, node0, node0, node0, 0, 40);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    node2.getCharno();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax,@Test(timeout = 4000)
public void test3538() throws Throwable {
    Node node0 = Node.newNumber(0.0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    Node node1 = new Node(108, node0, node0, node0, node0, 12, 4095);
    Node node2 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
    node2.hasOneChild();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax,@Test(timeout = 4000)
public void test4043() throws Throwable {
    Node node0 = new Node(63);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node1 = peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
    node1.isFor();
},WARNING,java.lang.IllegalStateException,[WARNING] - The last statement of the test is part of another class with respect to the class under test. Check if the focal method is correct.
