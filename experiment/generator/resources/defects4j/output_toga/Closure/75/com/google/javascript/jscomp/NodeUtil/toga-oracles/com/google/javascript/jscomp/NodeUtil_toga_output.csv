project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0011,"public void test0011() throws Throwable {
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    Node node0 = Node.newNumber((double) 1021, 1021, 1021);
    boolean boolean0 = NodeUtil.has(node0, nodeUtil_MatchDeclaration0, nodeUtil_MatchDeclaration0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0022,"public void test0022() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(82, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test0023,"public void test0023() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test0024,"public void test0024() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(1905, node0.getLineno());
}",0,
project,0,test0035,"public void test0035() throws Throwable {
    Node node0 = new Node(58, 58, 58);
    boolean boolean0 = NodeUtil.containsFunction(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0046,"public void test0046() throws Throwable {
    Node node0 = Node.newNumber(33.2116);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test0057,"public void test0057() throws Throwable {
    Node node0 = Node.newString(21, ""mMxI/6~"", 21, 21);
    // Undeclared exception!
    try {
        NodeUtil.mayBeString(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test0068,"public void test0068() throws Throwable {
    Node node0 = Node.newNumber((double) 114);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0079,"public void test0079() throws Throwable {
    Node node0 = new Node(87);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test00810,"public void test00810() throws Throwable {
    Node node0 = Node.newString(""QCP'=+2.zp,D3"");
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test00911,"public void test00911() throws Throwable {
    Node node0 = new Node(87);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test01012,"public void test01012() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,
project,0,test01113,"public void test01113() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got BREAK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01214,"public void test01214() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newQualifiedNameNode((CodingConvention) closureCodingConvention0, ""infinity"", (Node) null, ""q{&T!UNd()9gNj{I"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test01315,"public void test01315() throws Throwable {
    Node node0 = Node.newString(""N@L'Nfb6Q\""^"");
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForFunction(node0, 4095);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test01416,"public void test01416() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""cWK"", 561, 561);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""cWK"", node0, ""cWK"");
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test01417,"public void test01417() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""cWK"", 561, 561);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""cWK"", node0, ""cWK"");
    assertNotSame(node1, node0);
}",0,
project,0,test01418,"public void test01418() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""cWK"", 561, 561);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""cWK"", node0, ""cWK"");
    assertEquals(561, node0.getLineno());
}",0,
project,0,test01419,"public void test01419() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""cWK"", 561, 561);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""cWK"", node0, ""cWK"");
    assertEquals(561, node1.getCharno());
}",0,
project,0,test01420,"public void test01420() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""cWK"", 561, 561);
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""cWK"", node0, ""cWK"");
    assertTrue(node1.isUnscopedQualifiedName());
}",0,assertFalse(node1.isUnscopedQualifiedName())
project,0,test01521,"public void test01521() throws Throwable {
    Node node0 = new Node(120);
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01622,"public void test01622() throws Throwable {
    Node node0 = new Node(117);
    int int0 = NodeUtil.getNameReferenceCount(node0, (String) null);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test01723,"public void test01723() throws Throwable {
    Node node0 = new Node(68);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionBody(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01824,"public void test01824() throws Throwable {
    Node node0 = new Node(71);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLATTR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01925,"public void test01925() throws Throwable {
    Node node0 = new Node(147);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test01926,"public void test01926() throws Throwable {
    Node node0 = new Node(147);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(130, node1.getType());
}",0,
project,0,test02027,"public void test02027() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""cW$"", ""cW$"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test02128,"public void test02128() throws Throwable {
    Node node0 = Node.newString(129, ""`=(kWsmx.ih>"", 129, 110);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02229,"public void test02229() throws Throwable {
    Node node0 = Node.newNumber(53.0);
    Node node1 = new Node(26, node0, 88, 29);
    NodeUtil.getImpureBooleanValue(node1);
}",0,
project,0,test02330,"public void test02330() throws Throwable {
    Node node0 = Node.newString(63, ""lkj{"");
    NodeUtil.getImpureBooleanValue(node0);
}",1,
project,0,test02431,"public void test02431() throws Throwable {
    Node node0 = new Node(64);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test02532,"public void test02532() throws Throwable {
    Node node0 = new Node(127);
    Node node1 = new Node(85, node0, node0, node0, node0);
    NodeUtil.getImpureBooleanValue(node1);
}",0,
project,0,test02633,"public void test02633() throws Throwable {
    Node node0 = new Node(86);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02734,"public void test02734() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02835,"public void test02835() throws Throwable {
    Node node0 = Node.newString(100, ""&"");
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02936,"public void test02936() throws Throwable {
    Node node0 = Node.newString("".prototype"");
    node0.setType(101);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test03037,"public void test03037() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(26, node0, 5, 18);
    PeepholeFoldWithTypes peepholeFoldWithTypes0 = new PeepholeFoldWithTypes();
    Node node2 = peepholeFoldWithTypes0.optimizeSubtree(node1);
    NodeUtil.getPureBooleanValue(node2);
}",0,
project,0,test03138,"public void test03138() throws Throwable {
    LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
    Logger logger0 = Logger.getLogger(""undefined"");
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 8233, 8233);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test03139,"public void test03139() throws Throwable {
    LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
    Logger logger0 = Logger.getLogger(""undefined"");
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 8233, 8233);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(8233, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test03240,"public void test03240() throws Throwable {
    Node node0 = Node.newString(""~"");
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test03341,"public void test03341() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(41, nodeArray0);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test03442,"public void test03442() throws Throwable {
    Node node0 = new Node(44);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test03543,"public void test03543() throws Throwable {
    Node node0 = Node.newString(47, ""XMLHttpRequest"");
    NodeUtil.getImpureBooleanValue(node0);
}",1,
project,0,test03644,"public void test03644() throws Throwable {
    Node node0 = Node.newString(64, ""JtFtx\""S1!s6]cJ,ME"");
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test03745,"public void test03745() throws Throwable {
    Node node0 = Node.newNumber(2267.602563164143);
    Node node1 = new Node(122, node0, 27, (-2416));
    NodeUtil.getImpureBooleanValue(node1);
}",0,
project,0,test03846,"public void test03846() throws Throwable {
    Node node0 = Node.newString("""", (-26), (-2653));
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test03947,"public void test03947() throws Throwable {
    Node node0 = Node.newNumber(0.0, 64, 182);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test04048,"public void test04048() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Undefined"", 35, 35);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(35, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test04049,"public void test04049() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Undefined"", 35, 35);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test04050,"public void test04050() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""Undefined"", 35, 35);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(35, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test04151,"public void test04151() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 122, 1045);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(1045, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test04152,"public void test04152() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 122, 1045);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04153,"public void test04153() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 122, 1045);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(122, node0.getLineno());
}",0,
project,0,test04254,"public void test04254() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = Node.newString((-1860), ""o[C#=YX5bmht=15mZ"");
    node0.addChildToBack(node1);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test04355,"public void test04355() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(26, node0, 5, 18);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""true"", string0);
}",0,
project,0,test04457,"public void test04457() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(119, node0.getCharno());
}",0,
project,0,test04458,"public void test04458() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(119, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test04459,"public void test04459() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    String string0 = NodeUtil.arrayToString(node1);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04460,"public void test04460() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    String string0 = NodeUtil.arrayToString(node1);
    assertNull(string0);
}",0,assertNotNull(string0)
project,0,test04461,"public void test04461() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    String string0 = NodeUtil.arrayToString(node1);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,assertFalse(node0.isUnscopedQualifiedName())
project,0,test04562,"public void test04562() throws Throwable {
    Node node0 = Node.newNumber((-1829.131));
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""-1829.131"", string0);
}",0,
project,0,test04663,"public void test04663() throws Throwable {
    Node node0 = Node.newString(""yIqGgn+u-yP{)=6vt(:"");
    Node node1 = new Node(2, node0);
    String string0 = NodeUtil.arrayToString(node1);
    assertNotNull(string0);
}",0,
project,0,test04765,"public void test04765() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""false"", string0);
}",0,
project,0,test04866,"public void test04866() throws Throwable {
    Node node0 = new Node(59);
    Node node1 = new Node(44, node0, 4, 74);
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""true"", string0);
}",0,
project,0,test04967,"public void test04967() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test05069,"public void test05069() throws Throwable {
    Node node0 = Node.newNumber(2236.1222158928294);
    Node node1 = new Node(122, node0, 27, (-2416));
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""undefined"", string0);
}",0,
project,0,test05170,"public void test05170() throws Throwable {
    Node node0 = Node.newString(147, ""vL.rxg5N"");
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertNull(string0);
}",0,
project,0,test05271,"public void test05271() throws Throwable {
    Node node0 = Node.newNumber((double) 30, 30, 30);
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""30"", string0);
}",0,
project,0,test05372,"public void test05372() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(26, node0, 5, 18);
    node0.setType(8);
    String string0 = NodeUtil.getStringValue(node1);
    assertNull(string0);
}",0,
project,0,test05473,"public void test05473() throws Throwable {
    Node node0 = Node.newNumber(2236.1222158928294);
    Node node1 = new Node(122, node0, 27, (-2416));
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals("""", string0);
}",0,
project,0,test05574,"public void test05574() throws Throwable {
    Node node0 = Node.newString(124, ""+infinity"", 255, 46);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals("""", string0);
}",0,
project,0,test05675,"public void test05675() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    Node node1 = new Node(26, node0, 5, 18);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",1,
project,0,test05776,"public void test05776() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""R5,&X"", 72, 72);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test05777,"public void test05777() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""R5,&X"", 72, 72);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(72, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test05778,"public void test05778() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""R5,&X"", 72, 72);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test05779,"public void test05779() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""R5,&X"", 72, 72);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0, node0.getSideEffectFlags());
}",0,"assertEquals(1, node0.getSideEffectFlags())"
project,0,test05780,"public void test05780() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""R5,&X"", 72, 72);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(72, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test05881,"public void test05881() throws Throwable {
    Node node0 = Node.newNumber(53.0);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(53.0, (double) double0, 0.01);
}",0,
project,0,test05982,"public void test05982() throws Throwable {
    Node node0 = Node.newString(""0rs,+;cJMb"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test06084,"public void test06084() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(41, nodeArray0);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06185,"public void test06185() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06286,"public void test06286() throws Throwable {
    Node node0 = Node.newString(63, ""lkj{"");
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",1,
project,0,test06387,"public void test06387() throws Throwable {
    Node node0 = Node.newNumber(2236.1222158928294);
    Node node1 = new Node(122, node0, 27, (-2416));
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",0,
project,0,test06489,"public void test06489() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 1861, 1861);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test06590,"public void test06590() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Node node1 = new Node(26, node0, 5, 18);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(1.0, (double) double0, 0.01);
}",1,
project,0,test06691,"public void test06691() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""+aIE"");
    assertNotNull(double0);
}",1,
project,0,test06793,"public void test06793() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""infinity"");
    assertNull(double0);
}",0,
project,0,test06894,"public void test06894() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""-infinity"");
    assertNull(double0);
}",0,
project,0,test06995,"public void test06995() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("")\n"");
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test07097,"public void test07097() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("" {G=rUuEGD"");
    assertNotNull(double0);
}",1,
project,0,test07199,"public void test07199() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(9);
}",0,
project,0,test072100,"public void test072100() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(11);
}",0,
project,0,test073101,"public void test073101() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(12);
}",0,
project,0,test074102,"public void test074102() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(13);
}",0,
project,0,test075103,"public void test075103() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(8233);
}",0,
project,0,test076104,"public void test076104() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(65279);
}",0,
project,0,test077105,"public void test077105() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(8239);
}",0,
project,0,test078106,"public void test078106() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(26, node0, 5, 18);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, true);
    assertTrue(boolean0);
}",0,
project,0,test079107,"public void test079107() throws Throwable {
    Node node0 = new Node(77);
    Node node1 = new Node(29, node0, node0, node0, 1, (-1));
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test080108,"public void test080108() throws Throwable {
    Node node0 = Node.newString(95, ""Kz+$"", 136, 136);
    Node node1 = Node.newNumber((double) 13, 42, 4);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test081109,"public void test081109() throws Throwable {
    Node node0 = Node.newString(""destructuring assignment forbidden"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test082110,"public void test082110() throws Throwable {
    Node node0 = Node.newString(41, "".prototype"");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test083111,"public void test083111() throws Throwable {
    Node node0 = new Node(44);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test084112,"public void test084112() throws Throwable {
    Node node0 = Node.newString(30, "".rhototype"", 30, (-1));
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test085113,"public void test085113() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 45, 2);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test085114,"public void test085114() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 45, 2);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertEquals(2, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test085115,"public void test085115() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 45, 2);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertEquals(45, node0.getLineno());
}",0,
project,0,test085116,"public void test085116() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", 45, 2);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test086117,"public void test086117() throws Throwable {
    Node node0 = Node.newString(64, ""2&pYg?i];Q ]Crg`MP"");
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test087118,"public void test087118() throws Throwable {
    Node node0 = Node.newString(""cWK"");
    node0.setType(105);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertFalse(boolean0);
}",0,
project,0,test088119,"public void test088119() throws Throwable {
    Node node0 = Node.newString(""o/RYYa}^W\""T;iVBo"");
    node0.setType(105);
    // Undeclared exception!
    try {
        NodeUtil.isLiteralValue(node0, true);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test089120,"public void test089120() throws Throwable {
    Node node0 = Node.newString(9, ""Y\""PSRTVh.rHLE"", 708, 9);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test090121,"public void test090121() throws Throwable {
    Node node0 = Node.newString(""i6|I:I-.Ez_Jq"");
    Node node1 = new Node(10, node0, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertTrue(boolean0);
}",0,
project,0,test091122,"public void test091122() throws Throwable {
    Node node0 = new Node(131);
    Node node1 = new Node(11, node0, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test092123,"public void test092123() throws Throwable {
    Node node0 = Node.newString(""Unknown precedence for "");
    Node node1 = new Node(12, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test093124,"public void test093124() throws Throwable {
    Node node0 = Node.newString(13, ""null symbol name"", 19, 132);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test094125,"public void test094125() throws Throwable {
    Node node0 = Node.newString(""E"");
    Node node1 = new Node(15, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test095126,"public void test095126() throws Throwable {
    Node node0 = Node.newString((-1058), """");
    Node node1 = new Node(16, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test096127,"public void test096127() throws Throwable {
    Node node0 = new Node(17);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test097128,"public void test097128() throws Throwable {
    Node node0 = new Node(19);
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test098129,"public void test098129() throws Throwable {
    Node node0 = Node.newString(20, "".prototype"");
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test099130,"public void test099130() throws Throwable {
    Node node0 = new Node(50);
    Node node1 = new Node(21, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test100131,"public void test100131() throws Throwable {
    Node node0 = Node.newString(22, "".prototype"", 22, (-22));
    Locale locale0 = Locale.KOREA;
    Set<String> set0 = locale0.getUnicodeLocaleAttributes();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, set0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test101132,"public void test101132() throws Throwable {
    Node node0 = new Node(23);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test102133,"public void test102133() throws Throwable {
    Node node0 = Node.newString(24, "".prototype"", 24, (-39));
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test103134,"public void test103134() throws Throwable {
    Node node0 = Node.newString("">jC"");
    Node node1 = new Node(25, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test104135,"public void test104135() throws Throwable {
    Node node0 = new Node(43);
    Node node1 = new Node(26, node0, 5, 18);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test105136,"public void test105136() throws Throwable {
    Node node0 = Node.newString(""24ac/Ln"");
    node0.setType(27);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test106137,"public void test106137() throws Throwable {
    Node node0 = Node.newString(""i/j$mPXo"");
    Node node1 = new Node(29, node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test107138,"public void test107138() throws Throwable {
    Node node0 = Node.newString(30, ""// In7ut %num%"", 30, 30);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test108139,"public void test108139() throws Throwable {
    Node node0 = Node.newString(31, ""com.google.javascript.rhino.jstype.NumberType"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test109140,"public void test109140() throws Throwable {
    Node node0 = Node.newString(32, ""`(kWsmx.ih>"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test110141,"public void test110141() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(30, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test110142,"public void test110142() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test110143,"public void test110143() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(24, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test110144,"public void test110144() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test110145,"public void test110145() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test111146,"public void test111146() throws Throwable {
    Node node0 = Node.newString(""[zMVAP0;eSQ5`$G"");
    Node node1 = new Node(34, node0);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, (Set<String>) null);
    assertFalse(boolean0);
}",0,
project,0,test112147,"public void test112147() throws Throwable {
    Node node0 = Node.newString(35, ""Xr$E"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test113148,"public void test113148() throws Throwable {
    Node node0 = Node.newString(37, ""(au"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test114149,"public void test114149() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(55, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test114150,"public void test114150() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test114151,"public void test114151() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(55, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test114152,"public void test114152() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test115153,"public void test115153() throws Throwable {
    Node node0 = Node.newNumber((double) 13, 42, 4);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test116154,"public void test116154() throws Throwable {
    Node node0 = Node.newString(38, ""`(kWsmx.ih>"");
    Node node1 = new Node(41, node0, node0, node0, node0, 0, 44);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethods;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test117155,"public void test117155() throws Throwable {
    Node node0 = Node.newString(116, ""lprototype"", 116, 116);
    node0.setType(42);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    assertFalse(boolean0);
}",0,
project,0,test118156,"public void test118156() throws Throwable {
    Node node0 = Node.newString(44, ""ei/l;;+!"", 59, 28);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, treeSet0);
    assertTrue(boolean0);
}",0,
project,0,test119157,"public void test119157() throws Throwable {
    Node node0 = Node.newString(45, "".prototype"", 45, (-1422));
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, (Set<String>) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test120158,"public void test120158() throws Throwable {
    Node node0 = Node.newString(46, ""WtK"", 3, 1);
    TreeSet<String> treeSet0 = new TreeSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, treeSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test121159,"public void test121159() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(55, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test121160,"public void test121160() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertEquals(55, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test121161,"public void test121161() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test122162,"public void test122162() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""$F/)3x.Q&HRB.Pj\"""");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test123163,"public void test123163() throws Throwable {
    Node node0 = Node.newString(118, ""Shift amount out of bounds: {0}"", 118, 118);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test124164,"public void test124164() throws Throwable {
    Node node0 = Node.newString(9, "" does not have a condition."", 2421, 2421);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test125165,"public void test125165() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test126166,"public void test126166() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test127167,"public void test127167() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(13);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test128168,"public void test128168() throws Throwable {
    Node node0 = Node.newString(14, ""`=(kWsmx.ih>"");
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertTrue(boolean0);
}",0,
project,0,test129169,"public void test129169() throws Throwable {
    Node node0 = Node.newString(""E"");
    Node node1 = new Node(15, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test130170,"public void test130170() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test131171,"public void test131171() throws Throwable {
    Node node0 = new Node(17, 17, 17);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test132172,"public void test132172() throws Throwable {
    Node node0 = new Node(18);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test133173,"public void test133173() throws Throwable {
    Node node0 = new Node(19, 19, 19);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test134174,"public void test134174() throws Throwable {
    Node node0 = Node.newString(20, ""// In7ut %num%"", 20, 20);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test135175,"public void test135175() throws Throwable {
    Node node0 = Node.newString(21, "".prototype"", 21, 1858);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test136176,"public void test136176() throws Throwable {
    Node node0 = Node.newString(22, "".prototype"", 22, 22);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test137177,"public void test137177() throws Throwable {
    Node node0 = new Node(23);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test138178,"public void test138178() throws Throwable {
    Node node0 = Node.newString(24, "".prototype"", 24, 24);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,
project,0,test139179,"public void test139179() throws Throwable {
    Node node0 = new Node(25);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test140180,"public void test140180() throws Throwable {
    Node node0 = new Node(26, 26, 26);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertTrue(boolean0);
}",0,
project,0,test141181,"public void test141181() throws Throwable {
    Node node0 = Node.newString(""o/RYYa}^W\""T;iVBo"");
    node0.setType(27);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test142182,"public void test142182() throws Throwable {
    Node node0 = new Node(28);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test143183,"public void test143183() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""cW$"", ""cW$"");
    Node node1 = new Node(29, node0, 47, 19);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test144184,"public void test144184() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(30);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test145185,"public void test145185() throws Throwable {
    Node node0 = new Node(31, 15, 38);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test146186,"public void test146186() throws Throwable {
    Node node0 = new Node(32, 32, 32);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test147187,"public void test147187() throws Throwable {
    Node node0 = new Node(33);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test148188,"public void test148188() throws Throwable {
    Node node0 = Node.newString(""[zMVP0;eSQ5`$G"");
    Node node1 = new Node(34, node0);
    Node node2 = node1.cloneTree();
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node2);
    assertTrue(boolean0);
}",1,
project,0,test149189,"public void test149189() throws Throwable {
    Node node0 = Node.newString(110, ""\""WY4)j5430RgaVE"");
    Node node1 = new Node(35, node0, 38, 40);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test150190,"public void test150190() throws Throwable {
    Node node0 = new Node(36);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test151191,"public void test151191() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(37);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test152192,"public void test152192() throws Throwable {
    Node node0 = Node.newString(38, ""`(kWsmx.ih>"", 38, 38);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test153193,"public void test153193() throws Throwable {
    Node node0 = Node.newNumber(2228.2115593881085);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test154194,"public void test154194() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test155195,"public void test155195() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test156196,"public void test156196() throws Throwable {
    Node node0 = Node.newString(45, ""||"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test157197,"public void test157197() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, (Predicate<Node>) null);
    assertTrue(boolean0);
}",0,
project,0,test158198,"public void test158198() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test159199,"public void test159199() throws Throwable {
    Node node0 = new Node(48);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test160200,"public void test160200() throws Throwable {
    Node node0 = Node.newString(49, ""-infinity"", (-331), 33);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW -infinity
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test161201,"public void test161201() throws Throwable {
    Node node0 = new Node(50);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test162202,"public void test162202() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test163203,"public void test163203() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(52);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test164204,"public void test164204() throws Throwable {
    Node node0 = new Node(53, 53, 53);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLOCAL_LOAD 53
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test165205,"public void test165205() throws Throwable {
    Node node0 = Node.newString(32, ""`(kWsmx.ih>"");
    node0.setType(54);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGETVAR `(kWsmx.ih>
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test166206,"public void test166206() throws Throwable {
    Node node0 = new Node(55, 55, 55);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETVAR 55
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test167207,"public void test167207() throws Throwable {
    Node node0 = new Node(56, 56, 56);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCATCH_SCOPE 56
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test168208,"public void test168208() throws Throwable {
    Node node0 = new Node(57, 57, 57);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test169209,"public void test169209() throws Throwable {
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    Node node0 = Node.newString(58, ""arguments"", 901, 1);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_VALUES arguments 901
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test170210,"public void test170210() throws Throwable {
    Node node0 = new Node(59, 59, 59);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_NEXT 59
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test171211,"public void test171211() throws Throwable {
    Node node0 = Node.newString(60, ""valueOf"");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_ID valueOf
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test172212,"public void test172212() throws Throwable {
    Node node0 = Node.newString(38, ""`=(kWsmx.ih>"", 38, 38);
    node0.setType(62);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETURN_RESULT `=(kWsmx.ih> 38
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test173213,"public void test173213() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test174214,"public void test174214() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(64);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test175215,"public void test175215() throws Throwable {
    Node node0 = Node.newString(65, ""clear"", 591, 591);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeGET_REF clear 591
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test176216,"public void test176216() throws Throwable {
    Node node0 = new Node(66);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSET_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test177217,"public void test177217() throws Throwable {
    Node node0 = new Node(67, 67, 67);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEL_REF 67
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test178218,"public void test178218() throws Throwable {
    Node node0 = new Node(68);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_CALL
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test179219,"public void test179219() throws Throwable {
    Node node0 = new Node(69);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_SPECIAL
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test180220,"public void test180220() throws Throwable {
    Node node0 = new Node(70);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test181221,"public void test181221() throws Throwable {
    Node node0 = new Node(72, 72, 72);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLTEXT 72
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test182222,"public void test182222() throws Throwable {
    Node node0 = new Node(73, 73, 73);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_MEMBER 73
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test183223,"public void test183223() throws Throwable {
    Node node0 = new Node(74);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test184224,"public void test184224() throws Throwable {
    Node node0 = new Node(75, 75, 4);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test185225,"public void test185225() throws Throwable {
    Node node0 = new Node(76);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test186226,"public void test186226() throws Throwable {
    Node node0 = new Node(77);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test187227,"public void test187227() throws Throwable {
    Node node0 = new Node(78);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSEMI
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test188228,"public void test188228() throws Throwable {
    Node node0 = new Node(79);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test189229,"public void test189229() throws Throwable {
    Node node0 = new Node(80);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test190230,"public void test190230() throws Throwable {
    Node node0 = new Node(81);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test191231,"public void test191231() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(82);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test192232,"public void test192232() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    LinkedList<JSType> linkedList0 = new LinkedList<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) linkedList0);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test193233,"public void test193233() throws Throwable {
    Node node0 = new Node(84);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test194234,"public void test194234() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(85, nodeArray0, 85, 85);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test195235,"public void test195235() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test196236,"public void test196236() throws Throwable {
    Node node0 = new Node(88);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test197237,"public void test197237() throws Throwable {
    Node node0 = new Node(89);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test198238,"public void test198238() throws Throwable {
    Node node0 = new Node(90);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test199239,"public void test199239() throws Throwable {
    Node node0 = Node.newString(92, ""r"", 129, (-1768));
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test200240,"public void test200240() throws Throwable {
    Node node0 = new Node(93, 93, 93);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test201241,"public void test201241() throws Throwable {
    Node node0 = new Node(97);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test202242,"public void test202242() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test203243,"public void test203243() throws Throwable {
    Node node0 = new Node(99);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test204244,"public void test204244() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(100);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test205245,"public void test205245() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test206246,"public void test206246() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test207247,"public void test207247() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test208248,"public void test208248() throws Throwable {
    Node node0 = Node.newString(104, ""=[+:#h<Z"", (-28), 73);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDOT =[+:#h<Z
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test209249,"public void test209249() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test210250,"public void test210250() throws Throwable {
    Node node0 = new Node(106);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test211251,"public void test211251() throws Throwable {
    Node node0 = new Node(107, 107, 107);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test212252,"public void test212252() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(108);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test213253,"public void test213253() throws Throwable {
    Node node0 = new Node(109);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test214254,"public void test214254() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSWITCH 110
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test215255,"public void test215255() throws Throwable {
    Node node0 = new Node(111, 111, 111);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216256,"public void test216256() throws Throwable {
    Node node0 = new Node(112, 112, 112);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test217257,"public void test217257() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    node0.setType(113);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test218258,"public void test218258() throws Throwable {
    Node node0 = new Node(114);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test219259,"public void test219259() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test220260,"public void test220260() throws Throwable {
    Node node0 = new Node(116);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test221261,"public void test221261() throws Throwable {
    Node node0 = Node.newString(116, ""EeE fy|<WA"", 116, 116);
    Node node1 = NodeUtil.newVarNode(""EeE fy|<WA"", node0);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeVAR 116
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test222262,"public void test222262() throws Throwable {
    Node node0 = Node.newString(119, ""// In7ut %num%"", 119, (-1621));
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeWITH // In7ut %num%
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test223263,"public void test223263() throws Throwable {
    Node node0 = new Node(120, 120, 2);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test224264,"public void test224264() throws Throwable {
    Node node0 = new Node(121);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test225265,"public void test225265() throws Throwable {
    Node node0 = new Node(122);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test226266,"public void test226266() throws Throwable {
    Node node0 = Node.newString(147, ""vL.rxg5N"");
    Node node1 = new Node(37, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test227267,"public void test227267() throws Throwable {
    Node node0 = new Node(38);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test228268,"public void test228268() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test229269,"public void test229269() throws Throwable {
    Node node0 = new Node(42, 120, 120);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test230270,"public void test230270() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test231271,"public void test231271() throws Throwable {
    Node node0 = Node.newString(""cWK"");
    node0.setType(44);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test232272,"public void test232272() throws Throwable {
    Node node0 = Node.newString(38, ""`(kWsmx.ih>"");
    node0.setType(46);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test233273,"public void test233273() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test234274,"public void test234274() throws Throwable {
    Node node0 = new Node(49, 49, 49);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test235275,"public void test235275() throws Throwable {
    Node node0 = new Node(50);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test236276,"public void test236276() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test237277,"public void test237277() throws Throwable {
    Node node0 = new Node(53, 53, 53);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test238278,"public void test238278() throws Throwable {
    Node node0 = Node.newString(32, ""`(kWsmx.ih>"");
    node0.setType(54);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test239279,"public void test239279() throws Throwable {
    Node node0 = new Node(55);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test240280,"public void test240280() throws Throwable {
    Node node0 = new Node(56);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test241281,"public void test241281() throws Throwable {
    Node node0 = new Node(58, 58, 58);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test242282,"public void test242282() throws Throwable {
    Node node0 = new Node(59, 59, 59);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test243283,"public void test243283() throws Throwable {
    Node node0 = Node.newString(61, ""typeof"", 61, 61);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test244284,"public void test244284() throws Throwable {
    Node node0 = new Node(62);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test245285,"public void test245285() throws Throwable {
    Node node0 = new Node(65);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test246286,"public void test246286() throws Throwable {
    Node node0 = new Node(66);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test247287,"public void test247287() throws Throwable {
    Node node0 = new Node(68);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test248288,"public void test248288() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test249289,"public void test249289() throws Throwable {
    Node node0 = new Node(72);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250290,"public void test250290() throws Throwable {
    Node node0 = new Node(73, 73, 73);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test251291,"public void test251291() throws Throwable {
    Node node0 = new Node(77);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test252292,"public void test252292() throws Throwable {
    Node node0 = new Node(78);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test253293,"public void test253293() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test254294,"public void test254294() throws Throwable {
    Node node0 = new Node(98);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test255295,"public void test255295() throws Throwable {
    Node node0 = new Node(100);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test256296,"public void test256296() throws Throwable {
    Node node0 = new Node(101);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test257297,"public void test257297() throws Throwable {
    Node node0 = new Node(104);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test258298,"public void test258298() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test259299,"public void test259299() throws Throwable {
    Node node0 = Node.newString(117, ""-"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test260300,"public void test260300() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""com.google.javascript.jscomp.NodeUtil$MatchDeclaration"", (Node) null);
    assertNotNull(node0);
}",0,
project,0,test260301,"public void test260301() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""com.google.javascript.jscomp.NodeUtil$MatchDeclaration"", (Node) null);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertEquals(118, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test260302,"public void test260302() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""com.google.javascript.jscomp.NodeUtil$MatchDeclaration"", (Node) null);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test261303,"public void test261303() throws Throwable {
    Node node0 = Node.newString(""mtFtx8\""S1!s2]cJ,ME"");
    node0.setType(119);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test262304,"public void test262304() throws Throwable {
    Node node0 = new Node(154, 154, 154);
    Node node1 = new Node(123, node0, 1, 2);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test263305,"public void test263305() throws Throwable {
    Node node0 = new Node(124);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test264306,"public void test264306() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""@S[wSgH"");
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test265307,"public void test265307() throws Throwable {
    Node node0 = new Node(126);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test266308,"public void test266308() throws Throwable {
    Node node0 = Node.newString(127, ""<<="", 127, 127);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test267309,"public void test267309() throws Throwable {
    Node node0 = new Node(128);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test268310,"public void test268310() throws Throwable {
    Node node0 = Node.newString(129, ""`=(kWsmx.ih>"", 129, 110);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test269311,"public void test269311() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test270312,"public void test270312() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    node0.addChildrenToFront(node0);
    // Undeclared exception!
    try {
        NodeUtil.mayHaveSideEffects(node0);
        fail(""Expecting exception: StackOverflowError"");
    } catch (StackOverflowError e) {
    }
}",0,
project,0,test271313,"public void test271313() throws Throwable {
    Node node0 = Node.newString(""0IM#-?C 4"");
    node0.setType(105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test272314,"public void test272314() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 3, 1861);
    node0.setType(105);
    Node node1 = new Node(2, node0);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test273315,"public void test273315() throws Throwable {
    Node node0 = new Node(30, 30, 119);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test274316,"public void test274316() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newVarNode(""]ApjrARq!.N*!V06reO"", node0);
    assertEquals(118, node1.getType());
}",0,
project,0,test274317,"public void test274317() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, true);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newVarNode(""]ApjrARq!.N*!V06reO"", node0);
    node1.setType(30);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test275318,"public void test275318() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSType[] jSTypeArray0 = new JSType[4];
    Node node0 = jSTypeRegistry0.createParameters(jSTypeArray0);
    node0.setType(94);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test276319,"public void test276319() throws Throwable {
    Node node0 = Node.newString((-1003), ""\"">$n-"", (-1003), (-1003));
    Node node1 = new Node(96, node0, node0, 84, 47);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test277320,"public void test277320() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""<"");
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    Node node1 = new Node(91, node0, node0, node0, node0);
    node0.setType(12);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test278321,"public void test278321() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got SWITCH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test279322,"public void test279322() throws Throwable {
    Node node0 = Node.newString(30, "".prototype"", 30, 30);
    Compiler compiler0 = new Compiler();
    node0.addChildrenToFront(node0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test280323,"public void test280323() throws Throwable {
    Node node0 = new Node((-761), (-761), (-761));
    // Undeclared exception!
    try {
        NodeUtil.callHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test281324,"public void test281324() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    Node node1 = new Node(37, node0, node0, 5, 34);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_NumbericResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test282325,"public void test282325() throws Throwable {
    Node node0 = new Node(41);
    // Undeclared exception!
    try {
        NodeUtil.newHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test283326,"public void test283326() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test284327,"public void test284327() throws Throwable {
    Node node0 = Node.newString((-1003), ""\"">$n-"", (-1003), (-1003));
    Node node1 = new Node(96, node0, node0, 84, 47);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test285328,"public void test285328() throws Throwable {
    Node node0 = new Node(37, 78, (-171));
    // Undeclared exception!
    try {
        NodeUtil.nodeTypeMayHaveSideEffects(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test286329,"public void test286329() throws Throwable {
    Node node0 = Node.newString(38, ""`=(kWsmx.ih>"", 38, 38);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",1,
project,0,test287330,"public void test287330() throws Throwable {
    Node node0 = new Node(49, 49, 49);
    BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream((OutputStream) null);
    MockPrintStream mockPrintStream0 = new MockPrintStream(bufferedOutputStream0);
    PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager(mockPrintStream0);
    Compiler compiler0 = new Compiler(printStreamErrorManager0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test288331,"public void test288331() throws Throwable {
    Node node0 = Node.newString(102, ""Shift amount out of bounds: {0}"", 102, 102);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test289332,"public void test289332() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test290333,"public void test290333() throws Throwable {
    Node node0 = Node.newString(30, "".prototype"", 30, 30);
    boolean boolean0 = NodeUtil.canBeSideEffected(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test291334,"public void test291334() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertEquals(24, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test291335,"public void test291335() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test291336,"public void test291336() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test291337,"public void test291337() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertEquals(30, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test291338,"public void test291338() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""./<"", 24, 30);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test292339,"public void test292339() throws Throwable {
    Node node0 = Node.newString(35, ""Xr$E"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test293340,"public void test293340() throws Throwable {
    Node node0 = Node.newString(37, ""(au"");
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertTrue(boolean0);
}",0,
project,0,test294341,"public void test294341() throws Throwable {
    Node node0 = Node.newString(1858, ""printNameReferenceGraph"", 11, 1858);
    node0.setType(105);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>(20);
    // Undeclared exception!
    try {
        NodeUtil.canBeSideEffected(node0, linkedHashSet0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test295342,"public void test295342() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertEquals(55, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test295343,"public void test295343() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test295344,"public void test295344() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_3Db2~s"", 55, 55);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    linkedHashSet0.add(""_3Db2~s"");
    boolean boolean0 = NodeUtil.canBeSideEffected(node0, linkedHashSet0);
    assertEquals(55, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test296345,"public void test296345() throws Throwable {
    Node node0 = new Node(125);
    Node node1 = new Node((-1845939769), node0, node0);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    boolean boolean0 = NodeUtil.canBeSideEffected(node1, linkedHashSet0);
    assertFalse(boolean0);
}",0,
project,0,test297346,"public void test297346() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test298347,"public void test298347() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for try (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test299348,"public void test299348() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test300349,"public void test300349() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test301350,"public void test301350() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test302351,"public void test302351() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test303352,"public void test303352() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test304353,"public void test304353() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test305354,"public void test305354() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test306355,"public void test306355() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test307356,"public void test307356() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test308357,"public void test308357() throws Throwable {
    int int0 = NodeUtil.precedence(19);
    assertEquals(10, int0);
}",0,
project,0,test309358,"public void test309358() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test310359,"public void test310359() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test311360,"public void test311360() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test312361,"public void test312361() throws Throwable {
    int int0 = NodeUtil.precedence(23);
    assertEquals(12, int0);
}",0,
project,0,test313362,"public void test313362() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test314363,"public void test314363() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test315364,"public void test315364() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test316365,"public void test316365() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test317366,"public void test317366() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test318367,"public void test318367() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test319368,"public void test319368() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test320369,"public void test320369() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test321370,"public void test321370() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test322371,"public void test322371() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test323372,"public void test323372() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setprop (type 34)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test324373,"public void test324373() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test325374,"public void test325374() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setelem (type 36)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test326375,"public void test326375() throws Throwable {
    int int0 = NodeUtil.precedence(37);
    assertEquals(15, int0);
}",0,
project,0,test327376,"public void test327376() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test328377,"public void test328377() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test329378,"public void test329378() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test330379,"public void test330379() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test331380,"public void test331380() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test332381,"public void test332381() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test333382,"public void test333382() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test334383,"public void test334383() throws Throwable {
    int int0 = NodeUtil.precedence(45);
    assertEquals(8, int0);
}",0,
project,0,test335384,"public void test335384() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test336385,"public void test336385() throws Throwable {
    int int0 = NodeUtil.precedence(47);
    assertEquals(15, int0);
}",0,
project,0,test337386,"public void test337386() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for bindname (type 48)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test338387,"public void test338387() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for throw (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test339388,"public void test339388() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=50> (type 50)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test340389,"public void test340389() throws Throwable {
    int int0 = NodeUtil.precedence(51);
    assertEquals(9, int0);
}",0,
project,0,test341390,"public void test341390() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test342391,"public void test342391() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=53> (type 53)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test343392,"public void test343392() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(55);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setvar (type 55)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test344393,"public void test344393() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=56> (type 56)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test345394,"public void test345394() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(57);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=57> (type 57)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test346395,"public void test346395() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=58> (type 58)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test347396,"public void test347396() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=59> (type 59)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test348397,"public void test348397() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(60);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=60> (type 60)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test349398,"public void test349398() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for thisfn (type 61)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test350399,"public void test350399() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=62> (type 62)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test351400,"public void test351400() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test352401,"public void test352401() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test353402,"public void test353402() throws Throwable {
    int int0 = NodeUtil.precedence(65);
    assertEquals(15, int0);
}",0,
project,0,test354403,"public void test354403() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=66> (type 66)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test355404,"public void test355404() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=67> (type 67)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test356405,"public void test356405() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=68> (type 68)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test357406,"public void test357406() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ref_special (type 69)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test358407,"public void test358407() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=70> (type 70)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test359408,"public void test359408() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=72> (type 72)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test360409,"public void test360409() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=73> (type 73)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test361410,"public void test361410() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=74> (type 74)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test362411,"public void test362411() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=75> (type 75)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test363412,"public void test363412() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(76);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=76> (type 76)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test364413,"public void test364413() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for semi (type 78)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test365414,"public void test365414() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lb (type 79)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366415,"public void test366415() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rb (type 80)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test367416,"public void test367416() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lc (type 81)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test368417,"public void test368417() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rc (type 82)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test369418,"public void test369418() throws Throwable {
    int int0 = NodeUtil.precedence(83);
    assertEquals(15, int0);
}",0,
project,0,test370419,"public void test370419() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rp (type 84)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371420,"public void test371420() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test372421,"public void test372421() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test373422,"public void test373422() throws Throwable {
    int int0 = NodeUtil.precedence(87);
    assertEquals(1, int0);
}",0,
project,0,test374423,"public void test374423() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test375424,"public void test375424() throws Throwable {
    int int0 = NodeUtil.precedence(89);
    assertEquals(1, int0);
}",0,
project,0,test376425,"public void test376425() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test377426,"public void test377426() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test378427,"public void test378427() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test379428,"public void test379428() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test380429,"public void test380429() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test381430,"public void test381430() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test382431,"public void test382431() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test383432,"public void test383432() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test384433,"public void test384433() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test385434,"public void test385434() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for colon (type 99)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test386435,"public void test386435() throws Throwable {
    int int0 = NodeUtil.precedence(100);
    assertEquals(3, int0);
}",0,
project,0,test387436,"public void test387436() throws Throwable {
    int int0 = NodeUtil.precedence(101);
    assertEquals(4, int0);
}",0,
project,0,test388437,"public void test388437() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test389438,"public void test389438() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test390439,"public void test390439() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for dot (type 104)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test391440,"public void test391440() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test392441,"public void test392441() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for export (type 106)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test393442,"public void test393442() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for import (type 107)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test394443,"public void test394443() throws Throwable {
    int int0 = NodeUtil.precedence(108);
    assertEquals(15, int0);
}",0,
project,0,test395444,"public void test395444() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for else (type 109)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test396445,"public void test396445() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for switch (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test397446,"public void test397446() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for case (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test398447,"public void test398447() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for default (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test399448,"public void test399448() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for while (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test400449,"public void test400449() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for do (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test401450,"public void test401450() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for for (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test402451,"public void test402451() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for break (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test403452,"public void test403452() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for continue (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test404453,"public void test404453() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for var (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test405454,"public void test405454() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for with (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test406455,"public void test406455() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for catch (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test407456,"public void test407456() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for finally (type 121)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test408457,"public void test408457() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test409458,"public void test409458() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for reserved (type 123)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test410459,"public void test410459() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test411460,"public void test411460() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(2);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for enterwith (type 2)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test412461,"public void test412461() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test412462,"public void test412462() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test412463,"public void test412463() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(82, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test412464,"public void test412464() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(1905, node0.getLineno());
}",0,
project,0,test413465,"public void test413465() throws Throwable {
    Node node0 = Node.newString(86, ""Expected NEW node, got "", 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test414466,"public void test414466() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test415467,"public void test415467() throws Throwable {
    Node node0 = new Node(101);
    // Undeclared exception!
    try {
        NodeUtil.mayBeStringHelper(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test416468,"public void test416468() throws Throwable {
    Node node0 = new Node(40, 40, 40);
    Node node1 = new Node(40, node0, node0, node0, 5, 20);
    node1.setType(100);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test417469,"public void test417469() throws Throwable {
    Node node0 = Node.newNumber(2266.3499624084);
    Node node1 = new Node(40, node0, node0, node0, 5, 20);
    node1.setType(100);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test418470,"public void test418470() throws Throwable {
    Node node0 = Node.newString(9, ""7lsI-p5P"");
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test419471,"public void test419471() throws Throwable {
    Node node0 = new Node(10);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test420472,"public void test420472() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test421473,"public void test421473() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(119, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test421474,"public void test421474() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(119, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test421475,"public void test421475() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test421476,"public void test421476() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""d_z#t:)("", 119, 119);
    Node node1 = new Node(18, node0, 26, 78);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test422477,"public void test422477() throws Throwable {
    Node node0 = new Node(110);
    Node node1 = new Node(20, node0, 17, 32);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test423478,"public void test423478() throws Throwable {
    Node node0 = Node.newString(22, "".prototype"", 22, 2364);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test424479,"public void test424479() throws Throwable {
    Node node0 = new Node(23);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test425480,"public void test425480() throws Throwable {
    Node node0 = Node.newString(24, "".prototype"", 24, (-22));
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    int int0 = NodeUtil.getCount(node0, nodeUtil_NumbericResultPredicate0, nodeUtil_NumbericResultPredicate0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test426481,"public void test426481() throws Throwable {
    Node node0 = Node.newString(""JSR"");
    Node node1 = new Node(25, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test427482,"public void test427482() throws Throwable {
    Node node0 = Node.newString(""o/RYYa}^W\""T;iVBo"");
    node0.setType(27);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test428483,"public void test428483() throws Throwable {
    Node node0 = new Node(28);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test429484,"public void test429484() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test430485,"public void test430485() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test432487,"public void test432487() throws Throwable {
    Node node0 = new Node(12);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test433488,"public void test433488() throws Throwable {
    Node node0 = Node.newString(13, ""mMxI/6~"", 44, 14);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test434489,"public void test434489() throws Throwable {
    Node node0 = Node.newString(14, ""`=(kWsmx.ih>"");
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test435490,"public void test435490() throws Throwable {
    Node node0 = Node.newString(""}"");
    Node node1 = new Node(15, node0, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test436491,"public void test436491() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test437492,"public void test437492() throws Throwable {
    Node node0 = Node.newString(17, "".prototype"", 17, (-22));
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test438493,"public void test438493() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Node node1 = new Node(18, node0, node0, 14, 11);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test439494,"public void test439494() throws Throwable {
    Node node0 = new Node(19);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test440495,"public void test440495() throws Throwable {
    Node node0 = Node.newString(21, ""mMxI/6~"", 21, 21);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test441496,"public void test441496() throws Throwable {
    Node node0 = Node.newString(22, "".prototype"", 22, (-22));
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test442497,"public void test442497() throws Throwable {
    Node node0 = Node.newString(24, ""Cg&Q)|$osE"", 6, 41);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test443498,"public void test443498() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    Node node1 = new Node(26, node0, 5, 18);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test444499,"public void test444499() throws Throwable {
    Node node0 = Node.newString(""o/RYYa}^W\""T;iVBo"");
    node0.setType(27);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test445500,"public void test445500() throws Throwable {
    Node node0 = Node.newString("""");
    node0.setType(28);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test446501,"public void test446501() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test447502,"public void test447502() throws Throwable {
    Node node0 = new Node(31);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test448503,"public void test448503() throws Throwable {
    Node node0 = Node.newString(32, ""`(kWsmx.ih>"");
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test449504,"public void test449504() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.CombinedCompilerPass"", (-2739), 3283);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test449505,"public void test449505() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.CombinedCompilerPass"", (-2739), 3283);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test449506,"public void test449506() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""com.google.javascript.jscomp.CombinedCompilerPass"", (-2739), 3283);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test450507,"public void test450507() throws Throwable {
    Node node0 = new Node(34);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test451508,"public void test451508() throws Throwable {
    Node node0 = new Node(35);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test452509,"public void test452509() throws Throwable {
    Node node0 = Node.newString(""MQj1T|O4U${BD"");
    node0.setType(36);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test453510,"public void test453510() throws Throwable {
    Node node0 = Node.newString(37, ""={9P>"", 2752, 37);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test454511,"public void test454511() throws Throwable {
    Node node0 = Node.newNumber((double) 3);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test455512,"public void test455512() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test456513,"public void test456513() throws Throwable {
    Node node0 = Node.newString(124, ""SETNAME"", 124, 124);
    node0.setType(42);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test457514,"public void test457514() throws Throwable {
    Node node0 = new Node(43);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test458515,"public void test458515() throws Throwable {
    Node node0 = Node.newString(44, ""n"");
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test459516,"public void test459516() throws Throwable {
    Node node0 = Node.newString(45, ""||"");
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test460517,"public void test460517() throws Throwable {
    Node node0 = Node.newString((-5), ""`(kWsmx.ih>"", (-5), (-5));
    node0.setType(46);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, 1, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test461518,"public void test461518() throws Throwable {
    Node node0 = new Node(47, (-4203), 122);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test462519,"public void test462519() throws Throwable {
    Node node0 = new Node(48);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test463520,"public void test463520() throws Throwable {
    Node node0 = Node.newString(""arg:ments"");
    Node node1 = new Node(49, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test464521,"public void test464521() throws Throwable {
    Node node0 = Node.newString(50, "".prhototype"", 50, (-1));
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test465522,"public void test465522() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test466523,"public void test466523() throws Throwable {
    Node node0 = Node.newString(116, "".protoype"", 116, 116);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test467524,"public void test467524() throws Throwable {
    Node node0 = new Node(4117);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test468525,"public void test468525() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test469526,"public void test469526() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(0);
    assertFalse(boolean0);
}",0,
project,0,test470527,"public void test470527() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test471528,"public void test471528() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test472529,"public void test472529() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test473530,"public void test473530() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test474531,"public void test474531() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test475532,"public void test475532() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test476533,"public void test476533() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(99);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test477534,"public void test477534() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test478535,"public void test478535() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test479536,"public void test479536() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test480537,"public void test480537() throws Throwable {
    Node node0 = Node.newString(87, ""*BXZ$_P~B"", 87, 103);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(9, int0);
}",0,"assertEquals(1, int0)"
project,0,test481538,"public void test481538() throws Throwable {
    Node node0 = Node.newString(92, ""r"", 129, (-1768));
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(20, int0);
}",0,"assertEquals(1, int0)"
project,0,test482539,"public void test482539() throws Throwable {
    Node node0 = new Node(88);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(10, int0);
}",0,"assertEquals(1, int0)"
project,0,test483540,"public void test483540() throws Throwable {
    Node node0 = Node.newString(91, "">>="", 91, 91);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(19, int0);
}",0,"assertEquals(1, int0)"
project,0,test484541,"public void test484541() throws Throwable {
    Node node0 = Node.newString(95, ""ZE1($cb"", 95, 95);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(23, int0);
}",0,"assertEquals(1, int0)"
project,0,test485542,"public void test485542() throws Throwable {
    Node node0 = new Node(96);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(24, int0);
}",0,"assertEquals(1, int0)"
project,0,test486543,"public void test486543() throws Throwable {
    Node node0 = Node.newString(97, ""tr m uX)a"", 81, 81);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(25, int0);
}",0,"assertEquals(1, int0)"
project,0,test487544,"public void test487544() throws Throwable {
    Node node0 = new Node(33, 114, 114);
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assiment op
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test488545,"public void test488545() throws Throwable {
    Node node0 = new Node(96);
    boolean boolean0 = NodeUtil.isExpressionNode(node0);
    assertFalse(boolean0);
}",0,
project,0,test489546,"public void test489546() throws Throwable {
    Node node0 = Node.newNumber(3325.28302, 79, 79);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test490547,"public void test490547() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.protobuf.DescriptorProtos$EnumOptions$Builder"", (-798), (-798));
    boolean boolean0 = NodeUtil.isGet(node0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test490548,"public void test490548() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.protobuf.DescriptorProtos$EnumOptions$Builder"", (-798), (-798));
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test491549,"public void test491549() throws Throwable {
    Node node0 = Node.newString(35, ""`=(kWsmx.ih>"", 35, 35);
    boolean boolean0 = NodeUtil.isGet(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test492550,"public void test492550() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", 49, 49);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(49, node0.getCharno());
}",0,
project,0,test492551,"public void test492551() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", 49, 49);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNotNull(node1);
}",0,
project,0,test492552,"public void test492552() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", 49, 49);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(49, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
project,0,test492553,"public void test492553() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", 49, 49);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(49, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test492554,"public void test492554() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, "".prototype"", 49, 49);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertTrue(node1.isUnscopedQualifiedName());
}",0,
project,0,test493555,"public void test493555() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""arguments"", 126, 126);
    Node node1 = new Node(10, node0, 15, 49);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test493556,"public void test493556() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""arguments"", 126, 126);
    Node node1 = new Node(10, node0, 15, 49);
    NodeUtil.getAssignedValue(node0);
    assertEquals(126, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test493557,"public void test493557() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""arguments"", 126, 126);
    Node node1 = new Node(10, node0, 15, 49);
    NodeUtil.getAssignedValue(node0);
    assertEquals(126, node0.getLineno());
}",0,
project,0,test494558,"public void test494558() throws Throwable {
    Node node0 = Node.newString(107, ""-infinity"");
    Node node1 = NodeUtil.newVarNode(""-infinity"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test494559,"public void test494559() throws Throwable {
    Node node0 = Node.newString(107, ""-infinity"");
    Node node1 = NodeUtil.newVarNode(""-infinity"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertFalse(node0.hasOneChild());
}",0,
project,0,test495560,"public void test495560() throws Throwable {
    Node node0 = new Node(125);
    boolean boolean0 = NodeUtil.isString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test496561,"public void test496561() throws Throwable {
    Node node0 = Node.newString(""LuLFEhR6BsM\""?Xp_["", 120, 120);
    boolean boolean0 = NodeUtil.isString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test497562,"public void test497562() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 3, 1861);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test498563,"public void test498563() throws Throwable {
    Node node0 = Node.newString(""GbXvf]Ri"");
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node1);
    assertEquals(130, node1.getType());
}",0,
project,0,test498564,"public void test498564() throws Throwable {
    Node node0 = Node.newString(""GbXvf]Ri"");
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test499565,"public void test499565() throws Throwable {
    Node node0 = Node.newNumber(Double.NaN);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test500566,"public void test500566() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertEquals(130, node1.getType());
}",0,
project,0,test500567,"public void test500567() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExprCall(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test501568,"public void test501568() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test502569,"public void test502569() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isForIn(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test503570,"public void test503570() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    node0.setType(113);
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test504571,"public void test504571() throws Throwable {
    Node node0 = Node.newString(9, "" does not have a condition."", 2421, 2421);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test505572,"public void test505572() throws Throwable {
    Node node0 = Node.newString(114, ""arguments"", 114, 114);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test506573,"public void test506573() throws Throwable {
    Node node0 = Node.newString(""&"");
    Node node1 = new Node(35, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test507574,"public void test507574() throws Throwable {
    Node node0 = new Node(77);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test508575,"public void test508575() throws Throwable {
    Node node0 = new Node(101);
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test509576,"public void test509576() throws Throwable {
    Node node0 = new Node(108);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test510577,"public void test510577() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test511578,"public void test511578() throws Throwable {
    Node node0 = Node.newString(""4g8V*pqCRo#lVA2L"");
    Node node1 = new Node(112, node0);
    boolean boolean0 = NodeUtil.isControlStructure(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test512579,"public void test512579() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test513580,"public void test513580() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    node0.setType(114);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test514581,"public void test514581() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test515582,"public void test515582() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test516583,"public void test516583() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test517584,"public void test517584() throws Throwable {
    Node node0 = new Node(126, 126, 126);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test518585,"public void test518585() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test519586,"public void test519586() throws Throwable {
    Node node0 = new Node(110);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test520587,"public void test520587() throws Throwable {
    Node node0 = new Node(111, 111, 111);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test521588,"public void test521588() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test522589,"public void test522589() throws Throwable {
    Node node0 = new Node(114, 114, 114);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test523590,"public void test523590() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test524591,"public void test524591() throws Throwable {
    Node node0 = new Node(119, 1715, 1715);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test525592,"public void test525592() throws Throwable {
    Node node0 = new Node(120, 120, 120);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test526593,"public void test526593() throws Throwable {
    Node node0 = Node.newString(126, ""s->k"", 126, 126);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test527594,"public void test527594() throws Throwable {
    Node node0 = new Node(108);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test528595,"public void test528595() throws Throwable {
    Node node0 = new Node(113);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,
project,0,test529596,"public void test529596() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // SWITCH 110 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test530597,"public void test530597() throws Throwable {
    Node node0 = new Node(111);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,
project,0,test531598,"public void test531598() throws Throwable {
    Node node0 = Node.newString(112, ""Infinity"", 1304, 2638);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // DEFAULT Infinity 1304 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test532599,"public void test532599() throws Throwable {
    Node node0 = new Node(114);
    PeepholeRemoveDeadCode peepholeRemoveDeadCode0 = new PeepholeRemoveDeadCode();
    // Undeclared exception!
    try {
        peepholeRemoveDeadCode0.tryFoldDo(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test533600,"public void test533600() throws Throwable {
    Node node0 = new Node(92);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // ASSIGN_URSH does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test534601,"public void test534601() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""SrRQ#WK,l"", ""SrRQ#WK,l"");
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test535602,"public void test535602() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""AoY6}G/.6agZAuepOd"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    SyntheticAst syntheticAst0 = new SyntheticAst(""AoY6}G/.6agZAuepOd"");
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    Node node1 = new Node(126, node0, node0, node0, node0, 676, 9);
    boolean boolean0 = NodeUtil.isStatementParent(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test536603,"public void test536603() throws Throwable {
    SyntheticAst syntheticAst0 = new SyntheticAst(""|"");
    Compiler compiler0 = new Compiler();
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test537604,"public void test537604() throws Throwable {
    Node node0 = new Node(111);
    NodeUtil.newVarNode(""E fy|<WA"", node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test538605,"public void test538605() throws Throwable {
    Node node0 = Node.newString(""4g8V*pqCRo#lVA2L"");
    Node node1 = new Node(112, node0);
    boolean boolean0 = NodeUtil.isSwitchCase(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test539606,"public void test539606() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(41, nodeArray0);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test540607,"public void test540607() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(37, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test540608,"public void test540608() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test540609,"public void test540609() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals(37, node0.getCharno());
}",0,
project,0,test541610,"public void test541610() throws Throwable {
    boolean boolean0 = NodeUtil.isLabelName((Node) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test542611,"public void test542611() throws Throwable {
    Node node0 = Node.newString(61, ""typeof"", 61, 61);
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test543612,"public void test543612() throws Throwable {
    Node node0 = new Node(120, 120, 120);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test544613,"public void test544613() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""(au"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "">]Nb"", ""JSC_EXPORTED_FUNCTION_UNKNOWN_PARAMETER TYPE"");
    Node node1 = new Node(37, node0, 19, 2);
    NodeUtil.removeChild(node1, node0);
    assertEquals(1, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test544614,"public void test544614() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""(au"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "">]Nb"", ""JSC_EXPORTED_FUNCTION_UNKNOWN_PARAMETER TYPE"");
    Node node1 = new Node(37, node0, 19, 2);
    NodeUtil.removeChild(node1, node0);
    assertTrue(node1.hasChildren());
}",0,
project,0,test545615,"public void test545615() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""cW$"", ""cW$"");
    NodeUtil.newVarNode(""Cq!(l$VY\u0001{"", node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // node is not a child
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test546616,"public void test546616() throws Throwable {
    Node node0 = new Node(154, 154, 154);
    Node node1 = NodeUtil.newVarNode(""com.google.javascript.jscomp.AmbiguateProperties$ProcessProperties"", node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node1, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // node is not a child
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test547617,"public void test547617() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    Node node1 = new Node(37, node0, node0, 5, 34);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: TRY 77 of TRY 77
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test548618,"public void test548618() throws Throwable {
    Node node0 = new Node(126);
    NodeUtil.newVarNode("", totalGets="", node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: LABEL of LABEL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test549619,"public void test549619() throws Throwable {
    Node node0 = Node.newString(""~"");
    // Undeclared exception!
    try {
        NodeUtil.maybeAddFinally(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test550620,"public void test550620() throws Throwable {
    Node node0 = new Node(116, 116, 116);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test551621,"public void test551621() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""$F/)3x.Q&HRB.Pj\"""");
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test552622,"public void test552622() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test553623,"public void test553623() throws Throwable {
    Node node0 = Node.newString(30, "".prototype"", 30, (-22));
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test554624,"public void test554624() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 3, 1861);
    node0.setType(105);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(4, Node.DESCENDANTS_FLAG);
}",0,
project,0,test555625,"public void test555625() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    boolean boolean0 = NodeUtil.isThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test556626,"public void test556626() throws Throwable {
    Node node0 = Node.newString("".prototype"");
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test557627,"public void test557627() throws Throwable {
    Node node0 = Node.newString(63, ""-Sh"");
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test558628,"public void test558628() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(41, nodeArray0);
    boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test559629,"public void test559629() throws Throwable {
    Node node0 = new Node(101);
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test560630,"public void test560630() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""(au"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "">]Nb"", "">]Nb"");
    Node node1 = new Node(37, node0, 19, 2);
    boolean boolean0 = NodeUtil.isObjectCallMethod(node1, "">]Nb"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test561631,"public void test561631() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Undefined"", (-570), (-570));
    boolean boolean0 = NodeUtil.isFunctionObjectCallOrApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test562632,"public void test562632() throws Throwable {
    Node node0 = Node.newString(86, ""Expected NEW node, got "", 86, 86);
    boolean boolean0 = NodeUtil.isLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test563633,"public void test563633() throws Throwable {
    Node node0 = Node.newString(110, ""-infinity"");
    Node node1 = NodeUtil.newVarNode(""-infinity"", node0);
    boolean boolean0 = NodeUtil.isLhs(node1, node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test563634,"public void test563634() throws Throwable {
    Node node0 = Node.newString(110, ""-infinity"");
    Node node1 = NodeUtil.newVarNode(""-infinity"", node0);
    boolean boolean0 = NodeUtil.isLhs(node1, node1);
    assertFalse(node0.hasChildren());
}",0,
project,0,test564635,"public void test564635() throws Throwable {
    Node node0 = Node.newNumber(Double.NaN);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test565636,"public void test565636() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""cW.$"", ""cW.$"");
    assertEquals(46, Node.IS_DISPATCHER);
}",0,
project,0,test566637,"public void test566637() throws Throwable {
    Node node0 = Node.newString(147, "".prototype"");
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    boolean boolean0 = NodeUtil.isConstantByConvention(closureCodingConvention0, node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test567638,"public void test567638() throws Throwable {
    Node node0 = Node.newString(148, ""vL.rxg5N"");
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""vL.rxg5N"", string0);
}",0,
project,0,test568639,"public void test568639() throws Throwable {
    Node node0 = Node.newString(""yIqGgn+u-yP{)=6vt(:"");
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""yIqGgn+u-yP{)=6vt(:"", string0);
}",0,
project,0,test569640,"public void test569640() throws Throwable {
    Node node0 = Node.newString(147, ""vL.rxg5N"");
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""vL.rxg5N"", string0);
}",0,
project,0,test570641,"public void test570641() throws Throwable {
    Node node0 = new Node((-3931), (-3931), (-3931));
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // -3931
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",0,
project,0,test571642,"public void test571642() throws Throwable {
    Node node0 = Node.newString(""aJZF8Enuf"");
    JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, (JSType) null);
    assertNull(jSType0);
}",0,assertNotNull(jSType0)
project,0,test572643,"public void test572643() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSTypeNative jSTypeNative0 = JSTypeNative.FUNCTION_PROTOTYPE;
    JSType jSType0 = jSTypeRegistry0.getNativeType(jSTypeNative0);
    JSType jSType1 = jSTypeRegistry0.createNullableType(jSType0);
    JSType jSType2 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, jSType1);
    assertFalse(jSType2.isOrdinaryFunction());
}",0,
project,0,test573644,"public void test573644() throws Throwable {
    Node node0 = Node.newString(147, ""vL.rxg5N"");
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test574645,"public void test574645() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test575646,"public void test575646() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(9);
    assertEquals(""|"", string0);
}",1,
project,0,test576647,"public void test576647() throws Throwable {
    String string0 = NodeUtil.opToStr(33);
    assertNull(string0);
}",0,
project,0,test577648,"public void test577648() throws Throwable {
    String string0 = NodeUtil.opToStr(10);
    assertEquals(""^"", string0);
}",0,
project,0,test578649,"public void test578649() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(11);
    assertEquals(""&"", string0);
}",1,
project,0,test579650,"public void test579650() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertEquals(""=="", string0);
}",0,
project,0,test580651,"public void test580651() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(13);
    assertEquals(""!="", string0);
}",1,
project,0,test581652,"public void test581652() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(14);
    assertEquals(""<"", string0);
}",1,
project,0,test582653,"public void test582653() throws Throwable {
    String string0 = NodeUtil.opToStr(15);
    assertEquals(""<="", string0);
}",0,
project,0,test583654,"public void test583654() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(16);
    assertEquals("">"", string0);
}",1,
project,0,test584655,"public void test584655() throws Throwable {
    String string0 = NodeUtil.opToStr(17);
    assertEquals("">="", string0);
}",0,
project,0,test585656,"public void test585656() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(18);
    assertEquals(""<<"", string0);
}",1,
project,0,test586657,"public void test586657() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(19);
    assertEquals("">>"", string0);
}",1,
project,0,test587658,"public void test587658() throws Throwable {
    String string0 = NodeUtil.opToStr(20);
    assertEquals("">>>"", string0);
}",0,
project,0,test588659,"public void test588659() throws Throwable {
    String string0 = NodeUtil.opToStr(21);
    assertEquals(""+"", string0);
}",0,
project,0,test589660,"public void test589660() throws Throwable {
    String string0 = NodeUtil.opToStr(22);
    assertEquals(""-"", string0);
}",0,
project,0,test590661,"public void test590661() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(23);
    assertEquals(""*"", string0);
}",1,
project,0,test591662,"public void test591662() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(24);
    assertEquals(""/"", string0);
}",1,
project,0,test592663,"public void test592663() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(25);
    assertEquals(""%"", string0);
}",1,
project,0,test593664,"public void test593664() throws Throwable {
    String string0 = NodeUtil.opToStr(26);
    assertEquals(""!"", string0);
}",0,
project,0,test594665,"public void test594665() throws Throwable {
    String string0 = NodeUtil.opToStr(27);
    assertEquals(""~"", string0);
}",0,
project,0,test595666,"public void test595666() throws Throwable {
    String string0 = NodeUtil.opToStr(28);
    assertEquals(""+"", string0);
}",0,
project,0,test596667,"public void test596667() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(29);
    assertEquals(""-"", string0);
}",1,
project,0,test597668,"public void test597668() throws Throwable {
    String string0 = NodeUtil.opToStr(30);
    assertNull(string0);
}",0,
project,0,test598669,"public void test598669() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(31);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 31: DELPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test599670,"public void test599670() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(32);
    assertEquals(""typeof"", string0);
}",1,
project,0,test600671,"public void test600671() throws Throwable {
    String string0 = NodeUtil.opToStr(34);
    assertNull(string0);
}",0,
project,0,test601672,"public void test601672() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(35);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 35: GETELEM
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test602673,"public void test602673() throws Throwable {
    String string0 = NodeUtil.opToStr(36);
    assertNull(string0);
}",0,
project,0,test603674,"public void test603674() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(37);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 37: CALL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test604675,"public void test604675() throws Throwable {
    String string0 = NodeUtil.opToStr(38);
    assertNull(string0);
}",0,
project,0,test605676,"public void test605676() throws Throwable {
    String string0 = NodeUtil.opToStr(39);
    assertNull(string0);
}",0,
project,0,test606677,"public void test606677() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(40);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 40: STRING
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test607678,"public void test607678() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(41);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 41: NULL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test608679,"public void test608679() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(42);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 42: THIS
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test609680,"public void test609680() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(43);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 43: FALSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test610681,"public void test610681() throws Throwable {
    String string0 = NodeUtil.opToStr(44);
    assertNull(string0);
}",0,
project,0,test611682,"public void test611682() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(45);
    assertEquals(""==="", string0);
}",1,
project,0,test612683,"public void test612683() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(46);
    assertEquals(""!=="", string0);
}",1,
project,0,test613684,"public void test613684() throws Throwable {
    String string0 = NodeUtil.opToStr(47);
    assertNull(string0);
}",0,
project,0,test614685,"public void test614685() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 48: BINDNAME
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test615686,"public void test615686() throws Throwable {
    String string0 = NodeUtil.opToStr(49);
    assertNull(string0);
}",0,
project,0,test616687,"public void test616687() throws Throwable {
    String string0 = NodeUtil.opToStr(50);
    assertNull(string0);
}",0,
project,0,test617688,"public void test617688() throws Throwable {
    String string0 = NodeUtil.opToStr(51);
    assertEquals(""in"", string0);
}",0,
project,0,test618689,"public void test618689() throws Throwable {
    String string0 = NodeUtil.opToStr(52);
    assertEquals(""instanceof"", string0);
}",0,
project,0,test619690,"public void test619690() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(53);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 53: LOCAL_LOAD
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test620691,"public void test620691() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(55);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 55: SETVAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test621692,"public void test621692() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 56: CATCH_SCOPE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test622693,"public void test622693() throws Throwable {
    String string0 = NodeUtil.opToStr(58);
    assertNull(string0);
}",0,
project,0,test623694,"public void test623694() throws Throwable {
    String string0 = NodeUtil.opToStr(59);
    assertNull(string0);
}",0,
project,0,test624695,"public void test624695() throws Throwable {
    String string0 = NodeUtil.opToStr(60);
    assertNull(string0);
}",0,
project,0,test625696,"public void test625696() throws Throwable {
    String string0 = NodeUtil.opToStr(61);
    assertNull(string0);
}",0,
project,0,test626697,"public void test626697() throws Throwable {
    String string0 = NodeUtil.opToStr(62);
    assertNull(string0);
}",0,
project,0,test627698,"public void test627698() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(63);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 63: ARRAYLIT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test628699,"public void test628699() throws Throwable {
    String string0 = NodeUtil.opToStr(64);
    assertNull(string0);
}",0,
project,0,test629700,"public void test629700() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(65);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 65: GET_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test630701,"public void test630701() throws Throwable {
    String string0 = NodeUtil.opToStr(66);
    assertNull(string0);
}",0,
project,0,test631702,"public void test631702() throws Throwable {
    String string0 = NodeUtil.opToStr(67);
    assertNull(string0);
}",0,
project,0,test632703,"public void test632703() throws Throwable {
    String string0 = NodeUtil.opToStr(68);
    assertNull(string0);
}",0,
project,0,test633704,"public void test633704() throws Throwable {
    String string0 = NodeUtil.opToStr(69);
    assertNull(string0);
}",0,
project,0,test634705,"public void test634705() throws Throwable {
    String string0 = NodeUtil.opToStr(70);
    assertNull(string0);
}",0,
project,0,test635706,"public void test635706() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(71);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 71: ESCXMLATTR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test636707,"public void test636707() throws Throwable {
    String string0 = NodeUtil.opToStr(72);
    assertNull(string0);
}",0,
project,0,test637708,"public void test637708() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 73: REF_MEMBER
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test638709,"public void test638709() throws Throwable {
    String string0 = NodeUtil.opToStr(74);
    assertNull(string0);
}",0,
project,0,test639710,"public void test639710() throws Throwable {
    String string0 = NodeUtil.opToStr(75);
    assertNull(string0);
}",0,
project,0,test640711,"public void test640711() throws Throwable {
    String string0 = NodeUtil.opToStr(76);
    assertNull(string0);
}",0,
project,0,test641712,"public void test641712() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 77: TRY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test642713,"public void test642713() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 78: SEMI
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test643714,"public void test643714() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 79: LB
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test644715,"public void test644715() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 80: RB
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test645716,"public void test645716() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 81: LC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test646717,"public void test646717() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 82: RC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test647718,"public void test647718() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 83: LP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test648719,"public void test648719() throws Throwable {
    String string0 = NodeUtil.opToStr(84);
    assertNull(string0);
}",0,
project,0,test649720,"public void test649720() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(85);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 85: COMMA
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test650721,"public void test650721() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(86);
    assertEquals(""="", string0);
}",1,
project,0,test651722,"public void test651722() throws Throwable {
    String string0 = NodeUtil.opToStr(87);
    assertEquals(""|="", string0);
}",0,
project,0,test652723,"public void test652723() throws Throwable {
    String string0 = NodeUtil.opToStr(88);
    assertEquals(""^="", string0);
}",0,
project,0,test653724,"public void test653724() throws Throwable {
    String string0 = NodeUtil.opToStr(89);
    assertEquals(""&="", string0);
}",0,
project,0,test654725,"public void test654725() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(90);
    assertEquals(""<<="", string0);
}",1,
project,0,test655726,"public void test655726() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test656727,"public void test656727() throws Throwable {
    String string0 = NodeUtil.opToStr(92);
    assertEquals("">>>="", string0);
}",0,
project,0,test657728,"public void test657728() throws Throwable {
    String string0 = NodeUtil.opToStr(93);
    assertEquals(""+="", string0);
}",0,
project,0,test658729,"public void test658729() throws Throwable {
    String string0 = NodeUtil.opToStr(94);
    assertEquals(""-="", string0);
}",0,
project,0,test659730,"public void test659730() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(95);
    assertEquals(""*="", string0);
}",1,
project,0,test660731,"public void test660731() throws Throwable {
    String string0 = NodeUtil.opToStr(96);
    assertEquals(""/="", string0);
}",0,
project,0,test661732,"public void test661732() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(97);
    assertEquals(""%="", string0);
}",1,
project,0,test662733,"public void test662733() throws Throwable {
    String string0 = NodeUtil.opToStr(98);
    assertNull(string0);
}",0,
project,0,test663734,"public void test663734() throws Throwable {
    String string0 = NodeUtil.opToStr(99);
    assertNull(string0);
}",0,
project,0,test664735,"public void test664735() throws Throwable {
    String string0 = NodeUtil.opToStr(100);
    assertEquals(""||"", string0);
}",0,
project,0,test665736,"public void test665736() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(101);
    assertEquals(""&&"", string0);
}",1,
project,0,test666737,"public void test666737() throws Throwable {
    String string0 = NodeUtil.opToStr(102);
    assertNull(string0);
}",0,
project,0,test667738,"public void test667738() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(103);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 103: DEC
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test668739,"public void test668739() throws Throwable {
    String string0 = NodeUtil.opToStr(104);
    assertNull(string0);
}",0,
project,0,test669740,"public void test669740() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(105);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 105: FUNCTION
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test670741,"public void test670741() throws Throwable {
    String string0 = NodeUtil.opToStr(106);
    assertNull(string0);
}",0,
project,0,test671742,"public void test671742() throws Throwable {
    String string0 = NodeUtil.opToStr(107);
    assertNull(string0);
}",0,
project,0,test672743,"public void test672743() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 108: IF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test673744,"public void test673744() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 109: ELSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test674745,"public void test674745() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 110: SWITCH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test675746,"public void test675746() throws Throwable {
    String string0 = NodeUtil.opToStr(111);
    assertNull(string0);
}",0,
project,0,test676747,"public void test676747() throws Throwable {
    String string0 = NodeUtil.opToStr(112);
    assertNull(string0);
}",0,
project,0,test677748,"public void test677748() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 113: WHILE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test678749,"public void test678749() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 114: DO
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test679750,"public void test679750() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 115: FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test680751,"public void test680751() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 116: BREAK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test681752,"public void test681752() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 117: CONTINUE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test682753,"public void test682753() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 118: VAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test683754,"public void test683754() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 119: WITH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test684755,"public void test684755() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 120: CATCH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test685756,"public void test685756() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 121: FINALLY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test686757,"public void test686757() throws Throwable {
    String string0 = NodeUtil.opToStr(122);
    assertEquals(""void"", string0);
}",0,
project,0,test687758,"public void test687758() throws Throwable {
    String string0 = NodeUtil.opToStr(186);
    assertNull(string0);
}",0,
project,0,test688759,"public void test688759() throws Throwable {
    Node node0 = new Node(50);
    Node node1 = NodeUtil.newVarNode(""9"", node0);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test689760,"public void test689760() throws Throwable {
    Node node0 = Node.newString(""mtFtx8\""S1!s2]cJ,ME"");
    NodeUtil.copyNameAnnotations(node0, node0);
    assertEquals(4095, Node.COLUMN_MASK);
}",0,
project,0,test690761,"public void test690761() throws Throwable {
    Node node0 = Node.newString(123, ""cL]"", 1837, 1837);
    node0.putIntProp(42, 116);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertEquals(0, node0.getSideEffectFlags());
}",0,"assertEquals(0, node0.getSideEffectFlags())"
project,0,test691762,"public void test691762() throws Throwable {
    Node node0 = Node.newString(117, ""-"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node1 = NodeUtil.newFunctionNode(""LZg&dA'e J_@J"", linkedList0, node0, 0, 47);
    assertEquals(0, node1.getLineno());
}",0,
project,0,test691763,"public void test691763() throws Throwable {
    Node node0 = Node.newString(117, ""-"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node1 = NodeUtil.newFunctionNode(""LZg&dA'e J_@J"", linkedList0, node0, 0, 47);
    assertEquals(47, node1.getCharno());
}",0,"assertEquals(0, node1.getCharno())"
project,0,test691764,"public void test691764() throws Throwable {
    Node node0 = Node.newString(117, ""-"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node1 = NodeUtil.newFunctionNode(""LZg&dA'e J_@J"", linkedList0, node0, 0, 47);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test691765,"public void test691765() throws Throwable {
    Node node0 = Node.newString(117, ""-"");
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    Node node1 = NodeUtil.newFunctionNode(""LZg&dA'e J_@J"", linkedList0, node0, 0, 47);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test692766,"public void test692766() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""arguments"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    LinkedList<Node> linkedList0 = new LinkedList<Node>();
    linkedList0.add((Node) null);
    Node node0 = compiler0.parseTestCode(""arguments"");
    // Undeclared exception!
    try {
        NodeUtil.newFunctionNode(""iwnfinity"", linkedList0, node0, 48, 15);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test693767,"public void test693767() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 113, 113);
    assertEquals(113, node0.getCharno());
}",1,
project,0,test693768,"public void test693768() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 113, 113);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test693769,"public void test693769() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 113, 113);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test693770,"public void test693770() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 113, 113);
    assertEquals(113, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test694771,"public void test694771() throws Throwable {
    Node node0 = Node.newString(""4g8V*pqCRo#lVA2L"");
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test695772,"public void test695772() throws Throwable {
    Node node0 = Node.newString(""4g8V*pqCRo#lVA2L"");
    node0.setType(42);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(10, Node.VARS_PROP);
}",0,
project,0,test696773,"public void test696773() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.mozilla.rhino.ScriptableObject$Slot"", (-1300), (-1300));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test696774,"public void test696774() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.mozilla.rhino.ScriptableObject$Slot"", (-1300), (-1300));
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertFalse(node1.hasChildren());
}",0,
project,0,test697775,"public void test697775() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""RANGE_ERROR_FUNCTION_TYPE"", node0);
    assertEquals(0, node1.getSideEffectFlags());
}",0,"assertEquals(0, node1.getSideEffectFlags())"
project,0,test697776,"public void test697776() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newName(googleCodingConvention0, ""RANGE_ERROR_FUNCTION_TYPE"", node0);
    assertEquals(38, node1.getType());
}",0,
project,0,test698777,"public void test698777() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""`=(kWsmx.ih>"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test699778,"public void test699778() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""search"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test700779,"public void test700779() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""false"");
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test701780,"public void test701780() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.redeclareVarsInsideBranch(node1);
    assertEquals(1905, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test701781,"public void test701781() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.redeclareVarsInsideBranch(node1);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test701782,"public void test701782() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.redeclareVarsInsideBranch(node1);
    assertEquals(82, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test702783,"public void test702783() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test702784,"public void test702784() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertEquals(37, node0.getCharno());
}",1,
project,0,test702785,"public void test702785() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""_f73jDb2~s"", 37, 37);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertEquals(37, node0.getLineno());
}",1,
project,0,test703786,"public void test703786() throws Throwable {
    Node node0 = Node.newString(95, ""Kz+$"", 136, 136);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test704787,"public void test704787() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$52"", 119, 21);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNull(node1);
}",0,
project,0,test704788,"public void test704788() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$52"", 119, 21);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(119, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test704789,"public void test704789() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$52"", 119, 21);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test704790,"public void test704790() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$52"", 119, 21);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(21, node0.getCharno());
}",1,
project,0,test704791,"public void test704791() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.DefaultPassConfig$52"", 119, 21);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test705792,"public void test705792() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertEquals(122, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test705793,"public void test705793() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertNotNull(node0);
}",0,
project,0,test706794,"public void test706794() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Undefined"", (-570), (-570));
    boolean boolean0 = NodeUtil.isNameReferenced(node0, "": "");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test707795,"public void test707795() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newVarNode("""", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, """");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test707796,"public void test707796() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newVarNode("""", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, """");
    assertFalse(node0.hasOneChild());
}",0,assertFalse(node0.hasOneChild())
project,0,test707797,"public void test707797() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0, false);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParameters((List<JSType>) stack0);
    Node node1 = NodeUtil.newVarNode("""", node0);
    boolean boolean0 = NodeUtil.isNameReferenced(node1, """");
    assertEquals(118, node1.getType());
}",0,
project,0,test708798,"public void test708798() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""q"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, "">]Nb"", "">]Nb"");
    Node node1 = new Node(37, node0, 19, 2);
    boolean boolean0 = NodeUtil.containsCall(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test710801,"public void test710801() throws Throwable {
    Node node0 = new Node(2375);
    Node node1 = NodeUtil.newVarNode(""[object Object]"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = nodeUtil_MatchDeclaration0.apply(node1);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test711802,"public void test711802() throws Throwable {
    Node[] nodeArray0 = new Node[0];
    Node node0 = new Node(41, nodeArray0);
    node0.addChildAfter(node0, node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.valueCheck(node0, nodeUtil_MatchShallowStatement0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test712803,"public void test712803() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 21, 21);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertEquals(21, node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test712804,"public void test712804() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 21, 21);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertEquals(21, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test712805,"public void test712805() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 21, 21);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test712806,"public void test712806() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""$F/)3x.Q&HRB.Pj\"""", 21, 21);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test713807,"public void test713807() throws Throwable {
    Node node0 = new Node(63);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    Node node1 = new Node(1, node0, node0, node0, node0);
    int int0 = NodeUtil.getNodeTypeReferenceCount(node1, 99, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test714808,"public void test714808() throws Throwable {
    Node node0 = Node.newString(19, ""=-FOs3%y"");
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test715809,"public void test715809() throws Throwable {
    Node node0 = Node.newString(110, ""\""WY4)j5430RgaVE"");
    Node node1 = new Node(35, node0, 38, 40);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node1, (NodeUtil.Visitor) null, predicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test716810,"public void test716810() throws Throwable {
    Node node0 = Node.newString(124, ""+infinity"", 255, 46);
    // Undeclared exception!
    try {
        NodeUtil.hasFinally(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test717811,"public void test717811() throws Throwable {
    Node node0 = new Node(77);
    boolean boolean0 = NodeUtil.hasFinally(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test718812,"public void test718812() throws Throwable {
    Node node0 = new Node(19);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test719813,"public void test719813() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test720814,"public void test720814() throws Throwable {
    Node node0 = new Node(69, 69, 69);
    // Undeclared exception!
    try {
        NodeUtil.hasCatchHandler(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test721815,"public void test721815() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""o/RYYv}^W\""T;iVBo"");
    boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    assertFalse(boolean0);
}",0,
project,0,test722816,"public void test722816() throws Throwable {
    Node node0 = Node.newString(9, ""7lsI-p5P"");
    // Undeclared exception!
    try {
        NodeUtil.getFnParameters(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test723817,"public void test723817() throws Throwable {
    Node node0 = Node.newString(0, "".prototype"", 0, 1858);
    node0.setType(105);
    // Undeclared exception!
    try {
        NodeUtil.getFnParameters(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test724818,"public void test724818() throws Throwable {
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode((Node) null);
    assertNull(jSDocInfo0);
}",0,
project,0,test725819,"public void test725819() throws Throwable {
    Node node0 = new Node(154, 154, 154);
    JSDocInfo jSDocInfo0 = new JSDocInfo();
    node0.setJSDocInfo(jSDocInfo0);
    JSDocInfo jSDocInfo1 = NodeUtil.getInfoForNameNode(node0);
    assertFalse(jSDocInfo1.isHidden());
}",0,assertTrue(jSDocInfo1.isHidden())
project,0,test726820,"public void test726820() throws Throwable {
    Node node0 = Node.newString(100, ""-"");
    Node node1 = new Node(103, node0, 7, 42);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test727821,"public void test727821() throws Throwable {
    Node node0 = new Node(154, 154, 154);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test728822,"public void test728822() throws Throwable {
    Node node0 = new Node(43);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test729823,"public void test729823() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 3, 1861);
    node0.setType(105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test730824,"public void test730824() throws Throwable {
    Node node0 = new Node(116);
    node0.setType(105);
    node0.addSuppression(""v<f6X59E"");
    JSDocInfo jSDocInfo0 = NodeUtil.getFunctionInfo(node0);
    assertFalse(jSDocInfo0.isNoCompile());
}",0,assertTrue(jSDocInfo0.isNoCompile())
project,0,test731825,"public void test731825() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 3, 1861);
    node0.setType(105);
    Node node1 = new Node(2, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getFunctionInfo(node0);
    assertNull(jSDocInfo0);
}",0,assertNotNull(jSDocInfo0)
project,0,test732826,"public void test732826() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(""com.google.common.collect.Collections2"", ""arguments"");
    Node node0 = compiler0.parse(jSSourceFile0);
    String string0 = NodeUtil.getSourceName(node0);
    assertNotNull(string0);
}",0,
project,0,test733828,"public void test733828() throws Throwable {
    Node node0 = new Node(74);
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test734829,"public void test734829() throws Throwable {
    Node node0 = new Node(56, (-1655), (-1655));
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test735830,"public void test735830() throws Throwable {
    LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
    Logger logger0 = Logger.getLogger(""undefined"");
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(lightweightMessageFormatter0, logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", 8233, 8233);
    Node[] nodeArray0 = new Node[2];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test736831,"public void test736831() throws Throwable {
    Node node0 = new Node(31, 15, 38);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,
project,0,test737832,"public void test737832() throws Throwable {
    Node node0 = Node.newString(32, ""E fy|<WA"", 26, 4);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test738833,"public void test738833() throws Throwable {
    Node node0 = new Node(33, 114, 114);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,
project,0,test739834,"public void test739834() throws Throwable {
    Node node0 = Node.newString(34, "".prototype"");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETPROP .prototype
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test740835,"public void test740835() throws Throwable {
    Node node0 = Node.newString(""&"");
    Node node1 = new Node(35, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test741836,"public void test741836() throws Throwable {
    Node node0 = Node.newString(124, ""SETNAME"", 124, 124);
    node0.setType(42);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,
project,0,test742837,"public void test742837() throws Throwable {
    Node node0 = Node.newString(45, ""0tIM\""-?Cg4"", 3, 24);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test743838,"public void test743838() throws Throwable {
    Node node0 = new Node(47);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test744839,"public void test744839() throws Throwable {
    Node node0 = Node.newString(48, ""valueOf"");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeBINDNAME valueOf
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test745840,"public void test745840() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test746841,"public void test746841() throws Throwable {
    Node node0 = Node.newString(61, "" d\""f`}jTA4"", 61, 10);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHISFN  d\""f`}jTA4 61
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test747842,"public void test747842() throws Throwable {
    Node node0 = Node.newString(63, ""NJwr,kkMNH':e"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test748843,"public void test748843() throws Throwable {
    Node node0 = new Node(64, 64, 64);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test749844,"public void test749844() throws Throwable {
    Node node0 = new Node(74, 135, (-2699));
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_MEMBER
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test750845,"public void test750845() throws Throwable {
    Node node0 = new Node(75, 75, 75);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NAME 75
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test751846,"public void test751846() throws Throwable {
    Node node0 = new Node(76);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test752847,"public void test752847() throws Throwable {
    Node node0 = new Node(79, 100, 79);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLB 100
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test753848,"public void test753848() throws Throwable {
    Node node0 = new Node(80);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRB
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test754849,"public void test754849() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test754850,"public void test754850() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(82, node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test754851,"public void test754851() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test754852,"public void test754852() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""@}J<Mo$O/4}_"", 1905, 82);
    Node node1 = new Node(85, node0, 9, 712);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(1905, node0.getLineno());
}",0,
project,0,test755853,"public void test755853() throws Throwable {
    Node node0 = Node.newString(86, ""// In7ut %num%"", 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test756854,"public void test756854() throws Throwable {
    Node node0 = new Node(88);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test757855,"public void test757855() throws Throwable {
    Node node0 = Node.newString(89, "" of "");
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test758856,"public void test758856() throws Throwable {
    Node node0 = new Node(90, 121, 107);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test759857,"public void test759857() throws Throwable {
    Node node0 = Node.newString(91, "">>="", 91, 91);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test760858,"public void test760858() throws Throwable {
    Node node0 = new Node(92);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test761859,"public void test761859() throws Throwable {
    Node node0 = new Node(93);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test762860,"public void test762860() throws Throwable {
    Node node0 = new Node(94, 114, (-1655));
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test763861,"public void test763861() throws Throwable {
    Node node0 = Node.newString(95, ""Kz+$"", 136, 136);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test764862,"public void test764862() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test765863,"public void test765863() throws Throwable {
    Node node0 = Node.newString(97, ""tr m uX)a"", 81, 81);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test766864,"public void test766864() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test767865,"public void test767865() throws Throwable {
    Node node0 = new Node(99, 99, 99);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCOLON 99
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test768866,"public void test768866() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test769867,"public void test769867() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""d_z#t:)("", 126, 119);
    Node node1 = new Node(101, node0, 16, 29);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(119, node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test769868,"public void test769868() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""d_z#t:)("", 126, 119);
    Node node1 = new Node(101, node0, 16, 29);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertEquals(126, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test769869,"public void test769869() throws Throwable {
    Compiler compiler0 = new Compiler();
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""d_z#t:)("", 126, 119);
    Node node1 = new Node(101, node0, 16, 29);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test770870,"public void test770870() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test771871,"public void test771871() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test772872,"public void test772872() throws Throwable {
    Node node0 = Node.newString(1861, ""printNameReferenceGraph"", 1861, 1861);
    node0.setType(105);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test773873,"public void test773873() throws Throwable {
    Node node0 = Node.newString(147, ""vL.rxg5N"");
    Node node1 = new Node(37, node0, node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test774874,"public void test774874() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
