project,bug_num,test_name,test_prefix,except_pred,assert_pred
project,0,test0011,"public void test0011() throws Throwable {
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    Node node0 = Node.newString(""!"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test0022,"public void test0022() throws Throwable {
    Node node0 = new Node(30);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 45);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test0033,"public void test0033() throws Throwable {
    Node node0 = Node.newString(""cjF/7<]z#"", 22, 22);
    boolean boolean0 = NodeUtil.containsFunction(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test0044,"public void test0044() throws Throwable {
    Node node0 = new Node(10, 10, 10);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test0055,"public void test0055() throws Throwable {
    Node node0 = Node.newString("""", (-2157), (-1731));
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test0066,"public void test0066() throws Throwable {
    Node node0 = new Node((byte) 105);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(0, Node.LABEL_ID_PROP);
}",0,
project,0,test0077,"public void test0077() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    // Undeclared exception!
    try {
        NodeUtil.getPrototypePropertyName(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test0088,"public void test0088() throws Throwable {
    Node node0 = new Node(10, 10, 10);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0);
    assertTrue(boolean0);
}",0,assertFalse(boolean0)
project,0,test0099,"public void test0099() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""^="");
    // Undeclared exception!
    try {
        NodeUtil.functionCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected CALL node, got BLOCK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01010,"public void test01010() throws Throwable {
    Node node0 = new Node(3042);
    boolean boolean0 = NodeUtil.containsCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test01111,"public void test01111() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newQualifiedNameNode((CodingConvention) googleCodingConvention0, ""0p-W<BH'1rj.PD-tL"", (Node) null, ""0p-W<BH'1rj.PD-tL"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test01212,"public void test01212() throws Throwable {
    Node node0 = Node.newString(105, ""RegExp"", 105, 105);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForFunction(node0, 49);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01313,"public void test01313() throws Throwable {
    Node node0 = new Node(60);
    // Undeclared exception!
    try {
        NodeUtil.isVarArgsFunction(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test01414,"public void test01414() throws Throwable {
    Node node0 = Node.newString((-35), """");
    int int0 = NodeUtil.getNameReferenceCount(node0, """");
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test01515,"public void test01515() throws Throwable {
    Node node0 = new Node(41, 3031, 2778);
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(77);
    int int0 = NodeUtil.getNodeTypeReferenceCount(node0, (-559), nodeUtil_MatchNodeType0);
    assertEquals(0, int0);
}",0,"assertEquals(0, int0)"
project,0,test01616,"public void test01616() throws Throwable {
    Node node0 = new Node(60);
    // Undeclared exception!
    try {
        NodeUtil.constructorCallHasSideEffects(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Expected NEW node, got ENUM_ID
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test01717,"public void test01717() throws Throwable {
    Node node0 = new Node(17, 17, 17);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test01818,"public void test01818() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.getFunctionBody((Node) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test01919,"public void test01919() throws Throwable {
    Node node0 = new Node(46);
    boolean boolean0 = NodeUtil.isFunctionObjectCallOrApply(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02020,"public void test02020() throws Throwable {
    Node node0 = new Node(46);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02021,"public void test02021() throws Throwable {
    Node node0 = new Node(46);
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test02122,"public void test02122() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""javascript"", ""javascript"");
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02223,"public void test02223() throws Throwable {
    Node node0 = new Node(71);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test02324,"public void test02324() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02425,"public void test02425() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    assertNotNull(node0);
}",0,
project,0,test02426,"public void test02426() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(122, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test02527,"public void test02527() throws Throwable {
    Node node0 = new Node(63);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test02628,"public void test02628() throws Throwable {
    Node node0 = new Node(64);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test02729,"public void test02729() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02830,"public void test02830() throws Throwable {
    Node node0 = new Node(98, 98, 98);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test02931,"public void test02931() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    // Undeclared exception!
    try {
        NodeUtil.getImpureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03032,"public void test03032() throws Throwable {
    Node node0 = new Node(26);
    // Undeclared exception!
    try {
        NodeUtil.getPureBooleanValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test03133,"public void test03133() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""undefined"", (-165), (-165));
    Node node1 = new Node(26, node0, node0, node0);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node1);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test03234,"public void test03234() throws Throwable {
    Node node0 = Node.newNumber((-2224.5));
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test03335,"public void test03335() throws Throwable {
    Node node0 = Node.newString(""a%xzBsW;[eU/+=o;("");
    Node node1 = new Node(26, node0, 32, 27);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNotNull(double0);
}",1,
project,0,test03437,"public void test03437() throws Throwable {
    Node node0 = Node.newString(41, ""prototype"");
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test03538,"public void test03538() throws Throwable {
    Node node0 = new Node(43, 29, 19);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test03639,"public void test03639() throws Throwable {
    Node node0 = new Node(44, 5, 2);
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test03740,"public void test03740() throws Throwable {
    Node node0 = new Node(47, 47, 47);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test03841,"public void test03841() throws Throwable {
    Node node0 = new Node(63);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test03942,"public void test03942() throws Throwable {
    Node node0 = new Node(79);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test04043,"public void test04043() throws Throwable {
    Node node0 = Node.newString("""", (-2157), (-1731));
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test04144,"public void test04144() throws Throwable {
    Node node0 = Node.newNumber(0.0, 21, (-1968));
    NodeUtil.getImpureBooleanValue(node0);
}",0,
project,0,test04245,"public void test04245() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", (-2996), 2);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals((-1), node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test04246,"public void test04246() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", (-2996), 2);
    NodeUtil.getImpureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04247,"public void test04247() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""NaN"", (-2996), 2);
    NodeUtil.getImpureBooleanValue(node0);
    assertTrue(node0.isQualifiedName());
}",0,assertTrue(node0.isQualifiedName())
project,0,test04348,"public void test04348() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 8052, (-349));
    NodeUtil.getPureBooleanValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04349,"public void test04349() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", 8052, (-349));
    NodeUtil.getPureBooleanValue(node0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test04450,"public void test04450() throws Throwable {
    Node node0 = Node.newString(""a%xzBsW;[eU/+=o;("");
    Node node1 = new Node(26, node0, 32, 27);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertNotNull(string0);
}",0,
project,0,test04552,"public void test04552() throws Throwable {
    Node node0 = new Node(64);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNotNull(double0);
}",0,
project,0,test04654,"public void test04654() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertNull(string0);
}",0,
project,0,test04655,"public void test04655() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(520319, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test04656,"public void test04656() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04657,"public void test04657() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertTrue(node0.isQualifiedName());
}",0,assertFalse(node0.isQualifiedName())
project,0,test04758,"public void test04758() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    String string0 = NodeUtil.arrayToString(node0);
    assertNotNull(string0);
}",0,
project,0,test04760,"public void test04760() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    String string0 = NodeUtil.arrayToString(node0);
    assertEquals(122, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test04861,"public void test04861() throws Throwable {
    Node node0 = Node.newString(""="", 92, 955);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""="", string0);
}",0,
project,0,test04962,"public void test04962() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""-"");
    Node node0 = compiler0.parse(jSSourceFile0);
    Node node1 = new Node(41, node0, 1772, (-3028));
    String string0 = NodeUtil.getStringValue(node1);
    assertEquals(""null"", string0);
}",0,
project,0,test05063,"public void test05063() throws Throwable {
    Node node0 = Node.newString(43, ""est"");
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals(""false"", string0);
}",0,
project,0,test05164,"public void test05164() throws Throwable {
    Node node0 = new Node(44, 21, 44);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""true"", string0);
}",0,
project,0,test05265,"public void test05265() throws Throwable {
    Node node0 = new Node(63);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test05367,"public void test05367() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""undefined"", string0);
}",0,
project,0,test05469,"public void test05469() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""NaN"", string0);
}",0,
project,0,test05470,"public void test05470() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(7688302, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test05572,"public void test05572() throws Throwable {
    Node node0 = Node.newNumber(2933.3175924983193);
    String string0 = NodeUtil.getStringValue(node0);
    assertEquals(""2933.3175924983193"", string0);
}",0,
project,0,test05673,"public void test05673() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals("""", string0);
}",0,
project,0,test05675,"public void test05675() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    String string0 = NodeUtil.getArrayElementStringValue(node1);
    assertEquals(64, node1.getCharno());
}",0,
project,0,test05776,"public void test05776() throws Throwable {
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(""javascrupt"", ""javascrupt"");
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parse(jSSourceFile0);
    String string0 = NodeUtil.arrayToString(node0);
    assertNull(string0);
}",0,
project,0,test05877,"public void test05877() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test05978,"public void test05978() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""W_r4"", 2323, 2323);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test05979,"public void test05979() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""W_r4"", 2323, 2323);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(9517331, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test05980,"public void test05980() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""W_r4"", 2323, 2323);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test06081,"public void test06081() throws Throwable {
    Node node0 = new Node(39, 39, 39);
    // Undeclared exception!
    try {
        NodeUtil.getNumberValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Number node not created with Node.newNumber
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",1,
project,0,test06182,"public void test06182() throws Throwable {
    Node node0 = Node.newString(""\u000B"", 67, 594);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test06283,"public void test06283() throws Throwable {
    Node node0 = new Node(41);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06384,"public void test06384() throws Throwable {
    Node node0 = new Node(43);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(0.0, (double) double0, 0.01);
}",0,
project,0,test06485,"public void test06485() throws Throwable {
    Node node0 = new Node(44);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(1.0, (double) double0, 0.01);
}",0,
project,0,test06586,"public void test06586() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",0,
project,0,test06688,"public void test06688() throws Throwable {
    Node node0 = new Node(28);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",0,
project,0,test06789,"public void test06789() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (byte) 105, (byte) 105);
    Node node1 = new Node(26, node0, 32, 27);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertNull(double0);
}",1,
project,0,test06790,"public void test06790() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (byte) 105, (byte) 105);
    Node node1 = new Node(26, node0, 32, 27);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test06791,"public void test06791() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (byte) 105, (byte) 105);
    Node node1 = new Node(26, node0, 32, 27);
    Double double0 = NodeUtil.getNumberValue(node1);
    assertEquals(430185, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test06892,"public void test06892() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""&"");
    assertNotNull(double0);
}",0,
project,0,test06994,"public void test06994() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qoZZ3!Xv4Ox"", 114, 114);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertEquals(Double.NaN, (double) double0, 0.01);
}",1,
project,0,test07096,"public void test07096() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""-infinity"");
    assertNull(double0);
}",0,
project,0,test07197,"public void test07197() throws Throwable {
    Node node0 = Node.newString(""infinity"", (-382), 13);
    Double double0 = NodeUtil.getNumberValue(node0);
    assertNull(double0);
}",1,
project,0,test07298,"public void test07298() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue(""+infinity"");
    assertNull(double0);
}",0,
project,0,test07399,"public void test07399() throws Throwable {
    Double double0 = NodeUtil.getStringNumberValue("" type: "");
    assertNotNull(double0);
}",0,
project,0,test074101,"public void test074101() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(9);
}",0,
project,0,test075102,"public void test075102() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(10);
}",0,
project,0,test076103,"public void test076103() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(11);
}",0,
project,0,test077104,"public void test077104() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(12);
}",0,
project,0,test078105,"public void test078105() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(13);
}",0,
project,0,test079106,"public void test079106() throws Throwable {
    NodeUtil.isStrWhiteSpaceChar(160);
}",0,
project,0,test080107,"public void test080107() throws Throwable {
    Node node0 = Node.newString(""infinity"");
    Node node1 = new Node(26, node0, 32, 27);
    boolean boolean0 = NodeUtil.isImmutableValue(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test081108,"public void test081108() throws Throwable {
    Node node0 = new Node(29);
    // Undeclared exception!
    try {
        NodeUtil.isImmutableValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test082109,"public void test082109() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""SETTER"", 117, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test082110,"public void test082110() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""SETTER"", 117, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(479359, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test082111,"public void test082111() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""SETTER"", 117, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test083112,"public void test083112() throws Throwable {
    Node node0 = Node.newString(41, ""prototype"");
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(18);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
    assertTrue(boolean0);
}",0,
project,0,test084113,"public void test084113() throws Throwable {
    Node node0 = new Node(43);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test085114,"public void test085114() throws Throwable {
    Node node0 = new Node(44);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test086115,"public void test086115() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    boolean boolean0 = NodeUtil.isImmutableValue(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test087116,"public void test087116() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1), 16);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test087117,"public void test087117() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1), 16);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test087118,"public void test087118() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1), 16);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test088119,"public void test088119() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertEquals(7688302, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test088120,"public void test088120() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test088121,"public void test088121() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 1877, (byte) 110);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertEquals(38, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test089122,"public void test089122() throws Throwable {
    Node node0 = Node.newNumber((-635.0));
    Node node1 = new Node(63, node0);
    boolean boolean0 = NodeUtil.isLiteralValue(node1, false);
    assertTrue(boolean0);
}",0,
project,0,test090123,"public void test090123() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    node0.addChildToFront(node1);
    assertEquals(122, node1.getType());
}",0,"assertEquals(1, node1.getType())"
project,0,test090124,"public void test090124() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    node0.addChildToFront(node1);
    assertEquals(64, node1.getCharno());
}",0,
project,0,test090125,"public void test090125() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    node0.addChildToFront(node1);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertTrue(boolean0);
}",0,
project,0,test091126,"public void test091126() throws Throwable {
    Node node0 = new Node((byte) 105);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, false);
    assertFalse(boolean0);
}",0,
project,0,test092127,"public void test092127() throws Throwable {
    Node node0 = new Node((byte) 105);
    Node node1 = new Node(1, node0);
    boolean boolean0 = NodeUtil.isLiteralValue(node0, true);
    assertTrue(boolean0);
}",0,
project,0,test093128,"public void test093128() throws Throwable {
    Node node0 = new Node(63);
    Node node1 = new Node(11, node0, 1, 43);
    Set<String> set0 = NameAnalyzer.DEFAULT_GLOBAL_NAMES;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test094129,"public void test094129() throws Throwable {
    Node node0 = new Node(12, 86, 999);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test095130,"public void test095130() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""JSC_UNDEFINED_NAME"", (-4417), 100);
    Node node1 = new Node(13, node0, 4095, 39);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, compilerOptions0.stripTypes);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(0, node0.getCharno())"
project,0,test095131,"public void test095131() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""JSC_UNDEFINED_NAME"", (-4417), 100);
    Node node1 = new Node(13, node0, 4095, 39);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, compilerOptions0.stripTypes);
    assertFalse(boolean0);
}",0,
project,0,test095132,"public void test095132() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""JSC_UNDEFINED_NAME"", (-4417), 100);
    Node node1 = new Node(13, node0, 4095, 39);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, compilerOptions0.stripTypes);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test096133,"public void test096133() throws Throwable {
    Node node0 = new Node(15);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test097134,"public void test097134() throws Throwable {
    Node node0 = new Node(16);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test098135,"public void test098135() throws Throwable {
    Node node0 = new Node(17);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, set0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test099136,"public void test099136() throws Throwable {
    Node node0 = new Node(18);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, set0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test100137,"public void test100137() throws Throwable {
    Node node0 = Node.newString(10, ""pV)]$x~6m]Sm/91$pq"");
    Node node1 = new Node(19, 1, 28);
    node0.addChildrenToBack(node1);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test101138,"public void test101138() throws Throwable {
    Node node0 = new Node(20);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNameSuffixes);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test102139,"public void test102139() throws Throwable {
    Node node0 = new Node(21);
    LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, linkedHashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test103140,"public void test103140() throws Throwable {
    Node node0 = new Node((byte) (-111));
    Node node1 = new Node(22, node0, 30, 51);
    Compiler compiler0 = new Compiler();
    GatherRawExports gatherRawExports0 = new GatherRawExports(compiler0);
    Set<String> set0 = gatherRawExports0.getExportedVariableNames();
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test104141,"public void test104141() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ZoDlEMUv*wroRqTZ"", (byte) 101, (byte) 101);
    Node node1 = new Node(26, node0, 42, 91);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test104142,"public void test104142() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ZoDlEMUv*wroRqTZ"", (byte) 101, (byte) 101);
    Node node1 = new Node(26, node0, 42, 91);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertEquals(413797, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test104143,"public void test104143() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ZoDlEMUv*wroRqTZ"", (byte) 101, (byte) 101);
    Node node1 = new Node(26, node0, 42, 91);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test105144,"public void test105144() throws Throwable {
    Node node0 = new Node(27, 27, 27);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test106145,"public void test106145() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Expected CALL node, got "");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Expected CALL node, got "", 111, 111);
    Node node1 = new Node(28, node0, (-2329), 2850);
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertEquals(454767, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test106146,"public void test106146() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Expected CALL node, got "");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Expected CALL node, got "", 111, 111);
    Node node1 = new Node(28, node0, (-2329), 2850);
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(node0.hasMoreThanOneChild());
}",0,
project,0,test106147,"public void test106147() throws Throwable {
    MockPrintStream mockPrintStream0 = new MockPrintStream(""Expected CALL node, got "");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    ClosureCodingConvention closureCodingConvention0 = (ClosureCodingConvention) compiler0.defaultCodingConvention;
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Expected CALL node, got "", 111, 111);
    Node node1 = new Node(28, node0, (-2329), 2850);
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test107148,"public void test107148() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    HashSet<String> hashSet0 = new HashSet<String>();
    // Undeclared exception!
    try {
        NodeUtil.isValidDefineValue(node0, hashSet0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test108149,"public void test108149() throws Throwable {
    Node node0 = new Node(30);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripNamePrefixes);
    assertFalse(boolean0);
}",0,
project,0,test109150,"public void test109150() throws Throwable {
    Node node0 = Node.newString(32, ""pV)]$x~6m]Sm/91$pq"");
    MockPrintStream mockPrintStream0 = new MockPrintStream(""n H:i]_PsR%['0>4l%;"");
    Compiler compiler0 = new Compiler(mockPrintStream0);
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    assertFalse(boolean0);
}",0,
project,0,test110151,"public void test110151() throws Throwable {
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods((AbstractCompiler) null);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    Stack<JSType> stack0 = new Stack<JSType>();
    Node node0 = jSTypeRegistry0.createParametersWithVarArgs((List<JSType>) stack0);
    Node node1 = new Node(33, node0, node0, 33, 1546);
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test111152,"public void test111152() throws Throwable {
    Node node0 = Node.newString(1979, ""m[x<H+zEYt~0YeA"", 181, (-229));
    Node node1 = new Node(34, node0, 90, 11);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test112153,"public void test112153() throws Throwable {
    HashSet<String> hashSet0 = new HashSet<String>();
    Node node0 = new Node(35);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertFalse(boolean0);
}",0,
project,0,test113154,"public void test113154() throws Throwable {
    Node node0 = new Node(36);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.aliasableStrings);
    assertFalse(boolean0);
}",0,
project,0,test114155,"public void test114155() throws Throwable {
    Node node0 = new Node(37);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    assertFalse(boolean0);
}",0,
project,0,test115156,"public void test115156() throws Throwable {
    Node node0 = new Node(46);
    Node node1 = Node.newNumber((double) 8, 6, 1);
    node0.addChildrenToBack(node1);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
    assertTrue(boolean0);
}",0,
project,0,test116157,"public void test116157() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qo%Z3!XKv4Ox"", 125, 125);
    HashSet<String> hashSet0 = new HashSet<String>();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, hashSet0);
    assertTrue(boolean0);
}",0,
project,0,test117158,"public void test117158() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""-"");
    Node node0 = compiler0.parse(jSSourceFile0);
    Node node1 = new Node(41, node0, 1772, (-3028));
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node1, set0);
    assertFalse(boolean0);
}",0,
project,0,test118159,"public void test118159() throws Throwable {
    Node node0 = new Node(42);
    Compiler compiler0 = new Compiler();
    InlineSimpleMethods inlineSimpleMethods0 = new InlineSimpleMethods(compiler0);
    Set<String> set0 = inlineSimpleMethods0.externMethodsWithoutSignatures;
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, set0);
    assertFalse(boolean0);
}",0,
project,0,test119160,"public void test119160() throws Throwable {
    Node node0 = new Node(43);
    CompilerOptions compilerOptions0 = new CompilerOptions();
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, compilerOptions0.stripTypePrefixes);
    assertTrue(boolean0);
}",0,
project,0,test120161,"public void test120161() throws Throwable {
    Node node0 = new Node(44, 5, 2);
    boolean boolean0 = NodeUtil.isValidDefineValue(node0, (Set<String>) null);
    assertTrue(boolean0);
}",0,
project,0,test121162,"public void test121162() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""^="");
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test122163,"public void test122163() throws Throwable {
    Node node0 = new Node(10, 10, 10);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test123164,"public void test123164() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""c:NRJ2x+i}6+7"");
    Node node0 = compiler0.parse(jSSourceFile0);
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.isEmptyBlock(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test124165,"public void test124165() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test125166,"public void test125166() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test126167,"public void test126167() throws Throwable {
    Node node0 = new Node(12, 86, 999);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test127168,"public void test127168() throws Throwable {
    Node node0 = new Node(94);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    Node node1 = new Node(13, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test128169,"public void test128169() throws Throwable {
    Node node0 = new Node(14);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test129170,"public void test129170() throws Throwable {
    Node node0 = new Node(127);
    Node node1 = new Node(15, node0, 46, 47);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test130171,"public void test130171() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test131172,"public void test131172() throws Throwable {
    Node node0 = new Node(17, 17, 17);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test132173,"public void test132173() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(18);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test133174,"public void test133174() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(19);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test134175,"public void test134175() throws Throwable {
    Node node0 = new Node(20);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test135176,"public void test135176() throws Throwable {
    Node node0 = new Node(21);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test136177,"public void test136177() throws Throwable {
    Node node0 = new Node(23, 17, 14);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test137178,"public void test137178() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(24);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test138179,"public void test138179() throws Throwable {
    Node node0 = new Node(25, 25, 25);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,
project,0,test139180,"public void test139180() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(26);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test140181,"public void test140181() throws Throwable {
    Node node0 = new Node(112, 3, 3);
    Node node1 = new Node(28, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test141182,"public void test141182() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(29);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test142183,"public void test142183() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test143184,"public void test143184() throws Throwable {
    Node node0 = new Node(31, 31, 31);
    boolean boolean0 = NodeUtil.mayHaveSideEffects(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test144185,"public void test144185() throws Throwable {
    Node node0 = Node.newString(32, ""pV)]$x~6m]Sm/91$pq"");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test145186,"public void test145186() throws Throwable {
    Node node0 = new Node(33);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test146187,"public void test146187() throws Throwable {
    Node node0 = new Node((byte) (-111));
    Node node1 = new Node(34, node0, node0);
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = NodeUtil.NUMBERIC_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETPROP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test147188,"public void test147188() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Node node1 = new Node(35, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test148189,"public void test148189() throws Throwable {
    Node node0 = new Node(36, 36, 36);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test149190,"public void test149190() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.isSimpleOperator(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test150191,"public void test150191() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(38);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test151192,"public void test151192() throws Throwable {
    Node node0 = new Node(39, 39, 39);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test152193,"public void test152193() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(42);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test153194,"public void test153194() throws Throwable {
    Node node0 = new Node(45);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test154195,"public void test154195() throws Throwable {
    Node node0 = new Node(46);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test155196,"public void test155196() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(47);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test156197,"public void test156197() throws Throwable {
    Node node0 = new Node(48, 41, 2027);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test157198,"public void test157198() throws Throwable {
    Node node0 = new Node(50, 50, 50);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test158199,"public void test158199() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(51);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test159200,"public void test159200() throws Throwable {
    Node node0 = new Node(52, 631, 631);
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(48);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
    assertTrue(boolean0);
}",0,
project,0,test160201,"public void test160201() throws Throwable {
    Node node0 = new Node(53);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test161202,"public void test161202() throws Throwable {
    Node node0 = new Node(55);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test162203,"public void test162203() throws Throwable {
    Node node0 = new Node(56);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test163204,"public void test163204() throws Throwable {
    Node node0 = new Node(58);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test164205,"public void test164205() throws Throwable {
    Node node0 = new Node(59);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_NEXT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test165206,"public void test165206() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_ID 60
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test166207,"public void test166207() throws Throwable {
    Node node0 = new Node(61, 61, 61);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, predicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHISFN 61
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test167208,"public void test167208() throws Throwable {
    Node node0 = new Node(62, 111, 111);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETURN_RESULT 111
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test168209,"public void test168209() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(63);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test169210,"public void test169210() throws Throwable {
    Node node0 = new Node(66, 8, 12);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test170211,"public void test170211() throws Throwable {
    Node node0 = new Node(67, 67, (-4173));
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEL_REF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test171212,"public void test171212() throws Throwable {
    Node node0 = new Node(68);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test172213,"public void test172213() throws Throwable {
    Node node0 = new Node(69);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test173214,"public void test173214() throws Throwable {
    Node node0 = new Node(71);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test174215,"public void test174215() throws Throwable {
    Node node0 = new Node(72);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test175216,"public void test175216() throws Throwable {
    Node node0 = new Node(73, 73, 73);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test176217,"public void test176217() throws Throwable {
    Node node0 = new Node(74);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_MEMBER
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test177218,"public void test177218() throws Throwable {
    Node node0 = new Node(75, 75, 75);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test178219,"public void test178219() throws Throwable {
    Node node0 = new Node(76);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, (Predicate<Node>) null);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NS_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test179220,"public void test179220() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTRY 77
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test180221,"public void test180221() throws Throwable {
    Node node0 = new Node(78);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test181222,"public void test181222() throws Throwable {
    Node node0 = new Node(79);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test182223,"public void test182223() throws Throwable {
    Node node0 = new Node(80);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRB
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test183224,"public void test183224() throws Throwable {
    Node node0 = new Node(81);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test184225,"public void test184225() throws Throwable {
    Node node0 = new Node(82);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test185226,"public void test185226() throws Throwable {
    Node node0 = new Node(83);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLP
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test186227,"public void test186227() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRP 84
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test187228,"public void test187228() throws Throwable {
    Node node0 = Node.newString(85, ""2hv& Agp"", 24, 26);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test188229,"public void test188229() throws Throwable {
    Node node0 = new Node(22, 22, 22);
    Node node1 = new Node(86, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test189230,"public void test189230() throws Throwable {
    Node node0 = new Node(87);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test190231,"public void test190231() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test191232,"public void test191232() throws Throwable {
    Node node0 = new Node(89, 4942, 89);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test192233,"public void test192233() throws Throwable {
    Node node0 = new Node(90, 90, 90);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test193234,"public void test193234() throws Throwable {
    Node node0 = new Node(91, 91, 91);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test194235,"public void test194235() throws Throwable {
    Node node0 = new Node(92);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test195236,"public void test195236() throws Throwable {
    Node node0 = new Node(93, 102, 93);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test196237,"public void test196237() throws Throwable {
    Node node0 = new Node(94);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test197238,"public void test197238() throws Throwable {
    Node node0 = new Node(95);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test198239,"public void test198239() throws Throwable {
    Node node0 = new Node(96, 96, 96);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test199240,"public void test199240() throws Throwable {
    Node node0 = new Node(97);
    // Undeclared exception!
    try {
        NodeUtil.mayEffectMutableState(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test200241,"public void test200241() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(98);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test201242,"public void test201242() throws Throwable {
    Node node0 = new Node(99, 115, 115);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test202243,"public void test202243() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(100);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test203244,"public void test203244() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(101);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test204245,"public void test204245() throws Throwable {
    Node node0 = new Node(103);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test205246,"public void test205246() throws Throwable {
    Node node0 = new Node(104, (-2145), 113);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDOT
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test206247,"public void test206247() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType((byte) 105);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test207248,"public void test207248() throws Throwable {
    Node node0 = new Node(106);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test208249,"public void test208249() throws Throwable {
    Node node0 = new Node(107);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test209250,"public void test209250() throws Throwable {
    Node node0 = new Node(108);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeIF
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test210251,"public void test210251() throws Throwable {
    Node node0 = new Node(109);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test211252,"public void test211252() throws Throwable {
    boolean boolean0 = NodeUtil.isSimpleOperatorType(110);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test212253,"public void test212253() throws Throwable {
    Node node0 = new Node(46);
    Node node1 = new Node(113, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test213254,"public void test213254() throws Throwable {
    Node node0 = new Node(114, 114, 67);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test214255,"public void test214255() throws Throwable {
    Node node0 = new Node(115);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test215256,"public void test215256() throws Throwable {
    Node node0 = new Node(116, 108, 116);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test216257,"public void test216257() throws Throwable {
    Node node0 = new Node(117, 65536, 161);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test217258,"public void test217258() throws Throwable {
    Node node0 = new Node(118);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeVAR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test218259,"public void test218259() throws Throwable {
    Node node0 = new Node(120, 120, 120);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test219260,"public void test219260() throws Throwable {
    Node node0 = new Node(121);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test220261,"public void test220261() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test221262,"public void test221262() throws Throwable {
    Node node0 = new Node(30);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test222263,"public void test222263() throws Throwable {
    Node node0 = new Node(34, 1, 27);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test223264,"public void test223264() throws Throwable {
    Node node0 = Node.newString("""", (-2157), (-1731));
    Node node1 = new Node(37, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test224265,"public void test224265() throws Throwable {
    Node node0 = new Node(41);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test225266,"public void test225266() throws Throwable {
    Node node0 = new Node(42, 42, 42);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test226267,"public void test226267() throws Throwable {
    Node node0 = new Node(44, 21, 44);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test227268,"public void test227268() throws Throwable {
    Node node0 = new Node(47, 12, 9);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test228269,"public void test228269() throws Throwable {
    Node node0 = new Node(49, 7, 2535);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test229270,"public void test229270() throws Throwable {
    Node node0 = new Node((byte) 105);
    Node node1 = new Node(51, node0, node0, node0, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test230271,"public void test230271() throws Throwable {
    Node node0 = new Node(52);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test231272,"public void test231272() throws Throwable {
    Node node0 = new Node(59);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test232273,"public void test232273() throws Throwable {
    Node node0 = new Node(60, 60, 60);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test233274,"public void test233274() throws Throwable {
    Node node0 = new Node(67, 67, 67);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test234275,"public void test234275() throws Throwable {
    Node node0 = new Node(76, 60, 76);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test235276,"public void test235276() throws Throwable {
    Node node0 = new Node(77, 52, 52);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test236277,"public void test236277() throws Throwable {
    Node node0 = new Node(80);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test237278,"public void test237278() throws Throwable {
    Node node0 = new Node(83);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test238279,"public void test238279() throws Throwable {
    Node node0 = new Node(84, 84, 84);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test239280,"public void test239280() throws Throwable {
    Node node0 = new Node(98);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test240281,"public void test240281() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test241282,"public void test241282() throws Throwable {
    Node node0 = new Node(101, 101, 101);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test242283,"public void test242283() throws Throwable {
    Node node0 = new Node(102);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test243284,"public void test243284() throws Throwable {
    Node node0 = new Node(104, 104, 104);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test244285,"public void test244285() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test245286,"public void test245286() throws Throwable {
    Node node0 = new Node(110, 110, 110);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test246287,"public void test246287() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test247288,"public void test247288() throws Throwable {
    Node node0 = new Node(142);
    Node node1 = NodeUtil.newVarNode(""Ld16PwWb"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test247289,"public void test247289() throws Throwable {
    Node node0 = new Node(142);
    Node node1 = NodeUtil.newVarNode(""Ld16PwWb"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(0, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test247290,"public void test247290() throws Throwable {
    Node node0 = new Node(142);
    Node node1 = NodeUtil.newVarNode(""Ld16PwWb"", node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test248291,"public void test248291() throws Throwable {
    Node node0 = new Node(119, 119, 119);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test249292,"public void test249292() throws Throwable {
    Node node0 = new Node((byte) 123);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test250293,"public void test250293() throws Throwable {
    Node node0 = Node.newString(124, ""7X*}%"");
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test251294,"public void test251294() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""^="");
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test252295,"public void test252295() throws Throwable {
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    Node node0 = Node.newString(126, "",%muZ\""L^%zo"");
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test253296,"public void test253296() throws Throwable {
    Node node0 = new Node(128);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test254297,"public void test254297() throws Throwable {
    Node node0 = new Node(64);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test255298,"public void test255298() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    Node node1 = NodeUtil.newUndefinedNode(node0);
    node0.addChildToFront(node1);
    NodeUtil.getPureBooleanValue(node0);
}",0,
project,0,test256299,"public void test256299() throws Throwable {
    Node node0 = new Node((byte) 105, (byte) 105, (byte) 105);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test257300,"public void test257300() throws Throwable {
    Node node0 = new Node(65, 43, 43);
    Node node1 = new Node(86, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test258301,"public void test258301() throws Throwable {
    Node node0 = new Node(43, 43, 43);
    Node node1 = new Node(86, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.mayEffectMutableState(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test259302,"public void test259302() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    node0.addChildrenToBack(node0);
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager((Logger) null);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test260303,"public void test260303() throws Throwable {
    Node node0 = new Node(73);
    // Undeclared exception!
    try {
        NodeUtil.callHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test261304,"public void test261304() throws Throwable {
    Node node0 = new Node((-2157), (-1731), (-1731));
    Node node1 = new Node(37, node0);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test262305,"public void test262305() throws Throwable {
    Node node0 = Node.newNumber(770.0, (-1502), (-1502));
    // Undeclared exception!
    try {
        NodeUtil.newHasLocalResult(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test263306,"public void test263306() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test264307,"public void test264307() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    Compiler compiler0 = new Compiler();
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test265308,"public void test265308() throws Throwable {
    Node node0 = Node.newString(31, ""j,$$"");
    Logger logger0 = Tracer.logger;
    LoggerErrorManager loggerErrorManager0 = new LoggerErrorManager(logger0);
    Compiler compiler0 = new Compiler(loggerErrorManager0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test266309,"public void test266309() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString("""", (-2158), (-1731));
    Node node1 = new Node(37, node0);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node1, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test267310,"public void test267310() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Compiler compiler0 = new Compiler();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""E-^D<H[$H865!"", (-1814), 98);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertEquals((-1), node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test267311,"public void test267311() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Compiler compiler0 = new Compiler();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""E-^D<H[$H865!"", (-1814), 98);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test267312,"public void test267312() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Compiler compiler0 = new Compiler();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""E-^D<H[$H865!"", (-1814), 98);
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertFalse(node0.hasChildren());
}",0,
project,0,test268313,"public void test268313() throws Throwable {
    Node node0 = Node.newString(49, ""Or("");
    Compiler compiler0 = new Compiler();
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test269314,"public void test269314() throws Throwable {
    Node node0 = Node.newString(102, ""0W7M,|qoZZ3!Xv4Ox"", (-2340), (-1667));
    Compiler compiler0 = new Compiler();
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test270315,"public void test270315() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Node.newString(103, ""3"", 916, (-1809));
    boolean boolean0 = NodeUtil.nodeTypeMayHaveSideEffects(node0, compiler0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test271316,"public void test271316() throws Throwable {
    Node node0 = new Node(30);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test272317,"public void test272317() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""com.google.javascript.jscomp.ExploitAssigns"", ""com.google.javascript.jscomp.ExploitAssigns"");
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test273318,"public void test273318() throws Throwable {
    Node node0 = Node.newString("""", (-2157), (-1731));
    Node node1 = new Node(37, node0);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test274319,"public void test274319() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""E-^D<H[$H865!"", (-1814), 98);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test274320,"public void test274320() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""E-^D<H[$H865!"", (-1814), 98);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    boolean boolean0 = peepholeSubstituteAlternateSyntax0.isPure(node0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test275321,"public void test275321() throws Throwable {
    int int0 = NodeUtil.precedence(9);
    assertEquals(5, int0);
}",0,
project,0,test276322,"public void test276322() throws Throwable {
    int int0 = NodeUtil.precedence(86);
    assertEquals(1, int0);
}",0,
project,0,test277323,"public void test277323() throws Throwable {
    int int0 = NodeUtil.precedence(10);
    assertEquals(6, int0);
}",0,
project,0,test278324,"public void test278324() throws Throwable {
    int int0 = NodeUtil.precedence(11);
    assertEquals(7, int0);
}",0,
project,0,test279325,"public void test279325() throws Throwable {
    int int0 = NodeUtil.precedence(12);
    assertEquals(8, int0);
}",0,
project,0,test280326,"public void test280326() throws Throwable {
    int int0 = NodeUtil.precedence(13);
    assertEquals(8, int0);
}",0,
project,0,test281327,"public void test281327() throws Throwable {
    int int0 = NodeUtil.precedence(14);
    assertEquals(9, int0);
}",0,
project,0,test282328,"public void test282328() throws Throwable {
    int int0 = NodeUtil.precedence(15);
    assertEquals(9, int0);
}",0,
project,0,test283329,"public void test283329() throws Throwable {
    int int0 = NodeUtil.precedence(16);
    assertEquals(9, int0);
}",0,
project,0,test284330,"public void test284330() throws Throwable {
    int int0 = NodeUtil.precedence(17);
    assertEquals(9, int0);
}",0,
project,0,test285331,"public void test285331() throws Throwable {
    int int0 = NodeUtil.precedence(18);
    assertEquals(10, int0);
}",0,
project,0,test286332,"public void test286332() throws Throwable {
    int int0 = NodeUtil.precedence(19);
    assertEquals(10, int0);
}",0,
project,0,test287333,"public void test287333() throws Throwable {
    int int0 = NodeUtil.precedence(20);
    assertEquals(10, int0);
}",0,
project,0,test288334,"public void test288334() throws Throwable {
    int int0 = NodeUtil.precedence(21);
    assertEquals(11, int0);
}",0,
project,0,test289335,"public void test289335() throws Throwable {
    int int0 = NodeUtil.precedence(22);
    assertEquals(11, int0);
}",0,
project,0,test290336,"public void test290336() throws Throwable {
    int int0 = NodeUtil.precedence(23);
    assertEquals(12, int0);
}",0,
project,0,test291337,"public void test291337() throws Throwable {
    int int0 = NodeUtil.precedence(24);
    assertEquals(12, int0);
}",0,
project,0,test292338,"public void test292338() throws Throwable {
    int int0 = NodeUtil.precedence(25);
    assertEquals(12, int0);
}",0,
project,0,test293339,"public void test293339() throws Throwable {
    int int0 = NodeUtil.precedence(26);
    assertEquals(13, int0);
}",0,
project,0,test294340,"public void test294340() throws Throwable {
    int int0 = NodeUtil.precedence(27);
    assertEquals(13, int0);
}",0,
project,0,test295341,"public void test295341() throws Throwable {
    int int0 = NodeUtil.precedence(28);
    assertEquals(13, int0);
}",0,
project,0,test296342,"public void test296342() throws Throwable {
    int int0 = NodeUtil.precedence(29);
    assertEquals(13, int0);
}",0,
project,0,test297343,"public void test297343() throws Throwable {
    int int0 = NodeUtil.precedence(30);
    assertEquals(13, int0);
}",0,
project,0,test298344,"public void test298344() throws Throwable {
    int int0 = NodeUtil.precedence(31);
    assertEquals(13, int0);
}",0,
project,0,test299345,"public void test299345() throws Throwable {
    int int0 = NodeUtil.precedence(32);
    assertEquals(13, int0);
}",0,
project,0,test300346,"public void test300346() throws Throwable {
    int int0 = NodeUtil.precedence(33);
    assertEquals(15, int0);
}",0,
project,0,test301347,"public void test301347() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setprop (type 34)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test302348,"public void test302348() throws Throwable {
    int int0 = NodeUtil.precedence(35);
    assertEquals(15, int0);
}",0,
project,0,test303349,"public void test303349() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(36);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for setelem (type 36)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test304350,"public void test304350() throws Throwable {
    int int0 = NodeUtil.precedence(37);
    assertEquals(15, int0);
}",0,
project,0,test305351,"public void test305351() throws Throwable {
    int int0 = NodeUtil.precedence(38);
    assertEquals(15, int0);
}",0,
project,0,test306352,"public void test306352() throws Throwable {
    int int0 = NodeUtil.precedence(39);
    assertEquals(15, int0);
}",0,
project,0,test307353,"public void test307353() throws Throwable {
    int int0 = NodeUtil.precedence(40);
    assertEquals(15, int0);
}",0,
project,0,test308354,"public void test308354() throws Throwable {
    int int0 = NodeUtil.precedence(41);
    assertEquals(15, int0);
}",0,
project,0,test309355,"public void test309355() throws Throwable {
    int int0 = NodeUtil.precedence(42);
    assertEquals(15, int0);
}",0,
project,0,test310356,"public void test310356() throws Throwable {
    int int0 = NodeUtil.precedence(43);
    assertEquals(15, int0);
}",0,
project,0,test311357,"public void test311357() throws Throwable {
    int int0 = NodeUtil.precedence(44);
    assertEquals(15, int0);
}",0,
project,0,test312358,"public void test312358() throws Throwable {
    int int0 = NodeUtil.precedence(45);
    assertEquals(8, int0);
}",0,
project,0,test313359,"public void test313359() throws Throwable {
    int int0 = NodeUtil.precedence(46);
    assertEquals(8, int0);
}",0,
project,0,test314360,"public void test314360() throws Throwable {
    int int0 = NodeUtil.precedence(47);
    assertEquals(15, int0);
}",0,
project,0,test315361,"public void test315361() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(48);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for bindname (type 48)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test316362,"public void test316362() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for throw (type 49)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test317363,"public void test317363() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=50> (type 50)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test318364,"public void test318364() throws Throwable {
    int int0 = NodeUtil.precedence(51);
    assertEquals(9, int0);
}",0,
project,0,test319365,"public void test319365() throws Throwable {
    int int0 = NodeUtil.precedence(52);
    assertEquals(9, int0);
}",0,
project,0,test320366,"public void test320366() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(54);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for getvar (type 54)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test321367,"public void test321367() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=56> (type 56)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test322368,"public void test322368() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(58);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=58> (type 58)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test323369,"public void test323369() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(59);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=59> (type 59)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test324370,"public void test324370() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=62> (type 62)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test325371,"public void test325371() throws Throwable {
    int int0 = NodeUtil.precedence(63);
    assertEquals(15, int0);
}",0,
project,0,test326372,"public void test326372() throws Throwable {
    int int0 = NodeUtil.precedence(64);
    assertEquals(15, int0);
}",0,
project,0,test327373,"public void test327373() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(65);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for get_ref (type 65)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test328374,"public void test328374() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=66> (type 66)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test329375,"public void test329375() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=67> (type 67)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test330376,"public void test330376() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=68> (type 68)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test331377,"public void test331377() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(69);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for ref_special (type 69)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test332378,"public void test332378() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(70);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=70> (type 70)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test333379,"public void test333379() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(71);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=71> (type 71)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test334380,"public void test334380() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(72);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=72> (type 72)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test335381,"public void test335381() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(73);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=73> (type 73)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test336382,"public void test336382() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(74);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=74> (type 74)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test337383,"public void test337383() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=75> (type 75)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test338384,"public void test338384() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(76);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=76> (type 76)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test339385,"public void test339385() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(77);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for try (type 77)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test340386,"public void test340386() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(78);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for semi (type 78)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test341387,"public void test341387() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(79);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lb (type 79)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test342388,"public void test342388() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(80);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rb (type 80)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test343389,"public void test343389() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(81);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lc (type 81)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test344390,"public void test344390() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(82);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rc (type 82)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test345391,"public void test345391() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for lp (type 83)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test346392,"public void test346392() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(84);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for rp (type 84)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test347393,"public void test347393() throws Throwable {
    int int0 = NodeUtil.precedence(85);
    assertEquals(0, int0);
}",0,
project,0,test348394,"public void test348394() throws Throwable {
    int int0 = NodeUtil.precedence(87);
    assertEquals(1, int0);
}",0,
project,0,test349395,"public void test349395() throws Throwable {
    int int0 = NodeUtil.precedence(88);
    assertEquals(1, int0);
}",0,
project,0,test350396,"public void test350396() throws Throwable {
    int int0 = NodeUtil.precedence(89);
    assertEquals(1, int0);
}",0,
project,0,test351397,"public void test351397() throws Throwable {
    int int0 = NodeUtil.precedence(90);
    assertEquals(1, int0);
}",0,
project,0,test352398,"public void test352398() throws Throwable {
    int int0 = NodeUtil.precedence(91);
    assertEquals(1, int0);
}",0,
project,0,test353399,"public void test353399() throws Throwable {
    int int0 = NodeUtil.precedence(92);
    assertEquals(1, int0);
}",0,
project,0,test354400,"public void test354400() throws Throwable {
    int int0 = NodeUtil.precedence(93);
    assertEquals(1, int0);
}",0,
project,0,test355401,"public void test355401() throws Throwable {
    int int0 = NodeUtil.precedence(94);
    assertEquals(1, int0);
}",0,
project,0,test356402,"public void test356402() throws Throwable {
    int int0 = NodeUtil.precedence(95);
    assertEquals(1, int0);
}",0,
project,0,test357403,"public void test357403() throws Throwable {
    int int0 = NodeUtil.precedence(96);
    assertEquals(1, int0);
}",0,
project,0,test358404,"public void test358404() throws Throwable {
    int int0 = NodeUtil.precedence(97);
    assertEquals(1, int0);
}",0,
project,0,test359405,"public void test359405() throws Throwable {
    int int0 = NodeUtil.precedence(98);
    assertEquals(2, int0);
}",0,
project,0,test360406,"public void test360406() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(99);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for colon (type 99)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test361407,"public void test361407() throws Throwable {
    int int0 = NodeUtil.precedence(100);
    assertEquals(3, int0);
}",0,
project,0,test362408,"public void test362408() throws Throwable {
    int int0 = NodeUtil.precedence((byte) 101);
    assertEquals(4, int0);
}",0,
project,0,test363409,"public void test363409() throws Throwable {
    int int0 = NodeUtil.precedence(102);
    assertEquals(13, int0);
}",0,
project,0,test364410,"public void test364410() throws Throwable {
    int int0 = NodeUtil.precedence(103);
    assertEquals(13, int0);
}",0,
project,0,test365411,"public void test365411() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(104);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for dot (type 104)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test366412,"public void test366412() throws Throwable {
    int int0 = NodeUtil.precedence(105);
    assertEquals(15, int0);
}",0,
project,0,test367413,"public void test367413() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(106);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for export (type 106)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test368414,"public void test368414() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for import (type 107)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test369415,"public void test369415() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for if (type 108)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test370416,"public void test370416() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(109);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for else (type 109)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test371417,"public void test371417() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(110);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for switch (type 110)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test372418,"public void test372418() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for case (type 111)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test373419,"public void test373419() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for default (type 112)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test374420,"public void test374420() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(113);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for while (type 113)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test375421,"public void test375421() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for do (type 114)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test376422,"public void test376422() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for for (type 115)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test377423,"public void test377423() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for break (type 116)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test378424,"public void test378424() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(117);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for continue (type 117)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test379425,"public void test379425() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for var (type 118)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test380426,"public void test380426() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for with (type 119)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test381427,"public void test381427() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(120);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for catch (type 120)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test382428,"public void test382428() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for finally (type 121)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test383429,"public void test383429() throws Throwable {
    int int0 = NodeUtil.precedence(122);
    assertEquals(13, int0);
}",0,
project,0,test384430,"public void test384430() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(123);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for reserved (type 123)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test385431,"public void test385431() throws Throwable {
    int int0 = NodeUtil.precedence(124);
    assertEquals(15, int0);
}",0,
project,0,test386432,"public void test386432() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.precedence(4095);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown precedence for <unknown=4095> (type 4095)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test387433,"public void test387433() throws Throwable {
    Node node0 = Node.newString(85, ""#Jk[@A$iPo#cZ'pM)Oh"", 120, 120);
    // Undeclared exception!
    try {
        NodeUtil.mayBeString(node0, false);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test388434,"public void test388434() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    // Undeclared exception!
    try {
        NodeUtil.isBooleanResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test389435,"public void test389435() throws Throwable {
    Node node0 = new Node(98);
    // Undeclared exception!
    try {
        NodeUtil.isBooleanResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test390436,"public void test390436() throws Throwable {
    Node node0 = Node.newString(""b"", 67, 67);
    Node node1 = new Node(100, node0);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test391437,"public void test391437() throws Throwable {
    Node node0 = new Node(101, 101, 101);
    // Undeclared exception!
    try {
        NodeUtil.isNumericResult(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
    }
}",0,
project,0,test392438,"public void test392438() throws Throwable {
    Node node0 = Node.newString(""b"", 67, 67);
    Node node1 = new Node(100, node0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test393439,"public void test393439() throws Throwable {
    Node node0 = new Node(9, 33, 2);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.has(node0, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test394440,"public void test394440() throws Throwable {
    Node node0 = new Node(11);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test395441,"public void test395441() throws Throwable {
    Node node0 = new Node(18, 18, 18);
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test396442,"public void test396442() throws Throwable {
    Node node0 = new Node(19);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test397443,"public void test397443() throws Throwable {
    Node node0 = new Node(20);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test398444,"public void test398444() throws Throwable {
    Node node0 = Node.newString((-1667), ""Expected CALL node, got "");
    Node node1 = new Node(21, node0, 2, 12);
    boolean boolean0 = NodeUtil.mayBeString(node1, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test399445,"public void test399445() throws Throwable {
    Node node0 = new Node(22);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test400446,"public void test400446() throws Throwable {
    Node node0 = new Node(92);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    Node node1 = new Node(23, node0, node0);
    int int0 = NodeUtil.getCount(node1, nodeUtil_MayBeStringResultPredicate0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(0, int0);
}",0,"assertEquals(1, int0)"
project,0,test401447,"public void test401447() throws Throwable {
    Node node0 = new Node(24, 730, 41);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test403449,"public void test403449() throws Throwable {
    Node node0 = new Node(28);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.valueCheck(node0, nodeUtil_MayBeStringResultPredicate0);
    assertFalse(boolean0);
}",0,
project,0,test404450,"public void test404450() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test405451,"public void test405451() throws Throwable {
    Node node0 = Node.newNumber((-148.689299441848));
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test406452,"public void test406452() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test407453,"public void test407453() throws Throwable {
    Node node0 = new Node(103, 103, 103);
    boolean boolean0 = NodeUtil.isNumericResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test408454,"public void test408454() throws Throwable {
    Node node0 = new Node(12);
    Node node1 = new Node(21, node0, 2, 12);
    boolean boolean0 = NodeUtil.mayBeString(node1, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test409456,"public void test409456() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""NaN"", 116, (-2996));
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = nodeUtil_MayBeStringResultPredicate0.apply(node0);
    assertEquals((-1), node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test410457,"public void test410457() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1), 16);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test410458,"public void test410458() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Infinity"", (-1), 16);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test411459,"public void test411459() throws Throwable {
    Node node0 = new Node(13, 5, 2);
    boolean boolean0 = NodeUtil.mayBeStringHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test412460,"public void test412460() throws Throwable {
    Node node0 = Node.newString(""b"", 67, 67);
    Node node1 = new Node(14, node0);
    boolean boolean0 = NodeUtil.mayBeString(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test413461,"public void test413461() throws Throwable {
    Node node0 = new Node(15);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test414462,"public void test414462() throws Throwable {
    Node node0 = new Node(16);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test415463,"public void test415463() throws Throwable {
    Node node0 = new Node(18, 3194, 18);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test416464,"public void test416464() throws Throwable {
    Node node0 = new Node(20);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test417465,"public void test417465() throws Throwable {
    Node node0 = new Node((byte) (-111));
    Node node1 = new Node(22, node0, 30, 51);
    boolean boolean0 = NodeUtil.isBooleanResult(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test418466,"public void test418466() throws Throwable {
    Node node0 = new Node(23, 23, 23);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test419467,"public void test419467() throws Throwable {
    Node node0 = new Node(24, 33, 41);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,
project,0,test420468,"public void test420468() throws Throwable {
    Node node0 = new Node(25, 25, 25);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test421469,"public void test421469() throws Throwable {
    Node node0 = new Node(26, 26, 26);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test422470,"public void test422470() throws Throwable {
    Node node0 = new Node(27, 27, 27);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test423471,"public void test423471() throws Throwable {
    Node node0 = new Node(28, 120, (-32));
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test424472,"public void test424472() throws Throwable {
    Node node0 = new Node(29, 29, 29);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test426474,"public void test426474() throws Throwable {
    Node node0 = new Node(32, 32, 32);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test427475,"public void test427475() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".;O`Slcy%_p3X"", 127, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(520319, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test427476,"public void test427476() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".;O`Slcy%_p3X"", 127, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(0, node0.getType())"
project,0,test427477,"public void test427477() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, "".;O`Slcy%_p3X"", 127, 127);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test428478,"public void test428478() throws Throwable {
    Node node0 = new Node(34, 34, 34);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test429479,"public void test429479() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    node0.setType(35);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test430480,"public void test430480() throws Throwable {
    Node node0 = new Node(36);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test431481,"public void test431481() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test432482,"public void test432482() throws Throwable {
    Node node0 = Node.newNumber(1605.0);
    boolean boolean0 = NodeUtil.isBooleanResultHelper(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test433483,"public void test433483() throws Throwable {
    Node node0 = new Node(41, 24, 24);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test434484,"public void test434484() throws Throwable {
    Node node0 = new Node(42);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test435485,"public void test435485() throws Throwable {
    Node node0 = Node.newString(43, ""est"");
    boolean boolean0 = NodeUtil.mayBeString(node0);
    assertFalse(boolean0);
}",1,
project,0,test436486,"public void test436486() throws Throwable {
    Node node0 = new Node(44, 21, 44);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test437487,"public void test437487() throws Throwable {
    Node node0 = new Node(46);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test439489,"public void test439489() throws Throwable {
    Node node0 = new Node(48);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test441491,"public void test441491() throws Throwable {
    Node node0 = new Node(50);
    boolean boolean0 = NodeUtil.mayBeString(node0, true);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test442492,"public void test442492() throws Throwable {
    Node node0 = new Node(51);
    boolean boolean0 = NodeUtil.mayBeString(node0, false);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test443493,"public void test443493() throws Throwable {
    Node node0 = new Node(52, 52, 52);
    boolean boolean0 = NodeUtil.isBooleanResult(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test444494,"public void test444494() throws Throwable {
    Node node0 = Node.newString(41, ""&"");
    String string0 = NodeUtil.getArrayElementStringValue(node0);
    assertEquals("""", string0);
}",0,assertNotNull(string0)
project,0,test445495,"public void test445495() throws Throwable {
    Node node0 = Node.newString(""@pnfp"");
    Node node1 = NodeUtil.newUndefinedNode(node0);
    boolean boolean0 = NodeUtil.mayBeString(node1, true);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test446496,"public void test446496() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test447497,"public void test447497() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test448498,"public void test448498() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test449499,"public void test449499() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test450500,"public void test450500() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(100);
    assertTrue(boolean0);
}",0,
project,0,test451501,"public void test451501() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(101);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test452502,"public void test452502() throws Throwable {
    boolean boolean0 = NodeUtil.isAssociative(19);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test453503,"public void test453503() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(9);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test454504,"public void test454504() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(23);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test455505,"public void test455505() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(10);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test456506,"public void test456506() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative(11);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test457507,"public void test457507() throws Throwable {
    boolean boolean0 = NodeUtil.isCommutative((-1223));
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test458508,"public void test458508() throws Throwable {
    Node node0 = Node.newString(""a%xzBsW;[eU/+=o;("");
    // Undeclared exception!
    try {
        NodeUtil.getOpFromAssignmentOp(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // Not an assiment op
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test459509,"public void test459509() throws Throwable {
    Node node0 = new Node(97);
    int int0 = NodeUtil.getOpFromAssignmentOp(node0);
    assertEquals(25, int0);
}",0,"assertEquals(1, int0)"
project,0,test460510,"public void test460510() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qo%Z3!XKv4Ox"", 125, 125);
    boolean boolean0 = NodeUtil.isExpressionNode(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test461511,"public void test461511() throws Throwable {
    Node node0 = new Node(114, 114, (-30));
    Node node1 = NodeUtil.newExpr(node0);
    boolean boolean0 = NodeUtil.isExpressionNode(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test462512,"public void test462512() throws Throwable {
    Node node0 = new Node((byte) 105);
    Node node1 = new Node(51, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.referencesThis(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test463513,"public void test463513() throws Throwable {
    Node node0 = new Node(105);
    // Undeclared exception!
    try {
        NodeUtil.referencesThis(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil$MatchNodeType"", e);
    }
}",0,
project,0,test464514,"public void test464514() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test464515,"public void test464515() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test464516,"public void test464516() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertFalse(node0.hasOneChild());
}",0,assertTrue(node0.hasOneChild())
project,0,test464517,"public void test464517() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertEquals(7690069, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test465518,"public void test465518() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(2, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test465519,"public void test465519() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(7690069, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test465520,"public void test465520() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertNull(node1);
}",0,
project,0,test465521,"public void test465521() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertTrue(node0.isUnscopedQualifiedName());
}",0,
project,0,test465522,"public void test465522() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getPrototypeClassName(node0);
    assertEquals(1877, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test466523,"public void test466523() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    Node node1 = NodeUtil.newVarNode(""NaN"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test466524,"public void test466524() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    Node node1 = NodeUtil.newVarNode(""NaN"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertFalse(node0.hasChildren());
}",0,assertFalse(node0.hasChildren())
project,0,test466525,"public void test466525() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    Node node1 = NodeUtil.newVarNode(""NaN"", node0);
    boolean boolean0 = NodeUtil.isVar(node1);
    assertEquals(208947, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test467526,"public void test467526() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ptotfype"", 98, 98);
    Node node1 = new Node(9, node0, 98, (-2091));
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test467527,"public void test467527() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ptotfype"", 98, 98);
    Node node1 = new Node(9, node0, 98, (-2091));
    NodeUtil.getAssignedValue(node0);
    assertEquals(401506, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test467528,"public void test467528() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""ptotfype"", 98, 98);
    Node node1 = new Node(9, node0, 98, (-2091));
    NodeUtil.getAssignedValue(node0);
    assertEquals(98, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test468529,"public void test468529() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""javascript"", ""javascript"");
    boolean boolean0 = NodeUtil.isString(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test469530,"public void test469530() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qo%Z3!XKv4Ox"", 125, 125);
    boolean boolean0 = NodeUtil.isString(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test470531,"public void test470531() throws Throwable {
    Node node0 = new Node(114, 2009, 60);
    boolean boolean0 = NodeUtil.isPrototypePropertyDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test471532,"public void test471532() throws Throwable {
    JSSourceFile jSSourceFile0 = JSSourceFile.fromCode(""jav3ascrupt"", ""jav3ascrupt"");
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parse(jSSourceFile0);
    PeepholeCollectPropertyAssignments peepholeCollectPropertyAssignments0 = new PeepholeCollectPropertyAssignments();
    Node node1 = peepholeCollectPropertyAssignments0.optimizeSubtree(node0);
    assertFalse(node1.hasMoreThanOneChild());
}",0,assertTrue(node1.hasMoreThanOneChild())
project,0,test472533,"public void test472533() throws Throwable {
    Node node0 = Node.newString(86, ""UUAq%}"");
    boolean boolean0 = NodeUtil.isAssign(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test473534,"public void test473534() throws Throwable {
    Node node0 = new Node(18, 18, 18);
    boolean boolean0 = NodeUtil.isExprCall(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test474535,"public void test474535() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertFalse(boolean0);
}",1,
project,0,test474536,"public void test474536() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertEquals((-1), node0.getCharno());
}",0,"assertEquals(1, node0.getCharno())"
project,0,test474537,"public void test474537() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    boolean boolean0 = NodeUtil.isLValue(node0);
    assertFalse(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test475538,"public void test475538() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(true);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // malformed 'for' statement FOR 115
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test476539,"public void test476539() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    Node node1 = new Node(113, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test477540,"public void test477540() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isLoopStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test478541,"public void test478541() throws Throwable {
    Node node0 = new Node(113);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test479542,"public void test479542() throws Throwable {
    Node node0 = new Node(114, 114, 114);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test480543,"public void test480543() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test481544,"public void test481544() throws Throwable {
    Compiler compiler0 = new Compiler();
    SyntheticAst syntheticAst0 = new SyntheticAst(""Ds"");
    Node node0 = syntheticAst0.getAstRoot(compiler0);
    Node node1 = NodeUtil.getLoopCodeBlock(node0);
    assertNull(node1);
}",0,
project,0,test482545,"public void test482545() throws Throwable {
    Node node0 = new Node(3641, 3641, 3641);
    Node node1 = NodeUtil.newVarNode(""{6\""[~"", node0);
    assertEquals(3641, node1.getCharno());
}",0,
project,0,test482546,"public void test482546() throws Throwable {
    Node node0 = new Node(3641, 3641, 3641);
    Node node1 = NodeUtil.newVarNode(""{6\""[~"", node0);
    assertEquals(118, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test482547,"public void test482547() throws Throwable {
    Node node0 = new Node(3641, 3641, 3641);
    Node node1 = NodeUtil.newVarNode(""{6\""[~"", node0);
    assertFalse(node0.hasOneChild());
}",0,
project,0,test482548,"public void test482548() throws Throwable {
    Node node0 = new Node(3641, 3641, 3641);
    Node node1 = NodeUtil.newVarNode(""{6\""[~"", node0);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test483549,"public void test483549() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node0, 4, 4);
    assertEquals(3, node1.getChildCount());
}",0,"assertEquals(0, node1.getChildCount())"
project,0,test483550,"public void test483550() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node0, 4, 4);
    assertEquals(105, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test483551,"public void test483551() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node0, 4, 4);
    assertEquals(16388, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test483552,"public void test483552() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node0, 4, 4);
    boolean boolean0 = NodeUtil.isWithinLoop(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test484553,"public void test484553() throws Throwable {
    Node node0 = Node.newString((int) (byte) 77, ""DS(-"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test485554,"public void test485554() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test486555,"public void test486555() throws Throwable {
    Node node0 = Node.newString((int) (byte) 110, ""Na"");
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test487556,"public void test487556() throws Throwable {
    Node node0 = new Node(46);
    Node node1 = new Node(113, node0, node0, node0, node0);
    boolean boolean0 = NodeUtil.isControlStructure(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test488557,"public void test488557() throws Throwable {
    Node node0 = Node.newString(""pV)]$x~6m]Sm/91$pq"");
    Node node1 = new Node(114, node0, 1, 40);
    boolean boolean0 = NodeUtil.isControlStructure(node1);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test489558,"public void test489558() throws Throwable {
    Node node0 = new Node(115, 115, 115);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test490559,"public void test490559() throws Throwable {
    Node node0 = new Node(119, 1858, (-928));
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,
project,0,test491560,"public void test491560() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test492561,"public void test492561() throws Throwable {
    Node node0 = Node.newString(126, ""%="", 36, (-3));
    boolean boolean0 = NodeUtil.isControlStructure(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test493562,"public void test493562() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test494563,"public void test494563() throws Throwable {
    Node node0 = Node.newString(64, ""!/D@L+(SKYe`X8V"", 64, 64);
    // Undeclared exception!
    try {
        NodeUtil.isControlStructureCodeBlock(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test495564,"public void test495564() throws Throwable {
    Node node0 = new Node(108, 108, 108);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test496565,"public void test496565() throws Throwable {
    Node node0 = new Node(111);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test497566,"public void test497566() throws Throwable {
    Node node0 = new Node(112);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test498567,"public void test498567() throws Throwable {
    Node node0 = new Node(113);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test499568,"public void test499568() throws Throwable {
    Node node0 = Node.newString(""pV)]$x~6m]Sm/91$pq"");
    Node node1 = new Node(114, node0, 1, 40);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node1, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test500569,"public void test500569() throws Throwable {
    Node node0 = new Node(119, 1858, (-939));
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test501570,"public void test501570() throws Throwable {
    Node node0 = new Node(120);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test502571,"public void test502571() throws Throwable {
    Node node0 = new Node(115, 105, 105);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, (Node) null);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test503572,"public void test503572() throws Throwable {
    Node node0 = new Node(114, 2009, 60);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test504573,"public void test504573() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    node0.addChildToFront(node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test505574,"public void test505574() throws Throwable {
    Node node0 = Node.newString((int) (byte) 110, ""NaN"");
    node0.addChildrenToBack(node0);
    boolean boolean0 = NodeUtil.isControlStructureCodeBlock(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test506575,"public void test506575() throws Throwable {
    Node node0 = Node.newString((int) (byte) 110, ""Na"");
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // SWITCH Na does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test507576,"public void test507576() throws Throwable {
    Node node0 = new Node(111, 111, 111);
    Node node1 = NodeUtil.getConditionExpression(node0);
    assertNull(node1);
}",0,"assertEquals(node0, node1)"
project,0,test508577,"public void test508577() throws Throwable {
    Node node0 = new Node(112, 112, 112);
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // DEFAULT 112 does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test509578,"public void test509578() throws Throwable {
    Node node0 = new Node(114, 114, (-30));
    PeepholeSubstituteAlternateSyntax peepholeSubstituteAlternateSyntax0 = new PeepholeSubstituteAlternateSyntax(false);
    // Undeclared exception!
    try {
        peepholeSubstituteAlternateSyntax0.optimizeSubtree(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.PeepholeSubstituteAlternateSyntax"", e);
    }
}",0,
project,0,test510579,"public void test510579() throws Throwable {
    Node node0 = Node.newString((int) (byte) 77, ""DS(-"");
    // Undeclared exception!
    try {
        NodeUtil.getConditionExpression(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // TRY DS(- does not have a condition.
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test511580,"public void test511580() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""==="", ""==="");
    String string0 = NodeUtil.getSourceName(node0);
    assertEquals("" [testcode] "", string0);
}",0,
project,0,test512582,"public void test512582() throws Throwable {
    Compiler compiler0 = new Compiler();
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""c:NRJ2x+i}6+7"");
    Node node0 = compiler0.parse(jSSourceFile0);
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test513583,"public void test513583() throws Throwable {
    Compiler compiler0 = new Compiler((PrintStream) null);
    Node node0 = compiler0.parseTestCode("""");
    boolean boolean0 = NodeUtil.isStatementParent(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test514584,"public void test514584() throws Throwable {
    Node node0 = Node.newString(111, ""GRQ`7"");
    Node node1 = new Node((-2), node0, (-1), 16);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test515585,"public void test515585() throws Throwable {
    Node node0 = new Node(112, 112, 112);
    Node node1 = new Node(15, node0, 114, 47);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test516586,"public void test516586() throws Throwable {
    Node node0 = new Node(21);
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test517587,"public void test517587() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (-4101), (-4101));
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test518588,"public void test518588() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 30, (-1349));
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test518589,"public void test518589() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, """", 30, (-1349));
    boolean boolean0 = NodeUtil.isReferenceName(node0);
    assertEquals((-1), node0.getLineno());
}",0,
project,0,test519590,"public void test519590() throws Throwable {
    boolean boolean0 = NodeUtil.isLabelName((Node) null);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test520591,"public void test520591() throws Throwable {
    Node node0 = new Node(46);
    boolean boolean0 = NodeUtil.isLabelName(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test521592,"public void test521592() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    node0.addChildToFront(node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Invalid attempt to remove node: TRY 77 of TRY 77
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test522593,"public void test522593() throws Throwable {
    Node node0 = Node.newString(120, ""^l"");
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node0, node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test523594,"public void test523594() throws Throwable {
    JSSourceFile jSSourceFile0 = JSSourceFile.fromFile(""javascript"");
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parse(jSSourceFile0);
    Node node1 = new Node((-5052), node0, 25, 0);
    NodeUtil.removeChild(node0, node0);
    assertEquals(22, Node.TARGETBLOCK_PROP);
}",0,
project,0,test524595,"public void test524595() throws Throwable {
    Node node0 = Node.newString(63, ""Xt,xC*ns_Pswj]"");
    Node node1 = new Node(125, node0, 38, 27);
    NodeUtil.removeChild(node1, node0);
    assertFalse(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test524596,"public void test524596() throws Throwable {
    Node node0 = Node.newString(63, ""Xt,xC*ns_Pswj]"");
    Node node1 = new Node(125, node0, 38, 27);
    NodeUtil.removeChild(node1, node0);
    assertEquals(0, node1.getChildCount());
}",0,"assertEquals(1, node1.getChildCount())"
project,0,test525597,"public void test525597() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    Node node1 = NodeUtil.newVarNode(""NaN"", node0);
    // Undeclared exception!
    try {
        NodeUtil.removeChild(node1, node0);
        fail(""Expecting exception: RuntimeException"");
    } catch (RuntimeException e) {
        //
        // node is not a child
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test526598,"public void test526598() throws Throwable {
    Node node0 = Node.newString(147, ""Unexpected const change.\n  name: "", 147, 147);
    // Undeclared exception!
    try {
        NodeUtil.maybeAddFinally(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test527599,"public void test527599() throws Throwable {
    Node node0 = new Node(77);
    NodeUtil.maybeAddFinally(node0);
    assertEquals(1, node0.getChildCount());
}",0,"assertEquals(1, node0.getChildCount())"
project,0,test527600,"public void test527600() throws Throwable {
    Node node0 = new Node(77);
    NodeUtil.maybeAddFinally(node0);
    assertTrue(node0.hasChildren());
}",0,assertTrue(node0.hasChildren())
project,0,test528601,"public void test528601() throws Throwable {
    Node node0 = new Node(30, 30, 30);
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test529602,"public void test529602() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""="");
    // Undeclared exception!
    try {
        NodeUtil.tryMergeBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test530603,"public void test530603() throws Throwable {
    Node node0 = new Node(37);
    boolean boolean0 = NodeUtil.isCallOrNew(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test531604,"public void test531604() throws Throwable {
    Node node0 = new Node(127);
    // Undeclared exception!
    try {
        NodeUtil.getArgumentForCallOrNew(node0, 28);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test532605,"public void test532605() throws Throwable {
    Node node0 = new Node(35);
    boolean boolean0 = NodeUtil.isThis(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test533606,"public void test533606() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (byte) 105, (byte) 105);
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test533607,"public void test533607() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""infinity"", (byte) 105, (byte) 105);
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertEquals(430185, node0.getSourcePosition());
}",0,"assertEquals(0, node0.getSourcePosition())"
project,0,test534608,"public void test534608() throws Throwable {
    Node node0 = new Node(63);
    boolean boolean0 = NodeUtil.isArrayLiteral(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test535609,"public void test535609() throws Throwable {
    Node node0 = new Node(26, 26, 26);
    boolean boolean0 = NodeUtil.isHoistedFunctionDeclaration(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test536610,"public void test536610() throws Throwable {
    Node node0 = new Node(114, 114, (-30));
    boolean boolean0 = NodeUtil.isEmptyFunctionExpression(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test537611,"public void test537611() throws Throwable {
    Node node0 = new Node((byte) 105);
    Node node1 = new Node(51, node0, node0, node0, node0);
    // Undeclared exception!
    try {
        NodeUtil.isEmptyFunctionExpression(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test538612,"public void test538612() throws Throwable {
    Node node0 = Node.newString("""", (-2157), (-1731));
    Node node1 = new Node(37, node0);
    boolean boolean0 = NodeUtil.isSimpleFunctionObjectCall(node1);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test539613,"public void test539613() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test540614,"public void test540614() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""I%*6)5+TI"", (Node) null);
    assertNotNull(node0);
}",0,assertNotNull(node0)
project,0,test540615,"public void test540615() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""I%*6)5+TI"", (Node) null);
    boolean boolean0 = NodeUtil.isVarOrSimpleAssignLhs(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test541616,"public void test541616() throws Throwable {
    Node node0 = Node.newString(""]@jJ\""*"");
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test542617,"public void test542617() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    // Undeclared exception!
    try {
        NodeUtil.isLValue(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test543618,"public void test543618() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""]@jJ\""*"", node0);
    Node node2 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node1, 4, 4);
    assertEquals(16388, node2.getSourcePosition());
}",0,
project,0,test543619,"public void test543619() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""]@jJ\""*"", node0);
    Node node2 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node1, 4, 4);
    assertEquals(38, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test543620,"public void test543620() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""]@jJ\""*"", node0);
    Node node2 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node1, 4, 4);
    assertEquals(3, node2.getChildCount());
}",0,
project,0,test543621,"public void test543621() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""]@jJ\""*"", node0);
    Node node2 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node1, 4, 4);
    assertEquals(105, node2.getType());
}",0,"assertEquals(0, node2.getType())"
project,0,test543622,"public void test543622() throws Throwable {
    Stack<Node> stack0 = new Stack<Node>();
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = Node.newString(""]@jJ\""*"");
    Node node1 = NodeUtil.newName(closureCodingConvention0, ""]@jJ\""*"", node0);
    Node node2 = NodeUtil.newFunctionNode(""]@jJ\""*"", stack0, node1, 4, 4);
    boolean boolean0 = NodeUtil.isLValue(node1);
    assertFalse(boolean0);
}",1,
project,0,test544623,"public void test544623() throws Throwable {
    Node node0 = Node.newString(147, ""Unexpected const change.\n  name: "", 147, 147);
    boolean boolean0 = NodeUtil.isObjectLitKey(node0, node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test545624,"public void test545624() throws Throwable {
    Node node0 = Node.newString(""0W7M,|qo%Z3!XKv4Ox"", 125, 125);
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""0W7M,|qo%Z3!XKv4Ox"", string0);
}",1,
project,0,test546625,"public void test546625() throws Throwable {
    Node node0 = new Node(30);
    // Undeclared exception!
    try {
        NodeUtil.getObjectLitKeyName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected node type: NEW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test547626,"public void test547626() throws Throwable {
    Node node0 = Node.newString(147, ""Unexpected const change.\n  name: "", 147, 147);
    String string0 = NodeUtil.getObjectLitKeyName(node0);
    assertEquals(""Unexpected const change.\n  name: "", string0);
}",1,
project,0,test548627,"public void test548627() throws Throwable {
    Node node0 = Node.newString(102, "">"");
    JSType jSType0 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, (JSType) null);
    assertNull(jSType0);
}",0,assertNotNull(jSType0)
project,0,test549628,"public void test549628() throws Throwable {
    Node node0 = new Node(102);
    SimpleErrorReporter simpleErrorReporter0 = new SimpleErrorReporter();
    JSTypeRegistry jSTypeRegistry0 = new JSTypeRegistry(simpleErrorReporter0);
    JSType jSType0 = jSTypeRegistry0.createNamedType("">"", "".!lB_@F\""!"", 1, 46);
    JSType jSType1 = NodeUtil.getObjectLitKeyTypeFromValueType(node0, jSType0);
    assertFalse(jSType1.isEnumType());
}",0,assertTrue(jSType1.isEnumType())
project,0,test550629,"public void test550629() throws Throwable {
    Node node0 = new Node(43, 29, 19);
    boolean boolean0 = NodeUtil.isGetOrSetKey(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test551630,"public void test551630() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(9);
    assertEquals(""|"", string0);
}",1,
project,0,test552631,"public void test552631() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(88);
    assertEquals(""^="", string0);
}",1,
project,0,test553632,"public void test553632() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(10);
    assertEquals(""^"", string0);
}",1,
project,0,test554633,"public void test554633() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(11);
    assertEquals(""&"", string0);
}",1,
project,0,test555634,"public void test555634() throws Throwable {
    String string0 = NodeUtil.opToStr(12);
    assertEquals(""=="", string0);
}",0,
project,0,test556635,"public void test556635() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(13);
    assertEquals(""!="", string0);
}",1,
project,0,test557636,"public void test557636() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(14);
    assertEquals(""<"", string0);
}",1,
project,0,test558637,"public void test558637() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(15);
    assertEquals(""<="", string0);
}",1,
project,0,test559638,"public void test559638() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(16);
    assertEquals("">"", string0);
}",1,
project,0,test560639,"public void test560639() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(17);
    assertEquals("">="", string0);
}",1,
project,0,test561640,"public void test561640() throws Throwable {
    String string0 = NodeUtil.opToStr(18);
    assertEquals(""<<"", string0);
}",0,
project,0,test562641,"public void test562641() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(19);
    assertEquals("">>"", string0);
}",1,
project,0,test563642,"public void test563642() throws Throwable {
    String string0 = NodeUtil.opToStr(20);
    assertEquals("">>>"", string0);
}",0,
project,0,test564643,"public void test564643() throws Throwable {
    String string0 = NodeUtil.opToStr(21);
    assertEquals(""+"", string0);
}",0,
project,0,test565644,"public void test565644() throws Throwable {
    String string0 = NodeUtil.opToStr(22);
    assertEquals(""-"", string0);
}",0,
project,0,test566645,"public void test566645() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(23);
    assertEquals(""*"", string0);
}",1,
project,0,test567646,"public void test567646() throws Throwable {
    String string0 = NodeUtil.opToStr(24);
    assertEquals(""/"", string0);
}",0,
project,0,test568647,"public void test568647() throws Throwable {
    String string0 = NodeUtil.opToStr(25);
    assertEquals(""%"", string0);
}",0,
project,0,test569648,"public void test569648() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(26);
    assertEquals(""!"", string0);
}",1,
project,0,test570649,"public void test570649() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(27);
    assertEquals(""~"", string0);
}",1,
project,0,test571650,"public void test571650() throws Throwable {
    String string0 = NodeUtil.opToStr(28);
    assertEquals(""+"", string0);
}",0,
project,0,test572651,"public void test572651() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(29);
    assertEquals(""-"", string0);
}",1,
project,0,test573652,"public void test573652() throws Throwable {
    String string0 = NodeUtil.opToStr(30);
    assertNull(string0);
}",0,
project,0,test574653,"public void test574653() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(31);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 31: DELPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test575654,"public void test575654() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(32);
    assertEquals(""typeof"", string0);
}",1,
project,0,test576655,"public void test576655() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(33);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 33: GETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test577656,"public void test577656() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(34);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 34: SETPROP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test578657,"public void test578657() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(35);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 35: GETELEM
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test579658,"public void test579658() throws Throwable {
    String string0 = NodeUtil.opToStr(36);
    assertNull(string0);
}",0,
project,0,test580659,"public void test580659() throws Throwable {
    String string0 = NodeUtil.opToStr(37);
    assertNull(string0);
}",0,
project,0,test581660,"public void test581660() throws Throwable {
    String string0 = NodeUtil.opToStr(38);
    assertNull(string0);
}",0,
project,0,test582661,"public void test582661() throws Throwable {
    String string0 = NodeUtil.opToStr(39);
    assertNull(string0);
}",0,
project,0,test583662,"public void test583662() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(40);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 40: STRING
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test584663,"public void test584663() throws Throwable {
    String string0 = NodeUtil.opToStr(41);
    assertNull(string0);
}",0,
project,0,test585664,"public void test585664() throws Throwable {
    String string0 = NodeUtil.opToStr(42);
    assertNull(string0);
}",0,
project,0,test586665,"public void test586665() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(43);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 43: FALSE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test587666,"public void test587666() throws Throwable {
    String string0 = NodeUtil.opToStr(44);
    assertNull(string0);
}",0,
project,0,test588667,"public void test588667() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(45);
    assertEquals(""==="", string0);
}",1,
project,0,test589668,"public void test589668() throws Throwable {
    String string0 = NodeUtil.opToStr(46);
    assertEquals(""!=="", string0);
}",0,
project,0,test590669,"public void test590669() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(47);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 47: REGEXP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test591670,"public void test591670() throws Throwable {
    String string0 = NodeUtil.opToStr(48);
    assertNull(string0);
}",0,
project,0,test592671,"public void test592671() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(49);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 49: THROW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test593672,"public void test593672() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(50);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 50: RETHROW
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test594673,"public void test594673() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(51);
    assertEquals(""in"", string0);
}",1,
project,0,test595674,"public void test595674() throws Throwable {
    String string0 = NodeUtil.opToStr(52);
    assertEquals(""instanceof"", string0);
}",0,
project,0,test596675,"public void test596675() throws Throwable {
    String string0 = NodeUtil.opToStr(53);
    assertNull(string0);
}",0,
project,0,test597676,"public void test597676() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(54);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 54: GETVAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test598677,"public void test598677() throws Throwable {
    String string0 = NodeUtil.opToStr(55);
    assertNull(string0);
}",0,
project,0,test599678,"public void test599678() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(56);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 56: CATCH_SCOPE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test600679,"public void test600679() throws Throwable {
    String string0 = NodeUtil.opToStr(57);
    assertNull(string0);
}",0,
project,0,test601680,"public void test601680() throws Throwable {
    String string0 = NodeUtil.opToStr(59);
    assertNull(string0);
}",0,
project,0,test602681,"public void test602681() throws Throwable {
    String string0 = NodeUtil.opToStr(60);
    assertNull(string0);
}",0,
project,0,test603682,"public void test603682() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(61);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 61: THISFN
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test604683,"public void test604683() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(62);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 62: RETURN_RESULT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test605684,"public void test605684() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(63);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 63: ARRAYLIT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test606685,"public void test606685() throws Throwable {
    String string0 = NodeUtil.opToStr(64);
    assertNull(string0);
}",0,
project,0,test607686,"public void test607686() throws Throwable {
    String string0 = NodeUtil.opToStr(65);
    assertNull(string0);
}",0,
project,0,test608687,"public void test608687() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(66);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 66: SET_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test609688,"public void test609688() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(67);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 67: DEL_REF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test610689,"public void test610689() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(68);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 68: REF_CALL
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test611690,"public void test611690() throws Throwable {
    String string0 = NodeUtil.opToStr(71);
    assertNull(string0);
}",0,
project,0,test612691,"public void test612691() throws Throwable {
    String string0 = NodeUtil.opToStr(72);
    assertNull(string0);
}",0,
project,0,test613692,"public void test613692() throws Throwable {
    String string0 = NodeUtil.opToStr(73);
    assertNull(string0);
}",0,
project,0,test614693,"public void test614693() throws Throwable {
    String string0 = NodeUtil.opToStr(74);
    assertNull(string0);
}",0,
project,0,test615694,"public void test615694() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(75);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 75: REF_NAME
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test616695,"public void test616695() throws Throwable {
    String string0 = NodeUtil.opToStr(76);
    assertNull(string0);
}",0,
project,0,test617696,"public void test617696() throws Throwable {
    String string0 = NodeUtil.opToStr(77);
    assertNull(string0);
}",0,
project,0,test618697,"public void test618697() throws Throwable {
    String string0 = NodeUtil.opToStr(78);
    assertNull(string0);
}",0,
project,0,test619698,"public void test619698() throws Throwable {
    String string0 = NodeUtil.opToStr(79);
    assertNull(string0);
}",0,
project,0,test620699,"public void test620699() throws Throwable {
    String string0 = NodeUtil.opToStr(80);
    assertNull(string0);
}",0,
project,0,test621700,"public void test621700() throws Throwable {
    String string0 = NodeUtil.opToStr(81);
    assertNull(string0);
}",0,
project,0,test622701,"public void test622701() throws Throwable {
    String string0 = NodeUtil.opToStr(82);
    assertNull(string0);
}",0,
project,0,test623702,"public void test623702() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail((byte) 83);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 83: LP
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test624703,"public void test624703() throws Throwable {
    String string0 = NodeUtil.opToStr(84);
    assertNull(string0);
}",0,
project,0,test625704,"public void test625704() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(85);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 85: COMMA
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test626705,"public void test626705() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(86);
    assertEquals(""="", string0);
}",1,
project,0,test627706,"public void test627706() throws Throwable {
    String string0 = NodeUtil.opToStr(87);
    assertEquals(""|="", string0);
}",0,
project,0,test628707,"public void test628707() throws Throwable {
    String string0 = NodeUtil.opToStr(89);
    assertEquals(""&="", string0);
}",0,
project,0,test629708,"public void test629708() throws Throwable {
    String string0 = NodeUtil.opToStr(90);
    assertEquals(""<<="", string0);
}",0,
project,0,test630709,"public void test630709() throws Throwable {
    String string0 = NodeUtil.opToStr(91);
    assertEquals("">>="", string0);
}",0,
project,0,test631710,"public void test631710() throws Throwable {
    String string0 = NodeUtil.opToStr(92);
    assertEquals("">>>="", string0);
}",0,
project,0,test632711,"public void test632711() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(94);
    assertEquals(""-="", string0);
}",1,
project,0,test633712,"public void test633712() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(95);
    assertEquals(""*="", string0);
}",1,
project,0,test634713,"public void test634713() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(96);
    assertEquals(""/="", string0);
}",1,
project,0,test635714,"public void test635714() throws Throwable {
    String string0 = NodeUtil.opToStr(97);
    assertEquals(""%="", string0);
}",0,
project,0,test636715,"public void test636715() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(98);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 98: HOOK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test637716,"public void test637716() throws Throwable {
    String string0 = NodeUtil.opToStr(99);
    assertNull(string0);
}",0,
project,0,test638717,"public void test638717() throws Throwable {
    String string0 = NodeUtil.opToStr(100);
    assertEquals(""||"", string0);
}",0,
project,0,test639718,"public void test639718() throws Throwable {
    String string0 = NodeUtil.opToStr(101);
    assertEquals(""&&"", string0);
}",0,
project,0,test640719,"public void test640719() throws Throwable {
    String string0 = NodeUtil.opToStr(102);
    assertNull(string0);
}",0,
project,0,test641720,"public void test641720() throws Throwable {
    String string0 = NodeUtil.opToStr(103);
    assertNull(string0);
}",0,
project,0,test642721,"public void test642721() throws Throwable {
    String string0 = NodeUtil.opToStr(104);
    assertNull(string0);
}",0,
project,0,test643722,"public void test643722() throws Throwable {
    String string0 = NodeUtil.opToStr(105);
    assertNull(string0);
}",0,
project,0,test644723,"public void test644723() throws Throwable {
    String string0 = NodeUtil.opToStr(106);
    assertNull(string0);
}",0,
project,0,test645724,"public void test645724() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(107);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 107: IMPORT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test646725,"public void test646725() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(108);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 108: IF
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test647726,"public void test647726() throws Throwable {
    String string0 = NodeUtil.opToStr(109);
    assertNull(string0);
}",0,
project,0,test648727,"public void test648727() throws Throwable {
    String string0 = NodeUtil.opToStr(110);
    assertNull(string0);
}",0,
project,0,test649728,"public void test649728() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(111);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 111: CASE
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test650729,"public void test650729() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(112);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 112: DEFAULT
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test651730,"public void test651730() throws Throwable {
    String string0 = NodeUtil.opToStr(113);
    assertNull(string0);
}",0,
project,0,test652731,"public void test652731() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(114);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 114: DO
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test653732,"public void test653732() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(115);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 115: FOR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test654733,"public void test654733() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(116);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 116: BREAK
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test655734,"public void test655734() throws Throwable {
    String string0 = NodeUtil.opToStr(117);
    assertNull(string0);
}",0,
project,0,test656735,"public void test656735() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(118);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 118: VAR
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test657736,"public void test657736() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(119);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 119: WITH
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test658737,"public void test658737() throws Throwable {
    String string0 = NodeUtil.opToStr(120);
    assertNull(string0);
}",0,
project,0,test659738,"public void test659738() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail(121);
        fail(""Expecting exception: Error"");
    } catch (Error e) {
        //
        // Unknown op 121: FINALLY
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",1,
project,0,test660739,"public void test660739() throws Throwable {
    String string0 = NodeUtil.opToStrNoFail(122);
    assertEquals(""void"", string0);
}",1,
project,0,test661740,"public void test661740() throws Throwable {
    // Undeclared exception!
    try {
        NodeUtil.opToStrNoFail((-1382));
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // -1382
        //
        verifyException(""com.google.javascript.rhino.Token"", e);
    }
}",1,
project,0,test662741,"public void test662741() throws Throwable {
    Node node0 = new Node(113);
    NodeUtil.copyNameAnnotations(node0, node0);
    assertEquals(9, Node.FIXUPS_PROP);
}",0,
project,0,test663742,"public void test663742() throws Throwable {
    Node node0 = NodeUtil.newVarNode(""+"", (Node) null);
    Node[] nodeArray0 = new Node[1];
    nodeArray0[0] = node0;
    Node node1 = new Node(8, nodeArray0);
    // Undeclared exception!
    try {
        NodeUtil.redeclareVarsInsideBranch(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test664743,"public void test664743() throws Throwable {
    Node node0 = new Node(73);
    Stack<Node> stack0 = new Stack<Node>();
    stack0.add(node0);
    // Undeclared exception!
    try {
        NodeUtil.newFunctionNode(""="", stack0, node0, 40, (-1537));
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test665744,"public void test665744() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(7690069, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test665745,"public void test665745() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(7690069, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test665746,"public void test665746() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertFalse(node1.hasChildren());
}",0,assertFalse(node1.hasChildren())
project,0,test665747,"public void test665747() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertTrue(node0.hasMoreThanOneChild());
}",0,assertTrue(node0.hasMoreThanOneChild())
project,0,test665748,"public void test665748() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(googleCodingConvention0, ""com.google.javascript.jscomp.NodeUtil$MatchNotFunction"", 1877, 1877);
    Node node1 = NodeUtil.getRootOfQualifiedName(node0);
    assertEquals(33, node0.getType());
}",0,"assertEquals(1, node0.getType())"
project,0,test666749,"public void test666749() throws Throwable {
    Node node0 = Node.newString(41, ""&"");
    // Undeclared exception!
    try {
        NodeUtil.getRootOfQualifiedName(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test667750,"public void test667750() throws Throwable {
    GoogleCodingConvention googleCodingConvention0 = new GoogleCodingConvention();
    // Undeclared exception!
    try {
        NodeUtil.newName(googleCodingConvention0, ""X"", (Node) null, ""Unexpected node type:"");
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test668751,"public void test668751() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""google"");
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test669752,"public void test669752() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""hK~feU-.rEMv<ZTc;("");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test670753,"public void test670753() throws Throwable {
    boolean boolean0 = NodeUtil.isValidPropertyName(""in"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test671754,"public void test671754() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(520319, node0.getSourcePosition());
}",0,"assertEquals(1, node0.getSourcePosition())"
project,0,test671755,"public void test671755() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""pototfype"", 127, 127);
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(127, node0.getLineno());
}",0,"assertEquals(1, node0.getLineno())"
project,0,test672756,"public void test672756() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = Normalize.parseAndNormalizeTestCode(compiler0, ""javascript"", ""javascript"");
    NodeUtil.redeclareVarsInsideBranch(node0);
    assertEquals(28, Node.DEBUGSOURCE_PROP);
}",0,
project,0,test673757,"public void test673757() throws Throwable {
    ClosureCodingConvention closureCodingConvention0 = new ClosureCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(closureCodingConvention0, ""Zio!X(b^2}~s"", (-1), (-1));
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test674758,"public void test674758() throws Throwable {
    Node node0 = new Node(26);
    boolean boolean0 = NodeUtil.isPrototypeProperty(node0);
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test675759,"public void test675759() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""y|Ld16VPwWb"");
    boolean boolean0 = NodeUtil.isNameReferenced(node0, ""y|Ld16VPwWb"");
    assertFalse(boolean0);
}",0,assertTrue(boolean0)
project,0,test676760,"public void test676760() throws Throwable {
    Node node0 = new Node(42);
    boolean boolean0 = NodeUtil.referencesThis(node0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test678763,"public void test678763() throws Throwable {
    Node node0 = new Node(127, 127, 127);
    Node node1 = NodeUtil.newVarNode(""google"", node0);
    NodeUtil.MatchDeclaration nodeUtil_MatchDeclaration0 = new NodeUtil.MatchDeclaration();
    boolean boolean0 = nodeUtil_MatchDeclaration0.apply(node1);
    assertEquals(520319, node1.getSourcePosition());
}",0,"assertEquals(0, node1.getSourcePosition())"
project,0,test680765,"public void test680765() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertFalse(node0.hasChildren());
}",0,
project,0,test680766,"public void test680766() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertFalse(boolean0);
}",0,
project,0,test680767,"public void test680767() throws Throwable {
    DefaultCodingConvention defaultCodingConvention0 = new DefaultCodingConvention();
    Node node0 = NodeUtil.newQualifiedNameNode(defaultCodingConvention0, ""y46qHKv--EBMJ"", (byte) 100, (-4417));
    Node node1 = new Node(7, node0, 88, 37);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertEquals((-1), node0.getLineno());
}",0,"assertEquals(0, node0.getLineno())"
project,0,test681768,"public void test681768() throws Throwable {
    Node node0 = Node.newString(97, ""gq+GBjO"");
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    Node node1 = new Node(27, node0, node0);
    Predicate<Node> predicate0 = PeepholeSubstituteAlternateSyntax.DONT_TRAVERSE_FUNCTIONS_PREDICATE;
    boolean boolean0 = NodeUtil.has(node1, nodeUtil_MayBeStringResultPredicate0, predicate0);
    assertTrue(boolean0);
}",0,assertTrue(boolean0)
project,0,test682769,"public void test682769() throws Throwable {
    Node node0 = new Node(98);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    int int0 = NodeUtil.getCount(node0, sourceMap_DetailLevel0, nodeUtil_BooleanResultPredicate0);
    assertEquals(1, int0);
}",0,"assertEquals(1, int0)"
project,0,test683770,"public void test683770() throws Throwable {
    Node node0 = Node.newNumber((double) (-4101), (-4101), (-4101));
    node0.addChildToBack(node0);
    // Undeclared exception!
    NodeUtil.getNameReferenceCount(node0, ""com.google.javascript.jscomp.TypeValidator"");
}",0,
project,0,test684771,"public void test684771() throws Throwable {
    Node node0 = Node.newString(95, ""UUAq*]"");
    NodeUtil.NumbericResultPredicate nodeUtil_NumbericResultPredicate0 = new NodeUtil.NumbericResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node0, (NodeUtil.Visitor) null, nodeUtil_NumbericResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test685772,"public void test685772() throws Throwable {
    Node node0 = new Node(73);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    Node node1 = NodeUtil.newVarNode(""void"", node0);
    // Undeclared exception!
    try {
        NodeUtil.visitPostOrder(node1, (NodeUtil.Visitor) null, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test686773,"public void test686773() throws Throwable {
    Node node0 = new Node(84);
    // Undeclared exception!
    try {
        NodeUtil.hasFinally(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test687774,"public void test687774() throws Throwable {
    Node node0 = NodeUtil.newUndefinedNode((Node) null);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test688775,"public void test688775() throws Throwable {
    Node node0 = new Node(77);
    // Undeclared exception!
    try {
        NodeUtil.getCatchBlock(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test689776,"public void test689776() throws Throwable {
    Node node0 = new Node(77, 77, 77);
    // Undeclared exception!
    try {
        NodeUtil.hasCatchHandler(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test690777,"public void test690777() throws Throwable {
    Compiler compiler0 = new Compiler();
    Node node0 = compiler0.parseTestCode(""%p"");
    boolean boolean0 = NodeUtil.hasCatchHandler(node0);
    assertFalse(boolean0);
}",0,assertFalse(boolean0)
project,0,test691778,"public void test691778() throws Throwable {
    Node node0 = new Node((byte) 16);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionParameters(node0);
        fail(""Expecting exception: IllegalArgumentException"");
    } catch (IllegalArgumentException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test692779,"public void test692779() throws Throwable {
    Node node0 = new Node((byte) 105, (byte) 105, (byte) 105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionParameters(node0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test693780,"public void test693780() throws Throwable {
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode((Node) null);
    assertNull(jSDocInfo0);
}",0,
project,0,test694781,"public void test694781() throws Throwable {
    Node node0 = new Node(75, 75, 75);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test695782,"public void test695782() throws Throwable {
    Node node0 = new Node(33, 59, 59);
    node0.addSuppression(""di6!c"");
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0.getLicense());
}",0,
project,0,test696783,"public void test696783() throws Throwable {
    Node node0 = new Node(55);
    Node node1 = new Node(55, node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getInfoForNameNode(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test697784,"public void test697784() throws Throwable {
    Node node0 = new Node(115, 105, 105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionJSDocInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",0,
project,0,test698785,"public void test698785() throws Throwable {
    Node node0 = new Node((byte) 105);
    // Undeclared exception!
    try {
        NodeUtil.getFunctionJSDocInfo(node0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.common.base.Preconditions"", e);
    }
}",1,
project,0,test699786,"public void test699786() throws Throwable {
    Node node0 = new Node((byte) 105);
    Node node1 = new Node(15, node0, node0, node0);
    JSDocInfo jSDocInfo0 = NodeUtil.getFunctionJSDocInfo(node0);
    assertNull(jSDocInfo0);
}",0,
project,0,test700787,"public void test700787() throws Throwable {
    Node node0 = new Node(46);
    String string0 = NodeUtil.getSourceName(node0);
    assertNull(string0);
}",0,
project,0,test701788,"public void test701788() throws Throwable {
    Node node0 = new Node(33, 59, 59);
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, (Node[]) null);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test702789,"public void test702789() throws Throwable {
    Node node0 = new Node(37);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    assertTrue(node1.hasOneChild());
}",0,assertFalse(node1.hasOneChild())
project,0,test702790,"public void test702790() throws Throwable {
    Node node0 = new Node(37);
    Node[] nodeArray0 = new Node[0];
    Node node1 = NodeUtil.newCallNode(node0, nodeArray0);
    assertEquals(37, node1.getType());
}",0,"assertEquals(0, node1.getType())"
project,0,test703791,"public void test703791() throws Throwable {
    Node node0 = new Node(102, 102, 102);
    Node[] nodeArray0 = new Node[3];
    // Undeclared exception!
    try {
        NodeUtil.newCallNode(node0, nodeArray0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.rhino.Node"", e);
    }
}",0,
project,0,test704792,"public void test704792() throws Throwable {
    Node node0 = new Node(31);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test705793,"public void test705793() throws Throwable {
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    Node node0 = Node.newString(32, ""pV)]$x~6m]Sm/91$pq"");
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test706794,"public void test706794() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    Node node1 = new Node(35, node0, 39, 4095);
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(17);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNodeType0);
    assertFalse(boolean0);
}",0,
project,0,test707795,"public void test707795() throws Throwable {
    Node node0 = new Node(36, 36, 36);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETELEM 36
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test708796,"public void test708796() throws Throwable {
    Node node0 = new Node(42, 13, 42);
    NodeUtil.MatchShallowStatement nodeUtil_MatchShallowStatement0 = new NodeUtil.MatchShallowStatement();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchShallowStatement0);
    assertTrue(boolean0);
}",0,
project,0,test709797,"public void test709797() throws Throwable {
    Node node0 = new Node(45);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test710798,"public void test710798() throws Throwable {
    Node node0 = new Node(46, 46, 46);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test711799,"public void test711799() throws Throwable {
    Node node0 = new Node(47);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test712800,"public void test712800() throws Throwable {
    Node node0 = new Node(48, 48, 2530);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeBINDNAME 48
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test713801,"public void test713801() throws Throwable {
    Node node0 = new Node(49);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeTHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test714802,"public void test714802() throws Throwable {
    Node node0 = new Node(50);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRETHROW
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test715803,"public void test715803() throws Throwable {
    Node node0 = new Node(51, 51, 51);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test716804,"public void test716804() throws Throwable {
    Node node0 = new Node(53, 53, 52);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLOCAL_LOAD 53
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test717805,"public void test717805() throws Throwable {
    Node node0 = new Node(55);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSETVAR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test718806,"public void test718806() throws Throwable {
    Node node0 = new Node(56);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCATCH_SCOPE
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test719807,"public void test719807() throws Throwable {
    Node node0 = new Node(58);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeENUM_INIT_VALUES
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test720808,"public void test720808() throws Throwable {
    Node node0 = new Node(63);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test721809,"public void test721809() throws Throwable {
    Node node0 = new Node(64);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test722810,"public void test722810() throws Throwable {
    Node node0 = new Node(68, 68, 68);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_CALL 68
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test723811,"public void test723811() throws Throwable {
    Node node0 = Node.newString(""8u^!EG#/3dG0"", 41, (-2241));
    Node node1 = new Node(69, node0);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_SPECIAL
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test724812,"public void test724812() throws Throwable {
    Node node0 = Node.newString(70, ""arguments"");
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeDEFAULTNAMESPACE arguments
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test725813,"public void test725813() throws Throwable {
    Node node0 = new Node(71);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLATTR
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test726814,"public void test726814() throws Throwable {
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType(536870912);
    Node node0 = new Node(72, 536870912, 72);
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNodeType0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeESCXMLTEXT 0
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test727815,"public void test727815() throws Throwable {
    Node node0 = new Node(73);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_MEMBER
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test728816,"public void test728816() throws Throwable {
    Node node0 = new Node(75);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = new NodeUtil.MayBeStringResultPredicate();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeREF_NAME
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test729817,"public void test729817() throws Throwable {
    Node node0 = new Node(78, 78, 78);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeSEMI 78
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test730818,"public void test730818() throws Throwable {
    Node node0 = new Node(79, 79, 79);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLB 79
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test731819,"public void test731819() throws Throwable {
    Node node0 = new Node(81, 81, 81);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeLC 81
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test732820,"public void test732820() throws Throwable {
    Node node0 = new Node(82);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeRC
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test733821,"public void test733821() throws Throwable {
    Node node0 = new Node(85);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test734822,"public void test734822() throws Throwable {
    Node node0 = new Node(86, 86, 86);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = NodeUtil.BOOLEAN_RESULT_PREDICATE;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test735823,"public void test735823() throws Throwable {
    Node node0 = new Node(87);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test736824,"public void test736824() throws Throwable {
    Node node0 = new Node(88, 88, 88);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test737825,"public void test737825() throws Throwable {
    Node node0 = new Node(89, (-695), 41);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test738826,"public void test738826() throws Throwable {
    Node node0 = new Node(90, 90, 90);
    NodeUtil.BooleanResultPredicate nodeUtil_BooleanResultPredicate0 = new NodeUtil.BooleanResultPredicate();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_BooleanResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test739827,"public void test739827() throws Throwable {
    Node node0 = new Node(91);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test740828,"public void test740828() throws Throwable {
    Node node0 = new Node(92, 916, 92);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test741829,"public void test741829() throws Throwable {
    Node node0 = new Node(93);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test742830,"public void test742830() throws Throwable {
    Node node0 = new Node(94);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test743831,"public void test743831() throws Throwable {
    Node node0 = new Node(95);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test744832,"public void test744832() throws Throwable {
    Node node0 = new Node(96);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test745833,"public void test745833() throws Throwable {
    Node node0 = new Node(97);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test746834,"public void test746834() throws Throwable {
    Node node0 = new Node(98);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test747835,"public void test747835() throws Throwable {
    Node node0 = new Node(99);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: IllegalStateException"");
    } catch (IllegalStateException e) {
        //
        // Unexpected expression nodeCOLON
        //  parent:null
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test748836,"public void test748836() throws Throwable {
    Node node0 = new Node(101, 101, 117);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.ALL;
    // Undeclared exception!
    try {
        NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
        fail(""Expecting exception: NullPointerException"");
    } catch (NullPointerException e) {
        //
        // no message in exception (getMessage() returned null)
        //
        verifyException(""com.google.javascript.jscomp.NodeUtil"", e);
    }
}",0,
project,0,test749837,"public void test749837() throws Throwable {
    Node node0 = new Node(102);
    NodeUtil.MayBeStringResultPredicate nodeUtil_MayBeStringResultPredicate0 = NodeUtil.MAY_BE_STRING_PREDICATE;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MayBeStringResultPredicate0);
    assertTrue(boolean0);
}",0,
project,0,test750838,"public void test750838() throws Throwable {
    Node node0 = Node.newString(103, ""1xu$?x^(vY"");
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test751839,"public void test751839() throws Throwable {
    Node node0 = new Node((byte) 105, (byte) 105, (byte) 105);
    NodeUtil.MatchNotFunction nodeUtil_MatchNotFunction0 = new NodeUtil.MatchNotFunction();
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, nodeUtil_MatchNotFunction0);
    assertTrue(boolean0);
}",0,
project,0,test752840,"public void test752840() throws Throwable {
    Node node0 = new Node(100, 100, 100);
    Node node1 = new Node(27);
    node0.addChildrenToBack(node1);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
project,0,test753841,"public void test753841() throws Throwable {
    NodeUtil.MatchNodeType nodeUtil_MatchNodeType0 = new NodeUtil.MatchNodeType((-2192));
    Node node0 = Node.newString("""", (-2192), (-1720));
    Node node1 = new Node(37, node0);
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node1, nodeUtil_MatchNodeType0);
    assertFalse(boolean0);
}",0,
project,0,test754842,"public void test754842() throws Throwable {
    Node node0 = new Node(30);
    SourceMap.DetailLevel sourceMap_DetailLevel0 = SourceMap.DetailLevel.SYMBOLS;
    boolean boolean0 = NodeUtil.evaluatesToLocalValue(node0, sourceMap_DetailLevel0);
    assertTrue(boolean0);
}",0,
