/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 15 00:09:55 GMT 2023
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.PrintWriter;
import java.util.Comparator;
import org.apache.commons.cli.HelpFormatter;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.OptionGroup;
import org.apache.commons.cli.Options;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockPrintWriter;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class HelpFormatter_ESTest extends HelpFormatter_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test003() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test005() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test006() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test007() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getWidth();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test018() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("--");
    }

    @Test(timeout = 4000)
    public void test019() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("--");
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test0111() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("--");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0112() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("--");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0114() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("--");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0115() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptPrefix("--");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0216() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0217() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
    }

    @Test(timeout = 4000)
    public void test0218() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test0220() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0221() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0223() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getDescPadding();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0324() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLongOptSeparator("arg");
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test0425() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setNewLine("-");
        helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test0526() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setLeftPadding(3);
    }

    @Test(timeout = 4000)
    public void test0627() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setArgName("-");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0728() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setSyntaxPrefix(" ");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0829() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("--", options0);
    }

    @Test(timeout = 4000)
    public void test0830() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("--", options0);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test0931() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test0933() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0935() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test0936() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test0938() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptSeparator();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test1039() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setWidth(1);
    }

    @Test(timeout = 4000)
    public void test1140() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1141() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1142() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test1143() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
    }

    @Test(timeout = 4000)
    public void test1145() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test1146() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptPrefix("-");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test1248() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test1249() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
    }

    @Test(timeout = 4000)
    public void test1250() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1251() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1253() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test1254() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        int int0 = helpFormatter0.getLeftPadding();
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test1356() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
        helpFormatter0.printHelp((PrintWriter) mockPrintWriter0, 2577, "--", "arg", options0, 2577, 2577, "\n");
    }

    @Test(timeout = 4000)
    public void test1458() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
    }

    @Test(timeout = 4000)
    public void test1459() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setDescPadding(1);
    }

    @Test(timeout = 4000)
    public void test1560() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("arg", "arg", options0, "arg");
    }

    @Test(timeout = 4000)
    public void test1661() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
    }

    @Test(timeout = 4000)
    public void test1662() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test1663() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test1666() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test1668() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1669() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getNewLine();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1770() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("--", options0, true);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1771() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp("--", options0, true);
    }

    @Test(timeout = 4000)
    public void test1872() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1873() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test1874() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test1878() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test1879() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getLongOptPrefix();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1980() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1981() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test1982() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test1983() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test1985() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getSyntaxPrefix();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test2088() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test2090() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test2092() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test2093() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test2095() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.getOptPrefix();
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test2196() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        options0.addOption("iR1uAxi", " ", true, "--");
        Options options1 = options0.addOption("R", true, "-");
        helpFormatter0.renderOptions((StringBuffer) null, 1, options1, 3, 3);
    }

    @Test(timeout = 4000)
    public void test2297() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test2298() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test2299() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
    }

    @Test(timeout = 4000)
    public void test22101() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test22102() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test22104() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Comparator<Object> comparator0 = (Comparator<Object>) mock(Comparator.class, new ViolatedAssumptionAnswer());
        helpFormatter0.setOptionComparator(comparator0);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test23105() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
    }

    @Test(timeout = 4000)
    public void test23106() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test23107() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test23108() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test23110() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test23111() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        helpFormatter0.setOptionComparator((Comparator) null);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test24113() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1, (String) null, (String) null, options0, (String) null);
    }

    @Test(timeout = 4000)
    public void test25114() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(1, "", "", options0, "");
    }

    @Test(timeout = 4000)
    public void test26115() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        helpFormatter0.printHelp(24, "[ option:  arg  [ARG] :: \n ]", "", options0, " ");
    }

    @Test(timeout = 4000)
    public void test27116() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Options options1 = options0.addOption((String) null, true, "arg");
        // Undeclared exception!
        helpFormatter0.printHelp(1, "usage: ", "usage: ", options1, (String) null, true);
    }

    @Test(timeout = 4000)
    public void test28117() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        OptionGroup optionGroup0 = new OptionGroup();
        Option option0 = new Option("arg", "--", true, "arg");
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Option option1 = new Option((String) null, " ", true, "");
        optionGroup1.addOption(option1);
        Options options1 = options0.addOptionGroup(optionGroup1);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 6575, "--", options1);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test29118() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "arg", true, "\n");
        OptionGroup optionGroup0 = new OptionGroup();
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup0.setRequired(true);
        Options options1 = options0.addOptionGroup(optionGroup1);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "line.separator", options1);
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test29119() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "arg", true, "\n");
        OptionGroup optionGroup0 = new OptionGroup();
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        optionGroup0.setRequired(true);
        Options options1 = options0.addOptionGroup(optionGroup1);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "line.separator", options1);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test30120() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "arg", false, "\n");
        OptionGroup optionGroup0 = new OptionGroup();
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "--", options1);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test30121() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "arg", false, "\n");
        OptionGroup optionGroup0 = new OptionGroup();
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "--", options1);
    }

    @Test(timeout = 4000)
    public void test30123() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "arg", false, "\n");
        OptionGroup optionGroup0 = new OptionGroup();
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("\n");
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "--", options1);
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test31124() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "[amb:alH(Shr", true, " :: ");
        option0.setArgName("");
        OptionGroup optionGroup0 = new OptionGroup();
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("usage: ");
        // Undeclared exception!
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 1, "[amb:alH(Shr", options1);
    }

    @Test(timeout = 4000)
    public void test32125() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "arg", true, "\n");
        option0.setArgName(" ");
        OptionGroup optionGroup0 = new OptionGroup();
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "line.separator", options1);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test32126() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "arg", true, "\n");
        option0.setArgName(" ");
        OptionGroup optionGroup0 = new OptionGroup();
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "line.separator", options1);
    }

    @Test(timeout = 4000)
    public void test32128() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("arg", "arg", true, "\n");
        option0.setArgName(" ");
        OptionGroup optionGroup0 = new OptionGroup();
        OptionGroup optionGroup1 = optionGroup0.addOption(option0);
        Options options1 = options0.addOptionGroup(optionGroup1);
        MockPrintWriter mockPrintWriter0 = new MockPrintWriter("arg");
        helpFormatter0.printUsage((PrintWriter) mockPrintWriter0, 74, "line.separator", options1);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test33130() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        options0.addOption((String) null, "arg", true, "arg");
        helpFormatter0.printHelp(3, "arg", "arg", options0, "arg");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test33131() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        options0.addOption((String) null, "arg", true, "arg");
        helpFormatter0.printHelp(3, "arg", "arg", options0, "arg");
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test34132() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("", "arg", true, "\n");
        option0.setArgName(" ");
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp(74, "[ option:  arg  [ARG] :: \n ]", "[ option:  arg  [ARG] :: \n ]", options1, "[ option:  arg  [ARG] :: \n ]");
    }

    @Test(timeout = 4000)
    public void test34133() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("", "arg", true, "\n");
        option0.setArgName(" ");
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp(74, "[ option:  arg  [ARG] :: \n ]", "[ option:  arg  [ARG] :: \n ]", options1, "[ option:  arg  [ARG] :: \n ]");
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test35134() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("", "usage: ", true, "--");
        option0.setArgName("");
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp(393, "--", "", options1, "");
        helpFormatter0.getArgName();
    }

    @Test(timeout = 4000)
    public void test35135() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("", "usage: ", true, "--");
        option0.setArgName("");
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp(393, "--", "", options1, "");
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test35136() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        Option option0 = new Option("", "usage: ", true, "--");
        option0.setArgName("");
        Options options1 = options0.addOption(option0);
        helpFormatter0.printHelp(393, "--", "", options1, "");
    }

    @Test(timeout = 4000)
    public void test36137() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        options0.addOption("", true, "-");
        StringBuffer stringBuffer0 = new StringBuffer();
        helpFormatter0.renderOptions(stringBuffer0, 74, options0, 74, 74);
        stringBuffer0.length();
    }

    @Test(timeout = 4000)
    public void test37138() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        options0.addOption("arg", false, (String) null);
        helpFormatter0.printHelp(3, "arg", " ", options0, "--");
    }

    @Test(timeout = 4000)
    public void test38139() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        options0.addOption("arg", false, "--");
        options0.addOption("", false, "-");
        helpFormatter0.printHelp(3, "arg", "L!2}Y/?r-pkLY", options0, "--");
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test39140() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        Options options0 = new Options();
        // Undeclared exception!
        helpFormatter0.printHelp(0, "--", "--", options0, "--");
    }

    @Test(timeout = 4000)
    public void test40141() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getLongOptPrefix();
    }

    @Test(timeout = 4000)
    public void test40142() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
    }

    @Test(timeout = 4000)
    public void test40143() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getLongOptSeparator();
    }

    @Test(timeout = 4000)
    public void test40144() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getSyntaxPrefix();
    }

    @Test(timeout = 4000)
    public void test40145() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getOptPrefix();
    }

    @Test(timeout = 4000)
    public void test40149() throws Throwable {
        HelpFormatter helpFormatter0 = new HelpFormatter();
        String string0 = helpFormatter0.rtrim((String) null);
        helpFormatter0.getArgName();
    }
}
