/*
 * This file was automatically generated by EvoSuite
 * Thu Dec 14 23:21:12 GMT 2023
 */
package org.apache.commons.cli;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.Locale;
import org.apache.commons.cli.Option;
import org.apache.commons.cli.Options;
import org.apache.commons.cli.PosixParser;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class PosixParser_ESTest extends PosixParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-";
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = Locale.getISOCountries();
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
        String[] stringArray2 = posixParser0.flatten(options0, stringArray1, true);
    }

    @Test(timeout = 4000)
    public void test023() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[10];
        stringArray0[0] = "--Q[]4:=F";
        posixParser0.flatten(options0, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[7];
        stringArray0[0] = "-{eZ\" A#&`";
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-j";
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = Locale.getISOCountries();
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, false);
    }

    @Test(timeout = 4000)
    public void test067() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", false, "");
        String[] stringArray0 = new String[0];
        posixParser0.flatten(options1, stringArray0, true);
        posixParser0.burstToken("--o", true);
    }

    @Test(timeout = 4000)
    public void test078() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        Option option0 = new Option("A", "", false, "-A");
        options0.addOption(option0);
        String[] stringArray0 = new String[4];
        stringArray0[0] = "-A";
        posixParser0.flatten(options0, stringArray0, false);
    }

    @Test(timeout = 4000)
    public void test089() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[1];
        stringArray0[0] = "-j";
        String[] stringArray1 = posixParser0.flatten(options0, stringArray0, true);
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "");
        String[] stringArray0 = new String[0];
        posixParser0.flatten(options1, stringArray0, true);
        posixParser0.burstToken("-w-", true);
    }

    @Test(timeout = 4000)
    public void test1011() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        Options options1 = options0.addOption("", "", true, "");
        String[] stringArray0 = new String[0];
        posixParser0.flatten(options1, stringArray0, true);
        posixParser0.burstToken("--o", true);
    }

    @Test(timeout = 4000)
    public void test1112() throws Throwable {
        PosixParser posixParser0 = new PosixParser();
        Options options0 = new Options();
        String[] stringArray0 = new String[0];
        posixParser0.flatten(options0, stringArray0, false);
        posixParser0.burstToken("N44Q4mz ", false);
    }
}
