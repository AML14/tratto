[
  {
    "signature": "flatten(org.apache.commons.cli.Options opts, java.lang.String[] arguments, boolean stopAtNonOption)",
    "name": "flatten",
    "containingClass": {
      "qualifiedName": "org.apache.commons.cli.Parser",
      "name": "Parser",
      "isArray": false
    },
    "targetClass": "org.apache.commons.cli.Parser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String[]",
      "name": "java.lang.String[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.cli.Options",
          "name": "Options",
          "isArray": false
        },
        "name": "opts"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "arguments"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "stopAtNonOption"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.cli.Options",
            "name": "Options",
            "isArray": false
          },
          "name": "opts"
        },
        "comment": "The Options to parse the arguments by.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.String;",
            "name": "String[]",
            "isArray": true
          },
          "name": "arguments"
        },
        "comment": "The arguments that have to be flattened.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "stopAtNonOption"
        },
        "comment": "specifies whether to stop flattening when a non option has been encountered.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a String array of the flattened arguments.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "parse(org.apache.commons.cli.Options options, java.lang.String[] arguments)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.cli.Parser",
      "name": "Parser",
      "isArray": false
    },
    "targetClass": "org.apache.commons.cli.Parser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.cli.CommandLine",
      "name": "org.apache.commons.cli.CommandLine",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.cli.Options",
          "name": "Options",
          "isArray": false
        },
        "name": "options"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "arguments"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.cli.Options",
            "name": "Options",
            "isArray": false
          },
          "name": "options"
        },
        "comment": "the Options.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.String;",
            "name": "String[]",
            "isArray": true
          },
          "name": "arguments"
        },
        "comment": "the arguments.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the CommandLine.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.cli.ParseException",
          "name": "ParseException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an error occurs when parsing the arguments.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parse(org.apache.commons.cli.Options options, java.lang.String[] arguments, java.util.Properties properties)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.cli.Parser",
      "name": "Parser",
      "isArray": false
    },
    "targetClass": "org.apache.commons.cli.Parser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.cli.CommandLine",
      "name": "org.apache.commons.cli.CommandLine",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.cli.Options",
          "name": "Options",
          "isArray": false
        },
        "name": "options"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "arguments"
      },
      {
        "type": {
          "qualifiedName": "java.util.Properties",
          "name": "Properties",
          "isArray": false
        },
        "name": "properties"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.cli.Options",
            "name": "Options",
            "isArray": false
          },
          "name": "options"
        },
        "comment": "options is specified. specified Options.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.String;",
            "name": "String[]",
            "isArray": true
          },
          "name": "arguments"
        },
        "comment": "the command line arguments.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Properties",
            "name": "Properties",
            "isArray": false
          },
          "name": "properties"
        },
        "comment": "command line option name-value pairs.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the list of atomic option and value tokens.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.cli.ParseException",
          "name": "ParseException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "there are any problems encountered while parsing the command line tokens.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parse(org.apache.commons.cli.Options options, java.lang.String[] arguments, boolean stopAtNonOption)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.cli.Parser",
      "name": "Parser",
      "isArray": false
    },
    "targetClass": "org.apache.commons.cli.Parser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.cli.CommandLine",
      "name": "org.apache.commons.cli.CommandLine",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.cli.Options",
          "name": "Options",
          "isArray": false
        },
        "name": "options"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "arguments"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "stopAtNonOption"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.cli.Options",
            "name": "Options",
            "isArray": false
          },
          "name": "options"
        },
        "comment": "the Options.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.String;",
            "name": "String[]",
            "isArray": true
          },
          "name": "arguments"
        },
        "comment": "the arguments.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "stopAtNonOption"
        },
        "comment": "specifies whether to stop interpreting the arguments when a non option has been encountered and to add them to the CommandLines args list.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the CommandLine.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.cli.ParseException",
          "name": "ParseException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an error occurs when parsing the arguments.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parse(org.apache.commons.cli.Options options, java.lang.String[] arguments, java.util.Properties properties, boolean stopAtNonOption)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.apache.commons.cli.Parser",
      "name": "Parser",
      "isArray": false
    },
    "targetClass": "org.apache.commons.cli.Parser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.cli.CommandLine",
      "name": "org.apache.commons.cli.CommandLine",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.cli.Options",
          "name": "Options",
          "isArray": false
        },
        "name": "options"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "arguments"
      },
      {
        "type": {
          "qualifiedName": "java.util.Properties",
          "name": "Properties",
          "isArray": false
        },
        "name": "properties"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "stopAtNonOption"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.cli.Options",
            "name": "Options",
            "isArray": false
          },
          "name": "options"
        },
        "comment": "options is specified. specified Options.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.String;",
            "name": "String[]",
            "isArray": true
          },
          "name": "arguments"
        },
        "comment": "the command line arguments.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Properties",
            "name": "Properties",
            "isArray": false
          },
          "name": "properties"
        },
        "comment": "command line option name-value pairs.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "stopAtNonOption"
        },
        "comment": "stop parsing the arguments when the first non option is encountered.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the list of atomic option and value tokens.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.cli.ParseException",
          "name": "ParseException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "there are any problems encountered while parsing the command line tokens.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "processArgs(org.apache.commons.cli.Option opt, java.util.ListIterator iter)",
    "name": "processArgs",
    "containingClass": {
      "qualifiedName": "org.apache.commons.cli.Parser",
      "name": "Parser",
      "isArray": false
    },
    "targetClass": "org.apache.commons.cli.Parser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.cli.Option",
          "name": "Option",
          "isArray": false
        },
        "name": "opt"
      },
      {
        "type": {
          "qualifiedName": "java.util.ListIterator",
          "name": "ListIterator",
          "isArray": false
        },
        "name": "iter"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.cli.Option",
            "name": "Option",
            "isArray": false
          },
          "name": "opt"
        },
        "comment": "The current Option.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.ListIterator",
            "name": "ListIterator",
            "isArray": false
          },
          "name": "iter"
        },
        "comment": "The iterator over the flattened command line Options.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.cli.ParseException",
          "name": "ParseException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an argument value is required and argument is has not been found.",
        "kind": "THROWS",
        "condition": "args[0].isRequired()"
      }
    ]
  }
]