[
  {
    "signature": "registerTypeVariablesOn(java.lang.reflect.Type classType)",
    "name": "registerTypeVariablesOn",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "GenericMetadataSupport",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.reflect.Type",
          "name": "Type",
          "isArray": false
        },
        "name": "classType"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "registerTypeParametersOn(java.lang.reflect.TypeVariable[] typeParameters)",
    "name": "registerTypeParametersOn",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "GenericMetadataSupport",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.reflect.TypeVariable;",
          "name": "TypeVariable[]",
          "isArray": true
        },
        "name": "typeParameters"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "rawType()",
    "name": "rawType",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "GenericMetadataSupport",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Class<?>",
      "name": "java.lang.Class<?>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Raw type of the current instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "extraInterfaces()",
    "name": "extraInterfaces",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "GenericMetadataSupport",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<java.lang.reflect.Type>",
      "name": "java.util.List<java.lang.reflect.Type>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Returns extra interfaces if relevant, otherwise empty List.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "rawExtraInterfaces()",
    "name": "rawExtraInterfaces",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "GenericMetadataSupport",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Class<?>[]",
      "name": "java.lang.Class<?>[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Returns an array with the raw types of extraInterfaces() if relevant.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hasRawExtraInterfaces()",
    "name": "hasRawExtraInterfaces",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "GenericMetadataSupport",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Returns true if metadata knows about extra-interfaces extraInterfaces() if relevant.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "actualTypeArguments()",
    "name": "actualTypeArguments",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "GenericMetadataSupport",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<java.lang.reflect.TypeVariable, java.lang.reflect.Type>",
      "name": "java.util.Map<java.lang.reflect.TypeVariable, java.lang.reflect.Type>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Actual type arguments matching the type variables of the raw type represented by this GenericMetadataSupport instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getActualTypeArgumentFor(java.lang.reflect.TypeVariable typeParameter)",
    "name": "getActualTypeArgumentFor",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "GenericMetadataSupport",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.reflect.Type",
      "name": "java.lang.reflect.Type",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.reflect.TypeVariable",
          "name": "TypeVariable",
          "isArray": false
        },
        "name": "typeParameter"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "resolveGenericReturnType(java.lang.reflect.Method method)",
    "name": "resolveGenericReturnType",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "GenericMetadataSupport",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.reflect.Method",
          "name": "Method",
          "isArray": false
        },
        "name": "method"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.reflect.Method",
            "name": "Method",
            "isArray": false
          },
          "name": "method"
        },
        "comment": "Method to resolve the return type.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "@link GenericMetadataSupport} representing this generic return type.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "inferFrom(java.lang.reflect.Type type)",
    "name": "inferFrom",
    "containingClass": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "GenericMetadataSupport",
      "isArray": false
    },
    "targetClass": "org.mockito.internal.util.reflection.GenericMetadataSupport",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "name": "org.mockito.internal.util.reflection.GenericMetadataSupport",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.reflect.Type",
          "name": "Type",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.reflect.Type",
            "name": "Type",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The class from which the GenericMetadataSupport should be built.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The new GenericMetadataSupport.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.mockito.exceptions.base.MockitoException",
          "name": "MockitoException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "Raised if type is not a Class or a ParameterizedType.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]