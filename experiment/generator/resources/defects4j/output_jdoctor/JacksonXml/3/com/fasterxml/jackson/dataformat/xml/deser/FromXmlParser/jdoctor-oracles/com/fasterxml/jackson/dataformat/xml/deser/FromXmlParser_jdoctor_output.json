[
  {
    "signature": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser(com.fasterxml.jackson.core.io.IOContext ctxt, int genericParserFeatures, int xmlFeatures, com.fasterxml.jackson.core.ObjectCodec codec, javax.xml.stream.XMLStreamReader xmlReader)",
    "name": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.io.IOContext",
          "name": "IOContext",
          "isArray": false
        },
        "name": "ctxt"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "genericParserFeatures"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "xmlFeatures"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
          "name": "ObjectCodec",
          "isArray": false
        },
        "name": "codec"
      },
      {
        "type": {
          "qualifiedName": "javax.xml.stream.XMLStreamReader",
          "name": "XMLStreamReader",
          "isArray": false
        },
        "name": "xmlReader"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "version()",
    "name": "version",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.Version",
      "name": "com.fasterxml.jackson.core.Version",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCodec()",
    "name": "getCodec",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
      "name": "com.fasterxml.jackson.core.ObjectCodec",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setCodec(com.fasterxml.jackson.core.ObjectCodec c)",
    "name": "setCodec",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.ObjectCodec",
          "name": "ObjectCodec",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setXMLTextElementName(java.lang.String name)",
    "name": "setXMLTextElementName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "requiresCustomCodec()",
    "name": "requiresCustomCodec",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "True since XML format does require support from codec.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "enable(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature f)",
    "name": "enable",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature",
          "name": "Feature",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "disable(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature f)",
    "name": "disable",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature",
          "name": "Feature",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isEnabled(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature f)",
    "name": "isEnabled",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature",
          "name": "Feature",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "configure(com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature f, boolean state)",
    "name": "configure",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser$Feature",
          "name": "Feature",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "state"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFormatFeatures()",
    "name": "getFormatFeatures",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "overrideFormatFeatures(int values, int mask)",
    "name": "overrideFormatFeatures",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonParser",
      "name": "com.fasterxml.jackson.core.JsonParser",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "values"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "mask"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getStaxReader()",
    "name": "getStaxReader",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "javax.xml.stream.XMLStreamReader",
      "name": "javax.xml.stream.XMLStreamReader",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "addVirtualWrapping(java.util.Set<java.lang.String> namesToWrap)",
    "name": "addVirtualWrapping",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Set",
          "name": "Set",
          "isArray": false
        },
        "name": "namesToWrap"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCurrentName()",
    "name": "getCurrentName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "overrideCurrentName(java.lang.String name)",
    "name": "overrideCurrentName",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isClosed()",
    "name": "isClosed",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getParsingContext()",
    "name": "getParsingContext",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext",
      "name": "com.fasterxml.jackson.dataformat.xml.deser.XmlReadContext",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTokenLocation()",
    "name": "getTokenLocation",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonLocation",
      "name": "com.fasterxml.jackson.core.JsonLocation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCurrentLocation()",
    "name": "getCurrentLocation",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonLocation",
      "name": "com.fasterxml.jackson.core.JsonLocation",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isExpectedStartArrayToken()",
    "name": "isExpectedStartArrayToken",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextToken()",
    "name": "nextToken",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonToken",
      "name": "com.fasterxml.jackson.core.JsonToken",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextTextValue()",
    "name": "nextTextValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getText()",
    "name": "getText",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getValueAsString()",
    "name": "getValueAsString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getValueAsString(java.lang.String defValue)",
    "name": "getValueAsString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "defValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTextCharacters()",
    "name": "getTextCharacters",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char[]",
      "name": "char[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTextLength()",
    "name": "getTextLength",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTextOffset()",
    "name": "getTextOffset",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasTextCharacters()",
    "name": "hasTextCharacters",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEmbeddedObject()",
    "name": "getEmbeddedObject",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBinaryValue(com.fasterxml.jackson.core.Base64Variant b64variant)",
    "name": "getBinaryValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte[]",
      "name": "byte[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_decodeBase64(com.fasterxml.jackson.core.Base64Variant b64variant)",
    "name": "_decodeBase64",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "byte[]",
      "name": "byte[]",
      "isArray": true
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.Base64Variant",
          "name": "Base64Variant",
          "isArray": false
        },
        "name": "b64variant"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBigIntegerValue()",
    "name": "getBigIntegerValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.math.BigInteger",
      "name": "java.math.BigInteger",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDecimalValue()",
    "name": "getDecimalValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.math.BigDecimal",
      "name": "java.math.BigDecimal",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDoubleValue()",
    "name": "getDoubleValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getFloatValue()",
    "name": "getFloatValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getIntValue()",
    "name": "getIntValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLongValue()",
    "name": "getLongValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNumberType()",
    "name": "getNumberType",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.JsonParser$NumberType",
      "name": "com.fasterxml.jackson.core.JsonParser$NumberType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNumberValue()",
    "name": "getNumberValue",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_handleEOF()",
    "name": "_handleEOF",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_releaseBuffers()",
    "name": "_releaseBuffers",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_getByteArrayBuilder()",
    "name": "_getByteArrayBuilder",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.core.util.ByteArrayBuilder",
      "name": "com.fasterxml.jackson.core.util.ByteArrayBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_isEmpty(java.lang.String str)",
    "name": "_isEmpty",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
      "name": "FromXmlParser",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.dataformat.xml.deser.FromXmlParser",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]