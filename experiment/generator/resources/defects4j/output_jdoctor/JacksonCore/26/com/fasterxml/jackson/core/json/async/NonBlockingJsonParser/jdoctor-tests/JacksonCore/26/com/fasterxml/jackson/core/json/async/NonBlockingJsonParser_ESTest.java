/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 15 19:31:52 GMT 2023
 */
package com.fasterxml.jackson.core.json.async;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;
import com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.ByteArrayBuilder;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class NonBlockingJsonParser_ESTest extends NonBlockingJsonParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test0010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
    }

    @Test(timeout = 4000)
    public void test0020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test0021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test0024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test0025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test0026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test0027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test0028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test0029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test0030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test0031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test0032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test0033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test0034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test0035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test0036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test0037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test0038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test0039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test0040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test0041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test0042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test0043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test0044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test0045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test0046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test0047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test0048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test0049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test0050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test0051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test0052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test0053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test0054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test0055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test0056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test0057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test0058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test0059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test0060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test0061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test0062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test0071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
    }

    @Test(timeout = 4000)
    public void test0072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test0073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test0074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test0075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test0076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test0077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test0078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test0079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test0080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test0081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test0082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test0083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test0084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test0085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test0086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test0087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test0088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test0089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test0090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test0091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test0092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test0093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test0094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test0095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test0096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test0097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test0098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test0099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test00100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test00101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test00102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test00103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test00104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test00105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test00106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test00107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test00108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test00109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test00110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test00111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
    }

    @Test(timeout = 4000)
    public void test00122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
    }

    @Test(timeout = 4000)
    public void test00123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
    }

    @Test(timeout = 4000)
    public void test00124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test00125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test00126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test00127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test00128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test00129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test00130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test00131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test00132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test00133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test00134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test00135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test00136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test00137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test00138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test00139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test00140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test00141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test00142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test00143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test00144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test00145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test00146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test00147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test00148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test00149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test00150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test00151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test00152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test00153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test00154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test00155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test00156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.isHidden();
    }

    @Test(timeout = 4000)
    public void test00157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.getUsableSpace();
    }

    @Test(timeout = 4000)
    public void test00158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.canRead();
    }

    @Test(timeout = 4000)
    public void test00159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.getName();
    }

    @Test(timeout = 4000)
    public void test00160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.isFile();
    }

    @Test(timeout = 4000)
    public void test00161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.getParent();
    }

    @Test(timeout = 4000)
    public void test00162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.getTotalSpace();
    }

    @Test(timeout = 4000)
    public void test00163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.lastModified();
    }

    @Test(timeout = 4000)
    public void test00164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.length();
    }

    @Test(timeout = 4000)
    public void test00165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.isAbsolute();
    }

    @Test(timeout = 4000)
    public void test00166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.exists();
    }

    @Test(timeout = 4000)
    public void test00167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.toString();
    }

    @Test(timeout = 4000)
    public void test00168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.canExecute();
    }

    @Test(timeout = 4000)
    public void test00169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.canWrite();
    }

    @Test(timeout = 4000)
    public void test00170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.getFreeSpace();
    }

    @Test(timeout = 4000)
    public void test00171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
        mockFile0.isDirectory();
    }

    @Test(timeout = 4000)
    public void test00172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        MockFile mockFile0 = new MockFile((String) null, "KF}SmL](;");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) mockPrintStream0);
    }

    @Test(timeout = 4000)
    public void test01190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test01191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test01192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test01201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test01202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test01203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test01204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test01205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test01206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test01207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test01208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test01209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test01210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test01211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test01212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test01213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test01214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test01215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test01216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test01217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test01218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test01219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test01220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test01221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test01222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test01223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test01224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
    }

    @Test(timeout = 4000)
    public void test01233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test01234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test01235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test01245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test01246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test01247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test01248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test01249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test01250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test01251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test01252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test01253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test01254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test01255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test01256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test01257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test01258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test01259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test01260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test01261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test01262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test01263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test01264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test01265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test01266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test01267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test01268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test01269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test01270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test01271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test01272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test01273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test01274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test01275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
    }

    @Test(timeout = 4000)
    public void test01285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test01286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test01287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test01288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test01289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test01290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test01291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test01292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test01293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test01294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test01295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test01296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test01297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test01298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test01299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test01300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test01301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test01302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test01303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test01304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test01305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test01306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test01307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test01308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test01309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test01310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test01311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test01312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test01313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test01314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.currentToken();
    }

    @Test(timeout = 4000)
    public void test01315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test01316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test01317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.isNaN();
    }

    @Test(timeout = 4000)
    public void test01318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test01319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test01320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test01321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.isClosed();
    }

    @Test(timeout = 4000)
    public void test01322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test01323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test01324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test01325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test01326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test01327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test01328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test01329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
    }

    @Test(timeout = 4000)
    public void test02360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test02361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test02362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test02363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test02364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test02365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test02366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test02367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test02368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test02369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test02370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test02371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test02372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test02373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test02374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test02375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test02376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test02377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test02378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test02379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test02380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test02381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test02382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test02383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test02384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test02385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test02386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test02387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test02388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test02389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test02390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test02391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test02392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test02393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test02394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test02395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test02396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test02397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test02398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test02399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test02400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test02401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test02402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test02411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        jsonToken1.equals((Object) jsonToken0);
    }

    @Test(timeout = 4000)
    public void test02412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test02413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test02414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test02415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test02416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test02417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test02418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test02419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test02420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test02421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test02422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test02423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test02424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test02425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test02426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test02427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test02428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test02429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test02430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test02431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test02432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test02433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test02434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test02435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test02436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test02437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test02438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test02439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test02440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test02441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test02442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test02443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test02444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        jsonToken1.isStructStart();
    }

    @Test(timeout = 4000)
    public void test02445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        jsonToken1.id();
    }

    @Test(timeout = 4000)
    public void test02446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        jsonToken1.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test02447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        jsonToken1.asString();
    }

    @Test(timeout = 4000)
    public void test02448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        jsonToken1.isBoolean();
    }

    @Test(timeout = 4000)
    public void test02449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        jsonToken1.isNumeric();
    }

    @Test(timeout = 4000)
    public void test02450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
        jsonToken1.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test02451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_INT;
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishKeywordToken("", 57, jsonToken0);
    }

    @Test(timeout = 4000)
    public void test03471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test03472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test03473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test03482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test03483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test03484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test03485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test03486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test03487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test03488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test03489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test03490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test03491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test03492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test03493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test03494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test03495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test03496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test03497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test03498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test03499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test03500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test03501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test03502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test03503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test03504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test03505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test03506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test03507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test03508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test03509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test03510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test03511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test03512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test03513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test03514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test03515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test03516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test03517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test03518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test03519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test03520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test03521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test03522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test03523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test03524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test03533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test03534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test03535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test03536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test03537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test03538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test03539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test03540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test03541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test03542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test03543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test03544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test03545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test03546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test03547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test03548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test03549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test03550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test03551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test03552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test03553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test03554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test03555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test03556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test03557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test03558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test03559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test03560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test03561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test03562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test03563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test03564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test03565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test03575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.size();
    }

    @Test(timeout = 4000)
    public void test03576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        byteArrayOutputStream0.toString();
    }

    @Test(timeout = 4000)
    public void test03577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
    }

    @Test(timeout = 4000)
    public void test03578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[0];
        nonBlockingJsonParser0.feedInput(byteArray0, 2, 3);
        ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
        nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayOutputStream0);
    }

    @Test(timeout = 4000)
    public void test04599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test04600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test04601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test04602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test04603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test04604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test04605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test04606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test04607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test04608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test04609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test04610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test04611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test04612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test04613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test04614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test04615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test04616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test04617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test04618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test04619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test04620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test04621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test04622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
    }

    @Test(timeout = 4000)
    public void test04631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0._startUnexpectedValue(true, (-1747));
    }

    @Test(timeout = 4000)
    public void test05662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test05663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test05664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test05665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test05666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test05667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test05668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test05669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test05670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test05671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test05672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test05673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test05674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test05675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test05676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test05677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test05678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test05679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test05680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test05681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test05682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test05683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test05684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test05685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test05686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test05687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test05688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test05689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test05690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test05691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test05692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test05693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test05694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test05703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._reportErrorToken("");
    }

    @Test(timeout = 4000)
    public void test06734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test06735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test06736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test06737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test06738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test06739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test06740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test06741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test06742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test06743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test06744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test06745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test06746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test06747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test06748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test06749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test06750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test06751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test06752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test06753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test06754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test06755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test06756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test06757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test06758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test06759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test06760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test06761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test06762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test06763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test06764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test06765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test06766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test06775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test06776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test06777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test06778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test06779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test06780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test06781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test06782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test06783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test06784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test06785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test06786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test06787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test06788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test06789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test06790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test06791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test06792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test06793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test06794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test06795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test06796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test06797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test06798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test06799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test06800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test06801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test06802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test06803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test06804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test06805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test06806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test06807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test06808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test06809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test06810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test06811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test06812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test06813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test06814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
    }

    @Test(timeout = 4000)
    public void test06823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test06824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test06825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test06826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test06827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test06828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test06829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test06830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test06831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test06832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test06833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test06834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test06835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test06836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test06837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test06838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test06839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test06840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test06841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test06842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test06843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test06844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test06845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test06846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test06847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test06848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test06849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test06850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test06851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test06852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test06853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test06854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test06855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
    }

    @Test(timeout = 4000)
    public void test06863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test06864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test06865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test06866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test06867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test06868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test06869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test06870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test06871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test06872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test06873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test06874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test06875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test06876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test06877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test06878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test06879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test06880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test06881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test06882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test06883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test06884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test06885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test06886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test06887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test06888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test06889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test06890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test06891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test06892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test06893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test06894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test06895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
    }

    @Test(timeout = 4000)
    public void test06905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.close();
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0._finishToken();
    }

    @Test(timeout = 4000)
    public void test07977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test07978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test07979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test07980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test07981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test07982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test07983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test07984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test07985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test07986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test07987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test07988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test07989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test07990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test07991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test07992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test07993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test07994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test07995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test07996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test07997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test07998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test07999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test071000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test071001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test071002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test071003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test071004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test071005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test071006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test071007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test071008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test071009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test071010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test071011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test071012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test071013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test071014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test071015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test071016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
    }

    @Test(timeout = 4000)
    public void test071027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0._finishNumberMinus('5');
    }

    @Test(timeout = 4000)
    public void test081058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test081059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test081060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test081061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test081062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test081063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test081064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test081065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test081066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test081067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test081068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test081069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test081070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test081071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test081072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test081073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test081074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test081075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test081076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test081077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test081078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test081079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test081080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test081081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test081082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test081083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test081084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test081085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test081086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test081087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test081088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test081089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test081090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test081099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishNonStdTokenWithEOF(1, 662);
    }

    @Test(timeout = 4000)
    public void test091109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test091110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test091111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
    }

    @Test(timeout = 4000)
    public void test091120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test091121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test091122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test091123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test091124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test091125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test091126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test091127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test091128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test091129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test091130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test091131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test091132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test091133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test091134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test091135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test091136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test091137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test091138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test091139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test091140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test091141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test091142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test091143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test091144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test091145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test091146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test091147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test091148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test091149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test091150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test091151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test091152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test091153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test091154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test091155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test091156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test091157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test091158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test091159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test091160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test091161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test091162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test091171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 33, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishNonStdTokenWithEOF(6, 57);
    }

    @Test(timeout = 4000)
    public void test101181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test101182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test101183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test101192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test101193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test101194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test101195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test101196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test101197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test101198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test101199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test101200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test101201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test101202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test101203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test101204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test101205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test101206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test101207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test101208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test101209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test101210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test101211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test101212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test101213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test101214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test101215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test101216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test101217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test101218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test101219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test101220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test101221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test101222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test101223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test101224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test101225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test101226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test101227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test101228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test101229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test101230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test101231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test101232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test101233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test101234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test101243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test101244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test101245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test101246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test101247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test101248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test101249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test101250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test101251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test101252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test101253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test101254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test101255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test101256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test101257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test101258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test101259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test101260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test101261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test101262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test101263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test101264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test101265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test101266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test101267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test101268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test101269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test101270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test101271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test101272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test101273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test101274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test101275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test101276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test101277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test101278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test101279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test101280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test101281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test101282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
    }

    @Test(timeout = 4000)
    public void test101291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startPositiveNumber(3);
        nonBlockingJsonParser0._finishKeywordTokenWithEOF("w;dC%8MgB*", (-1), jsonToken0);
    }

    @Test(timeout = 4000)
    public void test111322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test111323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test111324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test111325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test111326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test111327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test111328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test111329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test111330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test111331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test111332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test111333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test111334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test111335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test111336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test111337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test111338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test111339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test111340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test111341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test111342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test111343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test111344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test111345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test111346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test111347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test111348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test111349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test111350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test111351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test111352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test111353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test111354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test111363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test111364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test111365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test111366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test111367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test111368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test111369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test111370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test111371() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test111372() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test111373() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test111374() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test111375() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test111376() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test111377() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test111378() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test111379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test111380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test111381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test111382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test111383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test111384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test111385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test111386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test111387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test111388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test111389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test111390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test111391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test111392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test111393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test111394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test111395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test111396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test111397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test111398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test111399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test111400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test111401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test111402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
    }

    @Test(timeout = 4000)
    public void test111411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0._finishKeywordTokenWithEOF((String) null, 2, jsonToken0);
    }

    @Test(timeout = 4000)
    public void test121483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_NULL;
        nonBlockingJsonParser0._finishKeywordTokenWithEOF("Illegal white space character (code 0x%s) as character #%d of 4-char base64 unit: can only used between units", 0, jsonToken0);
    }

    @Test(timeout = 4000)
    public void test131555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = JsonToken.VALUE_STRING;
        nonBlockingJsonParser0._finishKeywordToken((String) null, 3, jsonToken0);
    }

    @Test(timeout = 4000)
    public void test141565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test141566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test141567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
    }

    @Test(timeout = 4000)
    public void test141576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test141577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test141578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test141579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test141580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test141581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test141582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test141583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test141584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test141585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test141586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test141587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test141588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test141589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test141590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test141591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test141592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test141593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test141594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test141595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test141596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test141597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test141598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test141599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test141600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test141601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test141602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test141603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test141604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test141605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test141606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test141607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test141608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test141609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test141610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test141611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test141612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test141613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test141614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test141615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test141616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test141617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test141618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test141627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishFloatFraction();
    }

    @Test(timeout = 4000)
    public void test151637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test151638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test151639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test151648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test151649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test151650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test151651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test151652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test151653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test151654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test151655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test151656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test151657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test151658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test151659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test151660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test151661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test151662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test151663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test151664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test151665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test151666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test151667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test151668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test151669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test151670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test151671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test151672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test151673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test151674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test151675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test151676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test151677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test151678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test151679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test151680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test151681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test151682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test151683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test151684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test151685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test151686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test151687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test151688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test151689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test151690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test151699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishErrorTokenWithEOF();
    }

    @Test(timeout = 4000)
    public void test161700() throws Throwable {
        NonBlockingJsonParser nonBlockingJsonParser0 = null;
        nonBlockingJsonParser0 = new NonBlockingJsonParser((IOContext) null, 56320, (ByteQuadsCanonicalizer) null);
    }

    @Test(timeout = 4000)
    public void test171772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test171773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test171774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test171775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test171776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test171777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test171778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test171779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test171780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test171781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test171782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test171783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test171784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test171785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test171786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test171787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test171788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test171789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test171790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test171791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test171792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test171793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test171794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test171795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test171796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test171797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test171798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test171799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test171800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test171801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test171802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test171803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test171804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test171805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test171806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test171807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test171808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test171809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test171810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test171811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0.nextToken();
    }

    @Test(timeout = 4000)
    public void test181939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test181940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test181941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test181942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test181943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test181944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test181945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test181946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test181947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test181948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test181949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test181950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test181951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test181952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test181953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test181954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test181955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test181956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test181957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test181958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test181959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test181960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test181961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test181962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test181963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test181964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test181965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test181966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test181967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test181968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test181969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test181970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test181971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
    }

    @Test(timeout = 4000)
    public void test181981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0._finishToken();
    }

    @Test(timeout = 4000)
    public void test192103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0._startString();
    }

    @Test(timeout = 4000)
    public void test202175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test202176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test202177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test202178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test202179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test202180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test202181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test202182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test202183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test202184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test202185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test202186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test202187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test202188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test202189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test202190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test202191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test202192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test202193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test202194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test202195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test202196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test202197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test202198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test202199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test202200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test202201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test202202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test202203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test202204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test202205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test202206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test202207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
    }

    @Test(timeout = 4000)
    public void test202217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0._finishFieldWithEscape();
    }

    @Test(timeout = 4000)
    public void test212227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test212228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test212229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test212238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test212239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test212240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test212241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test212242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test212243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test212244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test212245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test212246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test212247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test212248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test212249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test212250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test212251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test212252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test212253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test212254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test212255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test212256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test212257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test212258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test212259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test212260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test212261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test212262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test212263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test212264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test212265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test212266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test212267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test212268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test212269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test212270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test212271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test212272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test212273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test212274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test212275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test212276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test212277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test212278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test212279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test212280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test212289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishFloatExponent(false, 49);
    }

    @Test(timeout = 4000)
    public void test222320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test222321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test222322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test222323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test222324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test222325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test222326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test222327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test222328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test222329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test222330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test222331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test222332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test222333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test222334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test222335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test222336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test222337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test222338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test222339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test222340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test222341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test222342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test222343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test222344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test222345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test222346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test222347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test222348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test222349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test222350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test222351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test222352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test222361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishFloatExponent(true, 3);
    }

    @Test(timeout = 4000)
    public void test232392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test232393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test232394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test232395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test232396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test232397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test232398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test232399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test232400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test232401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test232402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test232403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test232404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test232405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test232406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test232407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test232408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test232409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test232410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test232411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test232412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test232413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test232414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test232415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test232416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test232417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test232418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test232419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test232420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test232421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test232422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test232423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test232424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test232433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishFloatExponent(false, 2041);
    }

    @Test(timeout = 4000)
    public void test242505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        nonBlockingJsonParser0._startFloat(charArray0, 160, 101);
    }

    @Test(timeout = 4000)
    public void test252619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        char[] charArray0 = new char[8];
        nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (byte) 0);
    }

    @Test(timeout = 4000)
    public void test262691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test262692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test262693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test262694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test262695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test262696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test262697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test262698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test262699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test262700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test262701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test262702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test262703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test262704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test262705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test262706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test262707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test262708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test262709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test262710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test262711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test262712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test262713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test262714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test262715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test262716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test262717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test262718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test262719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test262720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test262721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test262722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test262723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test262724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test262725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test262726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test262727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test262728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test262729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test262730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
    }

    @Test(timeout = 4000)
    public void test262739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test262740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test262741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test262742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test262743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test262744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test262745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test262746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test262747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test262748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test262749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test262750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test262751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test262752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test262753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test262754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test262755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test262756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test262757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test262758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test262759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test262760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test262761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test262762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test262763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test262764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test262765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test262766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test262767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test262768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test262769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test262770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test262771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        jsonToken1.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test262772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        jsonToken1.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test262773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        jsonToken1.isStructStart();
    }

    @Test(timeout = 4000)
    public void test262774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        jsonToken1.id();
    }

    @Test(timeout = 4000)
    public void test262775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        jsonToken1.asString();
    }

    @Test(timeout = 4000)
    public void test262776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        jsonToken1.isNumeric();
    }

    @Test(timeout = 4000)
    public void test262777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
        jsonToken1.isBoolean();
    }

    @Test(timeout = 4000)
    public void test262778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[5];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, 0);
    }

    @Test(timeout = 4000)
    public void test272911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
    }

    @Test(timeout = 4000)
    public void test283025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0._finishNumberLeadingZeroes();
    }

    @Test(timeout = 4000)
    public void test293097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishNumberMinus(3311);
    }

    @Test(timeout = 4000)
    public void test303169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishNumberMinus(2);
    }

    @Test(timeout = 4000)
    public void test313241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test313242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test313243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test313244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test313245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test313246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test313247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test313248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test313249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test313250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test313251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test313252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test313253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test313254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test313255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test313256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test313257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test313258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test313259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test313260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test313261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test313262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test313263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test313264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test313265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test313266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test313267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test313268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test313269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test313270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test313271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test313272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test313273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test313274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test313275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test313276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test313277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test313278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test313279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test313280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberMinus('5');
    }

    @Test(timeout = 4000)
    public void test323402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0._startNumberLeadingZero();
    }

    @Test(timeout = 4000)
    public void test333507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 15, 2);
        nonBlockingJsonParser0._startNegativeNumber();
    }

    @Test(timeout = 4000)
    public void test343629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0._startPositiveNumber(102);
    }

    @Test(timeout = 4000)
    public void test353743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0._finishErrorToken();
    }

    @Test(timeout = 4000)
    public void test363796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test363797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test363798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test363799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test363800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test363801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test363802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test363803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test363804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test363805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test363806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test363807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test363808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test363809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test363810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test363811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test363812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test363813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test363814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test363815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test363816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test363817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test363818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test363819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test363820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test363821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test363822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test363823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test363824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test363825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test363826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishErrorToken();
    }

    @Test(timeout = 4000)
    public void test373906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishNonStdTokenWithEOF(0, 3);
    }

    @Test(timeout = 4000)
    public void test384020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0._finishNonStdToken((byte) 0, (byte) 125);
    }

    @Test(timeout = 4000)
    public void test394051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test394052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test394053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test394054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test394055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test394056() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test394057() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test394058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test394059() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test394060() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test394061() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test394062() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test394063() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test394064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test394065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test394066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test394067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test394068() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test394069() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test394070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test394071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test394072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test394073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test394074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test394075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test394076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test394077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test394078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test394079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test394080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test394081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test394082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test394083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test394092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test394093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test394094() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test394095() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test394096() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test394097() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test394098() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test394099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test394100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test394101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test394102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test394103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test394104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test394105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test394106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test394107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test394108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test394109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test394110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test394111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test394112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test394113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test394114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test394115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test394116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test394117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test394118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test394119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test394120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test394121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test394122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test394123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test394124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test394125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test394126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test394127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test394128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test394129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test394130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test394131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
    }

    @Test(timeout = 4000)
    public void test394142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 148, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        nonBlockingJsonParser0._startTrueToken();
    }

    @Test(timeout = 4000)
    public void test404143() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test404144() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test404145() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test404146() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test404147() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test404148() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test404149() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test404150() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test404151() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test404152() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test404153() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test404154() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test404155() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test404156() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test404157() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test404158() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test404159() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test404160() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test404161() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test404162() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test404163() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test404164() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test404165() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test404166() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test404167() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test404168() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test404169() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test404170() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test404171() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test404172() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test404173() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test404174() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test404175() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test404176() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test404177() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test404178() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test404179() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test404180() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test404181() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test404182() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test404183() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test404184() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test404185() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test404186() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test404187() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test404188() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test404189() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test404190() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test404191() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test404192() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test404193() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test404194() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test404195() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test404196() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test404197() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test404198() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test404199() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test404200() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test404201() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test404202() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test404203() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test404204() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test404205() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test404206() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test404207() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test404208() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test404209() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test404210() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test404211() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test404212() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test404213() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test404214() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test404215() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test404216() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test404217() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test404218() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test404219() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test404220() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test404221() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
    }

    @Test(timeout = 4000)
    public void test404223() throws Throwable {
        IOContext iOContext0 = new IOContext((BufferRecycler) null, (Object) null, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, 34, (byte) 116);
        nonBlockingJsonParser0._startNullToken();
    }

    @Test(timeout = 4000)
    public void test414295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test414296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test414297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test414298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test414299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test414300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test414301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test414302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test414303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test414304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test414305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test414306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test414307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test414308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test414309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test414310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test414311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test414312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test414313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test414314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test414315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test414316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test414317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test414318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test414319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test414320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test414321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test414322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test414323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test414324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test414325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test414326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test414327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test414328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test414329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test414330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test414331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test414332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test414333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test414334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNullToken();
    }

    @Test(timeout = 4000)
    public void test424414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._startUnexpectedValue(false, 0);
    }

    @Test(timeout = 4000)
    public void test434424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test434425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test434426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
    }

    @Test(timeout = 4000)
    public void test434435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test434436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test434437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test434438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test434439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test434440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test434441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test434442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test434443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test434444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
    }

    @Test(timeout = 4000)
    public void test434445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test434446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test434447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test434448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test434449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test434450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test434451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test434452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test434453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test434454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test434455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test434456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test434457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test434458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test434459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test434460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test434461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test434462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test434463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test434464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test434465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test434466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test434467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test434468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test434469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test434470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test434471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test434472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test434473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test434474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test434475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test434476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test434477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test434486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "No Base64Variant with name ", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._finishTokenWithEOF();
    }

    @Test(timeout = 4000)
    public void test444558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test444559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test444560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test444561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test444562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test444563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test444564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test444565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test444566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test444567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test444568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test444569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test444570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test444571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test444572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test444573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test444574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test444575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test444576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test444577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test444578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test444579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test444580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test444581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test444582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test444583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test444584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test444585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test444586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test444587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test444588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test444589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test444590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test444591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test444592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test444593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test444594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test444595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test444596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test444597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
    }

    @Test(timeout = 4000)
    public void test444606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startAposString();
        nonBlockingJsonParser0._finishTokenWithEOF();
    }

    @Test(timeout = 4000)
    public void test454678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test454679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test454680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test454681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test454682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test454683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test454684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test454685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test454686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test454687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test454688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test454689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test454690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test454691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test454692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test454693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test454694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test454695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test454696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test454697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test454698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test454699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test454700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test454701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test454702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test454703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test454704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test454705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test454706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test454707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test454708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test454709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test454710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test454711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test454712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test454713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test454714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test454715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test454716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test454717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
    }

    @Test(timeout = 4000)
    public void test454726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.equals((Object) jsonToken0);
    }

    @Test(timeout = 4000)
    public void test454727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test454728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test454729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test454730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test454731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test454732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test454733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test454734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test454735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test454736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test454737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test454738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test454739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test454740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test454741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test454742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test454743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test454744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test454745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test454746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test454747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test454748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test454749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test454750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test454751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test454752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test454753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test454754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test454755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test454756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test454757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test454758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test454759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.asString();
    }

    @Test(timeout = 4000)
    public void test454760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.isNumeric();
    }

    @Test(timeout = 4000)
    public void test454761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.isBoolean();
    }

    @Test(timeout = 4000)
    public void test454762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.id();
    }

    @Test(timeout = 4000)
    public void test454763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test454764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.isStructStart();
    }

    @Test(timeout = 4000)
    public void test454765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test454766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingNegZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
    }

    @Test(timeout = 4000)
    public void test464847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test464848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test464849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test464850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test464851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test464852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test464853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test464854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test464855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test464856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test464857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test464858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test464859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test464860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test464861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test464862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test464863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test464864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test464865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test464866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test464867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test464868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test464869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test464870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test464871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test464872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test464873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test464874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test464875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test464876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test464877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test464878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test464879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test464880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test464881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test464882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test464883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test464884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test464885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test464886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
    }

    @Test(timeout = 4000)
    public void test464895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.equals((Object) jsonToken0);
    }

    @Test(timeout = 4000)
    public void test464896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test464897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test464898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test464899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test464900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test464901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test464902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test464903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test464904() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test464905() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test464906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test464907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test464908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test464909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test464910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test464911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test464912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test464913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test464914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test464915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test464916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test464917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test464918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test464919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test464920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test464921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test464922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test464923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test464924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test464925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test464926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test464927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test464928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test464929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.isStructStart();
    }

    @Test(timeout = 4000)
    public void test464930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.id();
    }

    @Test(timeout = 4000)
    public void test464931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test464932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.asString();
    }

    @Test(timeout = 4000)
    public void test464933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.isBoolean();
    }

    @Test(timeout = 4000)
    public void test464934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
        jsonToken1.isNumeric();
    }

    @Test(timeout = 4000)
    public void test464935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNumberLeadingZero();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishTokenWithEOF();
    }

    @Test(timeout = 4000)
    public void test474997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test474998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test474999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test475000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test475001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test475002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test475003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test475004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test475005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test475006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test475007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test475008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test475009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test475010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test475011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test475012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test475013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test475014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test475015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test475016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test475017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test475018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test475019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test475020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test475021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test475022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test475023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test475024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test475025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test475026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test475027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
    }

    @Test(timeout = 4000)
    public void test475036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 55, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0._finishTokenWithEOF();
    }

    @Test(timeout = 4000)
    public void test485108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test485109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test485110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test485111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test485112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test485113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test485114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test485115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test485116() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test485117() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test485118() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test485119() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test485120() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test485121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test485122() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test485123() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test485124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test485125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test485126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test485127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test485128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test485129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test485130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test485131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test485132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test485133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test485134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test485135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test485136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test485137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test485138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test485139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test485140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test485141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test485142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test485143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test485144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test485145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test485146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test485147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
    }

    @Test(timeout = 4000)
    public void test485156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        nonBlockingJsonParser0._finishTokenWithEOF();
    }

    @Test(timeout = 4000)
    public void test495228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test495229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test495230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test495231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test495232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test495233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test495234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test495235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test495236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test495237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test495238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test495239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test495240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test495241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test495242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test495243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test495244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test495245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test495246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test495247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test495248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test495249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test495250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test495251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test495252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test495253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test495254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test495255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test495256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test495257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test495258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test495259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test495260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test495261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test495262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test495263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test495264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test495265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test495266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test495267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
    }

    @Test(timeout = 4000)
    public void test495276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0._finishTokenWithEOF();
    }

    @Test(timeout = 4000)
    public void test505396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test505397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test505398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test505399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test505400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test505401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test505402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test505403() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test505404() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test505405() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test505406() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test505407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test505408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test505409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test505410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test505411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test505412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test505413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test505414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test505415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test505416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test505417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test505418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test505419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test505420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test505421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test505422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test505423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test505424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test505425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test505426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test505427() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test505428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test505429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test505430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructStart();
    }

    @Test(timeout = 4000)
    public void test505431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.asString();
    }

    @Test(timeout = 4000)
    public void test505432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.id();
    }

    @Test(timeout = 4000)
    public void test505433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isNumeric();
    }

    @Test(timeout = 4000)
    public void test505434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isBoolean();
    }

    @Test(timeout = 4000)
    public void test505435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startString();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
    }

    @Test(timeout = 4000)
    public void test515475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test515476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test515477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test515478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test515479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test515480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test515481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test515482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test515483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test515484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test515485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test515486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test515487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test515488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test515489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test515490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test515491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test515492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test515493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test515494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test515495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test515496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test515497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test515498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test515499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test515500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test515501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test515502() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test515503() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test515504() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test515505() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test515506() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test515507() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test515516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test515517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test515518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test515519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test515520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test515521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test515522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test515523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test515524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test515525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test515526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test515527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test515528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test515529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test515530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test515531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test515532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test515533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test515534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test515535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test515536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test515537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test515538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test515539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test515540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test515541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test515542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test515543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test515544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test515545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test515546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test515547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test515548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test515549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test515550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test515551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test515552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test515553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test515554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test515555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
    }

    @Test(timeout = 4000)
    public void test515566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test515567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test515568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test515569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test515570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test515571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test515572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test515573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test515574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test515575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test515576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test515577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test515578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test515579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test515580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test515581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test515582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test515583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test515584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test515585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test515586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test515587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test515588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test515589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test515590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test515591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test515592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test515593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test515594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test515595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test515596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test515597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test515598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructStart();
    }

    @Test(timeout = 4000)
    public void test515599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test515600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test515601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isBoolean();
    }

    @Test(timeout = 4000)
    public void test515602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isNumeric();
    }

    @Test(timeout = 4000)
    public void test515603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.asString();
    }

    @Test(timeout = 4000)
    public void test515604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.id();
    }

    @Test(timeout = 4000)
    public void test515605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1953), byteQuadsCanonicalizer0);
        char[] charArray0 = new char[2];
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberIntegralPart(charArray0, (-1953));
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
    }

    @Test(timeout = 4000)
    public void test525645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test525646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test525647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test525648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test525649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test525650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test525651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test525652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test525653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test525654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test525655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test525656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test525657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test525658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test525659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test525660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test525661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test525662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test525663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test525664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test525665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test525666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test525667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test525668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test525669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test525670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test525671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test525672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test525673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test525674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test525675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test525676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test525677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test525686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test525687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test525688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test525689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test525690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test525691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test525692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test525693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test525694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test525695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test525696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test525697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test525698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test525699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test525700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test525701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test525702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test525703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test525704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test525705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test525706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test525707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test525708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test525709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test525710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test525711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test525712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test525713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test525714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test525715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test525716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test525717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test525718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test525719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test525720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test525721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test525722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test525723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test525724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test525725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
    }

    @Test(timeout = 4000)
    public void test525734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test525735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test525736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test525737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test525738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test525739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test525740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test525741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test525742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test525743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test525744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test525745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test525746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test525747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test525748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test525749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test525750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test525751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test525752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test525753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test525754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test525755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test525756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test525757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test525758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test525759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test525760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test525761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test525762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test525763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test525764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test525765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test525766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructStart();
    }

    @Test(timeout = 4000)
    public void test525767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.id();
    }

    @Test(timeout = 4000)
    public void test525768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.asString();
    }

    @Test(timeout = 4000)
    public void test525769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isBoolean();
    }

    @Test(timeout = 4000)
    public void test525770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test525771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test525772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isNumeric();
    }

    @Test(timeout = 4000)
    public void test525773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1176, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNumberLeadingZeroes();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
    }

    @Test(timeout = 4000)
    public void test535835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test535836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test535837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test535838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test535839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test535840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test535841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test535842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test535843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test535844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test535845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test535846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test535847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test535848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test535849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test535850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test535851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test535852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test535853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test535854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test535855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test535856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test535857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test535858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test535859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test535860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test535861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test535862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test535863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test535864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test535865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
    }

    @Test(timeout = 4000)
    public void test535874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startNegativeNumber();
        nonBlockingJsonParser0._finishToken();
    }

    @Test(timeout = 4000)
    public void test545927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test545928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test545929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test545930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test545931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test545932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test545933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test545934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test545935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test545936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test545937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test545938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test545939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test545940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test545941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test545942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test545943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test545944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test545945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test545946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test545947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test545948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test545949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test545950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test545951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test545952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test545953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test545954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test545955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test545956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test545957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
    }

    @Test(timeout = 4000)
    public void test545966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test545967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test545968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test545969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test545970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test545971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test545972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test545973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test545974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test545975() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test545976() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test545977() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test545978() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test545979() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test545980() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test545981() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test545982() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test545983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test545984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test545985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test545986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test545987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test545988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test545989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test545990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.id();
    }

    @Test(timeout = 4000)
    public void test545991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.asString();
    }

    @Test(timeout = 4000)
    public void test545992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructStart();
    }

    @Test(timeout = 4000)
    public void test545993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test545994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isBoolean();
    }

    @Test(timeout = 4000)
    public void test545995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isNumeric();
    }

    @Test(timeout = 4000)
    public void test545996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFalseToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
    }

    @Test(timeout = 4000)
    public void test556125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test556126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test556127() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test556128() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test556129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test556130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test556131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test556132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test556133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test556134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test556135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test556136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test556137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test556138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test556139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test556140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test556141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test556142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test556143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test556144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test556145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test556146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test556147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test556148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test556149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test556150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test556151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test556152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test556153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test556154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test556155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test556156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test556157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test556158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isNumeric();
    }

    @Test(timeout = 4000)
    public void test556159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test556160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.asString();
    }

    @Test(timeout = 4000)
    public void test556161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.id();
    }

    @Test(timeout = 4000)
    public void test556162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isBoolean();
    }

    @Test(timeout = 4000)
    public void test556163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructStart();
    }

    @Test(timeout = 4000)
    public void test556164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 0, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._startTrueToken();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
    }

    @Test(timeout = 4000)
    public void test566194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test566195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test566196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test566197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test566198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test566199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test566200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test566201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test566202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test566203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test566204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test566205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test566206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test566207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test566208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test566209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test566210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test566211() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test566212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test566213() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test566214() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test566215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test566216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test566217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
    }

    @Test(timeout = 4000)
    public void test566226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test566227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test566228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test566229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test566230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test566231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test566232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test566233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test566234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test566235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test566236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test566237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test566238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test566239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test566240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test566241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test566242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test566243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test566244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test566245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test566246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test566247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test566248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test566249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test566250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test566251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test566252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test566253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test566254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test566255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test566256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
    }

    @Test(timeout = 4000)
    public void test566265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test566266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test566267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test566268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test566269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test566270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test566271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test566272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test566273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test566274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test566275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test566276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test566277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test566278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test566279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test566280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test566281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test566282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test566283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test566284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test566285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test566286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test566287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test566288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.id();
    }

    @Test(timeout = 4000)
    public void test566289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isBoolean();
    }

    @Test(timeout = 4000)
    public void test566290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isNumeric();
    }

    @Test(timeout = 4000)
    public void test566291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test566292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test566293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.isStructStart();
    }

    @Test(timeout = 4000)
    public void test566294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
        jsonToken1.asString();
    }

    @Test(timeout = 4000)
    public void test566295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, (ByteQuadsCanonicalizer) null);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishFieldWithEscape();
        JsonToken jsonToken1 = nonBlockingJsonParser0._finishToken();
    }

    @Test(timeout = 4000)
    public void test576357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 2, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0._finishToken();
    }

    @Test(timeout = 4000)
    public void test586429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test586430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test586431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test586432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test586433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test586434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test586435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test586436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test586437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test586438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test586439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test586440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test586441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test586442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test586443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test586444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test586445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test586446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test586447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test586448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test586449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test586450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test586451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test586452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test586453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test586454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test586455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test586456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test586457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test586458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test586459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test586460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test586461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
    }

    @Test(timeout = 4000)
    public void test586469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test586470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test586471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test586472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test586473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test586474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test586475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test586476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test586477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test586478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test586479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test586480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test586481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test586482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test586483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test586484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test586485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test586486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test586487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test586488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test586489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test586490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test586491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test586492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test586493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test586494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test586495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test586496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test586497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test586498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test586499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test586500() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test586501() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._eofAsNextToken();
        nonBlockingJsonParser0.nextValue();
    }

    @Test(timeout = 4000)
    public void test596539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test596540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test596541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test596542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test596543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test596544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test596545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test596546() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test596547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test596548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test596549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test596550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test596551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test596552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test596553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test596554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test596555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test596556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test596557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test596558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test596559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test596560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test596561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test596562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test596563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test596564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test596565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test596566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test596567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test596568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test596569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test596570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test596571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test596580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test596581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test596582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test596583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test596584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test596585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test596586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test596587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test596588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test596589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test596590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test596591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test596592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test596593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test596594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test596595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test596596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test596597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test596598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test596599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test596600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test596601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test596602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test596603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test596604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test596605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test596606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test596607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test596608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test596609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test596610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test596611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test596612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test596613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test596614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test596615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test596616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test596617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test596618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test596619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
    }

    @Test(timeout = 4000)
    public void test596630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[9];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 2);
        nonBlockingJsonParser0.nextToken();
    }

    @Test(timeout = 4000)
    public void test606661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test606662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test606663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test606664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test606665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test606666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test606667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test606668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test606669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test606670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test606671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test606672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test606673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test606674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test606675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test606676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test606677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test606678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test606679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test606680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test606681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test606682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test606683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test606684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test606685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test606686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test606687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test606688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test606689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test606690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test606691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test606692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test606693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
    }

    @Test(timeout = 4000)
    public void test606702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        byteArrayBuilder0.size();
    }

    @Test(timeout = 4000)
    public void test606703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        byteArrayBuilder0.getCurrentSegmentLength();
    }

    @Test(timeout = 4000)
    public void test606704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
    }

    @Test(timeout = 4000)
    public void test606705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test606706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test606707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test606708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test606709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test606710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test606711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test606712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test606713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test606714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test606715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test606716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test606717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test606718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test606719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test606720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test606721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test606722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test606723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test606724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test606725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test606726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test606727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test606728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test606729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test606730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test606731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test606732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test606733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test606734() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test606735() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test606736() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test606737() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteArrayBuilder0.size();
    }

    @Test(timeout = 4000)
    public void test606738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
        byteArrayBuilder0.getCurrentSegmentLength();
    }

    @Test(timeout = 4000)
    public void test606739() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        int int0 = nonBlockingJsonParser0.releaseBuffered((OutputStream) byteArrayBuilder0);
    }

    @Test(timeout = 4000)
    public void test616861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 46, byteQuadsCanonicalizer0);
        byte[] byteArray0 = new byte[9];
        nonBlockingJsonParser0.feedInput(byteArray0, (-3150), 0);
        nonBlockingJsonParser0._startTrueToken();
    }

    @Test(timeout = 4000)
    public void test626933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test626934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test626935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test626936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test626937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test626938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test626939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test626940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test626941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test626942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test626943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test626944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test626945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test626946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test626947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test626948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test626949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test626950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test626951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test626952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test626953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test626954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test626955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test626956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test626957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test626958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test626959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test626960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test626961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test626962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test626963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test626964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test626965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        jsonToken0.id();
    }

    @Test(timeout = 4000)
    public void test626966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        jsonToken0.isStructEnd();
    }

    @Test(timeout = 4000)
    public void test626967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        jsonToken0.isBoolean();
    }

    @Test(timeout = 4000)
    public void test626968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        jsonToken0.isScalarValue();
    }

    @Test(timeout = 4000)
    public void test626969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        jsonToken0.isNumeric();
    }

    @Test(timeout = 4000)
    public void test626970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        jsonToken0.isStructStart();
    }

    @Test(timeout = 4000)
    public void test626971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        jsonToken0.asString();
    }

    @Test(timeout = 4000)
    public void test626972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
    }

    @Test(timeout = 4000)
    public void test626983() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "Decimal point not followed by a digit", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[6];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 1, 3);
        byte[] byteArray0 = new byte[2];
        nonBlockingJsonParser0.feedInput(byteArray0, 6000, (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test637058() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "r", false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1614, byteQuadsCanonicalizer0);
        ByteArrayBuilder byteArrayBuilder0 = new ByteArrayBuilder(43);
        nonBlockingJsonParser0.feedInput(byteArrayBuilder0.NO_BYTES, 38, 14);
    }

    @Test(timeout = 4000)
    public void test647130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test647131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test647132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test647133() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test647134() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test647135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test647136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test647137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test647138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test647139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test647140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test647141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test647142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test647143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test647144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test647145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test647146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test647147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test647148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test647149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test647150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test647151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test647152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test647153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test647154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test647155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test647156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test647157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test647158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test647159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test647160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test647161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test647162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test647163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test647164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test647165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test647166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test647167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test647168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test647169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test647170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test647171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test647172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test647173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test647174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test647175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test647176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test647177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test647178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test647179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test647180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test647181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test647182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test647183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test647184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test647185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test647186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test647187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test647188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test647189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test647190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test647191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test647192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test647193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test647194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        nonBlockingJsonParser0._endOfInput = true;
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test657274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test657275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test657276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test657277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test657278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test657279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test657280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test657281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test657282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test657283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test657284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test657285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test657286() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test657287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test657288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test657289() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test657290() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test657291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test657292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test657293() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test657294() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test657295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test657296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test657297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test657298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test657299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test657300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test657301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test657302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test657303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test657304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test657305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test657306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 3, byteQuadsCanonicalizer0);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test667436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test667437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test667438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test667439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test667440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test667441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test667442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test667443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test667444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test667445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test667446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test667447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test667448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test667449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test667450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test667451() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test667452() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test667453() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test667454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test667455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test667456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test667457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test667458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test667459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test667460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test667461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test667462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test667463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test667464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test667465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test667466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test667467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test667468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, true);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 127, byteQuadsCanonicalizer0);
        char[] charArray0 = new char[1];
        JsonToken jsonToken0 = nonBlockingJsonParser0._startFloat(charArray0, 160, 102);
        boolean boolean0 = nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test677548() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test677549() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test677550() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test677551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test677552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test677553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test677554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test677555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test677556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test677557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test677558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test677559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test677560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test677561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test677562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test677563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test677564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test677565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test677566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test677567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test677568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test677569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test677570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test677571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test677572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test677573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test677574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test677575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test677576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test677577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test677578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test677579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test677580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        nonBlockingJsonParser0.endOfInput();
    }

    @Test(timeout = 4000)
    public void test687659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test687660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test687661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        byteQuadsCanonicalizer0.size();
    }

    @Test(timeout = 4000)
    public void test687662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        byteQuadsCanonicalizer0.totalCount();
    }

    @Test(timeout = 4000)
    public void test687663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        byteQuadsCanonicalizer0.maybeDirty();
    }

    @Test(timeout = 4000)
    public void test687664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        byteQuadsCanonicalizer0.bucketCount();
    }

    @Test(timeout = 4000)
    public void test687665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        byteQuadsCanonicalizer0.secondaryCount();
    }

    @Test(timeout = 4000)
    public void test687666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        byteQuadsCanonicalizer0.primaryCount();
    }

    @Test(timeout = 4000)
    public void test687667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        byteQuadsCanonicalizer0.spilloverCount();
    }

    @Test(timeout = 4000)
    public void test687668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        byteQuadsCanonicalizer0.tertiaryCount();
    }

    @Test(timeout = 4000)
    public void test687669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        byteQuadsCanonicalizer0.hashSeed();
    }

    @Test(timeout = 4000)
    public void test687670() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test687671() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test687672() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test687673() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test687674() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test687675() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test687676() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test687677() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test687678() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test687679() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test687680() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test687681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test687682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test687683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test687684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test687685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test687686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test687687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test687688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test687689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test687690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test687691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test687692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test687693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test687694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.isNaN();
    }

    @Test(timeout = 4000)
    public void test687695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test687696() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test687697() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test687698() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test687699() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test687700() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test687701() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test687702() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test687703() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test687704() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test687705() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test687706() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test687707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test687708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.isClosed();
    }

    @Test(timeout = 4000)
    public void test687709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.currentToken();
    }

    @Test(timeout = 4000)
    public void test687710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test687711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
        nonBlockingJsonParser1.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test687712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, (-1087), byteQuadsCanonicalizer0);
        NonBlockingJsonParser nonBlockingJsonParser1 = (NonBlockingJsonParser) nonBlockingJsonParser0.getNonBlockingInputFeeder();
    }

    @Test(timeout = 4000)
    public void test697743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test697744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test697745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getLastClearedToken();
    }

    @Test(timeout = 4000)
    public void test697746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test697747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.requiresCustomCodec();
    }

    @Test(timeout = 4000)
    public void test697748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test697749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.needMoreInput();
    }

    @Test(timeout = 4000)
    public void test697750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canParseAsync();
    }

    @Test(timeout = 4000)
    public void test697751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test697752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test697753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test697754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenColumnNr();
    }

    @Test(timeout = 4000)
    public void test697755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isNaN();
    }

    @Test(timeout = 4000)
    public void test697756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.currentTokenId();
    }

    @Test(timeout = 4000)
    public void test697757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentToken();
    }

    @Test(timeout = 4000)
    public void test697758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test697759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.currentToken();
    }

    @Test(timeout = 4000)
    public void test697760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenCharacterOffset();
    }

    @Test(timeout = 4000)
    public void test697761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isExpectedStartArrayToken();
    }

    @Test(timeout = 4000)
    public void test697762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getTokenLineNr();
    }

    @Test(timeout = 4000)
    public void test697763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test697764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test697765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0.getCurrentName();
    }

    @Test(timeout = 4000)
    public void test697766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
    }

    @Test(timeout = 4000)
    public void test697775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 40, (ByteQuadsCanonicalizer) null);
        nonBlockingJsonParser0._decodeEscaped();
    }

    @Test(timeout = 4000)
    public void test707895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        ByteQuadsCanonicalizer byteQuadsCanonicalizer0 = ByteQuadsCanonicalizer.createRoot();
        NonBlockingJsonParser nonBlockingJsonParser0 = new NonBlockingJsonParser(iOContext0, 1, byteQuadsCanonicalizer0);
        JsonToken jsonToken0 = nonBlockingJsonParser0._finishNonStdToken(1, 3);
        nonBlockingJsonParser0._finishTokenWithEOF();
    }
}
