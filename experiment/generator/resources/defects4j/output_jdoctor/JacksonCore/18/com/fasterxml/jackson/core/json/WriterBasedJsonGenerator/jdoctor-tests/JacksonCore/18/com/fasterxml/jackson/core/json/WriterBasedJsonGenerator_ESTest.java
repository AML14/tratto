/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 03:04:16 GMT 2023
 */
package com.fasterxml.jackson.core.json;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.SerializableString;
import com.fasterxml.jackson.core.base.GeneratorBase;
import com.fasterxml.jackson.core.io.IOContext;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
import com.fasterxml.jackson.core.util.BufferRecycler;
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
import java.io.ByteArrayInputStream;
import java.io.FileDescriptor;
import java.io.IOException;
import java.io.InputStream;
import java.io.PushbackInputStream;
import java.io.StringWriter;
import java.io.Writer;
import java.math.BigDecimal;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class WriterBasedJsonGenerator_ESTest extends WriterBasedJsonGenerator_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        Object object0 = writerBasedJsonGenerator0.getOutputTarget();
        object0.toString();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        int int0 = writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1107, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[0];
        writerBasedJsonGenerator0.writeUTF8String(byteArray0, 55296, 1);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[0];
        writerBasedJsonGenerator0.writeRawUTF8String(byteArray0, 1, 2514);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFu|s#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeFieldName("Can not write a field name, expecting a value");
        writerBasedJsonGenerator0.writeFieldName("nFu|s#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2322, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0);
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0.writeFieldName((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        jsonGenerator0.writeFieldName("nFs#Qt^1:");
        jsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeFieldName("Can not write a field name, expecting a value");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0._writeFieldName(defaultPrettyPrinter0.DEFAULT_ROOT_VALUE_SEPARATOR, false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 8, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0._writeFieldName(serializedString0, false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        jsonGenerator0.writeStartArray();
        jsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        jsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeString((SerializableString) defaultPrettyPrinter0.DEFAULT_ROOT_VALUE_SEPARATOR);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber((long) 0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.useDefaultPrettyPrinter();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        char[] charArray0 = iOContext0.allocNameCopyBuffer(32768);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeString(charArray0, 94, 253);
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._writePPFieldName("nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        JsonGenerator jsonGenerator0 = writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        jsonGenerator0.writeFieldName("u:UZA>&O:8");
        jsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.useDefaultPrettyPrinter();
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator1._rootValueSeparator;
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.useDefaultPrettyPrinter();
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator1._rootValueSeparator;
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 97, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString((String) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.writeFieldName("Can not write a field name, expecting a value");
        writerBasedJsonGenerator0.writeNumber((short) 115);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.writeString("1");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = new SerializedString("com.fasterxml.jackson.core.json.WriterBasedJsonGenerator");
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test2829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString((SerializableString) null);
    }

    @Test(timeout = 4000)
    public void test2930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber((long) 0);
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        SerializedString serializedString0 = new SerializedString("JF@&7");
        writerBasedJsonGenerator0.writeString((SerializableString) serializedString0);
        writerBasedJsonGenerator0.writeNumber("V");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeRaw("", 1, 3);
    }

    @Test(timeout = 4000)
    public void test3334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeRaw((String) null, 497, 55296);
    }

    @Test(timeout = 4000)
    public void test3435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        SerializedString serializedString0 = new SerializedString("com.fasterxml.jackson.core.json.WriterBasedJsonGenerator");
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test3536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3987);
        byte[] byteArray0 = new byte[5];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 0);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        SerializedString serializedString0 = new SerializedString(", expecting field name");
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        SerializedString serializedString0 = (SerializedString) writerBasedJsonGenerator0._rootValueSeparator;
        writerBasedJsonGenerator0._writeFieldName(serializedString0, true);
        writerBasedJsonGenerator0.writeRaw(',');
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3738() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber((-203.99656708310306));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test3839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber((long) 0);
        writerBasedJsonGenerator0.writeFieldName("write a string");
        byte[] byteArray0 = new byte[3];
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeBinary(byteArray0, 57343, 3);
    }

    @Test(timeout = 4000)
    public void test3940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        byte[] byteArray0 = new byte[3];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = (-2193);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, 0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = (-2193);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) mockFileInputStream0, 0);
    }

    @Test(timeout = 4000)
    public void test4143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 10);
    }

    @Test(timeout = 4000)
    public void test4244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._checkStdFeatureChanges(364, 754);
        writerBasedJsonGenerator0.writeNumber((short) 3930);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1{", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.writeFieldName("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer");
        writerBasedJsonGenerator0.writeNumber((short) 933);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.writeFieldName("com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer");
        writerBasedJsonGenerator0._checkStdFeatureChanges(364, 754);
        writerBasedJsonGenerator0.writeNumber((short) 3930);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4547() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
    }

    @Test(timeout = 4000)
    public void test4556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test4557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test4558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
    }

    @Test(timeout = 4000)
    public void test4567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test4568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test4569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test4570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test4571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test4572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test4573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test4574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test4575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test4576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test4577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test4578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test4579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test4580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test4581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test4582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test4595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test4596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test4597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test4598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test4599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test45100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test45101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test45102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test45103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test45104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test45105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test45106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test45107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test45108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(3);
    }

    @Test(timeout = 4000)
    public void test46129() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test46130() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test46131() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
    }

    @Test(timeout = 4000)
    public void test46140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test46141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test46142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test46143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test46144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test46145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test46146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test46147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test46148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test46149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test46150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test46151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test46152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test46153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test46154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test46155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test46168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test46169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test46170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test46171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test46172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test46173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test46174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test46175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test46176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test46177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test46178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test46179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test46180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test46181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 103, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test47202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test47203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
    }

    @Test(timeout = 4000)
    public void test47204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test47205() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
    }

    @Test(timeout = 4000)
    public void test47206() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
    }

    @Test(timeout = 4000)
    public void test47207() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test47208() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test47209() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test47210() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
    }

    @Test(timeout = 4000)
    public void test47219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test47220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test47221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test47222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test47223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test47224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test47225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test47226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test47227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test47228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test47229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test47230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test47231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test47232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test47233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test47246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test47247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test47248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test47249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test47250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test47251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test47252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test47253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test47254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test47255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test47256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test47257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test47258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test47259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test47260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test47261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test47262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test47263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test47264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test47265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test47266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test47267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test47268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test47269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test47270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test47271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test47272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test47273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test47274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeNumber(2);
    }

    @Test(timeout = 4000)
    public void test48295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test48296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test48297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
    }

    @Test(timeout = 4000)
    public void test48306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test48307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test48308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test48309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test48310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test48311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test48312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test48313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test48314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test48315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test48316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test48317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test48318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test48319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test48320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test48321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test48334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test48335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test48336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test48337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test48338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test48339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test48340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test48341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test48342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test48343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test48344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test48345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test48346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test48347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((long) 1);
    }

    @Test(timeout = 4000)
    public void test49368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test49369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test49370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
    }

    @Test(timeout = 4000)
    public void test49379() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test49380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
    }

    @Test(timeout = 4000)
    public void test49381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test49382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test49383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test49384() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test49385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test49386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test49387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test49388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test49389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test49390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test49391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test49392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test49393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test49394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test49407() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test49408() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test49409() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
    }

    @Test(timeout = 4000)
    public void test49410() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test49411() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test49412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test49413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test49414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test49415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test49416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test49417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test49418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test49419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test49420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test49421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test49422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test49423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test49424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test49425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.ONE;
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test50446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test50447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test50448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
    }

    @Test(timeout = 4000)
    public void test50457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test50458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test50459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test50460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test50461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test50462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test50463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test50464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test50465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test50466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test50467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test50468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test50469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test50470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test50471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test50472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test50485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test50486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test50487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test50488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test50489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test50490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test50491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test50492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test50493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test50494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test50495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test50496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test50497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test50498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2164), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((BigInteger) null);
    }

    @Test(timeout = 4000)
    public void test51530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test51531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test51532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test51533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test51534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test51535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test51536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test51537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test51538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test51539() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test51540() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test51541() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test51542() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test51543() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test51544() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test51545() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test51558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test51559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test51560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
    }

    @Test(timeout = 4000)
    public void test51563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test51564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test51565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test51566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test51567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test51568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test51569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test51570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test51571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test51572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test51573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test51574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test51575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test51576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test51577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test51578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        byte[] byteArray0 = new byte[1];
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        writerBasedJsonGenerator0.writeNumber(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test52612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test52613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
    }

    @Test(timeout = 4000)
    public void test52614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test52615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test52616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test52617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test52618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test52619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test52620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test52621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test52622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test52623() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test52624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test52625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test52626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test52627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test52640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test52641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test52642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test52643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test52644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test52645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test52646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test52647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test52648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test52649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test52650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test52651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test52652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test52653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(0);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4000, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((double) 3);
    }

    @Test(timeout = 4000)
    public void test53713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test53714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test53715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test53716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test53717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test53718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test53719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test53720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test53721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test53722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test53723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test53724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test53725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test53726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter((byte) 88);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-940), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(Double.NaN);
    }

    @Test(timeout = 4000)
    public void test54747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        serializedString0.toString();
    }

    @Test(timeout = 4000)
    public void test54748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        serializedString0.getValue();
    }

    @Test(timeout = 4000)
    public void test54749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test54750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
    }

    @Test(timeout = 4000)
    public void test54751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test54752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test54753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        serializedString0.toString();
    }

    @Test(timeout = 4000)
    public void test54754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        serializedString0.getValue();
    }

    @Test(timeout = 4000)
    public void test54755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test54756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test54757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test54758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
    }

    @Test(timeout = 4000)
    public void test54767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        serializedString0.toString();
    }

    @Test(timeout = 4000)
    public void test54768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        serializedString0.getValue();
    }

    @Test(timeout = 4000)
    public void test54769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test54770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test54771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test54772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test54773() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test54774() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test54775() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test54776() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test54777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test54778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test54779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test54780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test54781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test54782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test54783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test54796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        serializedString0.toString();
    }

    @Test(timeout = 4000)
    public void test54797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        serializedString0.getValue();
    }

    @Test(timeout = 4000)
    public void test54798() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        serializedString0.charLength();
    }

    @Test(timeout = 4000)
    public void test54799() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test54800() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test54801() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test54802() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test54803() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test54804() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test54805() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test54806() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test54807() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test54808() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test54809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test54810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test54811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test54812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, serializedString0, false);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1380, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber((float) 33);
    }

    @Test(timeout = 4000)
    public void test55833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test55834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test55835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test55836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test55837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test55846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test55847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test55848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test55849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test55850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test55851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test55852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test55853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test55854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test55855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test55856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test55857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test55858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test55859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test55872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test55873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test55874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test55875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test55876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test55877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test55878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test55879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test55880() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test55881() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test55882() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test55883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test55884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test55885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2081), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(0.0F);
    }

    @Test(timeout = 4000)
    public void test56919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test56920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test56921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
    }

    @Test(timeout = 4000)
    public void test56922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test56923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test56924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test56925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test56926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test56927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test56928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test56929() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test56930() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test56931() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test56932() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test56933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test56934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test56935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test56948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test56949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test56950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test56951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test56952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test56953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test56954() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test56955() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test56956() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test56957() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test56958() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test56959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test56960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test56961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test56962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test56963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2386, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test57997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test57998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test57999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test571000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test571001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test571002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test571003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test571004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test571005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test571006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test571007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test571008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test571009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test571010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test571023() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test571024() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test571025() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test571026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test571027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test571028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test571029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test571030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test571031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test571032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test571033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test571034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test571035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test571036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 52, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumberField("", (BigDecimal) null);
    }

    @Test(timeout = 4000)
    public void test581073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test581074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test581075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test581076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test581077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test581078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test581079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test581080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test581081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test581082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test581083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test581084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test581085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test581086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test581099() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test581100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test581101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test581102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test581103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test581104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test581105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test581106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test581107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test581108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test581109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test581110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test581111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test581112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test581113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test581114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test591146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test591147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
    }

    @Test(timeout = 4000)
    public void test591148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test591149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test591150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
    }

    @Test(timeout = 4000)
    public void test591151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test591152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test591153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test591154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test591155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test591156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test591157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test591158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test591159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test591160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test591161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test591162() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test591163() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test591164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test591177() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test591178() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test591179() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test591180() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test591181() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test591182() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test591183() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test591184() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test591185() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test591186() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test591187() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test591188() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test591189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test591190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test591191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test591192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 44, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber(bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test601226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test601227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test601228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test601229() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test601230() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test601231() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test601232() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test601233() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test601234() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test601235() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test601236() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test601237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test601238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test601239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test601252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test601253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test601254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
    }

    @Test(timeout = 4000)
    public void test601255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test601256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test601257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test601258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test601259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
    }

    @Test(timeout = 4000)
    public void test601260() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test601261() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test601262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test601263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test601264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test601265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test601266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test601267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test601268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test601269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test601270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test601271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test601272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test601273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        bigInteger0.shortValue();
    }

    @Test(timeout = 4000)
    public void test601274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        bigInteger0.byteValue();
    }

    @Test(timeout = 4000)
    public void test601275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        bigDecimal0.shortValue();
    }

    @Test(timeout = 4000)
    public void test601276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
        bigDecimal0.byteValue();
    }

    @Test(timeout = 4000)
    public void test601277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        BigInteger bigInteger0 = BigInteger.TEN;
        BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
        writerBasedJsonGenerator0.writeNumberField("nFs#Qt^1:", bigDecimal0);
    }

    @Test(timeout = 4000)
    public void test611311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test611312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test611313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test611314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test611315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test611316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test611317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test611318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test611319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test611320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test611321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test611322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test611323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test611324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test611337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test611338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test611339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test611340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test611341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test611342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test611343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test611344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test611345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test611346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test611347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test611348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test611349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test611350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 110, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeNumber("write a null");
    }

    @Test(timeout = 4000)
    public void test621429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test621430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test621431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test621432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test621433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test621434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test621435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test621436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test621437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test621438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test621439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test621440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test621441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test621442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test621443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeBoolean(false);
    }

    @Test(timeout = 4000)
    public void test631508() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test631509() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test631510() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test631511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test631512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test631513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test631514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test631515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test631516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test631517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test631518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test631519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test631520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test631521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test631522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test631534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test641555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test641567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test641568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test641569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test641572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test641573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test641574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test641575() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test641576() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test641577() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test641578() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test641579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test641580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test641581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test641582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test641595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test641598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test641599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test641600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test641601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test641602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test641603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test641604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test641605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test641606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test641607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test641620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test641621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test641624() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641625() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641626() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test641627() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test641628() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test641629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test641630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test641631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test641632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test641633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test641634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test641635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test641636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test641637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test641638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test641639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test641640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test641641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test641642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test641643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test641644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test641645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test641646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test641647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test641648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test641649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0._rootValueSeparator = null;
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test651717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651721() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651722() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651723() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651724() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651725() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651726() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651727() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651728() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651767() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651768() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test651783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651797() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test651809() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651810() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651811() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651812() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651813() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651814() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651815() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651816() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651817() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651818() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651819() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651820() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test651835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651837() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
    }

    @Test(timeout = 4000)
    public void test651861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651863() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651864() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651865() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
    }

    @Test(timeout = 4000)
    public void test651887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test651888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test651889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test651890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test651891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test651892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test651893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test651894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test651895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test651896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test651897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test651898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test651899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test651900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test651901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("wr2ite a string");
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.writeEndArray();
        writerBasedJsonGenerator0.writeEndObject();
        writerBasedJsonGenerator0.writeString("wr2ite a string");
    }

    @Test(timeout = 4000)
    public void test661933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test661934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
    }

    @Test(timeout = 4000)
    public void test661935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test661936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test661937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test661938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test661939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test661940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test661941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test661942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test661943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test661944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test661945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test661946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test661947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test661948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test661961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test661962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test661963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test661964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test661965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test661966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test661967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test661968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test661969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test661970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test661971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test661972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test661973() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test661974() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test661986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
    }

    @Test(timeout = 4000)
    public void test661987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test661988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test661989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test661990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test661991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test661992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test661993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test661994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test661995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test661996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test661997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test661998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test661999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test662001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.isClosed();
    }

    @Test(timeout = 4000)
    public void test662002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test662003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test662004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test662005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test662006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test662007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test662008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test662009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
    }

    @Test(timeout = 4000)
    public void test662029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test662030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test662031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test662032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test662033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test662034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test662035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test662036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test662037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test662038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test662039() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test662040() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test662041() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662042() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test662043() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.isClosed();
    }

    @Test(timeout = 4000)
    public void test662044() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test662045() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test662046() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test662047() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test662048() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test662049() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test662050() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test662051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
    }

    @Test(timeout = 4000)
    public void test662070() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test662071() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test662072() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test662073() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test662074() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test662075() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test662076() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test662077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test662078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test662079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test662080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test662081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test662082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test662084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.isClosed();
    }

    @Test(timeout = 4000)
    public void test662085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test662086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test662087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test662088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test662089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test662090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test662091() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test662092() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test662093() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3300), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        DefaultPrettyPrinter defaultPrettyPrinter0 = new DefaultPrettyPrinter();
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setPrettyPrinter(defaultPrettyPrinter0);
        writerBasedJsonGenerator1.writeNumber(9223372036854775807L);
        writerBasedJsonGenerator1.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test672190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test672191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test672192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test672193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test672194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test672195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test672196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test672197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test672198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test672199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test672200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test672201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test672202() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test672203() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test672204() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
    }

    @Test(timeout = 4000)
    public void test672216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.writeFieldName("write a string");
        writerBasedJsonGenerator0._verifyPrettyValueWrite(" (R,Q'46;l^");
    }

    @Test(timeout = 4000)
    public void test682226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test682227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test682228() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
    }

    @Test(timeout = 4000)
    public void test682237() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test682238() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test682239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test682240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test682241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test682242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test682243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test682244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test682245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test682246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test682247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test682248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test682249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test682262() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test682263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test682264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test682265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test682266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test682267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test682268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test682269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test682270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test682271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test682272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test682273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test682274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test692295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test692296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test692297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
    }

    @Test(timeout = 4000)
    public void test692306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test692307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
    }

    @Test(timeout = 4000)
    public void test692308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test692309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test692310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test692311() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test692312() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test692313() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test692314() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test692315() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test692316() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test692317() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test692318() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test692319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test692320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test692321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test692334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test692335() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test692336() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test692337() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test692338() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test692339() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test692340() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test692341() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test692342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test692343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test692344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test692345() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test692346() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test692347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter(3);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-1122), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test702385() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test702386() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test702387() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test702388() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test702389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test702390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test702391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test702392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test702393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test702394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test702395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test702396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test702397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test702398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test702399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test702412() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test702413() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test702414() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test702415() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test702416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test702417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test702418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test702419() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test702420() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test702421() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test702422() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test702423() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test702424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test702425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test702426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2048, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.flush();
    }

    @Test(timeout = 4000)
    public void test712458() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test712459() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test712460() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test712461() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test712462() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test712463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test712464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test712465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test712466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test712467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test712468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test712469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test712470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test712471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test712472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test712473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test712486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test712487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test712488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test712489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test712490() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test712491() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test712492() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test712493() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test712494() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test712495() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test712496() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test712497() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test712498() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test712499() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test712511() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test712512() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test712513() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test712514() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test712515() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test712516() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test712517() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test712518() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test712519() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test712520() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test712521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test712522() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test712523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test712524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test722558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test722559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test722560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test722561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test722562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test722563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test722564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test722565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test722566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test722567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test722568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test722569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test722570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test722571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test722584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test722585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test722586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test722587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test722588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test722589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test722590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test722591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test722592() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test722593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test722594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test722595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test722596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test722597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
    }

    @Test(timeout = 4000)
    public void test722609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test722610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test722611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test722612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test722613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test722614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test722615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test722616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test722617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test722618() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test722619() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test722620() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test722621() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test722622() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-2097), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartArray();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test732656() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test732657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test732658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test732659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test732660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test732661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test732662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test732663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test732664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test732665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test732666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test732667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test732668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test732669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test732682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test732683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test732684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test732685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test732686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test732687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test732688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test732689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test732690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test732691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test732692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test732693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test732694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test732695() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
    }

    @Test(timeout = 4000)
    public void test732707() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test732708() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test732709() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test732710() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test732711() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test732712() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test732713() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test732714() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test732715() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test732716() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test732717() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test732718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test732719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test732720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 2, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeStartObject();
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test742752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test742753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test742754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test742755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test742756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test742757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test742758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test742759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test742760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test742761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test742762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test742763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test742764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
    }

    @Test(timeout = 4000)
    public void test742777() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test742778() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test742779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test742780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test742781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test742782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test742783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test742784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test742785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test742786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test742787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test742788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test742789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 0, (ObjectCodec) null, (Writer) null);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test752821() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test752822() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test752823() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test752824() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test752825() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test752826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test752827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test752828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test752829() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test752830() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test752831() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test752832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test752833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test752834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test752835() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test752836() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test752849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test752850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test752851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test752852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test752853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test752854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test752855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test752856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test752857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test752858() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test752859() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test752860() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test752861() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test752862() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-4234), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.close();
    }

    @Test(timeout = 4000)
    public void test762883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
    }

    @Test(timeout = 4000)
    public void test762894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test762906() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test762907() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test762908() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762909() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762910() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test762911() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test762912() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test762913() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test762914() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test762915() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test762916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test762917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test762918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test762919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test762920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test762921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test762934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test762937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test762938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test762939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test762940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test762941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test762942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test762943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test762944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test762945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test762946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test762959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test762962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test762963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test762964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test762965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test762966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test762967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test762968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test762969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test762970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test762971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test762984() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test762985() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test762986() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test762987() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test762988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test762989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test762990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test762991() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test762992() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test762993() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test762994() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test762995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test762996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
    }

    @Test(timeout = 4000)
    public void test763009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test763010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test763011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test763012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test763013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test763014() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test763015() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test763016() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test763017() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test763018() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test763019() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test763020() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test763021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#t^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeString(charArray0, (int) 'c', 3);
        writerBasedJsonGenerator0.writeFieldName("87'AS!yc)e");
    }

    @Test(timeout = 4000)
    public void test773100() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test773101() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        fileDescriptor0.valid();
    }

    @Test(timeout = 4000)
    public void test773102() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test773103() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test773104() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test773105() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test773106() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test773107() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test773108() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test773109() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test773110() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test773111() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test773112() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test773113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test773114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        StringWriter stringWriter0 = new StringWriter(2048);
        FileDescriptor fileDescriptor0 = new FileDescriptor();
        MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
        IOContext iOContext0 = new IOContext(bufferRecycler0, mockFileInputStream0, true);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputEnd = 2;
        writerBasedJsonGenerator0.writeFieldName(",!\u0007ExlysP>");
    }

    @Test(timeout = 4000)
    public void test783135() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test783136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test783137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
    }

    @Test(timeout = 4000)
    public void test783146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test783147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test783148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test783149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test783150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test783151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test783152() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test783153() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test783154() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test783155() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test783156() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test783157() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test783158() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test783159() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test783160() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test783161() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test783174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[8];
        charArray0[5] = '\u0084';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 56320);
    }

    @Test(timeout = 4000)
    public void test793223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "XI", false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[8];
        charArray0[2] = '0';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 56320);
    }

    @Test(timeout = 4000)
    public void test803246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test803247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test803248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test803249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test803250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test803251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test803252() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test803253() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test803254() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test803255() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test803256() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test803257() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test803258() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test803259() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test803272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test803273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test803274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test803275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test803276() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test803277() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test803278() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test803279() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test803280() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test803281() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test803282() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test803283() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test803284() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test803285() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 596, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[3];
        charArray0[2] = '^';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 1);
    }

    @Test(timeout = 4000)
    public void test813308() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test813309() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test813310() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
    }

    @Test(timeout = 4000)
    public void test813319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test813320() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test813321() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test813322() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test813323() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test813324() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test813325() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test813326() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test813327() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test813328() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test813329() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test813330() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test813331() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test813332() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test813333() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test813334() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test813347() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test813348() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test813349() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test813350() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test813351() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test813352() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test813353() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test813354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test813355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test813356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test813357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test813358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test813359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test813360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test813361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test813362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test813363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test813364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test813365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test813366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test813367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.isClosed();
    }

    @Test(timeout = 4000)
    public void test813368() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test813369() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test813370() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test813389() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test813390() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test813391() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test813392() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test813393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test813394() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test813395() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test813396() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test813397() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test813398() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test813399() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test813400() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test813401() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test813402() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeFieldName("^!mQh4s8eN[~(hT5ovd");
    }

    @Test(timeout = 4000)
    public void test823424() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test823425() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test823426() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
    }

    @Test(timeout = 4000)
    public void test823435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test823436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test823437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test823438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test823439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test823440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test823441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test823442() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test823443() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test823444() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test823445() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test823446() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test823447() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test823448() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test823449() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test823450() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test823463() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test823464() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test823465() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test823466() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test823467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test823468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test823469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test823470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test823471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test823472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test823473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test823474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test823475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test823476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test823477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test823478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test823479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test823480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test823481() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test823482() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test823483() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test823484() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test823485() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test823486() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test823487() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test823488() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test823489() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        writerBasedJsonGenerator0.writeString("v[~T2S<Z2b=/_2I.gGF");
    }

    @Test(timeout = 4000)
    public void test833521() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
    }

    @Test(timeout = 4000)
    public void test833523() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test833524() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test833525() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test833526() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test833527() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test833528() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test833529() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test833530() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test833531() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test833532() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test833533() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test833534() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test833535() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test833536() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test833537() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test833538() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test833551() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test833552() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test833553() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test833554() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test833555() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test833556() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test833557() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test833558() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test833559() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test833560() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test833561() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test833562() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test833563() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test833564() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test833565() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.isClosed();
    }

    @Test(timeout = 4000)
    public void test833566() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test833567() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test833568() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test833569() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test833570() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test833571() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test833572() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test833573() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator1.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test833574() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
    }

    @Test(timeout = 4000)
    public void test833593() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test833594() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test833595() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test833596() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test833597() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test833598() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test833599() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test833600() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test833601() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test833602() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test833603() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test833604() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test833605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test833606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        char[] charArray0 = WriterBasedJsonGenerator.HEX_CHARS;
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        WriterBasedJsonGenerator writerBasedJsonGenerator1 = (WriterBasedJsonGenerator) writerBasedJsonGenerator0.setHighestNonEscapedChar(3);
        writerBasedJsonGenerator0.writeString(charArray0, 2, 3);
    }

    @Test(timeout = 4000)
    public void test843642() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test843643() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test843644() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test843645() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test843646() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test843647() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test843648() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test843649() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test843650() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test843651() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test843652() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test843653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test843654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test843655() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test843668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[7];
        charArray0[4] = 'M';
        writerBasedJsonGenerator0.writeString(charArray0, 2, 11);
    }

    @Test(timeout = 4000)
    public void test853730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "v[~T2S<Z2b=/_2I.gGF", true);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        int[] intArray0 = new int[7];
        writerBasedJsonGenerator0._outputEscapes = intArray0;
        char[] charArray0 = new char[9];
        charArray0[2] = '_';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 56320);
    }

    @Test(timeout = 4000)
    public void test863740() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test863741() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test863742() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
    }

    @Test(timeout = 4000)
    public void test863751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test863752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
    }

    @Test(timeout = 4000)
    public void test863753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test863754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test863755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test863756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test863757() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test863758() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test863759() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test863760() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test863761() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test863762() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test863763() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test863764() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test863765() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test863766() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test863779() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test863780() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test863781() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test863782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test863783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test863784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test863785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test863786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test863787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test863788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test863789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test863790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test863791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test863792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", true);
        StringWriter stringWriter0 = new StringWriter(1);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[2];
        charArray0[0] = '*';
        writerBasedJsonGenerator0.writeString(charArray0, 0, 1);
    }

    @Test(timeout = 4000)
    public void test873826() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873827() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873828() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
    }

    @Test(timeout = 4000)
    public void test873838() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test873839() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test873840() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873841() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873842() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test873843() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test873844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test873845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test873846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test873847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test873848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test873849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test873850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test873851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test873852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test873853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test873866() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873867() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873868() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test873869() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test873870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test873871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test873872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test873873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test873874() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test873875() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test873876() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test873877() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test873878() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test873879() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
    }

    @Test(timeout = 4000)
    public void test873891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test873894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test873895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test873896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test873897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test873898() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test873899() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test873900() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test873901() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test873902() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test873903() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test873916() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873917() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873918() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test873919() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test873920() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test873921() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test873922() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test873923() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test873924() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test873925() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test873926() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test873927() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test873928() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test873941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test873942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test873943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test873944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test873945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test873946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test873947() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test873948() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test873949() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test873950() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test873951() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test873952() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test873953() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", true);
        char[] charArray0 = iOContext0.allocTokenBuffer();
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBoolean(true);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[16];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test883988() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test883989() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test883990() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test884000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test884001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test884002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test884003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test884004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test884005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test884006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test884007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test884008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test884009() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test884010() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test884011() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test884012() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test884013() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test884026() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test884027() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test884028() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test884029() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test884030() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test884031() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test884032() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test884033() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test884034() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test884035() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test884036() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test884037() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test884038() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test884051() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test884052() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test884053() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test884054() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
    }

    @Test(timeout = 4000)
    public void test884064() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test884065() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test884066() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test884067() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
    }

    @Test(timeout = 4000)
    public void test884077() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test884078() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test884079() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test884080() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test884081() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test884082() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test884083() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test884084() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test884085() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test884086() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test884087() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test884088() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test884089() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test884090() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, (Object) null, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 97, 4000);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(byteArrayInputStream0, 1);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) pushbackInputStream0, 2789);
    }

    @Test(timeout = 4000)
    public void test894113() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894114() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894115() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
    }

    @Test(timeout = 4000)
    public void test894124() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894125() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894126() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
    }

    @Test(timeout = 4000)
    public void test894136() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test894137() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test894138() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894139() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894140() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test894141() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894142() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894143() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894144() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894145() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894146() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894147() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894148() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894149() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894150() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894151() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test894164() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894165() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894166() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894167() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894168() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894169() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894170() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894171() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894172() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894173() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894174() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894175() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894176() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
    }

    @Test(timeout = 4000)
    public void test894189() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894190() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894191() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894192() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894193() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894194() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894195() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894196() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894197() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894198() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894199() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894200() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894201() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test894215() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894216() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894217() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894218() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894219() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894220() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894221() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894222() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894223() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894224() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894225() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894226() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894227() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
    }

    @Test(timeout = 4000)
    public void test894239() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894240() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894241() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894242() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894243() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894244() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894245() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894246() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894247() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894248() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894249() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894250() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894251() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
    }

    @Test(timeout = 4000)
    public void test894263() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894264() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894265() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894266() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894267() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894268() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894269() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894270() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894271() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894272() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894273() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894274() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894275() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
    }

    @Test(timeout = 4000)
    public void test894287() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test894288() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test894291() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test894292() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
    }

    @Test(timeout = 4000)
    public void test894295() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test894296() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test894297() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test894298() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test894299() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test894300() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test894301() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test894302() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test894303() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test894304() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test894305() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test894306() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test894307() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
    }

    @Test(timeout = 4000)
    public void test894319() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, ")Rb5E.KPv*t/R$q_%s^", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[6];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName(")Rb5E.KPv*t/R$q_%s^");
        writerBasedJsonGenerator0.writeNumber((short) 2401);
        writerBasedJsonGenerator0.writeRaw('L');
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        int int0 = byteArrayInputStream0.read();
        writerBasedJsonGenerator0.writeString("u%Th*A");
        writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 10);
    }

    @Test(timeout = 4000)
    public void test904342() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test904343() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test904344() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test904354() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test904355() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test904356() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test904357() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test904358() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test904359() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test904360() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test904361() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test904362() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test904363() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test904364() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test904365() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test904366() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test904367() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test904380() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test904381() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test904382() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test904383() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test904393() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 56319);
    }

    @Test(timeout = 4000)
    public void test914416() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test914417() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test914418() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
    }

    @Test(timeout = 4000)
    public void test914428() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test914429() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test914430() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test914431() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test914432() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test914433() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test914434() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test914435() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test914436() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test914437() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test914438() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test914439() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test914440() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test914441() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test914454() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test914455() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test914456() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test914457() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
    }

    @Test(timeout = 4000)
    public void test914467() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test914468() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test914469() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test914470() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test914471() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test914472() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test914473() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test914474() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test914475() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test914476() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test914477() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test914478() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test914479() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test914480() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "*:", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer(2);
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1267, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 1, 55296);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-1867));
    }

    @Test(timeout = 4000)
    public void test924579() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924580() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924581() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924582() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924583() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924584() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924585() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924586() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924587() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924588() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924589() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924590() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924591() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
    }

    @Test(timeout = 4000)
    public void test924605() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924606() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924607() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924608() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924609() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924610() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924611() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924612() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924613() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924614() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924615() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924616() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924617() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924629() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924630() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924631() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924632() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924633() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924634() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924635() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924636() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924637() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924638() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924639() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924640() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924641() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
    }

    @Test(timeout = 4000)
    public void test924653() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test924654() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
    }

    @Test(timeout = 4000)
    public void test924657() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924658() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924659() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924660() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924661() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924662() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924663() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924664() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924665() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924666() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924667() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924668() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924669() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
    }

    @Test(timeout = 4000)
    public void test924681() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test924682() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test924683() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test924684() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test924685() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test924686() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test924687() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test924688() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test924689() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test924690() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test924691() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test924692() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test924693() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test924694() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFs#Qt^1:", false);
        char[] charArray0 = iOContext0.allocTokenBuffer(0);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.writeString(charArray0, 3, 3987);
        byte[] byteArray0 = new byte[7];
        writerBasedJsonGenerator0.writeBinary(byteArray0);
        writerBasedJsonGenerator0.writeFieldName("nFs#Qt^1:");
        writerBasedJsonGenerator0.writeNumber((short) 2415);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, 56319);
        writerBasedJsonGenerator0.writeString("nFs#Qt^1:");
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-295));
    }

    @Test(timeout = 4000)
    public void test934718() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test934719() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test934720() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
    }

    @Test(timeout = 4000)
    public void test934729() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test934730() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
    }

    @Test(timeout = 4000)
    public void test934731() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test934732() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test934733() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test934743() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test934744() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test934745() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test934746() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test934747() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test934748() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test934749() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test934750() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test934751() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test934752() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test934753() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test934754() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test934755() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test934756() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test934769() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test934770() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test934771() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test934772() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
    }

    @Test(timeout = 4000)
    public void test934782() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test934783() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test934784() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test934785() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test934786() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test934787() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test934788() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test934789() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test934790() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test934791() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test934792() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test934793() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test934794() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test934795() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test934796() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, "nFsQt^1{", false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, (-3793), (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 30, 35);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, (-3793));
    }

    @Test(timeout = 4000)
    public void test944832() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test944833() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test944834() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
    }

    @Test(timeout = 4000)
    public void test944844() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test944845() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test944846() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test944847() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test944848() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test944849() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test944850() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test944851() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test944852() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test944853() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test944854() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test944855() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test944856() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test944857() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test944870() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test944871() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test944872() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test944873() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
    }

    @Test(timeout = 4000)
    public void test944883() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test944884() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test944885() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test944886() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test944887() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test944888() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test944889() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test944890() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test944891() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test944892() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test944893() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test944894() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test944895() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test944896() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
        byteArrayInputStream0.available();
    }

    @Test(timeout = 4000)
    public void test944897() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        byte[] byteArray0 = iOContext0.allocWriteEncodingBuffer();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 3, (ObjectCodec) null, stringWriter0);
        ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 2500, 56319);
        int int0 = writerBasedJsonGenerator0.writeBinary((InputStream) byteArrayInputStream0, 2);
    }

    @Test(timeout = 4000)
    public void test954933() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test954934() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test954935() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test954936() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test954937() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test954938() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test954939() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test954940() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test954941() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test954942() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test954943() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test954944() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test954945() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test954946() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test954959() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test954960() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test954961() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test954962() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test954963() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test954964() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test954965() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test954966() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test954967() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test954968() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test954969() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test954970() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test954971() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test954972() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 4519, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0._outputTail = 56319;
        writerBasedJsonGenerator0.writeNull();
    }

    @Test(timeout = 4000)
    public void test964995() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.isResourceManaged();
    }

    @Test(timeout = 4000)
    public void test964996() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        iOContext0.getEncoding();
    }

    @Test(timeout = 4000)
    public void test964997() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        stringWriter0.toString();
    }

    @Test(timeout = 4000)
    public void test964998() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteBinaryNatively();
    }

    @Test(timeout = 4000)
    public void test964999() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFormatFeatures();
    }

    @Test(timeout = 4000)
    public void test965000() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getOutputBuffered();
    }

    @Test(timeout = 4000)
    public void test965001() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test965002() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getHighestEscapedChar();
    }

    @Test(timeout = 4000)
    public void test965003() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test965004() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test965005() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canWriteFormattedNumbers();
    }

    @Test(timeout = 4000)
    public void test965006() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.canOmitFields();
    }

    @Test(timeout = 4000)
    public void test965007() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        writerBasedJsonGenerator0.isClosed();
    }

    @Test(timeout = 4000)
    public void test965008() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
    }

    @Test(timeout = 4000)
    public void test965021() throws Throwable {
        BufferRecycler bufferRecycler0 = new BufferRecycler();
        IOContext iOContext0 = new IOContext(bufferRecycler0, bufferRecycler0, false);
        StringWriter stringWriter0 = new StringWriter();
        WriterBasedJsonGenerator writerBasedJsonGenerator0 = new WriterBasedJsonGenerator(iOContext0, 1, (ObjectCodec) null, stringWriter0);
        char[] charArray0 = new char[7];
        charArray0[5] = '\"';
        writerBasedJsonGenerator0.writeString(charArray0, 1, 482);
    }
}
