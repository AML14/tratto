[
  {
    "signature": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer()",
    "name": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> checker)",
    "name": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optim.ConvergenceChecker",
          "name": "ConvergenceChecker",
          "isArray": false
        },
        "name": "checker"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.optim.ConvergenceChecker",
            "name": "ConvergenceChecker",
            "isArray": false
          },
          "name": "checker"
        },
        "comment": "Convergence checker.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(double initialStepBoundFactor, org.apache.commons.math3.optim.ConvergenceChecker<org.apache.commons.math3.optim.PointVectorValuePair> checker, double costRelativeTolerance, double parRelativeTolerance, double orthoTolerance, double threshold)",
    "name": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "initialStepBoundFactor"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.optim.ConvergenceChecker",
          "name": "ConvergenceChecker",
          "isArray": false
        },
        "name": "checker"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "costRelativeTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "parRelativeTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "orthoTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "threshold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "initialStepBoundFactor"
        },
        "comment": "Positive input variable used in determining the initial step bound. This bound is set to the product of initialStepBoundFactor and the euclidean norm of diag * x if non-zero or else to initialStepBoundFactor itself. In most cases factor should lie in the interval (0.1. initialStepBoundFactor is 100.0). 100 is a generally recommended value.",
        "kind": "PARAM",
        "condition": "args[0]==100.0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.optim.ConvergenceChecker",
            "name": "ConvergenceChecker",
            "isArray": false
          },
          "name": "checker"
        },
        "comment": "Convergence checker.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "costRelativeTolerance"
        },
        "comment": "Desired relative error in the sum of squares.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "parRelativeTolerance"
        },
        "comment": "Desired relative error in the approximate solution parameters.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "orthoTolerance"
        },
        "comment": "Desired max cosine on the orthogonality between the function vector and the columns of the Jacobian.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "threshold"
        },
        "comment": "threshold is Desired. Desired threshold for QR ranking. If the squared norm of a column vector is smaller or equal to this threshold during QR decomposition threshold is considered to be a zero vector and hence the rank of the matrix is reduced.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(double costRelativeTolerance, double parRelativeTolerance, double orthoTolerance)",
    "name": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "costRelativeTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "parRelativeTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "orthoTolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "costRelativeTolerance"
        },
        "comment": "Desired relative error in the sum of squares.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "parRelativeTolerance"
        },
        "comment": "Desired relative error in the approximate solution parameters.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "orthoTolerance"
        },
        "comment": "Desired max cosine on the orthogonality between the function vector and the columns of the Jacobian.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer(double initialStepBoundFactor, double costRelativeTolerance, double parRelativeTolerance, double orthoTolerance, double threshold)",
    "name": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "initialStepBoundFactor"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "costRelativeTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "parRelativeTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "orthoTolerance"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "threshold"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "initialStepBoundFactor"
        },
        "comment": "Positive input variable used in determining the initial step bound. This bound is set to the product of initialStepBoundFactor and the euclidean norm of diag * x if non-zero or else to initialStepBoundFactor itself. In most cases factor should lie in the interval (0.1. initialStepBoundFactor is 100.0). 100 is a generally recommended value.",
        "kind": "PARAM",
        "condition": "args[0]==100.0"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "costRelativeTolerance"
        },
        "comment": "Desired relative error in the sum of squares.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "parRelativeTolerance"
        },
        "comment": "Desired relative error in the approximate solution parameters.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "orthoTolerance"
        },
        "comment": "Desired max cosine on the orthogonality between the function vector and the columns of the Jacobian.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "threshold"
        },
        "comment": "threshold is Desired. Desired threshold for QR ranking. If the squared norm of a column vector is smaller or equal to this threshold during QR decomposition threshold is considered to be a zero vector and hence the rank of the matrix is reduced.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "doOptimize()",
    "name": "doOptimize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
      "name": "LevenbergMarquardtOptimizer",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.optim.nonlinear.vector.jacobian.LevenbergMarquardtOptimizer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.optim.PointVectorValuePair",
      "name": "org.apache.commons.math3.optim.PointVectorValuePair",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]