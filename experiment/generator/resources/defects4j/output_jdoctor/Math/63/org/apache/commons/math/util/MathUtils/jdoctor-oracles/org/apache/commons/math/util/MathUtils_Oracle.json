[ {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "addAndCheck(int x, int y)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == x + y : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "addAndCheck(long a, long b)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == a + b : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "factorial(int n)",
  "oracleType" : "EXCEPT_POST",
  "oracle" : "n < 0",
  "exception" : "java.lang.IllegalArgumentException",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "factorialDouble(int n)",
  "oracleType" : "EXCEPT_POST",
  "oracle" : "n < 0",
  "exception" : "java.lang.IllegalArgumentException",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "indicator(byte x)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == x : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "indicator(long x)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == x : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "indicator(short x)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? (methodResultID == x || methodResultID == -1) : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "log(double base, double x)",
  "oracleType" : "PRE",
  "oracle" : "base > 0",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "log(double base, double x)",
  "oracleType" : "PRE",
  "oracle" : "x > 0",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "mulAndCheck(int x, int y)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == x * y : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "mulAndCheck(long a, long b)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == a * b : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "normalizeAngle(double a, double center)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == a - a : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "sign(byte x)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == x : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "sign(float x)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == x : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "subAndCheck(int x, int y)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == x - y : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "subAndCheck(long a, long b)",
  "oracleType" : "NORMAL_POST",
  "oracle" : "true ? methodResultID == a - b : true",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(int k, int e)",
  "oracleType" : "PRE",
  "oracle" : "e > 0",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(int k, int e)",
  "oracleType" : "EXCEPT_POST",
  "oracle" : "e < 0",
  "exception" : "java.lang.IllegalArgumentException",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(int k, long e)",
  "oracleType" : "PRE",
  "oracle" : "e > 0",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(int k, long e)",
  "oracleType" : "EXCEPT_POST",
  "oracle" : "e < 0",
  "exception" : "java.lang.IllegalArgumentException",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(long k, int e)",
  "oracleType" : "PRE",
  "oracle" : "e > 0",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(long k, int e)",
  "oracleType" : "EXCEPT_POST",
  "oracle" : "e < 0",
  "exception" : "java.lang.IllegalArgumentException",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(long k, long e)",
  "oracleType" : "PRE",
  "oracle" : "e > 0",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(long k, long e)",
  "oracleType" : "EXCEPT_POST",
  "oracle" : "e < 0",
  "exception" : "java.lang.IllegalArgumentException",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(java.math.BigInteger k, int e)",
  "oracleType" : "PRE",
  "oracle" : "e > 0",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(java.math.BigInteger k, int e)",
  "oracleType" : "EXCEPT_POST",
  "oracle" : "e < 0",
  "exception" : "java.lang.IllegalArgumentException",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(java.math.BigInteger k, long e)",
  "oracleType" : "PRE",
  "oracle" : "e > 0",
  "exception" : "",
  "testName" : ""
}, {
  "className" : "org.apache.commons.math.util.MathUtils",
  "methodSignature" : "pow(java.math.BigInteger k, long e)",
  "oracleType" : "EXCEPT_POST",
  "oracle" : "e < 0",
  "exception" : "java.lang.IllegalArgumentException",
  "testName" : ""
} ]