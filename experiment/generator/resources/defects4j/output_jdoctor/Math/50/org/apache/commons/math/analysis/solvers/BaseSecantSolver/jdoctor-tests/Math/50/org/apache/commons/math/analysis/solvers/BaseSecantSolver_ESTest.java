/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 15:42:04 GMT 2023
 */
package org.apache.commons.math.analysis.solvers;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.analysis.function.Abs;
import org.apache.commons.math.analysis.function.Atan;
import org.apache.commons.math.analysis.function.Atanh;
import org.apache.commons.math.analysis.function.Cbrt;
import org.apache.commons.math.analysis.function.Cos;
import org.apache.commons.math.analysis.function.Floor;
import org.apache.commons.math.analysis.function.Gaussian;
import org.apache.commons.math.analysis.function.HarmonicOscillator;
import org.apache.commons.math.analysis.function.Identity;
import org.apache.commons.math.analysis.function.Logit;
import org.apache.commons.math.analysis.function.Sigmoid;
import org.apache.commons.math.analysis.function.Sin;
import org.apache.commons.math.analysis.function.Sinc;
import org.apache.commons.math.analysis.polynomials.PolynomialFunction;
import org.apache.commons.math.analysis.solvers.AllowedSolution;
import org.apache.commons.math.analysis.solvers.IllinoisSolver;
import org.apache.commons.math.analysis.solvers.PegasusSolver;
import org.apache.commons.math.analysis.solvers.RegulaFalsiSolver;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class BaseSecantSolver_ESTest extends BaseSecantSolver_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
    }

    @Test(timeout = 4000)
    public void test001() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        illinoisSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test002() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        illinoisSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test003() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        illinoisSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test004() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        illinoisSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test005() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test006() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        illinoisSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test007() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Atan atan0 = new Atan();
    }

    @Test(timeout = 4000)
    public void test008() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Atan atan0 = new Atan();
        double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
        illinoisSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test009() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Atan atan0 = new Atan();
        double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
        illinoisSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test0010() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Atan atan0 = new Atan();
        double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Atan atan0 = new Atan();
        double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
        illinoisSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Atan atan0 = new Atan();
        double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
        illinoisSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test0013() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Atan atan0 = new Atan();
        double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
        illinoisSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0014() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Atan atan0 = new Atan();
        double double0 = illinoisSolver0.solve(206, (UnivariateRealFunction) atan0, (-1099.3979317634332), 4.9E-324, 1.3754765451254772E-11);
    }

    @Test(timeout = 4000)
    public void test0115() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
    }

    @Test(timeout = 4000)
    public void test0116() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        illinoisSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test0117() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        illinoisSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test0118() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        illinoisSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test0119() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        illinoisSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test0120() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        illinoisSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0121() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0122() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 2141536214;
        doubleArray0[3] = (double) 2141536214;
        doubleArray0[4] = (-3470.627599577);
        doubleArray0[7] = (double) 2141536214;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test0123() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 2141536214;
        doubleArray0[3] = (double) 2141536214;
        doubleArray0[4] = (-3470.627599577);
        doubleArray0[7] = (double) 2141536214;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        polynomialFunction0.degree();
    }

    @Test(timeout = 4000)
    public void test0126() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 2141536214;
        doubleArray0[3] = (double) 2141536214;
        doubleArray0[4] = (-3470.627599577);
        doubleArray0[7] = (double) 2141536214;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
        illinoisSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test0127() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 2141536214;
        doubleArray0[3] = (double) 2141536214;
        doubleArray0[4] = (-3470.627599577);
        doubleArray0[7] = (double) 2141536214;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
        illinoisSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test0128() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 2141536214;
        doubleArray0[3] = (double) 2141536214;
        doubleArray0[4] = (-3470.627599577);
        doubleArray0[7] = (double) 2141536214;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0129() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 2141536214;
        doubleArray0[3] = (double) 2141536214;
        doubleArray0[4] = (-3470.627599577);
        doubleArray0[7] = (double) 2141536214;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
        illinoisSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test0130() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 2141536214;
        doubleArray0[3] = (double) 2141536214;
        doubleArray0[4] = (-3470.627599577);
        doubleArray0[7] = (double) 2141536214;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
        illinoisSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test0131() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 2141536214;
        doubleArray0[3] = (double) 2141536214;
        doubleArray0[4] = (-3470.627599577);
        doubleArray0[7] = (double) 2141536214;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
        illinoisSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0132() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 2141536214;
        doubleArray0[3] = (double) 2141536214;
        doubleArray0[4] = (-3470.627599577);
        doubleArray0[7] = (double) 2141536214;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
        polynomialFunction0.degree();
    }

    @Test(timeout = 4000)
    public void test0133() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-3470.627599577));
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) 2141536214;
        doubleArray0[3] = (double) 2141536214;
        doubleArray0[4] = (-3470.627599577);
        doubleArray0[7] = (double) 2141536214;
        PolynomialFunction polynomialFunction0 = new PolynomialFunction(doubleArray0);
        double double0 = illinoisSolver0.solve(2141536214, (UnivariateRealFunction) polynomialFunction0, (-3470.627599577), 2.141536214E9);
    }

    @Test(timeout = 4000)
    public void test0236() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
    }

    @Test(timeout = 4000)
    public void test0237() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0238() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test0239() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test0240() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0241() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test0242() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test0243() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Floor floor0 = new Floor();
    }

    @Test(timeout = 4000)
    public void test0244() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Floor floor0 = new Floor();
        double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0245() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Floor floor0 = new Floor();
        double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0246() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Floor floor0 = new Floor();
        double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test0247() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Floor floor0 = new Floor();
        double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test0248() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Floor floor0 = new Floor();
        double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test0249() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Floor floor0 = new Floor();
        double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test0250() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Floor floor0 = new Floor();
        double double0 = pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, 1.0E-6, (double) 793);
    }

    @Test(timeout = 4000)
    public void test0351() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
    }

    @Test(timeout = 4000)
    public void test0352() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test0353() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0354() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test0355() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test0356() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test0357() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0358() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
    }

    @Test(timeout = 4000)
    public void test0359() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
    }

    @Test(timeout = 4000)
    public void test0360() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test0361() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0362() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test0363() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test0364() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0365() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test0366() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Sigmoid sigmoid0 = new Sigmoid((-2.2250738585072014E-308), 3333);
        UnivariateRealFunction univariateRealFunction0 = sigmoid0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(3333, univariateRealFunction0, (-2993.2715265), 549.77032, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test0467() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
    }

    @Test(timeout = 4000)
    public void test0468() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        regulaFalsiSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test0469() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        regulaFalsiSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test0470() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        regulaFalsiSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0471() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        regulaFalsiSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0472() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        regulaFalsiSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test0473() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        regulaFalsiSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test0474() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
    }

    @Test(timeout = 4000)
    public void test0475() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
    }

    @Test(timeout = 4000)
    public void test0476() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        regulaFalsiSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test0477() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        regulaFalsiSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test0478() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        regulaFalsiSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0479() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        regulaFalsiSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0480() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        regulaFalsiSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test0481() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        regulaFalsiSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test0482() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
    }

    @Test(timeout = 4000)
    public void test0483() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        double double1 = regulaFalsiSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test0484() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        double double1 = regulaFalsiSolver0.doSolve();
        regulaFalsiSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test0485() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        double double1 = regulaFalsiSolver0.doSolve();
        regulaFalsiSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test0486() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        double double1 = regulaFalsiSolver0.doSolve();
        regulaFalsiSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test0487() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        double double1 = regulaFalsiSolver0.doSolve();
        regulaFalsiSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test0488() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        double double1 = regulaFalsiSolver0.doSolve();
        regulaFalsiSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test0489() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver(1.176342548272881E-8, 1.176342548272881E-8);
        HarmonicOscillator harmonicOscillator0 = new HarmonicOscillator(1.176342548272881E-8, 0.0, 1.176342548272881E-8);
        UnivariateRealFunction univariateRealFunction0 = harmonicOscillator0.derivative();
        double double0 = regulaFalsiSolver0.solve(62, univariateRealFunction0, 0.0, 0.0, 0.0);
        double double1 = regulaFalsiSolver0.doSolve();
        regulaFalsiSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test0598() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
    }

    @Test(timeout = 4000)
    public void test0599() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
    }

    @Test(timeout = 4000)
    public void test05100() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test05101() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test05102() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test05103() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test05104() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test05105() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test05106() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test05107() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test05108() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test05109() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test05110() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test05111() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test05112() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test05113() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        UnivariateRealFunction univariateRealFunction0 = gaussian0.derivative();
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        double double0 = pegasusSolver0.solve(8, univariateRealFunction0, (-1.504961346353674E-8), 2608.0, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test06115() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
    }

    @Test(timeout = 4000)
    public void test06116() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
        illinoisSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test06117() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
        illinoisSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test06118() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
        illinoisSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test06119() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
        illinoisSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test06120() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
        illinoisSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test06121() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test06122() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
        Atanh atanh0 = new Atanh();
    }

    @Test(timeout = 4000)
    public void test06123() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-69.934811), (-69.934811));
        Atanh atanh0 = new Atanh();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        illinoisSolver0.solve(1, (UnivariateRealFunction) atanh0, (-2621.940926377), (-269.5762), allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test07131() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
    }

    @Test(timeout = 4000)
    public void test07132() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        pegasusSolver0.solve(11, (UnivariateRealFunction) sinc0, 3128.7, 0.0, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test08133() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
    }

    @Test(timeout = 4000)
    public void test08134() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        illinoisSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test08135() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        illinoisSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test08136() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        illinoisSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test08137() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test08138() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        illinoisSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test08139() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        illinoisSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test08140() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        Identity identity0 = new Identity();
    }

    @Test(timeout = 4000)
    public void test08141() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        Identity identity0 = new Identity();
        illinoisSolver0.solve(2432, (UnivariateRealFunction) identity0, (-1.5707963267948966), 1.4153871807274658, (AllowedSolution) null);
    }

    @Test(timeout = 4000)
    public void test09142() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
    }

    @Test(timeout = 4000)
    public void test09143() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test09144() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test09145() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test09146() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test09147() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test09148() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test09149() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        Gaussian gaussian0 = new Gaussian();
    }

    @Test(timeout = 4000)
    public void test09150() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        Gaussian gaussian0 = new Gaussian();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        pegasusSolver0.solve((-2943), (UnivariateRealFunction) gaussian0, (-2246.38), (-532.00254439), (-219.1901488425366), allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test10151() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
    }

    @Test(timeout = 4000)
    public void test10152() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test10153() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test10154() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test10155() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test10156() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test10157() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test10158() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
        Cbrt cbrt0 = new Cbrt();
    }

    @Test(timeout = 4000)
    public void test10159() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-4.8559), (-4.8559));
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        pegasusSolver0.solve(5, (UnivariateRealFunction) cbrt0, (-4.8559), (-465.9968625720741), 1331.339230942915, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test11160() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
    }

    @Test(timeout = 4000)
    public void test11161() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        regulaFalsiSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test11162() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        regulaFalsiSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test11163() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        regulaFalsiSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test11164() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        regulaFalsiSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test11165() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        regulaFalsiSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test11166() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        regulaFalsiSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test11167() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Floor floor0 = new Floor();
    }

    @Test(timeout = 4000)
    public void test11168() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Floor floor0 = new Floor();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        regulaFalsiSolver0.solve(2979, (UnivariateRealFunction) floor0, 359.7455671164, (double) 2979, (double) 2979, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test12169() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
    }

    @Test(timeout = 4000)
    public void test12170() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test12171() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test12172() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test12173() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test12174() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test12175() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test12176() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
    }

    @Test(timeout = 4000)
    public void test12177() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, (AllowedSolution) null);
    }

    @Test(timeout = 4000)
    public void test13186() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0);
        Gaussian gaussian0 = new Gaussian(0.0, 2719.82);
        pegasusSolver0.solve((-3237), (UnivariateRealFunction) gaussian0, 6.4281638347818415E-6, 1.9868161777724352E-8, 1055.616);
    }

    @Test(timeout = 4000)
    public void test14195() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Floor floor0 = new Floor();
        pegasusSolver0.solve(793, (UnivariateRealFunction) floor0, (double) 793, (-0.12502530217170715), (double) 793);
    }

    @Test(timeout = 4000)
    public void test15196() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
    }

    @Test(timeout = 4000)
    public void test15197() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
        illinoisSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test15198() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
        illinoisSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test15199() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
        illinoisSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test15200() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
        illinoisSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test15201() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test15202() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
        illinoisSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test15203() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.0), (-1.0));
        illinoisSolver0.solve(1023, (UnivariateRealFunction) null, (-2407.914897403), (-2407.728119), (-1.0));
    }

    @Test(timeout = 4000)
    public void test16204() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
    }

    @Test(timeout = 4000)
    public void test16205() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test16206() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test16207() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test16208() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test16209() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test16210() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test16211() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        pegasusSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test17219() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Cos cos0 = new Cos();
    }

    @Test(timeout = 4000)
    public void test17220() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Cos cos0 = new Cos();
        illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
        illinoisSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test17221() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Cos cos0 = new Cos();
        illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
        illinoisSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test17222() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Cos cos0 = new Cos();
        illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
        illinoisSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test17223() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Cos cos0 = new Cos();
        illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
        illinoisSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test17224() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Cos cos0 = new Cos();
        illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test17225() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Cos cos0 = new Cos();
        illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
        illinoisSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test17226() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver();
        Cos cos0 = new Cos();
        illinoisSolver0.setup(5, cos0, 5, 0.0, 0.0);
        illinoisSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test18227() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
    }

    @Test(timeout = 4000)
    public void test18228() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        regulaFalsiSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test18229() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        regulaFalsiSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test18230() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        regulaFalsiSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test18231() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        regulaFalsiSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test18232() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        regulaFalsiSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test18233() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        regulaFalsiSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test18234() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
    }

    @Test(timeout = 4000)
    public void test18235() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
        UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
    }

    @Test(timeout = 4000)
    public void test18236() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
        UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
        regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
        regulaFalsiSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test18237() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
        UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
        regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
        regulaFalsiSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test18238() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
        UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
        regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
        regulaFalsiSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test18239() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
        UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
        regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
        regulaFalsiSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test18240() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
        UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
        regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
        regulaFalsiSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test18241() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
        UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
        regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
        regulaFalsiSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test18242() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-208.0), (-208.0));
        Logit logit0 = new Logit((-208.0), (-2.391465199580939E-10));
        UnivariateRealFunction univariateRealFunction0 = logit0.derivative();
        regulaFalsiSolver0.setup(282, univariateRealFunction0, (-208.0), (-2.391465199580939E-10), (-208.0));
        regulaFalsiSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test19243() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
    }

    @Test(timeout = 4000)
    public void test19244() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test19245() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test19246() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test19247() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test19248() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test19249() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test19250() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        Sinc sinc0 = new Sinc();
    }

    @Test(timeout = 4000)
    public void test19251() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test19252() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test19253() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test19254() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test19255() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test19256() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test19257() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(14, (UnivariateRealFunction) sinc0, (-1.5707963267948966), 951.9258407496, 951.9258407496, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test20266() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test20267() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test20268() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test20269() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test20270() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test20271() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test20272() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, (double) 5, (double) 5, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test21281() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test21282() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test21283() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test21284() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test21285() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test21286() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test21287() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(2725.29567932, (-360.07737924462));
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(10, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test22288() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
    }

    @Test(timeout = 4000)
    public void test22289() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test22290() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test22291() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test22292() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test22293() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test22294() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test22295() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
    }

    @Test(timeout = 4000)
    public void test22296() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test22297() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test22298() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test22299() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test22300() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test22301() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test22302() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test22303() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
    }

    @Test(timeout = 4000)
    public void test22304() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test22305() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test22306() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test22307() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test22308() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test22309() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(6.849234071909364E-14);
        Cbrt cbrt0 = new Cbrt();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(283, (UnivariateRealFunction) cbrt0, (-732.0), 0.5, 3128.7, allowedSolution0);
        double double1 = pegasusSolver0.doSolve();
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test23319() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test23320() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test23321() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test23322() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test23323() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test23324() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test23325() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 951.9258407496, 951.9258407496, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test24333() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Sin sin0 = new Sin();
    }

    @Test(timeout = 4000)
    public void test24334() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Sin sin0 = new Sin();
        double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
        regulaFalsiSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test24335() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Sin sin0 = new Sin();
        double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
        regulaFalsiSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test24336() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Sin sin0 = new Sin();
        double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
        regulaFalsiSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test24337() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Sin sin0 = new Sin();
        double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
        regulaFalsiSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test24338() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Sin sin0 = new Sin();
        double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
        regulaFalsiSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test24339() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Sin sin0 = new Sin();
        double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
        regulaFalsiSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test24340() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver();
        Sin sin0 = new Sin();
        double double0 = regulaFalsiSolver0.solve(43, (UnivariateRealFunction) sin0, (-2248.6), 3113.5035287079068);
    }

    @Test(timeout = 4000)
    public void test25349() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test25350() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test25351() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test25352() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test25353() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test25354() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test25355() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 2725.29567932, 2725.29567932, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test26364() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test26365() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test26366() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test26367() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test26368() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test26369() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test26370() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1207.0657488), 951.9258407496, 951.9258407496, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test27379() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test27380() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test27381() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test27382() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test27383() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test27384() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test27385() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), 2725.29567932, 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = pegasusSolver0.solve(6, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test28386() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
    }

    @Test(timeout = 4000)
    public void test28387() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test28388() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test28389() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test28390() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test28391() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test28392() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test28393() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        Sinc sinc0 = new Sinc();
    }

    @Test(timeout = 4000)
    public void test28394() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test28395() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test28396() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test28397() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test28398() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test28399() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test28400() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 1.0);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.BELOW_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, (-1.9567994573865304), 952.2252843414894, 952.2252843414894, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test29408() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
    }

    @Test(timeout = 4000)
    public void test29409() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
        pegasusSolver0.getFunctionValueAccuracy();
    }

    @Test(timeout = 4000)
    public void test29410() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
        pegasusSolver0.getRelativeAccuracy();
    }

    @Test(timeout = 4000)
    public void test29411() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
        pegasusSolver0.getMax();
    }

    @Test(timeout = 4000)
    public void test29412() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
        pegasusSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test29413() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
        pegasusSolver0.getAbsoluteAccuracy();
    }

    @Test(timeout = 4000)
    public void test29414() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
        pegasusSolver0.getMin();
    }

    @Test(timeout = 4000)
    public void test29415() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver((-360.07737924462), (-360.07737924462), 3128.7);
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.RIGHT_SIDE;
        double double0 = pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 3128.7, 3128.7, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test30416() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        Identity identity0 = new Identity();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = illinoisSolver0.solve(2432, (UnivariateRealFunction) identity0, (-1.5707963267948966), 1.4153871807274658, allowedSolution0);
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test30417() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver((-1.5707963267948966), (-1.5707963267948966));
        Identity identity0 = new Identity();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = illinoisSolver0.solve(2432, (UnivariateRealFunction) identity0, (-1.5707963267948966), 1.4153871807274658, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test31418() throws Throwable {
        RegulaFalsiSolver regulaFalsiSolver0 = new RegulaFalsiSolver((-2914.8166312), (-585.8036717639643));
        Cos cos0 = new Cos();
        regulaFalsiSolver0.solve(2753, (UnivariateRealFunction) cos0, (-2914.8166312), 2725.29567932, 2725.0);
    }

    @Test(timeout = 4000)
    public void test32419() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver(916.737, 916.737);
        Abs abs0 = new Abs();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = illinoisSolver0.solve(750, (UnivariateRealFunction) abs0, 916.737, 0.0, allowedSolution0);
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test32420() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver(916.737, 916.737);
        Abs abs0 = new Abs();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = illinoisSolver0.solve(750, (UnivariateRealFunction) abs0, 916.737, 0.0, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test33421() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver(916.737, 916.737);
        Abs abs0 = new Abs();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = illinoisSolver0.solve(750, (UnivariateRealFunction) abs0, 0.0, 0.0, 916.737, allowedSolution0);
        illinoisSolver0.getStartValue();
    }

    @Test(timeout = 4000)
    public void test33422() throws Throwable {
        IllinoisSolver illinoisSolver0 = new IllinoisSolver(916.737, 916.737);
        Abs abs0 = new Abs();
        AllowedSolution allowedSolution0 = AllowedSolution.LEFT_SIDE;
        double double0 = illinoisSolver0.solve(750, (UnivariateRealFunction) abs0, 0.0, 0.0, 916.737, allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test34423() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver(0.0, 0.0, 0.0);
        AllowedSolution allowedSolution0 = AllowedSolution.ANY_SIDE;
        pegasusSolver0.solve(0, (UnivariateRealFunction) null, (double) 0, (-1645.0), allowedSolution0);
    }

    @Test(timeout = 4000)
    public void test35424() throws Throwable {
        PegasusSolver pegasusSolver0 = new PegasusSolver();
        Sinc sinc0 = new Sinc();
        AllowedSolution allowedSolution0 = AllowedSolution.ABOVE_SIDE;
        pegasusSolver0.solve(5, (UnivariateRealFunction) sinc0, 1.0E-6, 951.9258407496, 951.9258407496, allowedSolution0);
    }
}
