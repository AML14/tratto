[
  {
    "signature": "org.apache.commons.math.linear.EigenDecompositionImpl(org.apache.commons.math.linear.RealMatrix matrix, double splitTolerance)",
    "name": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
          "name": "RealMatrix",
          "isArray": false
        },
        "name": "matrix"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "splitTolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
            "name": "RealMatrix",
            "isArray": false
          },
          "name": "matrix"
        },
        "comment": "The symmetric matrix to decompose.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "splitTolerance"
        },
        "comment": "tolerance on the off-diagonal elements relative to the geometric mean to split the tridiagonal matrix (a suggested value is MathUtils#SAFE_MIN).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.InvalidMatrixException",
          "name": "InvalidMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "(wrapping a org.apache.commons.math.ConvergenceException if algorithm fails to converge.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.apache.commons.math.linear.EigenDecompositionImpl(double[] main, double[] secondary, double splitTolerance)",
    "name": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "main"
      },
      {
        "type": {
          "qualifiedName": "[D",
          "name": "double[]",
          "isArray": true
        },
        "name": "secondary"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "splitTolerance"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "main"
        },
        "comment": "the main diagonal of the matrix (. main is copied).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[D",
            "name": "double[]",
            "isArray": true
          },
          "name": "secondary"
        },
        "comment": "the secondary diagonal of the matrix (. secondary is copied).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "splitTolerance"
        },
        "comment": "tolerance on the off-diagonal elements relative to the geometric mean to split the tridiagonal matrix (a suggested value is MathUtils#SAFE_MIN).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.linear.InvalidMatrixException",
          "name": "InvalidMatrixException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "(wrapping a org.apache.commons.math.ConvergenceException if algorithm fails to converge.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getV()",
    "name": "getV",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getD()",
    "name": "getD",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getVT()",
    "name": "getVT",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealMatrix",
      "name": "org.apache.commons.math.linear.RealMatrix",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRealEigenvalues()",
    "name": "getRealEigenvalues",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRealEigenvalue(int i)",
    "name": "getRealEigenvalue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getImagEigenvalues()",
    "name": "getImagEigenvalues",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double[]",
      "name": "double[]",
      "isArray": true
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getImagEigenvalue(int i)",
    "name": "getImagEigenvalue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getEigenvector(int i)",
    "name": "getEigenvector",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.RealVector",
      "name": "org.apache.commons.math.linear.RealVector",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "i"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getDeterminant()",
    "name": "getDeterminant",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "determinant of the matrix.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSolver()",
    "name": "getSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.linear.EigenDecompositionImpl",
      "name": "EigenDecompositionImpl",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.linear.EigenDecompositionImpl",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.linear.DecompositionSolver",
      "name": "org.apache.commons.math.linear.DecompositionSolver",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]