[
  {
    "signature": "org.apache.commons.math3.geometry.euclidean.threed.Line(org.apache.commons.math3.geometry.euclidean.threed.Vector3D p1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D p2)",
    "name": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
          "name": "Vector3D",
          "isArray": false
        },
        "name": "p1"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
          "name": "Vector3D",
          "isArray": false
        },
        "name": "p2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
            "name": "Vector3D",
            "isArray": false
          },
          "name": "p1"
        },
        "comment": "p1 is first. first point belonging to the line (this any point).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
            "name": "Vector3D",
            "isArray": false
          },
          "name": "p2"
        },
        "comment": "second point belonging to the line (this any point. p2 is different from p1).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the points are equal.",
        "kind": "THROWS",
        "condition": "args[0].equals(args[1])"
      }
    ]
  },
  {
    "signature": "org.apache.commons.math3.geometry.euclidean.threed.Line(org.apache.commons.math3.geometry.euclidean.threed.Line line)",
    "name": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
          "name": "Line",
          "isArray": false
        },
        "name": "line"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
            "name": "Line",
            "isArray": false
          },
          "name": "line"
        },
        "comment": "line to copy.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "reset(org.apache.commons.math3.geometry.euclidean.threed.Vector3D p1, org.apache.commons.math3.geometry.euclidean.threed.Vector3D p2)",
    "name": "reset",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
          "name": "Vector3D",
          "isArray": false
        },
        "name": "p1"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
          "name": "Vector3D",
          "isArray": false
        },
        "name": "p2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
            "name": "Vector3D",
            "isArray": false
          },
          "name": "p1"
        },
        "comment": "p1 is first. first point belonging to the line (this any point).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
            "name": "Vector3D",
            "isArray": false
          },
          "name": "p2"
        },
        "comment": "second point belonging to the line (this any point. p2 is different from p1).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math3.exception.MathIllegalArgumentException",
          "name": "MathIllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the points are equal.",
        "kind": "THROWS",
        "condition": "args[0].equals(args[1])"
      }
    ]
  },
  {
    "signature": "revert()",
    "name": "revert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new instance, with reversed direction.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDirection()",
    "name": "getDirection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "normalized direction vector.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getOrigin()",
    "name": "getOrigin",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "line point closest to the origin.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getAbscissa(org.apache.commons.math3.geometry.euclidean.threed.Vector3D point)",
    "name": "getAbscissa",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
          "name": "Vector3D",
          "isArray": false
        },
        "name": "point"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
            "name": "Vector3D",
            "isArray": false
          },
          "name": "point"
        },
        "comment": "point to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "abscissa of the point.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "pointAt(double abscissa)",
    "name": "pointAt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "abscissa"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "abscissa"
        },
        "comment": "desired abscissa for the point.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "one point belonging to the line, at specified abscissa.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toSubSpace(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.threed.Euclidean3D> point)",
    "name": "toSubSpace",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.oned.Vector1D",
      "name": "org.apache.commons.math3.geometry.euclidean.oned.Vector1D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "point"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toSpace(org.apache.commons.math3.geometry.Vector<org.apache.commons.math3.geometry.euclidean.oned.Euclidean1D> point)",
    "name": "toSpace",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.Vector",
          "name": "Vector",
          "isArray": false
        },
        "name": "point"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isSimilarTo(org.apache.commons.math3.geometry.euclidean.threed.Line line)",
    "name": "isSimilarTo",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
          "name": "Line",
          "isArray": false
        },
        "name": "line"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
            "name": "Line",
            "isArray": false
          },
          "name": "line"
        },
        "comment": "line to which instance should be compared.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the lines are similar.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D p)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
          "name": "Vector3D",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
            "name": "Vector3D",
            "isArray": false
          },
          "name": "p"
        },
        "comment": "point to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if p belongs to the line.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D p)",
    "name": "distance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
          "name": "Vector3D",
          "isArray": false
        },
        "name": "p"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
            "name": "Vector3D",
            "isArray": false
          },
          "name": "p"
        },
        "comment": "to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "distance between the instance and the point.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "distance(org.apache.commons.math3.geometry.euclidean.threed.Line line)",
    "name": "distance",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
          "name": "Line",
          "isArray": false
        },
        "name": "line"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
            "name": "Line",
            "isArray": false
          },
          "name": "line"
        },
        "comment": "line to check against the instance.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "shortest distance between the instance and the line.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "closestPoint(org.apache.commons.math3.geometry.euclidean.threed.Line line)",
    "name": "closestPoint",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
          "name": "Line",
          "isArray": false
        },
        "name": "line"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
            "name": "Line",
            "isArray": false
          },
          "name": "line"
        },
        "comment": "line to check against the instance.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "point of the instance closest to another line.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "intersection(org.apache.commons.math3.geometry.euclidean.threed.Line line)",
    "name": "intersection",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "name": "org.apache.commons.math3.geometry.euclidean.threed.Vector3D",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
          "name": "Line",
          "isArray": false
        },
        "name": "line"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
            "name": "Line",
            "isArray": false
          },
          "name": "line"
        },
        "comment": "line is other. other line.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "intersection point of the instance and the other line or null if there are no intersection points.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "wholeLine()",
    "name": "wholeLine",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.Line",
      "name": "Line",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math3.geometry.euclidean.threed.Line",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
      "name": "org.apache.commons.math3.geometry.euclidean.threed.SubLine",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a sub-line covering the whole line.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]