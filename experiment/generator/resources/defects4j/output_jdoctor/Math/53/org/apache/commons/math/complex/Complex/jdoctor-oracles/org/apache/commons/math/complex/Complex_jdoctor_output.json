[
  {
    "signature": "org.apache.commons.math.complex.Complex(double real, double imaginary)",
    "name": "org.apache.commons.math.complex.Complex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "real"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "imaginary"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "real"
        },
        "comment": "the real part.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "imaginary"
        },
        "comment": "the imaginary part.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "abs()",
    "name": "abs",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the absolute value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "add(org.apache.commons.math.complex.Complex rhs)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.complex.Complex",
          "name": "Complex",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.complex.Complex",
            "name": "Complex",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is other. other complex number.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the complex number sum.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "rhs is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "conjugate()",
    "name": "conjugate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the conjugate of this Complex object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "divide(org.apache.commons.math.complex.Complex rhs)",
    "name": "divide",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.complex.Complex",
          "name": "Complex",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.complex.Complex",
            "name": "Complex",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is other. other complex number.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the complex number quotient.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "rhs is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "equals(java.lang.Object other)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "Object to test for equality to this.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if two Complex objects are equal, false if object is null, not an instance of Complex, or not equal to this Complex instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a hash code value for this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getImaginary()",
    "name": "getImaginary",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the imaginary part.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getReal()",
    "name": "getReal",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the real part.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isNaN()",
    "name": "isNaN",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if either or both parts of this complex number is NaN; false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isInfinite()",
    "name": "isInfinite",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if one or both parts of this complex number are infinite and neither part is NaN.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "multiply(org.apache.commons.math.complex.Complex rhs)",
    "name": "multiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.complex.Complex",
          "name": "Complex",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.complex.Complex",
            "name": "Complex",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is other. other complex number.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the complex number product.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "rhs is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "multiply(double rhs)",
    "name": "multiply",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is scalar. scalar number.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the complex number product.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "negate()",
    "name": "negate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the negation of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "subtract(org.apache.commons.math.complex.Complex rhs)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.complex.Complex",
          "name": "Complex",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.complex.Complex",
            "name": "Complex",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "rhs is other. other complex number.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the complex number difference.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "rhs is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "acos()",
    "name": "acos",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the inverse cosine of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "asin()",
    "name": "asin",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the inverse sine of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "atan()",
    "name": "atan",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the inverse tangent of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "cos()",
    "name": "cos",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the cosine of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "cosh()",
    "name": "cosh",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the hyperbolic cosine of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "exp()",
    "name": "exp",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "ethis.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "log()",
    "name": "log",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "ln of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "pow(org.apache.commons.math.complex.Complex x)",
    "name": "pow",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.complex.Complex",
          "name": "Complex",
          "isArray": false
        },
        "name": "x"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.complex.Complex",
            "name": "Complex",
            "isArray": false
          },
          "name": "x"
        },
        "comment": "the exponent.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "thisx.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.math.exception.NullArgumentException",
          "name": "NullArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "x is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "sin()",
    "name": "sin",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the sine of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sinh()",
    "name": "sinh",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the hyperbolic sine of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sqrt()",
    "name": "sqrt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the square root of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "sqrt1z()",
    "name": "sqrt1z",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the square root of 1 - this2.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "tan()",
    "name": "tan",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the tangent of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "tanh()",
    "name": "tanh",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the hyperbolic tangent of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getArgument()",
    "name": "getArgument",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the argument of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "nthRoot(int n)",
    "name": "nthRoot",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<org.apache.commons.math.complex.Complex>",
      "name": "java.util.List<org.apache.commons.math.complex.Complex>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "degree of root.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "List<Complex> all nth roots of this complex number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "parameter n is less than or equal to 0.",
        "kind": "THROWS",
        "condition": "args[0]<=0"
      }
    ]
  },
  {
    "signature": "createComplex(double realPart, double imaginaryPart)",
    "name": "createComplex",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "org.apache.commons.math.complex.Complex",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "realPart"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "imaginaryPart"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "realPart"
        },
        "comment": "realPart is real. real part.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "imaginaryPart"
        },
        "comment": "imaginaryPart is imaginary. imaginary part.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new complex number instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "readResolve()",
    "name": "readResolve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "A Complex instance with all fields resolved.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getField()",
    "name": "getField",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.math.complex.ComplexField",
      "name": "org.apache.commons.math.complex.ComplexField",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.complex.Complex",
      "name": "Complex",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.complex.Complex",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]