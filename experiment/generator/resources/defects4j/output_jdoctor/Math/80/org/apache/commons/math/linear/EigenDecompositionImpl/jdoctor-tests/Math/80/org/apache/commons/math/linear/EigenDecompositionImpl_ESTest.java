/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 19:17:04 GMT 2023
 */
package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.ArrayRealVector;
import org.apache.commons.math.linear.DecompositionSolver;
import org.apache.commons.math.linear.EigenDecompositionImpl;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class EigenDecompositionImpl_ESTest extends EigenDecompositionImpl_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test004() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        openMapRealVector0.getSparcity();
    }

    @Test(timeout = 4000)
    public void test005() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        openMapRealVector0.getEpsilon();
    }

    @Test(timeout = 4000)
    public void test006() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        openMapRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test007() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        openMapRealVector0.getSparcity();
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        openMapRealVector0.getEpsilon();
    }

    @Test(timeout = 4000)
    public void test0013() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        openMapRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test0014() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        openMapRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test0015() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        openMapRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test0016() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.333);
    }

    @Test(timeout = 4000)
    public void test0020() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.333);
        openMapRealVector0.getSparcity();
    }

    @Test(timeout = 4000)
    public void test0021() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.333);
        openMapRealVector0.getEpsilon();
    }

    @Test(timeout = 4000)
    public void test0022() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.333);
        openMapRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test0023() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.333);
        openMapRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test0024() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.333);
        openMapRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test0025() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.333);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test0026() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 0.333;
        doubleArray0[1] = 1.0;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.333);
        eigenDecompositionImpl0.getEigenvector(15);
    }

    @Test(timeout = 4000)
    public void test0127() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test0128() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
    }

    @Test(timeout = 4000)
    public void test0131() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        doubleArray0.equals((Object) doubleArray1);
    }

    @Test(timeout = 4000)
    public void test0132() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test0135() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test0136() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
    }

    @Test(timeout = 4000)
    public void test0139() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
        doubleArray0.equals((Object) doubleArray1);
    }

    @Test(timeout = 4000)
    public void test0140() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test0143() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test0144() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test0145() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        RealMatrix realMatrix0 = eigenDecompositionImpl0.getV();
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test0248() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test0250() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test0251() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test0252() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test0253() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test0254() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test0255() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test0256() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test0257() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test0259() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test0260() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test0261() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test0262() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test0263() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test0264() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test0265() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test0266() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test0267() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test0268() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test0269() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test0270() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test0271() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test0272() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test0273() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test0275() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test0276() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test0277() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test0278() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test0279() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test0280() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test0281() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test0282() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test0283() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test0284() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test0285() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test0286() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test0287() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test0288() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test0291() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
    }

    @Test(timeout = 4000)
    public void test0292() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test0293() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test0295() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test0296() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test0297() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test0298() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test0299() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test02100() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test02101() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test02102() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test02103() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test02104() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test02105() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test02106() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test02107() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test02108() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test02109() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[1] = 0.563;
        doubleArray0[3] = 137.40041351;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test03110() throws Throwable {
        double[] doubleArray0 = new double[0];
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray0, 0.0);
    }

    @Test(timeout = 4000)
    public void test04111() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test04114() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test04115() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test04116() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test04117() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test04118() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test04119() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test04120() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test04122() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test04124() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test04125() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test04126() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test04127() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test04128() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test04129() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test04130() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test04131() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test04132() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test04133() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test04134() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test04135() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test04136() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test04138() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test04139() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test04141() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test04142() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test04143() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test04144() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test04145() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test04146() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test04147() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test04148() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test04149() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test04150() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test04151() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test04152() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test04153() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test04154() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test04157() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
    }

    @Test(timeout = 4000)
    public void test04159() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test04160() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test04162() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test04163() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test04164() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test04165() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test04166() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test04167() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test04168() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test04169() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test04170() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test04171() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test04172() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test04173() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test04174() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test04175() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test04176() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test04177() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
    }

    @Test(timeout = 4000)
    public void test04179() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test04180() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test04182() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test04183() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test04184() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test04185() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test04186() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test04187() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test04188() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test04189() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test04190() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test04191() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test04192() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test04193() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test04194() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test04195() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test04196() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test05199() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (-244.0);
        doubleArray0[1] = (-244.0);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        double[] doubleArray1 = new double[4];
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test05200() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (-244.0);
        doubleArray0[1] = (-244.0);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        doubleArray1[3] = (-7.34662659124574E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
    }

    @Test(timeout = 4000)
    public void test05203() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (-244.0);
        doubleArray0[1] = (-244.0);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        doubleArray1[3] = (-7.34662659124574E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        doubleArray0.equals((Object) doubleArray1);
    }

    @Test(timeout = 4000)
    public void test05204() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (-244.0);
        doubleArray0[1] = (-244.0);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        doubleArray1[3] = (-7.34662659124574E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test05207() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (-244.0);
        doubleArray0[1] = (-244.0);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        doubleArray1[3] = (-7.34662659124574E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test05208() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (-244.0);
        doubleArray0[1] = (-244.0);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        doubleArray1[3] = (-7.34662659124574E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        double double0 = eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test05211() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (-244.0);
        doubleArray0[1] = (-244.0);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        doubleArray1[3] = (-7.34662659124574E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        double double0 = eigenDecompositionImpl0.getDeterminant();
        doubleArray0.equals((Object) doubleArray1);
    }

    @Test(timeout = 4000)
    public void test05212() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (-244.0);
        doubleArray0[1] = (-244.0);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        doubleArray1[3] = (-7.34662659124574E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        double double0 = eigenDecompositionImpl0.getDeterminant();
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test05215() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = (-244.0);
        doubleArray0[1] = (-244.0);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = 2.2250738585072014E-308;
        doubleArray1[3] = (-7.34662659124574E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        double double0 = eigenDecompositionImpl0.getDeterminant();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test06218() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
    }

    @Test(timeout = 4000)
    public void test06222() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        openMapRealVector0.getEpsilon();
    }

    @Test(timeout = 4000)
    public void test06223() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        openMapRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test06224() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        openMapRealVector0.getSparcity();
    }

    @Test(timeout = 4000)
    public void test06225() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
    }

    @Test(timeout = 4000)
    public void test06229() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        openMapRealVector0.getEpsilon();
    }

    @Test(timeout = 4000)
    public void test06230() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        openMapRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test06231() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        openMapRealVector0.getSparcity();
    }

    @Test(timeout = 4000)
    public void test06232() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        openMapRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test06233() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        openMapRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test06234() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
    }

    @Test(timeout = 4000)
    public void test06238() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        openMapRealVector0.getEpsilon();
    }

    @Test(timeout = 4000)
    public void test06239() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        openMapRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test06240() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        openMapRealVector0.getSparcity();
    }

    @Test(timeout = 4000)
    public void test06241() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        openMapRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test06242() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        openMapRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test06243() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test06244() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        double double0 = eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test06248() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        double double0 = eigenDecompositionImpl0.getDeterminant();
        openMapRealVector0.getEpsilon();
    }

    @Test(timeout = 4000)
    public void test06249() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        double double0 = eigenDecompositionImpl0.getDeterminant();
        openMapRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test06250() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        double double0 = eigenDecompositionImpl0.getDeterminant();
        openMapRealVector0.getSparcity();
    }

    @Test(timeout = 4000)
    public void test06251() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        double double0 = eigenDecompositionImpl0.getDeterminant();
        openMapRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test06252() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        double double0 = eigenDecompositionImpl0.getDeterminant();
        openMapRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test06253() throws Throwable {
        double[] doubleArray0 = new double[4];
        doubleArray0[0] = 636.63454613219;
        doubleArray0[2] = (-900.97647);
        doubleArray0[3] = (-1124.0);
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, (-1124.0));
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 689.1547033442881);
        double double0 = eigenDecompositionImpl0.getDeterminant();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test07254() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test07256() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test07257() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test07258() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test07259() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test07260() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test07261() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test07262() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test07263() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test07265() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test07266() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test07267() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test07268() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test07269() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test07270() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test07271() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test07272() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test07273() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test07274() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test07275() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test07276() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test07277() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test07278() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test07279() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test07281() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test07282() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test07283() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test07284() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test07285() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test07286() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test07287() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test07288() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test07289() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test07290() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test07291() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test07292() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test07293() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test07294() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test07297() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
    }

    @Test(timeout = 4000)
    public void test07298() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test07299() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test07301() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test07302() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test07303() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test07304() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test07305() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test07306() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test07307() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test07308() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test07309() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test07310() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test07311() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test07312() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test07313() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test07314() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test07315() throws Throwable {
        double[] doubleArray0 = new double[25];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test08316() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test08319() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test08320() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test08321() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test08322() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test08323() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test08324() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test08325() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08327() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test08329() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test08330() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test08331() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test08332() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test08333() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test08334() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test08335() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test08336() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test08337() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test08338() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test08339() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test08340() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test08341() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test08343() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test08344() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test08346() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test08347() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test08348() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test08349() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test08350() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test08351() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test08352() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test08353() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test08354() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test08355() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test08356() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test08357() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test08358() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test08359() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test08362() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
    }

    @Test(timeout = 4000)
    public void test08364() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test08365() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test08367() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test08368() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test08369() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test08370() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test08371() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test08372() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test08373() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test08374() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test08375() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test08376() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test08377() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test08378() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test08379() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test08380() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test08381() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test08382() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getRealEigenvalue((-1979));
    }

    @Test(timeout = 4000)
    public void test09383() throws Throwable {
        double[][] doubleArray0 = new double[1][1];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0, false);
    }

    @Test(timeout = 4000)
    public void test09385() throws Throwable {
        double[][] doubleArray0 = new double[1][1];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0, false);
        array2DRowRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test09386() throws Throwable {
        double[][] doubleArray0 = new double[1][1];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0, false);
        array2DRowRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test09387() throws Throwable {
        double[][] doubleArray0 = new double[1][1];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0, false);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.5);
    }

    @Test(timeout = 4000)
    public void test09389() throws Throwable {
        double[][] doubleArray0 = new double[1][1];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0, false);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.5);
        array2DRowRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test09390() throws Throwable {
        double[][] doubleArray0 = new double[1][1];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0, false);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.5);
        array2DRowRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test09391() throws Throwable {
        double[][] doubleArray0 = new double[1][1];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0, false);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.5);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test09392() throws Throwable {
        double[][] doubleArray0 = new double[1][1];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0, false);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.5);
        eigenDecompositionImpl0.getImagEigenvalue((-829));
    }

    @Test(timeout = 4000)
    public void test11455() throws Throwable {
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl((double[]) null, (double[]) null, 1294.0);
    }

    @Test(timeout = 4000)
    public void test12456() throws Throwable {
        double[] doubleArray0 = new double[5];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test12459() throws Throwable {
        double[] doubleArray0 = new double[5];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        array2DRowRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test12460() throws Throwable {
        double[] doubleArray0 = new double[5];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        array2DRowRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test12461() throws Throwable {
        double[] doubleArray0 = new double[5];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 0.0);
    }

    @Test(timeout = 4000)
    public void test13462() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3991, 3991);
    }

    @Test(timeout = 4000)
    public void test13463() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3991, 3991);
        array2DRowRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test13464() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3991, 3991);
        array2DRowRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test13465() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3991, 3991);
        RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
    }

    @Test(timeout = 4000)
    public void test13466() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3991, 3991);
        RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
        realMatrix0.equals((Object) array2DRowRealMatrix0);
    }

    @Test(timeout = 4000)
    public void test13467() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3991, 3991);
        RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
        array2DRowRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test13468() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3991, 3991);
        RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
        array2DRowRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test13469() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3991, 3991);
        RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test13470() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3991, 3991);
        RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test13473() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(3991, 3991);
        RealMatrix realMatrix0 = array2DRowRealMatrix0.getRowMatrix(0);
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 3991);
    }

    @Test(timeout = 4000)
    public void test14474() throws Throwable {
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl((RealMatrix) null, 2028.36210992623);
    }

    @Test(timeout = 4000)
    public void test15475() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
    }

    @Test(timeout = 4000)
    public void test15476() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
        array2DRowRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test15477() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
        array2DRowRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test15478() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix();
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-603.0));
    }

    @Test(timeout = 4000)
    public void test16479() throws Throwable {
        double[] doubleArray0 = new double[0];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test16482() throws Throwable {
        double[] doubleArray0 = new double[0];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        array2DRowRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test16483() throws Throwable {
        double[] doubleArray0 = new double[0];
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 2.0);
    }

    @Test(timeout = 4000)
    public void test17485() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
    }

    @Test(timeout = 4000)
    public void test17488() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        doubleArray0.equals((Object) doubleArray1);
    }

    @Test(timeout = 4000)
    public void test17489() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test17492() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test17493() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
    }

    @Test(timeout = 4000)
    public void test17496() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
        doubleArray0.equals((Object) doubleArray1);
    }

    @Test(timeout = 4000)
    public void test17497() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test17500() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test17501() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        DecompositionSolver decompositionSolver0 = eigenDecompositionImpl0.getSolver();
        decompositionSolver0.isNonSingular();
    }

    @Test(timeout = 4000)
    public void test18504() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test18507() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        array2DRowRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test18508() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        array2DRowRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test18509() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
    }

    @Test(timeout = 4000)
    public void test18512() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        array2DRowRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test18513() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        array2DRowRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test18514() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test18515() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
    }

    @Test(timeout = 4000)
    public void test18518() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
        array2DRowRealMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test18519() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
        array2DRowRealMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test18520() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test18521() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
        realVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test18522() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
        realVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test18523() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
        realVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test18524() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
        realVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test18525() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
        realVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test18526() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2219.6592927939664;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, (-197.0));
        RealVector realVector0 = eigenDecompositionImpl0.getEigenvector(0);
        realVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test19527() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[2] = 1602954.1504873172;
        double[] doubleArray1 = new double[4];
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test19528() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[2] = 1602954.1504873172;
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = (-244.0);
        doubleArray1[1] = (-244.0);
        doubleArray1[2] = (-7.3466E-10);
        doubleArray1[3] = (-7.3466E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
    }

    @Test(timeout = 4000)
    public void test19531() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[2] = 1602954.1504873172;
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = (-244.0);
        doubleArray1[1] = (-244.0);
        doubleArray1[2] = (-7.3466E-10);
        doubleArray1[3] = (-7.3466E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        doubleArray0.equals((Object) doubleArray1);
    }

    @Test(timeout = 4000)
    public void test19532() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[2] = 1602954.1504873172;
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = (-244.0);
        doubleArray1[1] = (-244.0);
        doubleArray1[2] = (-7.3466E-10);
        doubleArray1[3] = (-7.3466E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test19535() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[2] = 1602954.1504873172;
        double[] doubleArray1 = new double[4];
        doubleArray1[0] = (-244.0);
        doubleArray1[1] = (-244.0);
        doubleArray1[2] = (-7.3466E-10);
        doubleArray1[3] = (-7.3466E-10);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test20536() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
    }

    @Test(timeout = 4000)
    public void test20537() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test20538() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test20539() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test20540() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test20541() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test20542() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test20543() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test20545() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test20547() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test20548() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test20549() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test20550() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test20551() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test20552() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test20553() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test20554() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test20555() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test20556() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test20557() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test20558() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test20559() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test20561() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test20562() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test20564() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test20565() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test20566() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test20567() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test20568() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test20569() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test20570() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test20571() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test20572() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test20573() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test20574() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test20575() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test20576() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test20577() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test20580() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
    }

    @Test(timeout = 4000)
    public void test20582() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test20583() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test20585() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test20586() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test20587() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test20588() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test20589() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test20590() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test20591() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test20592() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test20593() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test20594() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test20595() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test20596() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test20597() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test20598() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test20599() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = 2012.2780641248314;
        doubleArray0[0] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test21600() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test21603() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test21604() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test21605() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test21606() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test21607() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test21608() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test21609() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test21611() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test21613() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test21614() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test21615() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test21616() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test21617() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test21618() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test21619() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test21620() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test21621() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test21622() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test21623() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test21624() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test21625() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test21627() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test21628() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test21630() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test21631() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test21632() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test21633() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test21634() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test21635() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test21636() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test21637() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test21638() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test21639() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test21640() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test21641() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test21642() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test21643() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test21646() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
    }

    @Test(timeout = 4000)
    public void test21648() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test21649() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test21651() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test21652() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test21653() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test21654() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test21655() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test21656() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test21657() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test21658() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test21659() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test21660() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test21661() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test21662() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test21663() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test21664() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test21665() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test22666() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test22669() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test22670() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test22671() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test22672() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test22673() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test22674() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test22675() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test22677() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test22679() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test22680() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test22681() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test22682() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test22683() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test22684() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test22685() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test22686() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test22687() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test22688() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test22689() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test22690() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test22691() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test22693() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test22694() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test22696() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test22697() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test22698() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test22699() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test22700() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test22701() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test22702() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test22703() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test22704() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test22705() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test22706() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test22707() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test22708() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test22709() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test22712() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
    }

    @Test(timeout = 4000)
    public void test22714() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test22715() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test22717() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test22718() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test22719() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test22720() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test22721() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test22722() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test22723() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test22724() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test22725() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test22726() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test22727() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test22728() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test22729() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test22730() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test22731() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test23732() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[1] = (-740.078604);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        doubleArray0[4] = 2.2250738585072014E-308;
        double[] doubleArray1 = new double[4];
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test23733() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[1] = (-740.078604);
        doubleArray0[2] = 1602954.1504873172;
        doubleArray0[3] = (-7.34662659124574E-10);
        doubleArray0[4] = 2.2250738585072014E-308;
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, (-1.0));
    }

    @Test(timeout = 4000)
    public void test24734() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test24737() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test24738() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test24739() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test24740() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test24741() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test24742() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test24743() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test24745() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test24747() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test24748() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test24749() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test24750() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test24751() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test24752() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test24753() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test24754() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test24755() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test24756() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test24757() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test24758() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test24759() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test24761() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test24762() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test24764() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test24765() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test24766() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test24767() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test24768() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test24769() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test24770() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test24771() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test24772() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test24773() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test24774() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test24775() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test24776() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test24777() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test24780() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
    }

    @Test(timeout = 4000)
    public void test24782() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test24783() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test24785() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test24786() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test24787() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test24788() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test24789() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test24790() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test24791() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test24792() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test24793() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test24794() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test24795() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test24796() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test24797() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test24798() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test24799() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5058.765168707483);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = 0.563;
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test25800() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test25803() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test25804() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test25805() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test25806() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test25807() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test25808() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test25809() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test25811() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test25813() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test25814() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test25815() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test25816() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test25817() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test25818() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test25819() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test25820() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test25821() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test25822() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test25823() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test25824() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test25825() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test25827() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test25828() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test25830() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test25831() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test25832() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test25833() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test25834() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test25835() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test25836() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test25837() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test25838() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test25839() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test25840() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test25841() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test25842() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test25843() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test25846() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
    }

    @Test(timeout = 4000)
    public void test25848() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.equals((Object) arrayRealVector1);
    }

    @Test(timeout = 4000)
    public void test25849() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.equals((Object) arrayRealVector0);
    }

    @Test(timeout = 4000)
    public void test25851() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isNaN();
    }

    @Test(timeout = 4000)
    public void test25852() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getNorm();
    }

    @Test(timeout = 4000)
    public void test25853() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test25854() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getDimension();
    }

    @Test(timeout = 4000)
    public void test25855() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.isInfinite();
    }

    @Test(timeout = 4000)
    public void test25856() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector0.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test25857() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getDimension();
    }

    @Test(timeout = 4000)
    public void test25858() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isInfinite();
    }

    @Test(timeout = 4000)
    public void test25859() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.isNaN();
    }

    @Test(timeout = 4000)
    public void test25860() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getLInfNorm();
    }

    @Test(timeout = 4000)
    public void test25861() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getNorm();
    }

    @Test(timeout = 4000)
    public void test25862() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        arrayRealVector1.getL1Norm();
    }

    @Test(timeout = 4000)
    public void test25863() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getColumnDimension();
    }

    @Test(timeout = 4000)
    public void test25864() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        realMatrix0.getRowDimension();
    }

    @Test(timeout = 4000)
    public void test25865() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[2] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test26866() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 0.563;
        doubleArray0[4] = 0.563;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test27867() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = (-3888.38364524087);
        doubleArray0[4] = (-2338.1729687950015);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test28868() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test29869() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        doubleArray1[1] = (-244.0);
        doubleArray1[2] = 2.2250738585072014E-308;
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test30870() throws Throwable {
        double[] doubleArray0 = new double[25];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        doubleArray0[3] = 137.40041351;
        doubleArray0[4] = (-2313.34540487357);
        doubleArray0[5] = 1466.0615726265294;
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test31871() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = 2527.19;
        doubleArray0[2] = (-5051.73);
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
    }

    @Test(timeout = 4000)
    public void test32872() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(15);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.5);
        eigenDecompositionImpl0.getV();
        eigenDecompositionImpl0.getSolver();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test33873() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = new double[4];
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(doubleArray0, doubleArray1, 2.2250738585072014E-308);
        double double0 = eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test34874() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(15);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.5);
        eigenDecompositionImpl0.getV();
        eigenDecompositionImpl0.getEigenvector(9);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test35875() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getV();
        RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test35876() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getV();
        RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
        realMatrix1.equals((Object) realMatrix0);
    }

    @Test(timeout = 4000)
    public void test36877() throws Throwable {
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(15);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(openMapRealMatrix0, 0.5);
        RealMatrix realMatrix0 = eigenDecompositionImpl0.getVT();
        RealMatrix realMatrix1 = eigenDecompositionImpl0.getVT();
    }

    @Test(timeout = 4000)
    public void test37878() throws Throwable {
        double[] doubleArray0 = new double[16];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector0.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0);
        eigenDecompositionImpl0.getD();
        RealMatrix realMatrix1 = eigenDecompositionImpl0.getD();
        realMatrix1.equals((Object) realMatrix0);
    }

    @Test(timeout = 4000)
    public void test38879() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.563);
        eigenDecompositionImpl0.getSolver();
        RealMatrix realMatrix1 = eigenDecompositionImpl0.getV();
        realMatrix1.equals((Object) realMatrix0);
    }

    @Test(timeout = 4000)
    public void test39880() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getV();
        eigenDecompositionImpl0.getV();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test40881() throws Throwable {
        double[][] doubleArray0 = new double[2][4];
        double[] doubleArray1 = new double[18];
        doubleArray1[0] = 1.7989122232364704E-8;
        doubleArray0[0] = doubleArray1;
        doubleArray0[1] = doubleArray1;
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = null;
        eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 3009.08573);
    }

    @Test(timeout = 4000)
    public void test41882() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double[] doubleArray1 = eigenDecompositionImpl0.getRealEigenvalues();
    }

    @Test(timeout = 4000)
    public void test42883() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        double double0 = eigenDecompositionImpl0.getRealEigenvalue(0);
    }

    @Test(timeout = 4000)
    public void test43884() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getImagEigenvalue(0);
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test44885() throws Throwable {
        double[] doubleArray0 = new double[6];
        ArrayRealVector arrayRealVector0 = new ArrayRealVector(doubleArray0, 0, 0);
        ArrayRealVector arrayRealVector1 = new ArrayRealVector(arrayRealVector0, doubleArray0);
        RealMatrix realMatrix0 = arrayRealVector1.outerProduct(doubleArray0);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(realMatrix0, 0.0);
        eigenDecompositionImpl0.getImagEigenvalues();
        eigenDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test45886() throws Throwable {
        Array2DRowRealMatrix array2DRowRealMatrix0 = new Array2DRowRealMatrix(52, 52);
        EigenDecompositionImpl eigenDecompositionImpl0 = new EigenDecompositionImpl(array2DRowRealMatrix0, 4.186838380410498E-10);
        // Undeclared exception!
        eigenDecompositionImpl0.getV();
    }
}
