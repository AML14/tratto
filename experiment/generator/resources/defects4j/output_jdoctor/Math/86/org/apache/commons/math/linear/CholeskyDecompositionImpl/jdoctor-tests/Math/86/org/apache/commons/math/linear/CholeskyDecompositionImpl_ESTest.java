/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 19:28:47 GMT 2023
 */
package org.apache.commons.math.linear;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.apache.commons.math.linear.CholeskyDecompositionImpl;
import org.apache.commons.math.linear.DenseRealMatrix;
import org.apache.commons.math.linear.OpenMapRealMatrix;
import org.apache.commons.math.linear.OpenMapRealVector;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealMatrixImpl;
import org.apache.commons.math.linear.RealVector;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class CholeskyDecompositionImpl_ESTest extends CholeskyDecompositionImpl_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        double[] doubleArray0 = new double[1];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 1.0E-12, (-124.6528351558643));
        double double0 = choleskyDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl();
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0, (-1183.6668903126), (-1183.6668903126));
        double double0 = choleskyDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl();
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0, (-1183.6668903126), (-1183.6668903126));
        choleskyDecompositionImpl0.getL();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        DenseRealMatrix denseRealMatrix0 = new DenseRealMatrix(2468, 2468);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(denseRealMatrix0, 0.0, 1805.616172939);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl((RealMatrix) null, (-1010.877599918819), 2270.84505827051);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        double[] doubleArray0 = new double[0];
        RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl(doubleArray0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0, (-1.0), 0.0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        DenseRealMatrix denseRealMatrix0 = new DenseRealMatrix(2504, 2504);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(denseRealMatrix0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        double[] doubleArray0 = new double[0];
        RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl(doubleArray0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl();
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0, (-1183.6668903126), (-1183.6668903126));
        choleskyDecompositionImpl0.getLT();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        double[] doubleArray0 = new double[5];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 1605.74765799);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(openMapRealMatrix0, 1.0, 3.1431336163519293E-9);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        double[] doubleArray0 = new double[7];
        RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl(doubleArray0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0, (-1518.7014536), (-1939.9482595484867));
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        RealMatrixImpl realMatrixImpl0 = new RealMatrixImpl();
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrixImpl0);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
        double double0 = choleskyDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
        choleskyDecompositionImpl0.getL();
        RealMatrix realMatrix1 = choleskyDecompositionImpl0.getLT();
        realMatrix1.getFrobeniusNorm();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
        choleskyDecompositionImpl0.getL();
        RealMatrix realMatrix1 = choleskyDecompositionImpl0.getL();
        realMatrix1.getFrobeniusNorm();
    }

    @Test(timeout = 4000)
    public void test1415() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
        choleskyDecompositionImpl0.getL();
        RealMatrix realMatrix1 = choleskyDecompositionImpl0.getL();
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        double[] doubleArray0 = new double[5];
        doubleArray0[0] = 3140.30398224132;
        doubleArray0[4] = 3140.30398224132;
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 3140.30398224132);
        OpenMapRealMatrix openMapRealMatrix0 = openMapRealVector0.outerproduct(openMapRealVector0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(openMapRealMatrix0, (-1992.2776373530703), 3140.30398224132);
    }

    @Test(timeout = 4000)
    public void test1617() throws Throwable {
        double[] doubleArray0 = new double[4];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0);
    }

    @Test(timeout = 4000)
    public void test1718() throws Throwable {
        OpenMapRealMatrix openMapRealMatrix0 = new OpenMapRealMatrix(2146438111, 382);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(openMapRealMatrix0);
    }

    @Test(timeout = 4000)
    public void test1819() throws Throwable {
        double[] doubleArray0 = new double[2];
        OpenMapRealVector openMapRealVector0 = new OpenMapRealVector(doubleArray0, 0.0);
        RealMatrix realMatrix0 = openMapRealVector0.outerProduct((RealVector) openMapRealVector0);
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = new CholeskyDecompositionImpl(realMatrix0, 0.0, 0.0);
        choleskyDecompositionImpl0.getSolver();
        choleskyDecompositionImpl0.getDeterminant();
    }

    @Test(timeout = 4000)
    public void test1920() throws Throwable {
        CholeskyDecompositionImpl choleskyDecompositionImpl0 = null;
        choleskyDecompositionImpl0 = new CholeskyDecompositionImpl((RealMatrix) null);
    }
}
