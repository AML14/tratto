[
  {
    "signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver(double absoluteAccuracy, org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method method)",
    "name": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
      "name": "BaseSecantSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "absoluteAccuracy"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
          "name": "Method",
          "isArray": false
        },
        "name": "method"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "absoluteAccuracy"
        },
        "comment": "absoluteAccuracy is absolute. absolute accuracy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
            "name": "Method",
            "isArray": false
          },
          "name": "method"
        },
        "comment": "method is Secant-based. Secant-based root-finding method to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver(double relativeAccuracy, double absoluteAccuracy, org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method method)",
    "name": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
      "name": "BaseSecantSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "relativeAccuracy"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "absoluteAccuracy"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
          "name": "Method",
          "isArray": false
        },
        "name": "method"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "relativeAccuracy"
        },
        "comment": "relativeAccuracy is relative. relative accuracy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "absoluteAccuracy"
        },
        "comment": "absoluteAccuracy is absolute. absolute accuracy.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
            "name": "Method",
            "isArray": false
          },
          "name": "method"
        },
        "comment": "method is Secant-based. Secant-based root-finding method to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.math.analysis.solvers.BaseSecantSolver(double relativeAccuracy, double absoluteAccuracy, double functionValueAccuracy, org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method method)",
    "name": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
      "name": "BaseSecantSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "relativeAccuracy"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "absoluteAccuracy"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "functionValueAccuracy"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
          "name": "Method",
          "isArray": false
        },
        "name": "method"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "relativeAccuracy"
        },
        "comment": "Maximum relative error.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "absoluteAccuracy"
        },
        "comment": "Maximum absolute error.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "functionValueAccuracy"
        },
        "comment": "Maximum function value error.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver$Method",
            "name": "Method",
            "isArray": false
          },
          "name": "method"
        },
        "comment": "method is Secant-based. Secant-based root-finding method to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
      "name": "BaseSecantSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.analysis.UnivariateRealFunction",
          "name": "UnivariateRealFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "min"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "max"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.analysis.solvers.AllowedSolution",
          "name": "AllowedSolution",
          "isArray": false
        },
        "name": "allowedSolution"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue, org.apache.commons.math.analysis.solvers.AllowedSolution allowedSolution)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
      "name": "BaseSecantSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.analysis.UnivariateRealFunction",
          "name": "UnivariateRealFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "min"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "max"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "startValue"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.analysis.solvers.AllowedSolution",
          "name": "AllowedSolution",
          "isArray": false
        },
        "name": "allowedSolution"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "solve(int maxEval, org.apache.commons.math.analysis.UnivariateRealFunction f, double min, double max, double startValue)",
    "name": "solve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
      "name": "BaseSecantSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxEval"
      },
      {
        "type": {
          "qualifiedName": "org.apache.commons.math.analysis.UnivariateRealFunction",
          "name": "UnivariateRealFunction",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "min"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "max"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "startValue"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doSolve()",
    "name": "doSolve",
    "containingClass": {
      "qualifiedName": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
      "name": "BaseSecantSolver",
      "isArray": false
    },
    "targetClass": "org.apache.commons.math.analysis.solvers.BaseSecantSolver",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]