[
  {
    "signature": "org.apache.commons.codec.language.DoubleMetaphone()",
    "name": "org.apache.commons.codec.language.DoubleMetaphone",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doubleMetaphone(java.lang.String value)",
    "name": "doubleMetaphone",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "String to encode.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an encoded string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doubleMetaphone(java.lang.String value, boolean alternate)",
    "name": "doubleMetaphone",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "alternate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "String to encode.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "alternate"
        },
        "comment": "use alternate encode.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "an encoded string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "encode(java.lang.Object obj)",
    "name": "encode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "Object to encode (should be of type String).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An encoded Object (will be of type String).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.codec.EncoderException",
          "name": "EncoderException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "encode parameter is not of type String.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "encode(java.lang.String value)",
    "name": "encode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "String to encode.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "An encoded String.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isDoubleMetaphoneEqual(java.lang.String value1, java.lang.String value2)",
    "name": "isDoubleMetaphoneEqual",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value1"
        },
        "comment": "The left-hand side of the encoded String#equals(Object).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value2"
        },
        "comment": "The right-hand side of the encoded String#equals(Object).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the encoded Strings are equal; false otherwise.",
      "kind": "RETURN",
      "condition": "args[0].equals(args[1]) ? methodResultID == true : methodResultID == false"
    },
    "throwsTags": []
  },
  {
    "signature": "isDoubleMetaphoneEqual(java.lang.String value1, java.lang.String value2, boolean alternate)",
    "name": "isDoubleMetaphoneEqual",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value1"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value2"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "alternate"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value1"
        },
        "comment": "The left-hand side of the encoded String#equals(Object).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value2"
        },
        "comment": "The right-hand side of the encoded String#equals(Object).",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "alternate"
        },
        "comment": "use the alternate value if true.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the encoded Strings are equal; false otherwise.",
      "kind": "RETURN",
      "condition": "args[0].equals(args[1]) ? methodResultID == true : methodResultID == false"
    },
    "throwsTags": []
  },
  {
    "signature": "getMaxCodeLen()",
    "name": "getMaxCodeLen",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "int.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setMaxCodeLen(int maxCodeLen)",
    "name": "setMaxCodeLen",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxCodeLen"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxCodeLen"
        },
        "comment": "The maxCodeLen to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "charAt(java.lang.String value, int index)",
    "name": "charAt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "contains(java.lang.String value, int start, int length, java.lang.String[] criteria)",
    "name": "contains",
    "containingClass": {
      "qualifiedName": "org.apache.commons.codec.language.DoubleMetaphone",
      "name": "DoubleMetaphone",
      "isArray": false
    },
    "targetClass": "org.apache.commons.codec.language.DoubleMetaphone",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "criteria"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]