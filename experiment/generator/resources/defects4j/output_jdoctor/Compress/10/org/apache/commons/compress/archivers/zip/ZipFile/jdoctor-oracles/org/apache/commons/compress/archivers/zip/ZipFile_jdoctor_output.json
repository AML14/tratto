[
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipFile(java.io.File f)",
    "name": "org.apache.commons.compress.archivers.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "f"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "the archive.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an error occurs while reading the file.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipFile(java.lang.String name)",
    "name": "org.apache.commons.compress.archivers.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "name of the archive.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an error occurs while reading the file.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipFile(java.lang.String name, java.lang.String encoding)",
    "name": "org.apache.commons.compress.archivers.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "name of the archive.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "the encoding to use for file names. encoding is use null for the platform's default encoding.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an error occurs while reading the file.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipFile(java.io.File f, java.lang.String encoding)",
    "name": "org.apache.commons.compress.archivers.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "the archive.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "the encoding to use for file names. encoding is use null for the platform's default encoding.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an error occurs while reading the file.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipFile(java.io.File f, java.lang.String encoding, boolean useUnicodeExtraFields)",
    "name": "org.apache.commons.compress.archivers.zip.ZipFile",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "f"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "useUnicodeExtraFields"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "f"
        },
        "comment": "the archive.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "the encoding to use for file names. encoding is use null for the platform's default encoding.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "useUnicodeExtraFields"
        },
        "comment": "whether to use InfoZIP Unicode Extra Fields (if present) to set the file names.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an error occurs while reading the file.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getEncoding()",
    "name": "getEncoding",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "null if using the platform's default character encoding.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an error occurs closing the archive.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "closeQuietly(org.apache.commons.compress.archivers.zip.ZipFile zipfile)",
    "name": "closeQuietly",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
          "name": "ZipFile",
          "isArray": false
        },
        "name": "zipfile"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
            "name": "ZipFile",
            "isArray": false
          },
          "name": "zipfile"
        },
        "comment": "file to close null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getEntries()",
    "name": "getEntries",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<org.apache.commons.compress.archivers.zip.ZipArchiveEntry>",
      "name": "java.util.Enumeration<org.apache.commons.compress.archivers.zip.ZipArchiveEntry>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "all entries as ZipArchiveEntry instances.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getEntriesInPhysicalOrder()",
    "name": "getEntriesInPhysicalOrder",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Enumeration<org.apache.commons.compress.archivers.zip.ZipArchiveEntry>",
      "name": "java.util.Enumeration<org.apache.commons.compress.archivers.zip.ZipArchiveEntry>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "all entries as ZipArchiveEntry instances.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getEntry(java.lang.String name)",
    "name": "getEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
      "name": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "name of the entry.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the ZipArchiveEntry corresponding to the given name - or null if not present.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canReadEntryData(org.apache.commons.compress.archivers.zip.ZipArchiveEntry ze)",
    "name": "canReadEntryData",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
          "name": "ZipArchiveEntry",
          "isArray": false
        },
        "name": "ze"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getInputStream(org.apache.commons.compress.archivers.zip.ZipArchiveEntry ze)",
    "name": "getInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.io.InputStream",
      "name": "java.io.InputStream",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
          "name": "ZipArchiveEntry",
          "isArray": false
        },
        "name": "ze"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
            "name": "ZipArchiveEntry",
            "isArray": false
          },
          "name": "ze"
        },
        "comment": "the entry to get the stream for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a stream to read the entry from.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "unable to create an input stream from the zipenty.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.util.zip.ZipException",
          "name": "ZipException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the zipentry uses an unsupported feature.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "finalize()",
    "name": "finalize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipFile",
      "name": "ZipFile",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipFile",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]