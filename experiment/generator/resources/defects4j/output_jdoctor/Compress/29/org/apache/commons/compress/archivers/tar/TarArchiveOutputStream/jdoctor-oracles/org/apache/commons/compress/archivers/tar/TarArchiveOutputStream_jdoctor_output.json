[
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream os)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "os"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.OutputStream",
            "name": "OutputStream",
            "isArray": false
          },
          "name": "os"
        },
        "comment": "the output stream to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream os, java.lang.String encoding)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "os"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.OutputStream",
            "name": "OutputStream",
            "isArray": false
          },
          "name": "os"
        },
        "comment": "the output stream to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "name of the encoding to use for file names.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream os, int blockSize)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "os"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "blockSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.OutputStream",
            "name": "OutputStream",
            "isArray": false
          },
          "name": "os"
        },
        "comment": "the output stream to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "blockSize"
        },
        "comment": "the block size to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream os, int blockSize, java.lang.String encoding)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "os"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "blockSize"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.OutputStream",
            "name": "OutputStream",
            "isArray": false
          },
          "name": "os"
        },
        "comment": "the output stream to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "blockSize"
        },
        "comment": "the block size to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "name of the encoding to use for file names.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream os, int blockSize, int recordSize)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "os"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "blockSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "recordSize"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.OutputStream",
            "name": "OutputStream",
            "isArray": false
          },
          "name": "os"
        },
        "comment": "the output stream to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "blockSize"
        },
        "comment": "the block size to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "recordSize"
        },
        "comment": "the record size to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream(java.io.OutputStream os, int blockSize, int recordSize, java.lang.String encoding)",
    "name": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "os"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "blockSize"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "recordSize"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.OutputStream",
            "name": "OutputStream",
            "isArray": false
          },
          "name": "os"
        },
        "comment": "the output stream to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "blockSize"
        },
        "comment": "the block size to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "recordSize"
        },
        "comment": "the record size to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "name of the encoding to use for file names.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setLongFileMode(int longFileMode)",
    "name": "setLongFileMode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "longFileMode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "longFileMode"
        },
        "comment": "the mode to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setBigNumberMode(int bigNumberMode)",
    "name": "setBigNumberMode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "bigNumberMode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "bigNumberMode"
        },
        "comment": "the mode to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setAddPaxHeadersForNonAsciiNames(boolean b)",
    "name": "setAddPaxHeadersForNonAsciiNames",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getCount()",
    "name": "getCount",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBytesWritten()",
    "name": "getBytesWritten",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "finish()",
    "name": "finish",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getRecordSize()",
    "name": "getRecordSize",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "The TarBuffer record size.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry archiveEntry)",
    "name": "putArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.ArchiveEntry",
          "name": "ArchiveEntry",
          "isArray": false
        },
        "name": "archiveEntry"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.ArchiveEntry",
            "name": "ArchiveEntry",
            "isArray": false
          },
          "name": "archiveEntry"
        },
        "comment": "The TarEntry to be written to the archive.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "archiveEntry is not an instance of TarArchiveEntry.",
        "kind": "THROWS",
        "condition": "(args[0] instanceof TarArchiveEntry) == false"
      }
    ]
  },
  {
    "signature": "closeArchiveEntry()",
    "name": "closeArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "write(byte[] wBuf, int wOffset, int numToWrite)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "wBuf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "wOffset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numToWrite"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "wBuf"
        },
        "comment": "The buffer to write to the archive.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "wOffset"
        },
        "comment": "The offset in the buffer from which to get bytes.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "numToWrite"
        },
        "comment": "The number of bytes to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "writePaxHeaders(org.apache.commons.compress.archivers.tar.TarArchiveEntry entry, java.lang.String entryName, java.util.Map<java.lang.String, java.lang.String> headers)",
    "name": "writePaxHeaders",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveEntry",
          "name": "TarArchiveEntry",
          "isArray": false
        },
        "name": "entry"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "entryName"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "headers"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "flush()",
    "name": "flush",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createArchiveEntry(java.io.File inputFile, java.lang.String entryName)",
    "name": "createArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
      "name": "TarArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.tar.TarArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.ArchiveEntry",
      "name": "org.apache.commons.compress.archivers.ArchiveEntry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "inputFile"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "entryName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]