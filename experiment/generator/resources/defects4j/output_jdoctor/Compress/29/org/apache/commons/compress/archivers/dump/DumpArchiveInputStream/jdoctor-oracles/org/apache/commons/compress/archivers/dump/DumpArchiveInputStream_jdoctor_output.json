[
  {
    "signature": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream(java.io.InputStream is)",
    "name": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
      "name": "DumpArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "is"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.InputStream",
            "name": "InputStream",
            "isArray": false
          },
          "name": "is"
        },
        "comment": ".",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveException",
          "name": "DumpArchiveException",
          "isArray": false
        },
        "codeTags": [],
        "comment": ".",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream(java.io.InputStream is, java.lang.String encoding)",
    "name": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
      "name": "DumpArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.InputStream",
          "name": "InputStream",
          "isArray": false
        },
        "name": "is"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.InputStream",
            "name": "InputStream",
            "isArray": false
          },
          "name": "is"
        },
        "comment": ".",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "the encoding to use for file names. encoding is use null for the platform's default encoding.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getCount()",
    "name": "getCount",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
      "name": "DumpArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getBytesRead()",
    "name": "getBytesRead",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
      "name": "DumpArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSummary()",
    "name": "getSummary",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
      "name": "DumpArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveSummary",
      "name": "org.apache.commons.compress.archivers.dump.DumpArchiveSummary",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNextDumpEntry()",
    "name": "getNextDumpEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
      "name": "DumpArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
      "name": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getNextEntry()",
    "name": "getNextEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
      "name": "DumpArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
      "name": "org.apache.commons.compress.archivers.dump.DumpArchiveEntry",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "read(byte[] buf, int off, int len)",
    "name": "read",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
      "name": "DumpArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "off"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "buf"
        },
        "comment": "The buffer into which to place bytes read.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "off"
        },
        "comment": "The offset at which to place bytes read.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "len"
        },
        "comment": "The number of bytes to read.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The number of bytes read, or -1 at EOF.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
      "name": "DumpArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "matches(byte[] buffer, int length)",
    "name": "matches",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
      "name": "DumpArchiveInputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.dump.DumpArchiveInputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "buffer"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]