[
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream(java.io.OutputStream out)",
    "name": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.OutputStream",
          "name": "OutputStream",
          "isArray": false
        },
        "name": "out"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.OutputStream",
            "name": "OutputStream",
            "isArray": false
          },
          "name": "out"
        },
        "comment": "the outputstream to zip.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream(java.io.File file)",
    "name": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "file"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "file"
        },
        "comment": "the file to zip to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "isSeekable()",
    "name": "isSeekable",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if seekable.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setEncoding(java.lang.String encoding)",
    "name": "setEncoding",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "encoding"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "encoding"
        },
        "comment": "the encoding to use for file names. encoding is use null for the platform's default encoding.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getEncoding()",
    "name": "getEncoding",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "null if using the platform's default character encoding.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setUseLanguageEncodingFlag(boolean b)",
    "name": "setUseLanguageEncodingFlag",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setCreateUnicodeExtraFields(org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy b)",
    "name": "setCreateUnicodeExtraFields",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream$UnicodeExtraFieldPolicy",
          "name": "UnicodeExtraFieldPolicy",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setFallbackToUTF8(boolean b)",
    "name": "setFallbackToUTF8",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "finish()",
    "name": "finish",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "closeArchiveEntry()",
    "name": "closeArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "putArchiveEntry(org.apache.commons.compress.archivers.ArchiveEntry archiveEntry)",
    "name": "putArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.ArchiveEntry",
          "name": "ArchiveEntry",
          "isArray": false
        },
        "name": "archiveEntry"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setComment(java.lang.String comment)",
    "name": "setComment",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "comment"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "comment"
        },
        "comment": "the comment.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setLevel(int level)",
    "name": "setLevel",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "level"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "level"
        },
        "comment": "level is compression. compression level.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an invalid compression level is specified.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "setMethod(int method)",
    "name": "setMethod",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "method"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "method"
        },
        "comment": "an int from java.util.zip.ZipEntry.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "write(byte[] b, int offset, int length)",
    "name": "write",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "b"
        },
        "comment": "b is byte. byte array to write.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "the start position to write from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of bytes to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an I/O error occurs.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "flush()",
    "name": "flush",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an I/O error occurs.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "deflate()",
    "name": "deflate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "writeLocalFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry ze)",
    "name": "writeLocalFileHeader",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
          "name": "ZipArchiveEntry",
          "isArray": false
        },
        "name": "ze"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
            "name": "ZipArchiveEntry",
            "isArray": false
          },
          "name": "ze"
        },
        "comment": "the entry to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "writeDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry ze)",
    "name": "writeDataDescriptor",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
          "name": "ZipArchiveEntry",
          "isArray": false
        },
        "name": "ze"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
            "name": "ZipArchiveEntry",
            "isArray": false
          },
          "name": "ze"
        },
        "comment": "the entry to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "writeCentralFileHeader(org.apache.commons.compress.archivers.zip.ZipArchiveEntry ze)",
    "name": "writeCentralFileHeader",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
          "name": "ZipArchiveEntry",
          "isArray": false
        },
        "name": "ze"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveEntry",
            "name": "ZipArchiveEntry",
            "isArray": false
          },
          "name": "ze"
        },
        "comment": "the entry to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "writeCentralDirectoryEnd()",
    "name": "writeCentralDirectoryEnd",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "writeOut(byte[] data)",
    "name": "writeOut",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "data"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "data"
        },
        "comment": "data is byte. byte array to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "writeOut(byte[] data, int offset, int length)",
    "name": "writeOut",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[B",
          "name": "byte[]",
          "isArray": true
        },
        "name": "data"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "length"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "[B",
            "name": "byte[]",
            "isArray": true
          },
          "name": "data"
        },
        "comment": "data is byte. byte array to write.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "offset"
        },
        "comment": "the start position to write from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "length"
        },
        "comment": "the number of bytes to write.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "on error.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createArchiveEntry(java.io.File inputFile, java.lang.String entryName)",
    "name": "createArchiveEntry",
    "containingClass": {
      "qualifiedName": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
      "name": "ZipArchiveOutputStream",
      "isArray": false
    },
    "targetClass": "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStream",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.compress.archivers.ArchiveEntry",
      "name": "org.apache.commons.compress.archivers.ArchiveEntry",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "inputFile"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "entryName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]