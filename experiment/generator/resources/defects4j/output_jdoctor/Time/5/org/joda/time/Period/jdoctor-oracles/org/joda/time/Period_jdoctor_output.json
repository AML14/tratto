[
  {
    "signature": "org.joda.time.Period()",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(int hours, int minutes, int seconds, int millis)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "amount of hours in this period.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "amount of minutes in this period.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "amount of seconds in this period.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "amount of milliseconds in this period.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "amount of years in this period.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "amount of months in this period.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "amount of weeks in this period.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "amount of days in this period.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "amount of hours in this period.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "amount of minutes in this period.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "amount of seconds in this period.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "amount of milliseconds in this period.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(int years, int months, int weeks, int days, int hours, int minutes, int seconds, int millis, org.joda.time.PeriodType type)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "amount of years in this period which . years is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "amount of months in this period which . months is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "amount of weeks in this period which . weeks is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "amount of days in this period which . days is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "amount of hours in this period which . hours is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "amount of minutes in this period which . minutes is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "amount of seconds in this period which . seconds is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "amount of milliseconds in this period which . millis is zero if unsupported.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means AllType.",
        "kind": "PARAM",
        "condition": "args[8]==null"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.Period(long duration)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "duration"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(long duration, org.joda.time.PeriodType type)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(long duration, org.joda.time.Chronology chronology)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology to use to split the duration. chronology is null means ISO default.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(long duration, org.joda.time.PeriodType type, org.joda.time.Chronology chronology)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology to use to split the duration. chronology is null means ISO default.",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(long startInstant, long endInstant)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "endInstant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "interval start in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "endInstant is interval. interval end in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(long startInstant, long endInstant, org.joda.time.PeriodType type)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "endInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "interval start in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "endInstant is interval. interval end in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(long startInstant, long endInstant, org.joda.time.Chronology chrono)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "endInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "interval start in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "endInstant is interval. interval end in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use. chrono is null means ISO in default zone.",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(long startInstant, long endInstant, org.joda.time.PeriodType type, org.joda.time.Chronology chrono)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "endInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "interval start in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "endInstant is interval. interval end in milliseconds.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use. chrono is null means ISO in default zone.",
        "kind": "PARAM",
        "condition": "args[3]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(org.joda.time.ReadableInstant startInstant, org.joda.time.ReadableInstant endInstant)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "endInstant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "interval start. startInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "interval end. endInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(org.joda.time.ReadableInstant startInstant, org.joda.time.ReadableInstant endInstant, org.joda.time.PeriodType type)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "endInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "interval start. startInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "interval end. endInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(org.joda.time.ReadablePartial start, org.joda.time.ReadablePartial end)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePartial",
          "name": "ReadablePartial",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePartial",
          "name": "ReadablePartial",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePartial",
            "name": "ReadablePartial",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the start of the period. start is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePartial",
            "name": "ReadablePartial",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the end of the period. end is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the partials are null or invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.Period(org.joda.time.ReadablePartial start, org.joda.time.ReadablePartial end, org.joda.time.PeriodType type)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePartial",
          "name": "ReadablePartial",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePartial",
          "name": "ReadablePartial",
          "isArray": false
        },
        "name": "end"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePartial",
            "name": "ReadablePartial",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the start of the period. start is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePartial",
            "name": "ReadablePartial",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the end of the period. end is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the partials are null or invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.Period(org.joda.time.ReadableInstant startInstant, org.joda.time.ReadableDuration duration)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "duration"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "the interval start. startInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration of the interval. duration is null means zero-length.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(org.joda.time.ReadableInstant startInstant, org.joda.time.ReadableDuration duration, org.joda.time.PeriodType type)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "startInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "startInstant"
        },
        "comment": "the interval start. startInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration of the interval. duration is null means zero-length.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(org.joda.time.ReadableDuration duration, org.joda.time.ReadableInstant endInstant)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "endInstant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration of the interval. duration is null means zero-length.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "the interval end. endInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(org.joda.time.ReadableDuration duration, org.joda.time.ReadableInstant endInstant, org.joda.time.PeriodType type)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "duration"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableInstant",
          "name": "ReadableInstant",
          "isArray": false
        },
        "name": "endInstant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration of the interval. duration is null means zero-length.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableInstant",
            "name": "ReadableInstant",
            "isArray": false
          },
          "name": "endInstant"
        },
        "comment": "the interval end. endInstant is null means now.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.Period(java.lang.Object period)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "period to convert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "period is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.Period(java.lang.Object period, org.joda.time.PeriodType type)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "period"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "period to convert.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means use converter.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "period is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.Period(java.lang.Object period, org.joda.time.Chronology chrono)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "period"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "period to convert.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use. chrono is null means ISO in default zone.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "period is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.Period(java.lang.Object period, org.joda.time.PeriodType type, org.joda.time.Chronology chrono)",
    "name": "org.joda.time.Period",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "period"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "period to convert.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "which set of fields this period supports. type is null means use converter.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use. chrono is null means ISO in default zone.",
        "kind": "PARAM",
        "condition": "args[2]==null"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "period is invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "an unsupported field's value is non-zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parse(java.lang.String str)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to parse. str is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "parse(java.lang.String str, org.joda.time.format.PeriodFormatter formatter)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.format.PeriodFormatter",
          "name": "PeriodFormatter",
          "isArray": false
        },
        "name": "formatter"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to parse. str is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.format.PeriodFormatter",
            "name": "PeriodFormatter",
            "isArray": false
          },
          "name": "formatter"
        },
        "comment": "the formatter to use. formatter is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "years(int years)",
    "name": "years",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "the amount of years in this period.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "months(int months)",
    "name": "months",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "the amount of months in this period.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "weeks(int weeks)",
    "name": "weeks",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "the amount of weeks in this period.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "days(int days)",
    "name": "days",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "the amount of days in this period.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hours(int hours)",
    "name": "hours",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "the amount of hours in this period.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minutes(int minutes)",
    "name": "minutes",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "the amount of minutes in this period.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "seconds(int seconds)",
    "name": "seconds",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "the amount of seconds in this period.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "millis(int millis)",
    "name": "millis",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "the amount of millis in this period.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "fieldDifference(org.joda.time.ReadablePartial start, org.joda.time.ReadablePartial end)",
    "name": "fieldDifference",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePartial",
          "name": "ReadablePartial",
          "isArray": false
        },
        "name": "start"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePartial",
          "name": "ReadablePartial",
          "isArray": false
        },
        "name": "end"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePartial",
            "name": "ReadablePartial",
            "isArray": false
          },
          "name": "start"
        },
        "comment": "the start of the period. start is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePartial",
            "name": "ReadablePartial",
            "isArray": false
          },
          "name": "end"
        },
        "comment": "the end of the period. end is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the partials are null or invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toPeriod()",
    "name": "toPeriod",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getYears()",
    "name": "getYears",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of years in the period, zero if unsupported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMonths()",
    "name": "getMonths",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of months in the period, zero if unsupported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWeeks()",
    "name": "getWeeks",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of weeks in the period, zero if unsupported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDays()",
    "name": "getDays",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of days in the period, zero if unsupported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getHours()",
    "name": "getHours",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of hours in the period, zero if unsupported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMinutes()",
    "name": "getMinutes",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of minutes in the period, zero if unsupported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSeconds()",
    "name": "getSeconds",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of seconds in the period, zero if unsupported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMillis()",
    "name": "getMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of millis in the period, zero if unsupported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "withPeriodType(org.joda.time.PeriodType type)",
    "name": "withPeriodType",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "the period type to use. type is null means standard.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the new period won't accept all of the current fields.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withFields(org.joda.time.ReadablePeriod period)",
    "name": "withFields",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to copy from. period is null ignored.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "the new period instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "a field type is unsupported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withField(org.joda.time.DurationFieldType field, int value)",
    "name": "withField",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationFieldType",
          "name": "DurationFieldType",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DurationFieldType",
            "name": "DurationFieldType",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field to set. field is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to set to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field type is null or unsupported.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "withFieldAdded(org.joda.time.DurationFieldType field, int value)",
    "name": "withFieldAdded",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationFieldType",
          "name": "DurationFieldType",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DurationFieldType",
            "name": "DurationFieldType",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field to set. field is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field type is null or unsupported.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "withYears(int years)",
    "name": "withYears",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "the amount of years to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period with the increased years.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withMonths(int months)",
    "name": "withMonths",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "the amount of months to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period with the increased months.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withWeeks(int weeks)",
    "name": "withWeeks",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "the amount of weeks to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period with the increased weeks.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withDays(int days)",
    "name": "withDays",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "the amount of days to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period with the increased days.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withHours(int hours)",
    "name": "withHours",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "the amount of hours to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period with the increased hours.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withMinutes(int minutes)",
    "name": "withMinutes",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "the amount of minutes to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period with the increased minutes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withSeconds(int seconds)",
    "name": "withSeconds",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "the amount of seconds to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period with the increased seconds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withMillis(int millis)",
    "name": "withMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "the amount of millis to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period with the increased millis.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plus(org.joda.time.ReadablePeriod period)",
    "name": "plus",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to add. period is null adds zero and returns this.",
        "kind": "PARAM",
        "condition": "receiverObjectID.ZERO==receiverObjectID"
      }
    ],
    "returnTag": {
      "comment": "the new updated period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plusYears(int years)",
    "name": "plusYears",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "the amount of years to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period with the increased years.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plusMonths(int months)",
    "name": "plusMonths",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "the amount of months to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period plus the increased months.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plusWeeks(int weeks)",
    "name": "plusWeeks",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "the amount of weeks to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period plus the increased weeks.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plusDays(int days)",
    "name": "plusDays",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "the amount of days to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period plus the increased days.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plusHours(int hours)",
    "name": "plusHours",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "the amount of hours to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period plus the increased hours.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plusMinutes(int minutes)",
    "name": "plusMinutes",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "the amount of minutes to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period plus the increased minutes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plusSeconds(int seconds)",
    "name": "plusSeconds",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "the amount of seconds to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period plus the increased seconds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plusMillis(int millis)",
    "name": "plusMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "the amount of millis to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period plus the increased millis.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minus(org.joda.time.ReadablePeriod period)",
    "name": "minus",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to add. period is null adds zero and returns this.",
        "kind": "PARAM",
        "condition": "receiverObjectID.ZERO==receiverObjectID"
      }
    ],
    "returnTag": {
      "comment": "the new updated period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minusYears(int years)",
    "name": "minusYears",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "the amount of years to take away negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period with the increased years.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minusMonths(int months)",
    "name": "minusMonths",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "the amount of months to take away negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period minus the increased months.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minusWeeks(int weeks)",
    "name": "minusWeeks",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "the amount of weeks to take away negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period minus the increased weeks.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minusDays(int days)",
    "name": "minusDays",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "the amount of days to take away negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period minus the increased days.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minusHours(int hours)",
    "name": "minusHours",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "the amount of hours to take away negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period minus the increased hours.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minusMinutes(int minutes)",
    "name": "minusMinutes",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "the amount of minutes to take away negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period minus the increased minutes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minusSeconds(int seconds)",
    "name": "minusSeconds",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "the amount of seconds to take away negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period minus the increased seconds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minusMillis(int millis)",
    "name": "minusMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "the amount of millis to take away negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new period minus the increased millis.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "multipliedBy(int scalar)",
    "name": "multipliedBy",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "scalar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "scalar"
        },
        "comment": "the scalar to multiply by. scalar is not null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a Period based on this period with the amounts multiplied by the scalar, never null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the capacity of any field is exceeded.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "negated()",
    "name": "negated",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Period based on this period with the amounts negated, never null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any field has the minimum value.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toStandardWeeks()",
    "name": "toStandardWeeks",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Weeks",
      "name": "org.joda.time.Weeks",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a period representing the number of standard weeks in this period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the period contains years or months.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the number of weeks is too large to be represented.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toStandardDays()",
    "name": "toStandardDays",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Days",
      "name": "org.joda.time.Days",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a period representing the number of standard days in this period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the period contains years or months.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the number of days is too large to be represented.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toStandardHours()",
    "name": "toStandardHours",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Hours",
      "name": "org.joda.time.Hours",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a period representing the number of standard hours in this period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the period contains years or months.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the number of hours is too large to be represented.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toStandardMinutes()",
    "name": "toStandardMinutes",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Minutes",
      "name": "org.joda.time.Minutes",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a period representing the number of standard minutes in this period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the period contains years or months.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the number of minutes is too large to be represented.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toStandardSeconds()",
    "name": "toStandardSeconds",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Seconds",
      "name": "org.joda.time.Seconds",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a period representing the number of standard seconds in this period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the period contains years or months.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the number of seconds is too large to be represented.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toStandardDuration()",
    "name": "toStandardDuration",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Duration",
      "name": "org.joda.time.Duration",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a duration equivalent to this period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the period contains years or months.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "normalizedStandard()",
    "name": "normalizedStandard",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a normalized period equivalent to this period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any field is too large to be represented.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "normalizedStandard(org.joda.time.PeriodType type)",
    "name": "normalizedStandard",
    "containingClass": {
      "qualifiedName": "org.joda.time.Period",
      "name": "Period",
      "isArray": false
    },
    "targetClass": "org.joda.time.Period",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Period",
      "name": "org.joda.time.Period",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.PeriodType",
          "name": "PeriodType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.PeriodType",
            "name": "PeriodType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "the period type of the new period. type is null means standard type.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "a normalized period equivalent to this period.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any field is too large to be represented.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "this period contains non-zero years or months but the specified period type does not support them.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]