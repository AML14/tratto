[
  {
    "signature": "org.joda.time.tz.ZoneInfoCompiler()",
    "name": "org.joda.time.tz.ZoneInfoCompiler",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "verbose()",
    "name": "verbose",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true to log verbosely.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "main(java.lang.String[] args)",
    "name": "main",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "args"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getStartOfYear()",
    "name": "getStartOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear",
      "name": "org.joda.time.tz.ZoneInfoCompiler$DateTimeOfYear",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLenientISOChronology()",
    "name": "getLenientISOChronology",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Chronology",
      "name": "org.joda.time.Chronology",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "writeZoneInfoMap(java.io.DataOutputStream dout, java.util.Map<java.lang.String, org.joda.time.DateTimeZone> zimap)",
    "name": "writeZoneInfoMap",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.DataOutputStream",
          "name": "DataOutputStream",
          "isArray": false
        },
        "name": "dout"
      },
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "zimap"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "zimap"
        },
        "comment": "maps string ids to DateTimeZone objects.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "parseYear(java.lang.String str, int def)",
    "name": "parseYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "def"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseMonth(java.lang.String str)",
    "name": "parseMonth",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseDayOfWeek(java.lang.String str)",
    "name": "parseDayOfWeek",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseOptional(java.lang.String str)",
    "name": "parseOptional",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseTime(java.lang.String str)",
    "name": "parseTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "parseZoneChar(char c)",
    "name": "parseZoneChar",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "char",
      "name": "char",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "test(java.lang.String id, org.joda.time.DateTimeZone tz)",
    "name": "test",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "id"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "tz"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "false if error.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compile(java.io.File outputDir, java.io.File[] sources)",
    "name": "compile",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Map<java.lang.String, org.joda.time.DateTimeZone>",
      "name": "java.util.Map<java.lang.String, org.joda.time.DateTimeZone>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.File",
          "name": "File",
          "isArray": false
        },
        "name": "outputDir"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.io.File;",
          "name": "File[]",
          "isArray": true
        },
        "name": "sources"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.io.File",
            "name": "File",
            "isArray": false
          },
          "name": "outputDir"
        },
        "comment": "outputDir is optional. optional directory to write compiled data files to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.io.File;",
            "name": "File[]",
            "isArray": true
          },
          "name": "sources"
        },
        "comment": "sources is optional. optional list of source files to parse.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "parseDataFile(java.io.BufferedReader in)",
    "name": "parseDataFile",
    "containingClass": {
      "qualifiedName": "org.joda.time.tz.ZoneInfoCompiler",
      "name": "ZoneInfoCompiler",
      "isArray": false
    },
    "targetClass": "org.joda.time.tz.ZoneInfoCompiler",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.BufferedReader",
          "name": "BufferedReader",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]