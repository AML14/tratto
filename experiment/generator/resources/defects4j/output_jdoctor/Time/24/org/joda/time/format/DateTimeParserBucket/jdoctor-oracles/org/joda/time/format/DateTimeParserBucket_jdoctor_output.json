[
  {
    "signature": "org.joda.time.format.DateTimeParserBucket(long instantLocal, org.joda.time.Chronology chrono, java.util.Locale locale)",
    "name": "org.joda.time.format.DateTimeParserBucket",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instantLocal"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      },
      {
        "type": {
          "qualifiedName": "java.util.Locale",
          "name": "Locale",
          "isArray": false
        },
        "name": "locale"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instantLocal"
        },
        "comment": "the initial millis from 1970-01-01T00:00:00. instantLocal is local time.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Locale",
            "name": "Locale",
            "isArray": false
          },
          "name": "locale"
        },
        "comment": "the locale to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.format.DateTimeParserBucket(long instantLocal, org.joda.time.Chronology chrono, java.util.Locale locale, java.lang.Integer pivotYear)",
    "name": "org.joda.time.format.DateTimeParserBucket",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instantLocal"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      },
      {
        "type": {
          "qualifiedName": "java.util.Locale",
          "name": "Locale",
          "isArray": false
        },
        "name": "locale"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Integer",
          "name": "Integer",
          "isArray": false
        },
        "name": "pivotYear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instantLocal"
        },
        "comment": "the initial millis from 1970-01-01T00:00:00. instantLocal is local time.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Locale",
            "name": "Locale",
            "isArray": false
          },
          "name": "locale"
        },
        "comment": "the locale to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Integer",
            "name": "Integer",
            "isArray": false
          },
          "name": "pivotYear"
        },
        "comment": "pivotYear is pivot. pivot year to use when parsing two-digit years.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.format.DateTimeParserBucket(long instantLocal, org.joda.time.Chronology chrono, java.util.Locale locale, java.lang.Integer pivotYear, int defaultYear)",
    "name": "org.joda.time.format.DateTimeParserBucket",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instantLocal"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      },
      {
        "type": {
          "qualifiedName": "java.util.Locale",
          "name": "Locale",
          "isArray": false
        },
        "name": "locale"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Integer",
          "name": "Integer",
          "isArray": false
        },
        "name": "pivotYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "defaultYear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instantLocal"
        },
        "comment": "the initial millis from 1970-01-01T00:00:00. instantLocal is local time.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Locale",
            "name": "Locale",
            "isArray": false
          },
          "name": "locale"
        },
        "comment": "the locale to use.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Integer",
            "name": "Integer",
            "isArray": false
          },
          "name": "pivotYear"
        },
        "comment": "pivotYear is pivot. pivot year to use when parsing two-digit years.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getChronology()",
    "name": "getChronology",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Chronology",
      "name": "org.joda.time.Chronology",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLocale()",
    "name": "getLocale",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Locale",
      "name": "java.util.Locale",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the locale to use.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getZone()",
    "name": "getZone",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.DateTimeZone",
      "name": "org.joda.time.DateTimeZone",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setZone(org.joda.time.DateTimeZone zone)",
    "name": "setZone",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "the date time zone to operate in. zone is or null if UTC.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getOffset()",
    "name": "getOffset",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setOffset(int offset)",
    "name": "setOffset",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "offset"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getPivotYear()",
    "name": "getPivotYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "java.lang.Integer",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "Integer value of the pivot year, null if not set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "setPivotYear(java.lang.Integer pivotYear)",
    "name": "setPivotYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Integer",
          "name": "Integer",
          "isArray": false
        },
        "name": "pivotYear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Integer",
            "name": "Integer",
            "isArray": false
          },
          "name": "pivotYear"
        },
        "comment": "pivotYear is pivot. pivot year to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "saveField(org.joda.time.DateTimeField field, int value)",
    "name": "saveField",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeField",
          "name": "DateTimeField",
          "isArray": false
        },
        "name": "field"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeField",
            "name": "DateTimeField",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field. field is whose chronology must match that of this bucket.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "saveField(org.joda.time.DateTimeFieldType fieldType, int value)",
    "name": "saveField",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "the field type.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "saveField(org.joda.time.DateTimeFieldType fieldType, java.lang.String text, java.util.Locale locale)",
    "name": "saveField",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      },
      {
        "type": {
          "qualifiedName": "java.util.Locale",
          "name": "Locale",
          "isArray": false
        },
        "name": "locale"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "the field type.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "text"
        },
        "comment": "the text value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Locale",
            "name": "Locale",
            "isArray": false
          },
          "name": "locale"
        },
        "comment": "the locale to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "saveState()",
    "name": "saveState",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Object",
      "name": "java.lang.Object",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "opaque saved state, which may be passed to restoreState.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "restoreState(java.lang.Object savedState)",
    "name": "restoreState",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "savedState"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "savedState"
        },
        "comment": "opaque saved state returned from saveState.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true state object is valid and state restored.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "computeMillis()",
    "name": "computeMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "milliseconds since 1970-01-01T00:00:00Z.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any field is out of range.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeMillis(boolean resetFields)",
    "name": "computeMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "resetFields"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "resetFields"
        },
        "comment": "false by default but when true. resetFields is unsaved field values are cleared.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "milliseconds since 1970-01-01T00:00:00Z.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any field is out of range.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "computeMillis(boolean resetFields, java.lang.String text)",
    "name": "computeMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "resetFields"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "resetFields"
        },
        "comment": "false by default but when true. resetFields is unsaved field values are cleared.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "text"
        },
        "comment": "text is optional. optional text being parsed to be included in any error message.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "milliseconds since 1970-01-01T00:00:00Z.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any field is out of range.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "compareReverse(org.joda.time.DurationField a, org.joda.time.DurationField b)",
    "name": "compareReverse",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeParserBucket",
      "name": "DateTimeParserBucket",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeParserBucket",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationField",
          "name": "DurationField",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationField",
          "name": "DurationField",
          "isArray": false
        },
        "name": "b"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]