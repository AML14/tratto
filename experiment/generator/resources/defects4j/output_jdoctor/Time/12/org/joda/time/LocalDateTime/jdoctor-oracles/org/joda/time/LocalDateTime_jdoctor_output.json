[
  {
    "signature": "org.joda.time.LocalDateTime()",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.LocalDateTime(org.joda.time.DateTimeZone zone)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "the time zone. zone is null means default zone.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.LocalDateTime(org.joda.time.Chronology chronology)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology. chronology is null means ISOChronology in default zone.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.LocalDateTime(long instant)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the milliseconds from 1970-01-01T00:00:00Z.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.LocalDateTime(long instant, org.joda.time.DateTimeZone zone)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the milliseconds from 1970-01-01T00:00:00Z.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "the time zone. zone is null means default zone.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.LocalDateTime(long instant, org.joda.time.Chronology chronology)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "instant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the milliseconds from 1970-01-01T00:00:00Z.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology. chronology is null means ISOChronology in default zone.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.LocalDateTime(java.lang.Object instant)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "instant"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the datetime object.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the instant is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.LocalDateTime(java.lang.Object instant, org.joda.time.DateTimeZone zone)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "instant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the datetime object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "the time zone.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the instant is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.LocalDateTime(java.lang.Object instant, org.joda.time.Chronology chronology)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "instant"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "instant"
        },
        "comment": "the datetime object.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the instant is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "org.joda.time.LocalDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hourOfDay"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of the year from 1 to 12.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of the month from 1 to 31.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hourOfDay"
        },
        "comment": "the hour of the day from 0 to 23.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of the hour from 0 to 59.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.LocalDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hourOfDay"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfMinute"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of the year from 1 to 12.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of the month from 1 to 31.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hourOfDay"
        },
        "comment": "the hour of the day from 0 to 23.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of the hour from 0 to 59.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfMinute"
        },
        "comment": "the second of the minute from 0 to 59.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.LocalDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hourOfDay"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfMinute"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millisOfSecond"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of the year from 1 to 12.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of the month from 1 to 31.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hourOfDay"
        },
        "comment": "the hour of the day from 0 to 23.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of the hour from 0 to 59.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfMinute"
        },
        "comment": "the second of the minute from 0 to 59.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millisOfSecond"
        },
        "comment": "the millisecond of the second from 0 to 999.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "org.joda.time.LocalDateTime(int year, int monthOfYear, int dayOfMonth, int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond, org.joda.time.Chronology chronology)",
    "name": "org.joda.time.LocalDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hourOfDay"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfMinute"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millisOfSecond"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year. year is valid values defined by the chronology.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of the year. monthOfYear is valid values defined by the chronology.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of the month. dayOfMonth is valid values defined by the chronology.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hourOfDay"
        },
        "comment": "the hour of the day. hourOfDay is valid values defined by the chronology.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of the hour. minuteOfHour is valid values defined by the chronology.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfMinute"
        },
        "comment": "the second of the minute. secondOfMinute is valid values defined by the chronology.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millisOfSecond"
        },
        "comment": "the millisecond of the second. millisOfSecond is valid values defined by the chronology.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology. chronology is null means ISOChronology in default zone.",
        "kind": "PARAM",
        "condition": "args[7]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "now()",
    "name": "now",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the current date, not null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "now(org.joda.time.DateTimeZone zone)",
    "name": "now",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "the time zone. zone is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the current date, not null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "now(org.joda.time.Chronology chronology)",
    "name": "now",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chronology"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chronology"
        },
        "comment": "the chronology. chronology is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the current date, not null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "parse(java.lang.String str)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to parse. str is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "parse(java.lang.String str, org.joda.time.format.DateTimeFormatter formatter)",
    "name": "parse",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.format.DateTimeFormatter",
          "name": "DateTimeFormatter",
          "isArray": false
        },
        "name": "formatter"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to parse. str is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.format.DateTimeFormatter",
            "name": "DateTimeFormatter",
            "isArray": false
          },
          "name": "formatter"
        },
        "comment": "the formatter to use. formatter is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "fromCalendarFields(java.util.Calendar calendar)",
    "name": "fromCalendarFields",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Calendar",
          "name": "Calendar",
          "isArray": false
        },
        "name": "calendar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Calendar",
            "name": "Calendar",
            "isArray": false
          },
          "name": "calendar"
        },
        "comment": "the Calendar to extract fields from. calendar is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the created local date-time, not null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the calendar is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is invalid for the ISO chronology.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "fromDateFields(java.util.Date date)",
    "name": "fromDateFields",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the Date to extract fields from. date is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the created local date-time, not null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the calendar is null.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is invalid for the ISO chronology.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "size()",
    "name": "size",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the field count, four.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getField(int index, org.joda.time.Chronology chrono)",
    "name": "getField",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.DateTimeField",
      "name": "org.joda.time.DateTimeField",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.Chronology",
          "name": "Chronology",
          "isArray": false
        },
        "name": "chrono"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index to retrieve.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.Chronology",
            "name": "Chronology",
            "isArray": false
          },
          "name": "chrono"
        },
        "comment": "the chronology to use.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the field.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getValue(int index)",
    "name": "getValue",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "index"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "index"
        },
        "comment": "the index zero to two.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IndexOutOfBoundsException",
          "name": "IndexOutOfBoundsException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the index is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "get(org.joda.time.DateTimeFieldType type)",
    "name": "get",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "a field type usually obtained from DateTimeFieldType. type is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the value of that field.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field type is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "isSupported(org.joda.time.DateTimeFieldType type)",
    "name": "isSupported",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "a field type usually obtained from DateTimeFieldType.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the field type is supported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isSupported(org.joda.time.DurationFieldType type)",
    "name": "isSupported",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationFieldType",
          "name": "DurationFieldType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DurationFieldType",
            "name": "DurationFieldType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "a duration type usually obtained from DurationFieldType.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the field type is supported.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getLocalMillis()",
    "name": "getLocalMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the number of milliseconds since 1970-01-01T00:00:00.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getChronology()",
    "name": "getChronology",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.Chronology",
      "name": "org.joda.time.Chronology",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the Chronology that the datetime is using.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "equals(java.lang.Object partial)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "partial"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "partial"
        },
        "comment": "an object to check against.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if fields and values are equal.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compareTo(org.joda.time.ReadablePartial partial)",
    "name": "compareTo",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePartial",
          "name": "ReadablePartial",
          "isArray": false
        },
        "name": "partial"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePartial",
            "name": "ReadablePartial",
            "isArray": false
          },
          "name": "partial"
        },
        "comment": "an object to check against.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "negative if this is less, zero if equal, positive if greater.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the partial is the wrong class or if partial has field types that don't match.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the partial is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toDateTime()",
    "name": "toDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.DateTime",
      "name": "org.joda.time.DateTime",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toDateTime(org.joda.time.DateTimeZone zone)",
    "name": "toDateTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.DateTime",
      "name": "org.joda.time.DateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeZone",
          "name": "DateTimeZone",
          "isArray": false
        },
        "name": "zone"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeZone",
            "name": "DateTimeZone",
            "isArray": false
          },
          "name": "zone"
        },
        "comment": "time zone to apply. zone is or default if null.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a DateTime using the same millis.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toLocalDate()",
    "name": "toLocalDate",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDate",
      "name": "org.joda.time.LocalDate",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a LocalDate with the same date and chronology.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toLocalTime()",
    "name": "toLocalTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalTime",
      "name": "org.joda.time.LocalTime",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a LocalTime with the same time and chronology.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toDate()",
    "name": "toDate",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a Date initialised with this date-time, never null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "withLocalMillis(long newMillis)",
    "name": "withLocalMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "newMillis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "newMillis"
        },
        "comment": "newMillis is new. new millis from 1970-01-01T00:00:00.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with different millis.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "withDate(int year, int monthOfYear, int dayOfMonth)",
    "name": "withDate",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "year is new. new year value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "monthOfYear is new. new monthOfYear value.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "dayOfMonth is new. new dayOfMonth value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with a different date.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any value if invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withTime(int hourOfDay, int minuteOfHour, int secondOfMinute, int millisOfSecond)",
    "name": "withTime",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hourOfDay"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minuteOfHour"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "secondOfMinute"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millisOfSecond"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hourOfDay"
        },
        "comment": "the hour of the day.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minuteOfHour"
        },
        "comment": "the minute of the hour.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "secondOfMinute"
        },
        "comment": "the second of the minute.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millisOfSecond"
        },
        "comment": "the millisecond of the second.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with a different time.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any value if invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withFields(org.joda.time.ReadablePartial partial)",
    "name": "withFields",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePartial",
          "name": "ReadablePartial",
          "isArray": false
        },
        "name": "partial"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePartial",
            "name": "ReadablePartial",
            "isArray": false
          },
          "name": "partial"
        },
        "comment": "the partial set of fields to apply to this datetime. partial is null ignored.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with a different set of fields.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withField(org.joda.time.DateTimeFieldType fieldType, int value)",
    "name": "withField",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "the field type to set. fieldType is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is null or invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withFieldAdded(org.joda.time.DurationFieldType fieldType, int amount)",
    "name": "withFieldAdded",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DurationFieldType",
          "name": "DurationFieldType",
          "isArray": false
        },
        "name": "fieldType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DurationFieldType",
            "name": "DurationFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "the field type to add to. fieldType is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with the field updated.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is null or invalid.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the internal capacity.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withDurationAdded(org.joda.time.ReadableDuration durationToAdd, int scalar)",
    "name": "withDurationAdded",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "durationToAdd"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "scalar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "durationToAdd"
        },
        "comment": "the duration to add to this one. durationToAdd is null means zero.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "scalar"
        },
        "comment": "the amount of times to add. scalar is such as -1 to subtract once.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with the duration added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the internal capacity.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withPeriodAdded(org.joda.time.ReadablePeriod period, int scalar)",
    "name": "withPeriodAdded",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "scalar"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to add to this one. period is null means zero.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "scalar"
        },
        "comment": "the amount of times to add. scalar is such as -1 to subtract once.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with the period added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the internal capacity.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plus(org.joda.time.ReadableDuration duration)",
    "name": "plus",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "duration"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration to add to this one. duration is null means zero.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with the duration added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the internal capacity.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plus(org.joda.time.ReadablePeriod period)",
    "name": "plus",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to add to this one. period is null means zero.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with the period added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the internal capacity.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "plusYears(int years)",
    "name": "plusYears",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "the amount of years to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime plus the increased years.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "plusMonths(int months)",
    "name": "plusMonths",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "the amount of months to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime plus the increased months.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "plusWeeks(int weeks)",
    "name": "plusWeeks",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "the amount of weeks to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime plus the increased weeks.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "plusDays(int days)",
    "name": "plusDays",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "the amount of days to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime plus the increased days.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "plusHours(int hours)",
    "name": "plusHours",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "the amount of hours to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime plus the increased hours.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "plusMinutes(int minutes)",
    "name": "plusMinutes",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "the amount of minutes to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime plus the increased minutes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "plusSeconds(int seconds)",
    "name": "plusSeconds",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "the amount of seconds to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime plus the increased seconds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "plusMillis(int millis)",
    "name": "plusMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "the amount of millis to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime plus the increased millis.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minus(org.joda.time.ReadableDuration duration)",
    "name": "minus",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadableDuration",
          "name": "ReadableDuration",
          "isArray": false
        },
        "name": "duration"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadableDuration",
            "name": "ReadableDuration",
            "isArray": false
          },
          "name": "duration"
        },
        "comment": "the duration to reduce this instant by.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with the duration taken away.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the internal capacity.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minus(org.joda.time.ReadablePeriod period)",
    "name": "minus",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.ReadablePeriod",
          "name": "ReadablePeriod",
          "isArray": false
        },
        "name": "period"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.ReadablePeriod",
            "name": "ReadablePeriod",
            "isArray": false
          },
          "name": "period"
        },
        "comment": "the period to reduce this instant by.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this datetime with the period taken away.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the result exceeds the internal capacity.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minusYears(int years)",
    "name": "minusYears",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "years"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "years"
        },
        "comment": "the amount of years to subtract negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime minus the increased years.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minusMonths(int months)",
    "name": "minusMonths",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "months"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "months"
        },
        "comment": "the amount of months to subtract negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime minus the increased months.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minusWeeks(int weeks)",
    "name": "minusWeeks",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weeks"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weeks"
        },
        "comment": "the amount of weeks to subtract negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime minus the increased weeks.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minusDays(int days)",
    "name": "minusDays",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "days"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "days"
        },
        "comment": "the amount of days to subtract negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime minus the increased days.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minusHours(int hours)",
    "name": "minusHours",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hours"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hours"
        },
        "comment": "the amount of hours to subtract negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime minus the increased hours.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minusMinutes(int minutes)",
    "name": "minusMinutes",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minutes"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minutes"
        },
        "comment": "the amount of minutes to subtract negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime minus the increased minutes.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minusSeconds(int seconds)",
    "name": "minusSeconds",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "seconds"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "seconds"
        },
        "comment": "the amount of seconds to subtract negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime minus the increased seconds.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minusMillis(int millis)",
    "name": "minusMillis",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "the amount of millis to subtract negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new LocalDateTime minus the increased millis.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "property(org.joda.time.DateTimeFieldType fieldType)",
    "name": "property",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "the field type to get the chronology for.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the property object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the field is null or unsupported.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "getEra()",
    "name": "getEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the era.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getCenturyOfEra()",
    "name": "getCenturyOfEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year of era.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getYearOfEra()",
    "name": "getYearOfEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year of era.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getYearOfCentury()",
    "name": "getYearOfCentury",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year of century.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getYear()",
    "name": "getYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWeekyear()",
    "name": "getWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the weekyear.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMonthOfYear()",
    "name": "getMonthOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the month of year.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getWeekOfWeekyear()",
    "name": "getWeekOfWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the week of a week based year.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDayOfYear()",
    "name": "getDayOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the day of year.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDayOfMonth()",
    "name": "getDayOfMonth",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the day of month.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDayOfWeek()",
    "name": "getDayOfWeek",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the day of week.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getHourOfDay()",
    "name": "getHourOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the hour of day.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMinuteOfHour()",
    "name": "getMinuteOfHour",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the minute of hour.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getSecondOfMinute()",
    "name": "getSecondOfMinute",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the second of minute.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMillisOfSecond()",
    "name": "getMillisOfSecond",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the millis of second.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getMillisOfDay()",
    "name": "getMillisOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the millis of day.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "withEra(int era)",
    "name": "withEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "era"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "era"
        },
        "comment": "the era to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withCenturyOfEra(int centuryOfEra)",
    "name": "withCenturyOfEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "centuryOfEra"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "centuryOfEra"
        },
        "comment": "the centurey of era to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withYearOfEra(int yearOfEra)",
    "name": "withYearOfEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "yearOfEra"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "yearOfEra"
        },
        "comment": "the year of era to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withYearOfCentury(int yearOfCentury)",
    "name": "withYearOfCentury",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "yearOfCentury"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "yearOfCentury"
        },
        "comment": "the year of century to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withYear(int year)",
    "name": "withYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "year"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "year"
        },
        "comment": "the year to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withWeekyear(int weekyear)",
    "name": "withWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weekyear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weekyear"
        },
        "comment": "the weekyear to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withMonthOfYear(int monthOfYear)",
    "name": "withMonthOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "monthOfYear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "monthOfYear"
        },
        "comment": "the month of year to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withWeekOfWeekyear(int weekOfWeekyear)",
    "name": "withWeekOfWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "weekOfWeekyear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "weekOfWeekyear"
        },
        "comment": "the week of weekyear to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withDayOfYear(int dayOfYear)",
    "name": "withDayOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfYear"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfYear"
        },
        "comment": "the day of year to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withDayOfMonth(int dayOfMonth)",
    "name": "withDayOfMonth",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfMonth"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfMonth"
        },
        "comment": "the day of month to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withDayOfWeek(int dayOfWeek)",
    "name": "withDayOfWeek",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "dayOfWeek"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "dayOfWeek"
        },
        "comment": "the day of week to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withHourOfDay(int hour)",
    "name": "withHourOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "hour"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "hour"
        },
        "comment": "the hour of day to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withMinuteOfHour(int minute)",
    "name": "withMinuteOfHour",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minute"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minute"
        },
        "comment": "the minute of hour to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withSecondOfMinute(int second)",
    "name": "withSecondOfMinute",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "second"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "second"
        },
        "comment": "the second of minute to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withMillisOfSecond(int millis)",
    "name": "withMillisOfSecond",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "the millis of second to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "withMillisOfDay(int millis)",
    "name": "withMillisOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "org.joda.time.LocalDateTime",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "millis"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "millis"
        },
        "comment": "the millis of day to set.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a copy of this object with the field set.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "era()",
    "name": "era",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the era property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "centuryOfEra()",
    "name": "centuryOfEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year of era property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "yearOfCentury()",
    "name": "yearOfCentury",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year of era property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "yearOfEra()",
    "name": "yearOfEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year of era property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "year()",
    "name": "year",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the year property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "weekyear()",
    "name": "weekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the weekyear property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "monthOfYear()",
    "name": "monthOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the month of year property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "weekOfWeekyear()",
    "name": "weekOfWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the week of a week based year property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "dayOfYear()",
    "name": "dayOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the day of year property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "dayOfMonth()",
    "name": "dayOfMonth",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the day of month property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "dayOfWeek()",
    "name": "dayOfWeek",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the day of week property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hourOfDay()",
    "name": "hourOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the hour of day property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minuteOfHour()",
    "name": "minuteOfHour",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the minute of hour property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "secondOfMinute()",
    "name": "secondOfMinute",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the second of minute property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "millisOfSecond()",
    "name": "millisOfSecond",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the millis of second property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "millisOfDay()",
    "name": "millisOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.LocalDateTime$Property",
      "name": "org.joda.time.LocalDateTime$Property",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the millis of day property.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "ISO8601 time formatted string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toString(java.lang.String pattern)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "pattern"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "pattern"
        },
        "comment": "the pattern specification. pattern is null means use toString.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "toString(java.lang.String pattern, java.util.Locale locale)",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.joda.time.LocalDateTime",
      "name": "LocalDateTime",
      "isArray": false
    },
    "targetClass": "org.joda.time.LocalDateTime",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "pattern"
      },
      {
        "type": {
          "qualifiedName": "java.util.Locale",
          "name": "Locale",
          "isArray": false
        },
        "name": "locale"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "pattern"
        },
        "comment": "the pattern specification. pattern is null means use toString.",
        "kind": "PARAM",
        "condition": "args[0]==null"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Locale",
            "name": "Locale",
            "isArray": false
          },
          "name": "locale"
        },
        "comment": "Locale to use. locale is null means default.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]