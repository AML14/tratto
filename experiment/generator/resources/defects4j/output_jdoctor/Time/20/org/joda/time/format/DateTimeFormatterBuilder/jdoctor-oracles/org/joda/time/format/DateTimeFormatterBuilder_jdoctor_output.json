[
  {
    "signature": "org.joda.time.format.DateTimeFormatterBuilder()",
    "name": "org.joda.time.format.DateTimeFormatterBuilder",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toFormatter()",
    "name": "toFormatter",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatter",
      "name": "org.joda.time.format.DateTimeFormatter",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "neither printing nor parsing is supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toPrinter()",
    "name": "toPrinter",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimePrinter",
      "name": "org.joda.time.format.DateTimePrinter",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "printing is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "toParser()",
    "name": "toParser",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeParser",
      "name": "org.joda.time.format.DateTimeParser",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.UnsupportedOperationException",
          "name": "UnsupportedOperationException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "parsing is not supported.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "canBuildFormatter()",
    "name": "canBuildFormatter",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if a formatter can be built.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canBuildPrinter()",
    "name": "canBuildPrinter",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if a printer can be built.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "canBuildParser()",
    "name": "canBuildParser",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "true if a parser can be built.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "clear()",
    "name": "clear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "append(org.joda.time.format.DateTimeFormatter formatter)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.format.DateTimeFormatter",
          "name": "DateTimeFormatter",
          "isArray": false
        },
        "name": "formatter"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.format.DateTimeFormatter",
            "name": "DateTimeFormatter",
            "isArray": false
          },
          "name": "formatter"
        },
        "comment": "the formatter to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "formatter is null or of an invalid type.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "append(org.joda.time.format.DateTimePrinter printer)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.format.DateTimePrinter",
          "name": "DateTimePrinter",
          "isArray": false
        },
        "name": "printer"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.format.DateTimePrinter",
            "name": "DateTimePrinter",
            "isArray": false
          },
          "name": "printer"
        },
        "comment": "the printer to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "printer is null or of an invalid type.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "append(org.joda.time.format.DateTimeParser parser)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.format.DateTimeParser",
          "name": "DateTimeParser",
          "isArray": false
        },
        "name": "parser"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.format.DateTimeParser",
            "name": "DateTimeParser",
            "isArray": false
          },
          "name": "parser"
        },
        "comment": "the parser to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "parser is null or of an invalid type.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "append(org.joda.time.format.DateTimePrinter printer, org.joda.time.format.DateTimeParser parser)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.format.DateTimePrinter",
          "name": "DateTimePrinter",
          "isArray": false
        },
        "name": "printer"
      },
      {
        "type": {
          "qualifiedName": "org.joda.time.format.DateTimeParser",
          "name": "DateTimeParser",
          "isArray": false
        },
        "name": "parser"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.format.DateTimePrinter",
            "name": "DateTimePrinter",
            "isArray": false
          },
          "name": "printer"
        },
        "comment": "the printer to add.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.format.DateTimeParser",
            "name": "DateTimeParser",
            "isArray": false
          },
          "name": "parser"
        },
        "comment": "the parser to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "printer or parser is null or of an invalid type.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "append(org.joda.time.format.DateTimePrinter printer, org.joda.time.format.DateTimeParser[] parsers)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.format.DateTimePrinter",
          "name": "DateTimePrinter",
          "isArray": false
        },
        "name": "printer"
      },
      {
        "type": {
          "qualifiedName": "[Lorg.joda.time.format.DateTimeParser;",
          "name": "DateTimeParser[]",
          "isArray": true
        },
        "name": "parsers"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.format.DateTimePrinter",
            "name": "DateTimePrinter",
            "isArray": false
          },
          "name": "printer"
        },
        "comment": "the printer to add.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Lorg.joda.time.format.DateTimeParser;",
            "name": "DateTimeParser[]",
            "isArray": true
          },
          "name": "parsers"
        },
        "comment": "the parsers to add.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any printer or parser is of an invalid type.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "any parser element but the last is null.",
        "kind": "THROWS",
        "condition": "args[1]==null"
      }
    ]
  },
  {
    "signature": "appendOptional(org.joda.time.format.DateTimeParser parser)",
    "name": "appendOptional",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.format.DateTimeParser",
          "name": "DateTimeParser",
          "isArray": false
        },
        "name": "parser"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "parser is null or of an invalid type.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "appendLiteral(char c)",
    "name": "appendLiteral",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "char",
          "name": "char",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendLiteral(java.lang.String text)",
    "name": "appendLiteral",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "text"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "text is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "appendDecimal(org.joda.time.DateTimeFieldType fieldType, int minDigits, int maxDigits)",
    "name": "appendDecimal",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "type of field to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maximum number of digits to parse. maxDigits is or the estimated maximum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field type is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "appendFixedDecimal(org.joda.time.DateTimeFieldType fieldType, int numDigits)",
    "name": "appendFixedDecimal",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "type of field to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "numDigits"
        },
        "comment": "the exact number of digits to parse or print. numDigits is except if printed value requires more digits.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field type is null or if numDigits <= 0.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]<=0"
      }
    ]
  },
  {
    "signature": "appendSignedDecimal(org.joda.time.DateTimeFieldType fieldType, int minDigits, int maxDigits)",
    "name": "appendSignedDecimal",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "type of field to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maximum number of digits to parse. maxDigits is or the estimated maximum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field type is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "appendFixedSignedDecimal(org.joda.time.DateTimeFieldType fieldType, int numDigits)",
    "name": "appendFixedSignedDecimal",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "type of field to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "numDigits"
        },
        "comment": "the exact number of digits to parse or print. numDigits is except if printed value requires more digits.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field type is null or if numDigits <= 0.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]<=0"
      }
    ]
  },
  {
    "signature": "appendText(org.joda.time.DateTimeFieldType fieldType)",
    "name": "appendText",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "type of field to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field type is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "appendShortText(org.joda.time.DateTimeFieldType fieldType)",
    "name": "appendShortText",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "type of field to append.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field type is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "appendFraction(org.joda.time.DateTimeFieldType fieldType, int minDigits, int maxDigits)",
    "name": "appendFraction",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.joda.time.DateTimeFieldType",
          "name": "DateTimeFieldType",
          "isArray": false
        },
        "name": "fieldType"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.joda.time.DateTimeFieldType",
            "name": "DateTimeFieldType",
            "isArray": false
          },
          "name": "fieldType"
        },
        "comment": "type of field to append.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maxDigits is maximum. maximum number of digits to print or parse.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "field type is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "appendFractionOfSecond(int minDigits, int maxDigits)",
    "name": "appendFractionOfSecond",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maxDigits is maximum. maximum number of digits to print or parse.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendFractionOfMinute(int minDigits, int maxDigits)",
    "name": "appendFractionOfMinute",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maxDigits is maximum. maximum number of digits to print or parse.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendFractionOfHour(int minDigits, int maxDigits)",
    "name": "appendFractionOfHour",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maxDigits is maximum. maximum number of digits to print or parse.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendFractionOfDay(int minDigits, int maxDigits)",
    "name": "appendFractionOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maxDigits is maximum. maximum number of digits to print or parse.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendMillisOfSecond(int minDigits)",
    "name": "appendMillisOfSecond",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendMillisOfDay(int minDigits)",
    "name": "appendMillisOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendSecondOfMinute(int minDigits)",
    "name": "appendSecondOfMinute",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendSecondOfDay(int minDigits)",
    "name": "appendSecondOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendMinuteOfHour(int minDigits)",
    "name": "appendMinuteOfHour",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendMinuteOfDay(int minDigits)",
    "name": "appendMinuteOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendHourOfDay(int minDigits)",
    "name": "appendHourOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendClockhourOfDay(int minDigits)",
    "name": "appendClockhourOfDay",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendHourOfHalfday(int minDigits)",
    "name": "appendHourOfHalfday",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendClockhourOfHalfday(int minDigits)",
    "name": "appendClockhourOfHalfday",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendDayOfWeek(int minDigits)",
    "name": "appendDayOfWeek",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendDayOfMonth(int minDigits)",
    "name": "appendDayOfMonth",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendDayOfYear(int minDigits)",
    "name": "appendDayOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendWeekOfWeekyear(int minDigits)",
    "name": "appendWeekOfWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendWeekyear(int minDigits, int maxDigits)",
    "name": "appendWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maximum number of digits to parse. maxDigits is or the estimated maximum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendMonthOfYear(int minDigits)",
    "name": "appendMonthOfYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendYear(int minDigits, int maxDigits)",
    "name": "appendYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maximum number of digits to parse. maxDigits is or the estimated maximum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTwoDigitYear(int pivot)",
    "name": "appendTwoDigitYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "pivot"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "pivot"
        },
        "comment": "pivot year to use when parsing.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTwoDigitYear(int pivot, boolean lenientParse)",
    "name": "appendTwoDigitYear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "pivot"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "lenientParse"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "pivot"
        },
        "comment": "pivot year to use when parsing.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "lenientParse"
        },
        "comment": "when true if digit count is not two. lenientParse is digit is treated as an absolute year.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTwoDigitWeekyear(int pivot)",
    "name": "appendTwoDigitWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "pivot"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "pivot"
        },
        "comment": "pivot weekyear to use when parsing.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTwoDigitWeekyear(int pivot, boolean lenientParse)",
    "name": "appendTwoDigitWeekyear",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "pivot"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "lenientParse"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "pivot"
        },
        "comment": "pivot weekyear to use when parsing.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "lenientParse"
        },
        "comment": "when true if digit count is not two. lenientParse is digit is treated as an absolute weekyear.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendYearOfEra(int minDigits, int maxDigits)",
    "name": "appendYearOfEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maximum number of digits to parse. maxDigits is or the estimated maximum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendYearOfCentury(int minDigits, int maxDigits)",
    "name": "appendYearOfCentury",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maximum number of digits to parse. maxDigits is or the estimated maximum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendCenturyOfEra(int minDigits, int maxDigits)",
    "name": "appendCenturyOfEra",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minDigits"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxDigits"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minDigits"
        },
        "comment": "minDigits is minimum. minimum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxDigits"
        },
        "comment": "maximum number of digits to parse. maxDigits is or the estimated maximum number of digits to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendHalfdayOfDayText()",
    "name": "appendHalfdayOfDayText",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendDayOfWeekText()",
    "name": "appendDayOfWeekText",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendDayOfWeekShortText()",
    "name": "appendDayOfWeekShortText",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendMonthOfYearText()",
    "name": "appendMonthOfYearText",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendMonthOfYearShortText()",
    "name": "appendMonthOfYearShortText",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendEraText()",
    "name": "appendEraText",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTimeZoneName()",
    "name": "appendTimeZoneName",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTimeZoneName(java.util.Map<java.lang.String, org.joda.time.DateTimeZone> parseLookup)",
    "name": "appendTimeZoneName",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "parseLookup"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "parseLookup"
        },
        "comment": "the table of names. parseLookup is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTimeZoneShortName()",
    "name": "appendTimeZoneShortName",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTimeZoneShortName(java.util.Map<java.lang.String, org.joda.time.DateTimeZone> parseLookup)",
    "name": "appendTimeZoneShortName",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Map",
          "name": "Map",
          "isArray": false
        },
        "name": "parseLookup"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Map",
            "name": "Map",
            "isArray": false
          },
          "name": "parseLookup"
        },
        "comment": "the table of names. parseLookup is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTimeZoneId()",
    "name": "appendTimeZoneId",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTimeZoneOffset(java.lang.String zeroOffsetText, boolean showSeparators, int minFields, int maxFields)",
    "name": "appendTimeZoneOffset",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "zeroOffsetText"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "showSeparators"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minFields"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxFields"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "zeroOffsetText"
        },
        "comment": "the text to use if time zone offset is zero. If null offset is always shown.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "showSeparators"
        },
        "comment": "if true. showSeparators is prints ':' separator before minute and second field and prints '.' separator before fraction field.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minFields"
        },
        "comment": "minimum number of fields to print stopping when no more precision is required. 1=hours 2=minutes 3=seconds. minFields is 4=fraction.",
        "kind": "PARAM",
        "condition": "args[2]==4"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxFields"
        },
        "comment": "maxFields is maximum. maximum number of fields to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendTimeZoneOffset(java.lang.String zeroOffsetPrintText, java.lang.String zeroOffsetParseText, boolean showSeparators, int minFields, int maxFields)",
    "name": "appendTimeZoneOffset",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "zeroOffsetPrintText"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "zeroOffsetParseText"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "showSeparators"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "minFields"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "maxFields"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "zeroOffsetPrintText"
        },
        "comment": "the text to print if time zone offset is zero. If null offset is always shown.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "zeroOffsetParseText"
        },
        "comment": "the text to optionally parse to indicate that the time zone offset is zero. If null then always use the offset.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "showSeparators"
        },
        "comment": "if true. showSeparators is prints ':' separator before minute and second field and prints '.' separator before fraction field.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "minFields"
        },
        "comment": "minimum number of fields to print stopping when no more precision is required. 1=hours 2=minutes 3=seconds. minFields is 4=fraction.",
        "kind": "PARAM",
        "condition": "args[3]==4"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "maxFields"
        },
        "comment": "maxFields is maximum. maximum number of fields to print.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this DateTimeFormatterBuilder, for chaining.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "appendPattern(java.lang.String pattern)",
    "name": "appendPattern",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "org.joda.time.format.DateTimeFormatterBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "pattern"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "pattern"
        },
        "comment": "pattern specification.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the pattern is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "appendUnknownString(java.lang.StringBuffer buf, int len)",
    "name": "appendUnknownString",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.StringBuffer",
          "name": "StringBuffer",
          "isArray": false
        },
        "name": "buf"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "printUnknownString(java.io.Writer out, int len)",
    "name": "printUnknownString",
    "containingClass": {
      "qualifiedName": "org.joda.time.format.DateTimeFormatterBuilder",
      "name": "DateTimeFormatterBuilder",
      "isArray": false
    },
    "targetClass": "org.joda.time.format.DateTimeFormatterBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Writer",
          "name": "Writer",
          "isArray": false
        },
        "name": "out"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "len"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]