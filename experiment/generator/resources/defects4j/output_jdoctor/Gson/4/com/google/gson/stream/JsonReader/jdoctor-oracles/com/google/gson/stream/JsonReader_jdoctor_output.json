[
  {
    "signature": "com.google.gson.stream.JsonReader(java.io.Reader in)",
    "name": "com.google.gson.stream.JsonReader",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.io.Reader",
          "name": "Reader",
          "isArray": false
        },
        "name": "in"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setLenient(boolean lenient)",
    "name": "setLenient",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "lenient"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isLenient()",
    "name": "isLenient",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "beginArray()",
    "name": "beginArray",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "endArray()",
    "name": "endArray",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "beginObject()",
    "name": "beginObject",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "endObject()",
    "name": "endObject",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "hasNext()",
    "name": "hasNext",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "peek()",
    "name": "peek",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.gson.stream.JsonToken",
      "name": "com.google.gson.stream.JsonToken",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "doPeek()",
    "name": "doPeek",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextName()",
    "name": "nextName",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.io.IOException",
          "name": "IOException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the next token in the stream is not a property name.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "nextString()",
    "name": "nextString",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the next token is not a string or if this reader is closed.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "nextBoolean()",
    "name": "nextBoolean",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the next token is not a boolean or if this reader is closed.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "nextNull()",
    "name": "nextNull",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the next token is not null or if this reader is closed.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "nextDouble()",
    "name": "nextDouble",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the next token is not a literal value.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the next literal value cannot be parsed as a double or is non-finite.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "nextLong()",
    "name": "nextLong",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the next token is not a literal value.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the next literal value cannot be parsed as a number or exactly represented as a long.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "nextInt()",
    "name": "nextInt",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalStateException",
          "name": "IllegalStateException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the next token is not a literal value.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the next literal value cannot be parsed as a number or exactly represented as an int.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "close()",
    "name": "close",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "skipValue()",
    "name": "skipValue",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getLineNumber()",
    "name": "getLineNumber",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getColumnNumber()",
    "name": "getColumnNumber",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getPath()",
    "name": "getPath",
    "containingClass": {
      "qualifiedName": "com.google.gson.stream.JsonReader",
      "name": "JsonReader",
      "isArray": false
    },
    "targetClass": "com.google.gson.stream.JsonReader",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]