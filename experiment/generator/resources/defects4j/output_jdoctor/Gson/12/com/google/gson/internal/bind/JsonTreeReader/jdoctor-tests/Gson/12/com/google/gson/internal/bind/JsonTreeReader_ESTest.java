/*
 * This file was automatically generated by EvoSuite
 * Wed Oct 11 16:35:57 GMT 2023
 */
package com.google.gson.internal.bind;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonNull;
import com.google.gson.JsonObject;
import com.google.gson.JsonPrimitive;
import com.google.gson.internal.bind.JsonTreeReader;
import com.google.gson.stream.JsonToken;
import java.util.ConcurrentModificationException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class JsonTreeReader_ESTest extends JsonTreeReader_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive("");
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        String string0 = jsonTreeReader0.nextString();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Double double0 = new Double((-0.14075010792600606));
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(double0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        long long0 = jsonTreeReader0.nextLong();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Double double0 = new Double((-22.89672307759168));
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(double0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        long long0 = jsonTreeReader0.nextLong();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Float float0 = new Float(0.0);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(float0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        int int0 = jsonTreeReader0.nextInt();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Double double0 = new Double(0.8883198299669907);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(double0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        double double1 = jsonTreeReader0.nextDouble();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Boolean boolean0 = Boolean.valueOf(true);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(boolean0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        boolean boolean1 = jsonTreeReader0.nextBoolean();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        JsonNull jsonNull0 = JsonNull.INSTANCE;
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonNull0);
        jsonTreeReader0.close();
        jsonTreeReader0.skipValue();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.skipValue();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        Character character0 = Character.valueOf('r');
        jsonTreeReader0.beginArray();
        jsonArray0.add(character0);
        jsonTreeReader0.promoteNameToValue();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.promoteNameToValue();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        Character character0 = Character.valueOf('r');
        jsonTreeReader0.beginArray();
        jsonArray0.add(character0);
        jsonTreeReader0.nextString();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.nextString();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        Character character0 = Character.valueOf('r');
        jsonTreeReader0.beginArray();
        jsonArray0.add(character0);
        jsonTreeReader0.nextNull();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Double double0 = new Double(1.0);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(double0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        jsonTreeReader0.nextNull();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.nextNull();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        Character character0 = Character.valueOf('r');
        jsonTreeReader0.beginArray();
        jsonArray0.add(character0);
        jsonTreeReader0.nextName();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.nextName();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        Character character0 = Character.valueOf('r');
        jsonTreeReader0.beginArray();
        jsonArray0.add(character0);
        jsonTreeReader0.nextLong();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.nextLong();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.nextInt();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.nextDouble();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Float float0 = new Float(1.0);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(float0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        jsonTreeReader0.nextBoolean();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.nextBoolean();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Boolean boolean0 = Boolean.TRUE;
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(boolean0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        jsonTreeReader0.endObject();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.endObject();
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.endArray();
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive("vb.Fsa#");
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        jsonTreeReader0.beginObject();
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.beginObject();
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        Character character0 = Character.valueOf('2');
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(character0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        jsonTreeReader0.beginArray();
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.beginArray();
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        JsonObject jsonObject0 = new JsonObject();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonObject0);
        jsonTreeReader0.beginObject();
        String string0 = jsonTreeReader0.getPath();
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        String string0 = jsonTreeReader0.getPath();
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        jsonTreeReader0.beginArray();
        String string0 = jsonTreeReader0.getPath();
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        JsonObject jsonObject0 = new JsonObject();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonObject0);
        String string0 = jsonTreeReader0.getPath();
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        String string0 = jsonTreeReader0.getPath();
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        JsonNull jsonNull0 = JsonNull.INSTANCE;
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonNull0);
        JsonToken jsonToken0 = jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        Character character0 = Character.valueOf('2');
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(character0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        JsonToken jsonToken0 = jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        Double double0 = new Double(1.0);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(double0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        jsonTreeReader0.close();
        jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        JsonToken jsonToken0 = jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        JsonObject jsonObject0 = new JsonObject();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonObject0);
        JsonToken jsonToken0 = jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        Float float0 = new Float(306.01129);
        jsonTreeReader0.beginArray();
        jsonArray0.add((Number) float0);
        jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        jsonTreeReader0.beginArray();
        JsonToken jsonToken0 = jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        JsonObject jsonObject0 = new JsonObject();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonObject0);
        jsonTreeReader0.nextString();
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        jsonArray0.add((Character) null);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        jsonTreeReader0.beginArray();
        jsonTreeReader0.nextString();
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        jsonTreeReader0.beginArray();
        jsonTreeReader0.nextLong();
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        Boolean boolean0 = Boolean.valueOf(false);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(boolean0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        jsonTreeReader0.skipValue();
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        jsonTreeReader0.nextInt();
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        Character character0 = Character.valueOf('W');
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(character0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        jsonTreeReader0.nextInt();
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        Float float0 = new Float(162.708089555);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(float0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        int int0 = jsonTreeReader0.nextInt();
    }

    @Test(timeout = 4000)
    public void test5050() throws Throwable {
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive("JSON forbids NaN and infinities: ");
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        jsonTreeReader0.nextLong();
    }

    @Test(timeout = 4000)
    public void test5151() throws Throwable {
        Double double0 = new Double(1.0);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(double0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        long long0 = jsonTreeReader0.nextLong();
    }

    @Test(timeout = 4000)
    public void test5252() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        jsonTreeReader0.nextDouble();
    }

    @Test(timeout = 4000)
    public void test5353() throws Throwable {
        Character character0 = new Character('`');
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(character0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        jsonTreeReader0.nextDouble();
    }

    @Test(timeout = 4000)
    public void test5454() throws Throwable {
        Double double0 = new Double(0.0);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(double0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        double double1 = jsonTreeReader0.nextDouble();
    }

    @Test(timeout = 4000)
    public void test5555() throws Throwable {
        Boolean boolean0 = Boolean.valueOf(false);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(boolean0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        boolean boolean1 = jsonTreeReader0.nextBoolean();
    }

    @Test(timeout = 4000)
    public void test5656() throws Throwable {
        Double double0 = new Double(1.0);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(double0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        String string0 = jsonTreeReader0.nextString();
    }

    @Test(timeout = 4000)
    public void test5757() throws Throwable {
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader((JsonElement) null);
        jsonTreeReader0.hasNext();
    }

    @Test(timeout = 4000)
    public void test5858() throws Throwable {
        JsonNull jsonNull0 = JsonNull.INSTANCE;
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonNull0);
        jsonTreeReader0.close();
        jsonTreeReader0.hasNext();
    }

    @Test(timeout = 4000)
    public void test5959() throws Throwable {
        Boolean boolean0 = new Boolean("cwA{pGf]Mg1l");
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(boolean0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        JsonToken jsonToken0 = jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test6060() throws Throwable {
        Double double0 = new Double(0.0);
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive(double0);
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        JsonToken jsonToken0 = jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test6161() throws Throwable {
        JsonPrimitive jsonPrimitive0 = new JsonPrimitive("JSON forbids NaN and infinities: ");
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonPrimitive0);
        boolean boolean0 = jsonTreeReader0.hasNext();
    }

    @Test(timeout = 4000)
    public void test6262() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        Character character0 = Character.valueOf('r');
        jsonTreeReader0.beginArray();
        jsonArray0.add(character0);
        jsonTreeReader0.endArray();
    }

    @Test(timeout = 4000)
    public void test6363() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        jsonTreeReader0.beginArray();
        boolean boolean0 = jsonTreeReader0.hasNext();
    }

    @Test(timeout = 4000)
    public void test6464() throws Throwable {
        JsonNull jsonNull0 = JsonNull.INSTANCE;
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonNull0);
        jsonTreeReader0.nextNull();
        jsonTreeReader0.isLenient();
    }

    @Test(timeout = 4000)
    public void test6565() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        String string0 = jsonTreeReader0.toString();
    }

    @Test(timeout = 4000)
    public void test6666() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        jsonTreeReader0.nextName();
    }

    @Test(timeout = 4000)
    public void test6767() throws Throwable {
        JsonObject jsonObject0 = new JsonObject();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonObject0);
        jsonTreeReader0.beginObject();
        jsonTreeReader0.endArray();
    }

    @Test(timeout = 4000)
    public void test6868() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        jsonTreeReader0.beginArray();
        jsonTreeReader0.endArray();
        JsonToken jsonToken0 = jsonTreeReader0.peek();
    }

    @Test(timeout = 4000)
    public void test6969() throws Throwable {
        JsonArray jsonArray0 = new JsonArray();
        JsonTreeReader jsonTreeReader0 = new JsonTreeReader(jsonArray0);
        jsonTreeReader0.promoteNameToValue();
    }
}
