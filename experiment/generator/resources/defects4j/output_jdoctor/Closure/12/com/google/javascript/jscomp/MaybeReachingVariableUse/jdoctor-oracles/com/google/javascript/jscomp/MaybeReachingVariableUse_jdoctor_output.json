[
  {
    "signature": "com.google.javascript.jscomp.MaybeReachingVariableUse(com.google.javascript.jscomp.ControlFlowGraph<com.google.javascript.rhino.Node> cfg, com.google.javascript.jscomp.Scope jsScope, com.google.javascript.jscomp.AbstractCompiler compiler)",
    "name": "com.google.javascript.jscomp.MaybeReachingVariableUse",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.MaybeReachingVariableUse",
      "name": "MaybeReachingVariableUse",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.MaybeReachingVariableUse",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.ControlFlowGraph",
          "name": "ControlFlowGraph",
          "isArray": false
        },
        "name": "cfg"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.Scope",
          "name": "Scope",
          "isArray": false
        },
        "name": "jsScope"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isForward()",
    "name": "isForward",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.MaybeReachingVariableUse",
      "name": "MaybeReachingVariableUse",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.MaybeReachingVariableUse",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createEntryLattice()",
    "name": "createEntryLattice",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.MaybeReachingVariableUse",
      "name": "MaybeReachingVariableUse",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.MaybeReachingVariableUse",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses",
      "name": "com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createInitialEstimateLattice()",
    "name": "createInitialEstimateLattice",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.MaybeReachingVariableUse",
      "name": "MaybeReachingVariableUse",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.MaybeReachingVariableUse",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses",
      "name": "com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "flowThrough(com.google.javascript.rhino.Node n, com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses input)",
    "name": "flowThrough",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.MaybeReachingVariableUse",
      "name": "MaybeReachingVariableUse",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.MaybeReachingVariableUse",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses",
      "name": "com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.MaybeReachingVariableUse$ReachingUses",
          "name": "ReachingUses",
          "isArray": false
        },
        "name": "input"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getUses(java.lang.String name, com.google.javascript.rhino.Node defNode)",
    "name": "getUses",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.MaybeReachingVariableUse",
      "name": "MaybeReachingVariableUse",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.MaybeReachingVariableUse",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<com.google.javascript.rhino.Node>",
      "name": "java.util.Collection<com.google.javascript.rhino.Node>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "defNode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "name of the variable. It can only be names of local variable that are not function parameters. name is escaped variables or variables declared in catch.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "defNode"
        },
        "comment": "The list of upward exposed use for the variable.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]