[
  {
    "signature": "com.google.javascript.jscomp.TypeValidator(com.google.javascript.jscomp.AbstractCompiler compiler)",
    "name": "com.google.javascript.jscomp.TypeValidator",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getMismatches()",
    "name": "getMismatches",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Iterable<com.google.javascript.jscomp.TypeValidator$TypeMismatch>",
      "name": "java.lang.Iterable<com.google.javascript.jscomp.TypeValidator$TypeMismatch>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "setShouldReport(boolean report)",
    "name": "setShouldReport",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "report"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expectValidTypeofName(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, java.lang.String found)",
    "name": "expectValidTypeofName",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "found"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expectObject(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType type, java.lang.String msg)",
    "name": "expectObject",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "True if there was no warning, false if there was a mismatch.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "expectActualObject(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType type, java.lang.String msg)",
    "name": "expectActualObject",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expectAnyObject(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType type, java.lang.String msg)",
    "name": "expectAnyObject",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expectString(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType type, java.lang.String msg)",
    "name": "expectString",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expectNumber(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType type, java.lang.String msg)",
    "name": "expectNumber",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expectBitwiseable(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType type, java.lang.String msg)",
    "name": "expectBitwiseable",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expectStringOrNumber(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType type, java.lang.String msg)",
    "name": "expectStringOrNumber",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expectNotNullOrUndefined(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType type, java.lang.String msg, com.google.javascript.rhino.jstype.JSType expectedType)",
    "name": "expectNotNullOrUndefined",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "expectedType"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "Whether the expectation was met., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "expectSwitchMatchesCase(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType switchType, com.google.javascript.rhino.jstype.JSType caseType)",
    "name": "expectSwitchMatchesCase",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "switchType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "caseType"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "expectIndexMatch(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType objType, com.google.javascript.rhino.jstype.JSType indexType)",
    "name": "expectIndexMatch",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "objType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "indexType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
            "name": "NodeTraversal",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The node traversal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The GETELEM node to issue warnings on.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "objType"
        },
        "comment": "The type of the left side of the GETELEM.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "indexType"
        },
        "comment": "The type inside the brackets of the GETELEM.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "expectCanAssignToPropertyOf(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType rightType, com.google.javascript.rhino.jstype.JSType leftType, com.google.javascript.rhino.Node owner, java.lang.String propName)",
    "name": "expectCanAssignToPropertyOf",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "rightType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "leftType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "owner"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propName"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
            "name": "NodeTraversal",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The node traversal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The node to issue warnings on.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "rightType"
        },
        "comment": "The type on the RHS of the assign.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "leftType"
        },
        "comment": "The type of the symbol on the LHS of the assign.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "owner"
        },
        "comment": "The owner of the property being assigned to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "propName"
        },
        "comment": "The name of the property being assigned to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the types matched, false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "expectCanAssignTo(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType rightType, com.google.javascript.rhino.jstype.JSType leftType, java.lang.String msg)",
    "name": "expectCanAssignTo",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "rightType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "leftType"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "msg"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
            "name": "NodeTraversal",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The node traversal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The node to issue warnings on.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "rightType"
        },
        "comment": "The type on the RHS of the assign.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "leftType"
        },
        "comment": "The type of the symbol on the LHS of the assign.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "msg"
        },
        "comment": "An extra message for the mismatch warning. msg is if necessary.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "True if the types matched, false otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "expectArgumentMatchesParameter(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType argType, com.google.javascript.rhino.jstype.JSType paramType, com.google.javascript.rhino.Node callNode, int ordinal)",
    "name": "expectArgumentMatchesParameter",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "argType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "paramType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "callNode"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "ordinal"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
            "name": "NodeTraversal",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The node traversal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The node to issue warnings on.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "argType"
        },
        "comment": "The type of the argument.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "paramType"
        },
        "comment": "The type of the parameter.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "callNode"
        },
        "comment": "The call node to help with the warning message.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "ordinal"
        },
        "comment": "The argument ordinal to help with the warning message.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "expectCanOverride(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType overridingType, com.google.javascript.rhino.jstype.JSType hiddenType, java.lang.String propertyName, com.google.javascript.rhino.jstype.JSType ownerType)",
    "name": "expectCanOverride",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "overridingType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "hiddenType"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "ownerType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
            "name": "NodeTraversal",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The node traversal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The node to issue warnings on.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "overridingType"
        },
        "comment": "The overriding type.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "hiddenType"
        },
        "comment": "The type of the property being overridden.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "propertyName"
        },
        "comment": "The name of the property for use in the warning message.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "ownerType"
        },
        "comment": "The type of the owner of the property for use in the warning message.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "expectSuperType(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.ObjectType superObject, com.google.javascript.rhino.jstype.ObjectType subObject)",
    "name": "expectSuperType",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.ObjectType",
          "name": "ObjectType",
          "isArray": false
        },
        "name": "superObject"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.ObjectType",
          "name": "ObjectType",
          "isArray": false
        },
        "name": "subObject"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
            "name": "NodeTraversal",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The node traversal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The node where warnings should point to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.ObjectType",
            "name": "ObjectType",
            "isArray": false
          },
          "name": "superObject"
        },
        "comment": "The expected super instance type.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.ObjectType",
            "name": "ObjectType",
            "isArray": false
          },
          "name": "subObject"
        },
        "comment": "The sub instance type.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "expectCanCast(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.JSType castType, com.google.javascript.rhino.jstype.JSType type)",
    "name": "expectCanCast",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "castType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
            "name": "NodeTraversal",
            "isArray": false
          },
          "name": "t"
        },
        "comment": "The node traversal.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The node where warnings should point.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The type being cast from.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "castType"
        },
        "comment": "The type being cast to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "expectUndeclaredVariable(java.lang.String sourceName, com.google.javascript.jscomp.CompilerInput input, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent, com.google.javascript.jscomp.Scope$Var var, java.lang.String variableName, com.google.javascript.rhino.jstype.JSType newType)",
    "name": "expectUndeclaredVariable",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.Scope$Var",
      "name": "com.google.javascript.jscomp.Scope$Var",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceName"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.CompilerInput",
          "name": "CompilerInput",
          "isArray": false
        },
        "name": "input"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.Scope$Var",
          "name": "Var",
          "isArray": false
        },
        "name": "var"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "variableName"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "newType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "sourceName"
        },
        "comment": "The name of the source file we're in.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The node where warnings should point to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "parent"
        },
        "comment": "The parent of n.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.Scope$Var",
            "name": "Var",
            "isArray": false
          },
          "name": "var"
        },
        "comment": "The variable that we're checking.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "variableName"
        },
        "comment": "The name of the variable.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "newType"
        },
        "comment": "The type being applied to the variable. Mostly just here for the benefit of the warning.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "The variable we end up with. Most of the time, this will just be var, but in some rare cases we will need to declare a new var with new source info.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "expectAllInterfaceProperties(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.jstype.FunctionType type)",
    "name": "expectAllInterfaceProperties",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.FunctionType",
          "name": "FunctionType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getReadableJSTypeName(com.google.javascript.rhino.Node n, boolean dereference)",
    "name": "getReadableJSTypeName",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.TypeValidator",
      "name": "TypeValidator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.TypeValidator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "dereference"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "n"
        },
        "comment": "The node.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "dereference"
        },
        "comment": "If true the type of the node . dereference is dereferenced to an Object type if possible.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  }
]