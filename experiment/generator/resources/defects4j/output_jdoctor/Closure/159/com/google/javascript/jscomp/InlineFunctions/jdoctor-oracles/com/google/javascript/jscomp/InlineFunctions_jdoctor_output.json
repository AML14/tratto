[
  {
    "signature": "com.google.javascript.jscomp.InlineFunctions(com.google.javascript.jscomp.AbstractCompiler compiler, com.google.common.base.Supplier<java.lang.String> safeNameIdSupplier, boolean inlineGlobalFunctions, boolean inlineLocalFunctions, boolean blockFunctionInliningEnabled)",
    "name": "com.google.javascript.jscomp.InlineFunctions",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.InlineFunctions",
      "name": "InlineFunctions",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.InlineFunctions",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Supplier",
          "name": "Supplier",
          "isArray": false
        },
        "name": "safeNameIdSupplier"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "inlineGlobalFunctions"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "inlineLocalFunctions"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "blockFunctionInliningEnabled"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getOrCreateFunctionState(java.lang.String fnName)",
    "name": "getOrCreateFunctionState",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.InlineFunctions",
      "name": "InlineFunctions",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.InlineFunctions",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.InlineFunctions$FunctionState",
      "name": "com.google.javascript.jscomp.InlineFunctions$FunctionState",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fnName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "enableSpecialization(com.google.javascript.jscomp.SpecializeModule$SpecializationState specializationState)",
    "name": "enableSpecialization",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.InlineFunctions",
      "name": "InlineFunctions",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.InlineFunctions",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.SpecializeModule$SpecializationState",
          "name": "SpecializationState",
          "isArray": false
        },
        "name": "specializationState"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "process(com.google.javascript.rhino.Node externs, com.google.javascript.rhino.Node root)",
    "name": "process",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.InlineFunctions",
      "name": "InlineFunctions",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.InlineFunctions",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "externs"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "root"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isCandidateUsage(com.google.javascript.rhino.Node name)",
    "name": "isCandidateUsage",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.InlineFunctions",
      "name": "InlineFunctions",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.InlineFunctions",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "Whether the name is used in a way that might be a candidate for inlining., false otherwise",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "trimCanidatesUsingOnCost()",
    "name": "trimCanidatesUsingOnCost",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.InlineFunctions",
      "name": "InlineFunctions",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.InlineFunctions",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "removeInlinedFunctions()",
    "name": "removeInlinedFunctions",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.InlineFunctions",
      "name": "InlineFunctions",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.InlineFunctions",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "verifyAllReferencesInlined(com.google.javascript.jscomp.InlineFunctions$FunctionState fs)",
    "name": "verifyAllReferencesInlined",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.InlineFunctions",
      "name": "InlineFunctions",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.InlineFunctions",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.InlineFunctions$FunctionState",
          "name": "FunctionState",
          "isArray": false
        },
        "name": "fs"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]