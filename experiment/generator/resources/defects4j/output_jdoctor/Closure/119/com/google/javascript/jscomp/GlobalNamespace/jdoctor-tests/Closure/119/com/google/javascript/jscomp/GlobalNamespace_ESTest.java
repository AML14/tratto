/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 05:46:58 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Predicate;
import com.google.common.collect.ImmutableList;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.GlobalNamespace;
import com.google.javascript.jscomp.JSModule;
import com.google.javascript.jscomp.LightweightMessageFormatter;
import com.google.javascript.jscomp.PrintStreamErrorManager;
import com.google.javascript.jscomp.Scope;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.jstype.JSType;
import com.google.javascript.rhino.jstype.StaticScope;
import com.google.javascript.rhino.jstype.StaticSlot;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class GlobalNamespace_ESTest extends GlobalNamespace_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("(>?`zkbywZ%'L<2DG");
        MockPrintStream mockPrintStream0 = new MockPrintStream("(>?`zkbywZ%'L<2DG");
        Predicate<String> predicate0 = (Predicate<String>) mock(Predicate.class, new ViolatedAssumptionAnswer());
        GlobalNamespace.Tracker globalNamespace_Tracker0 = new GlobalNamespace.Tracker(compiler0, mockPrintStream0, predicate0);
        globalNamespace_Tracker0.process(node0, node0);
        node0.isFor();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("com.google.javascript.rhino.jstype.NumberType");
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, node0, node0);
        GlobalNamespace.Name globalNamespace_Name0 = globalNamespace0.getSlot("");
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
        MockFile mockFile0 = new MockFile("JSC_MISSING_NAME_MAP_FOR_GENERATOR");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager(lightweightMessageFormatter0, mockPrintStream0);
        Compiler compiler0 = new Compiler(printStreamErrorManager0);
        Node node0 = new Node(1873);
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, node0);
        StaticScope<JSType> staticScope0 = globalNamespace0.getParentScope();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Compiler compiler0 = new Compiler();
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, (Node) null);
        StaticScope<JSType> staticScope0 = globalNamespace0.getScope((GlobalNamespace.Name) null);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        GlobalNamespace globalNamespace0 = new GlobalNamespace((AbstractCompiler) null, (Node) null);
        globalNamespace0.getNameForest();
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Compiler compiler0 = new Compiler();
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, (Node) null);
        globalNamespace0.getReferences((GlobalNamespace.Name) null);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Compiler compiler0 = new Compiler();
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, (Node) null, (Node) null);
        globalNamespace0.getAllSymbols();
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Node node0 = Node.newNumber((-1087.028290587), 160, (-455));
        GlobalNamespace globalNamespace0 = new GlobalNamespace((AbstractCompiler) null, node0);
        Node node1 = globalNamespace0.getRootNode();
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Compiler compiler0 = new Compiler();
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, (Node) null);
        globalNamespace0.getTypeOfThis();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(")5q;{Ww3MRJ", (GlobalNamespace.Name) null, true);
        String string0 = globalNamespace_Name0.getName();
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("com.google.javascript.rhino.head.ast.KeywordLiteral", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Ref globalNamespace_Ref0 = globalNamespace_Name0.getDeclaration();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("", (GlobalNamespace.Name) null, true);
        boolean boolean0 = globalNamespace_Name0.isDeclaredType();
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(" (", (GlobalNamespace.Name) null, false);
        JSType jSType0 = globalNamespace_Name0.getType();
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(")5q;{Ww3MRJ", (GlobalNamespace.Name) null, true);
        JSDocInfo jSDocInfo0 = globalNamespace_Name0.getJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(" (", (GlobalNamespace.Name) null, false);
        String string0 = globalNamespace_Name0.getBaseName();
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(" (", (GlobalNamespace.Name) null, false);
        boolean boolean0 = globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("JSC_TRAILING_COMjMA");
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.DELETE_PROP;
        GlobalNamespace.Ref globalNamespace_Ref0 = new GlobalNamespace.Ref((JSModule) null, (Scope) null, node0, (GlobalNamespace.Name) null, globalNamespace_Ref_Type0, 154);
        String string0 = globalNamespace_Ref0.getSourceName();
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.DELETE_PROP;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        JSModule jSModule0 = globalNamespace_Ref0.getModule();
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.DELETE_PROP;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        StaticSlot<JSType> staticSlot0 = globalNamespace_Ref0.getSymbol();
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_LOCAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        GlobalNamespace.Ref globalNamespace_Ref1 = globalNamespace_Ref0.getTwin();
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_LOCAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        StaticSourceFile staticSourceFile0 = globalNamespace_Ref0.getSourceFile();
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.PROTOTYPE_GET;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        Node node0 = globalNamespace_Ref0.getNode();
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        LightweightMessageFormatter lightweightMessageFormatter0 = LightweightMessageFormatter.withoutSource();
        MockFile mockFile0 = new MockFile("JSC_MISSING_NAME_MAP_FOR_GENERATOR");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        PrintStreamErrorManager printStreamErrorManager0 = new PrintStreamErrorManager(lightweightMessageFormatter0, mockPrintStream0);
        Compiler compiler0 = new Compiler(printStreamErrorManager0);
        Node node0 = new Node(1873);
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, node0);
        boolean boolean0 = globalNamespace0.hasExternsRoot();
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Node node0 = new Node((-3117), (-3117), (-3117));
        GlobalNamespace globalNamespace0 = new GlobalNamespace((AbstractCompiler) null, node0, node0);
        boolean boolean0 = globalNamespace0.hasExternsRoot();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("");
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, node0, node0);
        globalNamespace0.getSlot("t)2be!");
        GlobalNamespace.Name globalNamespace_Name0 = globalNamespace0.getSlot("");
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Node node0 = new Node(154, 154, 154);
        Compiler compiler0 = new Compiler();
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, node0);
        JSModule jSModule0 = new JSModule("z]mJQ ");
        Scope scope0 = Scope.createLatticeBottom(node0);
        GlobalNamespace.AstChange globalNamespace_AstChange0 = new GlobalNamespace.AstChange(jSModule0, scope0, node0);
        ImmutableList<GlobalNamespace.AstChange> immutableList0 = ImmutableList.of(globalNamespace_AstChange0, globalNamespace_AstChange0, globalNamespace_AstChange0, globalNamespace_AstChange0);
        globalNamespace0.scanNewNodes(immutableList0);
        immutableList0.contains(globalNamespace_AstChange0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        Node node0 = Node.newNumber((-1087.028290587), 160, (-455));
        GlobalNamespace globalNamespace0 = new GlobalNamespace((AbstractCompiler) null, node0);
        JSModule jSModule0 = new JSModule("");
        Scope scope0 = Scope.createLatticeBottom(node0);
        GlobalNamespace.AstChange globalNamespace_AstChange0 = new GlobalNamespace.AstChange(jSModule0, scope0, node0);
        ImmutableList<GlobalNamespace.AstChange> immutableList0 = ImmutableList.of(globalNamespace_AstChange0, globalNamespace_AstChange0, globalNamespace_AstChange0, globalNamespace_AstChange0);
        globalNamespace0.scanNewNodes(immutableList0);
        immutableList0.contains(globalNamespace_AstChange0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("ALIASING_GET");
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, node0, node0);
        GlobalNamespace.Name globalNamespace_Name0 = globalNamespace0.getSlot("ALIASING_GET");
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("spx");
        GlobalNamespace globalNamespace0 = new GlobalNamespace(compiler0, (Node) null, node0);
        GlobalNamespace.Name globalNamespace_Name0 = globalNamespace0.getSlot("sst&|e?!kBD");
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(")5q;{Ww3MRJ", (GlobalNamespace.Name) null, true);
        globalNamespace_Name0.addProperty(")5q;{Ww3MRJ", true);
        GlobalNamespace.Name globalNamespace_Name1 = globalNamespace_Name0.addProperty(")5q;{Ww3MRJ", false);
    }

    @Test(timeout = 4000)
    public void test3031() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(".rototype.", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Name globalNamespace_Name1 = new GlobalNamespace.Name(".rototype.", globalNamespace_Name0, false);
        String string0 = globalNamespace_Name1.toString();
    }

    @Test(timeout = 4000)
    public void test3132() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("^jp7m+F`", (GlobalNamespace.Name) null, true);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_LOCAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.removeRef(globalNamespace_Ref0);
        globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test3233() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(".rototype.", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.DIRECT_GET;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        GlobalNamespace.Ref globalNamespace_Ref1 = globalNamespace_Ref0.cloneAndReclassify(globalNamespace_Ref_Type0);
        globalNamespace_Name0.removeRef(globalNamespace_Ref1);
        globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test3334() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(")5q;{Ww3MRJ", (GlobalNamespace.Name) null, true);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.ALIASING_GET;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.removeRef(globalNamespace_Ref0);
        globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test3435() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.CALL_GET;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.removeRef(globalNamespace_Ref0);
        globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test3536() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("4rc?<", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.DELETE_PROP;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.removeRef(globalNamespace_Ref0);
        globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test3637() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("ALIASING_GET", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_GLOBAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test3738() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_LOCAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("", (GlobalNamespace.Name) null, false);
        globalNamespace_Name0.removeRef(globalNamespace_Ref0);
        globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test3839() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("4rc?<", (GlobalNamespace.Name) null, true);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_GLOBAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRefInternal(globalNamespace_Ref0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.removeRef(globalNamespace_Ref0);
        globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test3940() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("4rc?<", (GlobalNamespace.Name) null, true);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_GLOBAL;
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type1 = GlobalNamespace.Ref.Type.DIRECT_GET;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type1);
        globalNamespace_Name0.addRefInternal(globalNamespace_Ref0);
        GlobalNamespace.Ref globalNamespace_Ref1 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref1);
        globalNamespace_Name0.removeRef(globalNamespace_Ref1);
    }

    @Test(timeout = 4000)
    public void test4041() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("ALIASING_GET", (GlobalNamespace.Name) null, true);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.PROTOTYPE_GET;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.removeRef(globalNamespace_Ref0);
        globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test4142() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(".rototype.", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.DIRECT_GET;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.removeRef(globalNamespace_Ref0);
        globalNamespace_Name0.isTypeInferred();
    }

    @Test(timeout = 4000)
    public void test4243() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("ALIASING_GET", (GlobalNamespace.Name) null, true);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.PROTOTYPE_GET;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.isSimpleStubDeclaration();
    }

    @Test(timeout = 4000)
    public void test4344() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("Xb8zFz^?poW'sHAh,Bw", (GlobalNamespace.Name) null, false);
        boolean boolean0 = globalNamespace_Name0.isSimpleStubDeclaration();
    }

    @Test(timeout = 4000)
    public void test4445() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("4rc?<", (GlobalNamespace.Name) null, true);
        boolean boolean0 = globalNamespace_Name0.canEliminate();
    }

    @Test(timeout = 4000)
    public void test4546() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("FM8I?", (GlobalNamespace.Name) null, true);
        boolean boolean0 = globalNamespace_Name0.canCollapse();
    }

    @Test(timeout = 4000)
    public void test4647() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("ALIASING_GET", (GlobalNamespace.Name) null, false);
        boolean boolean0 = globalNamespace_Name0.canCollapse();
    }

    @Test(timeout = 4000)
    public void test4748() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(".rototype.", (GlobalNamespace.Name) null, false);
        globalNamespace_Name0.setDeclaredType();
        boolean boolean0 = globalNamespace_Name0.canCollapse();
    }

    @Test(timeout = 4000)
    public void test4849() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(".rototype.", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Name globalNamespace_Name1 = new GlobalNamespace.Name(".rototype.", globalNamespace_Name0, false);
        boolean boolean0 = globalNamespace_Name1.canCollapse();
    }

    @Test(timeout = 4000)
    public void test4950() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(".rototype.", (GlobalNamespace.Name) null, false);
        globalNamespace_Name0.localSets = 92;
        boolean boolean0 = globalNamespace_Name0.canCollapse();
    }

    @Test(timeout = 4000)
    public void test5051() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("ALIASING_GET", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_GLOBAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        globalNamespace_Name0.deleteProps = 1;
        boolean boolean0 = globalNamespace_Name0.canCollapse();
    }

    @Test(timeout = 4000)
    public void test5152() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("4rc?<", (GlobalNamespace.Name) null, true);
        boolean boolean0 = globalNamespace_Name0.shouldKeepKeys();
    }

    @Test(timeout = 4000)
    public void test5253() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("ALIASING_GET", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_GLOBAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        boolean boolean0 = globalNamespace_Name0.needsToBeStubbed();
    }

    @Test(timeout = 4000)
    public void test5354() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(" (", (GlobalNamespace.Name) null, false);
        boolean boolean0 = globalNamespace_Name0.needsToBeStubbed();
    }

    @Test(timeout = 4000)
    public void test5455() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(".rototype.", (GlobalNamespace.Name) null, false);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_LOCAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        globalNamespace_Name0.addRef(globalNamespace_Ref0);
        boolean boolean0 = globalNamespace_Name0.needsToBeStubbed();
    }

    @Test(timeout = 4000)
    public void test5556() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(")5q;{Ww3MRJ", (GlobalNamespace.Name) null, true);
        GlobalNamespace.Name globalNamespace_Name1 = globalNamespace_Name0.addProperty(")5q;{Ww3MRJ", true);
    }

    @Test(timeout = 4000)
    public void test5557() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(")5q;{Ww3MRJ", (GlobalNamespace.Name) null, true);
        GlobalNamespace.Name globalNamespace_Name1 = globalNamespace_Name0.addProperty(")5q;{Ww3MRJ", true);
        globalNamespace_Name1.setDeclaredType();
    }

    @Test(timeout = 4000)
    public void test5658() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(")5q;{Ww3MRJ", (GlobalNamespace.Name) null, true);
        boolean boolean0 = globalNamespace_Name0.isNamespace();
    }

    @Test(timeout = 4000)
    public void test5759() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name("ALIASING_GET", (GlobalNamespace.Name) null, true);
        GlobalNamespace.Name globalNamespace_Name1 = new GlobalNamespace.Name("TC}.XBD{BL>6F=", globalNamespace_Name0, true);
        boolean boolean0 = globalNamespace_Name1.isSimpleName();
    }

    @Test(timeout = 4000)
    public void test5860() throws Throwable {
        GlobalNamespace.Name globalNamespace_Name0 = new GlobalNamespace.Name(" (", (GlobalNamespace.Name) null, false);
        boolean boolean0 = globalNamespace_Name0.isSimpleName();
    }

    @Test(timeout = 4000)
    public void test5961() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_LOCAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        String string0 = globalNamespace_Ref0.getSourceName();
    }

    @Test(timeout = 4000)
    public void test6062() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_GLOBAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        boolean boolean0 = globalNamespace_Ref0.isSet();
    }

    @Test(timeout = 4000)
    public void test6163() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_LOCAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        boolean boolean0 = globalNamespace_Ref0.isSet();
    }

    @Test(timeout = 4000)
    public void test6264() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.DIRECT_GET;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        boolean boolean0 = globalNamespace_Ref0.isSet();
    }

    @Test(timeout = 4000)
    public void test6365() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.ALIASING_GET;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        GlobalNamespace.Ref.markTwins(globalNamespace_Ref0, globalNamespace_Ref0);
    }

    @Test(timeout = 4000)
    public void test6466() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_LOCAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        GlobalNamespace.Ref.markTwins(globalNamespace_Ref0, globalNamespace_Ref0);
    }

    @Test(timeout = 4000)
    public void test6567() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_LOCAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type1 = GlobalNamespace.Ref.Type.ALIASING_GET;
        GlobalNamespace.Ref globalNamespace_Ref1 = globalNamespace_Ref0.cloneAndReclassify(globalNamespace_Ref_Type1);
        GlobalNamespace.Ref.markTwins(globalNamespace_Ref0, globalNamespace_Ref1);
    }

    @Test(timeout = 4000)
    public void test6668() throws Throwable {
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type0 = GlobalNamespace.Ref.Type.SET_FROM_GLOBAL;
        GlobalNamespace.Ref globalNamespace_Ref0 = GlobalNamespace.Ref.createRefForTesting(globalNamespace_Ref_Type0);
        GlobalNamespace.Ref.Type globalNamespace_Ref_Type1 = GlobalNamespace.Ref.Type.ALIASING_GET;
        GlobalNamespace.Ref globalNamespace_Ref1 = globalNamespace_Ref0.cloneAndReclassify(globalNamespace_Ref_Type1);
        GlobalNamespace.Ref.markTwins(globalNamespace_Ref0, globalNamespace_Ref1);
    }
}
