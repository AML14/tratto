[
  {
    "signature": "applySubclassRelationship(com.google.javascript.rhino.jstype.FunctionType parentCtor, com.google.javascript.rhino.jstype.FunctionType childCtor, com.google.javascript.jscomp.CodingConvention$SubclassType type)",
    "name": "applySubclassRelationship",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.FunctionType",
          "name": "FunctionType",
          "isArray": false
        },
        "name": "parentCtor"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.FunctionType",
          "name": "FunctionType",
          "isArray": false
        },
        "name": "childCtor"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.CodingConvention$SubclassType",
          "name": "SubclassType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getClassesDefinedByCall(com.google.javascript.rhino.Node callNode)",
    "name": "getClassesDefinedByCall",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.CodingConvention$SubclassRelationship",
      "name": "com.google.javascript.jscomp.CodingConvention$SubclassRelationship",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "callNode"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isSuperClassReference(java.lang.String propertyName)",
    "name": "isSuperClassReference",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "propertyName"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "extractClassNameIfProvide(com.google.javascript.rhino.Node node, com.google.javascript.rhino.Node parent)",
    "name": "extractClassNameIfProvide",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "The extracted class name, or null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "extractClassNameIfRequire(com.google.javascript.rhino.Node node, com.google.javascript.rhino.Node parent)",
    "name": "extractClassNameIfRequire",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "The extracted class name, or null.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getExportPropertyFunction()",
    "name": "getExportPropertyFunction",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "closure's function name for exporting properties.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getExportSymbolFunction()",
    "name": "getExportSymbolFunction",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "closure's function name for exporting symbols.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "identifyTypeDeclarationCall(com.google.javascript.rhino.Node n)",
    "name": "identifyTypeDeclarationCall",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.List<java.lang.String>",
      "name": "java.util.List<java.lang.String>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getAbstractMethodName()",
    "name": "getAbstractMethodName",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSingletonGetterClassName(com.google.javascript.rhino.Node callNode)",
    "name": "getSingletonGetterClassName",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "callNode"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "applySingletonGetter(com.google.javascript.rhino.jstype.FunctionType functionType, com.google.javascript.rhino.jstype.FunctionType getterType, com.google.javascript.rhino.jstype.ObjectType objectType)",
    "name": "applySingletonGetter",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.FunctionType",
          "name": "FunctionType",
          "isArray": false
        },
        "name": "functionType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.FunctionType",
          "name": "FunctionType",
          "isArray": false
        },
        "name": "getterType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.ObjectType",
          "name": "ObjectType",
          "isArray": false
        },
        "name": "objectType"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getGlobalObject()",
    "name": "getGlobalObject",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isPropertyTestFunction(com.google.javascript.rhino.Node call)",
    "name": "isPropertyTestFunction",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "call"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getObjectLiteralCast(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node callNode)",
    "name": "getObjectLiteralCast",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.CodingConvention$ObjectLiteralCast",
      "name": "com.google.javascript.jscomp.CodingConvention$ObjectLiteralCast",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "callNode"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isOptionalParameter(com.google.javascript.rhino.Node parameter)",
    "name": "isOptionalParameter",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parameter"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isVarArgsParameter(com.google.javascript.rhino.Node parameter)",
    "name": "isVarArgsParameter",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parameter"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isPrivate(java.lang.String name)",
    "name": "isPrivate",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getAssertionFunctions()",
    "name": "getAssertionFunctions",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Collection<com.google.javascript.jscomp.CodingConvention$AssertionFunctionSpec>",
      "name": "java.util.Collection<com.google.javascript.jscomp.CodingConvention$AssertionFunctionSpec>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "describeFunctionBind(com.google.javascript.rhino.Node n)",
    "name": "describeFunctionBind",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ClosureCodingConvention",
      "name": "ClosureCodingConvention",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ClosureCodingConvention",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.CodingConvention$Bind",
      "name": "com.google.javascript.jscomp.CodingConvention$Bind",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]