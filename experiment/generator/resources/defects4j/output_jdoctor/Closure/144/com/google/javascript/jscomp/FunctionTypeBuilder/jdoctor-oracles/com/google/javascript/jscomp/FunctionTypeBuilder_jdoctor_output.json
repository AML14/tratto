[
  {
    "signature": "com.google.javascript.jscomp.FunctionTypeBuilder(java.lang.String fnName, com.google.javascript.jscomp.AbstractCompiler compiler, com.google.javascript.rhino.Node errorRoot, java.lang.String sourceName, com.google.javascript.jscomp.Scope scope)",
    "name": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fnName"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "errorRoot"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "sourceName"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.Scope",
          "name": "Scope",
          "isArray": false
        },
        "name": "scope"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "fnName"
        },
        "comment": "The function name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
            "name": "AbstractCompiler",
            "isArray": false
          },
          "name": "compiler"
        },
        "comment": "The compiler.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "errorRoot"
        },
        "comment": "The node to associate with any warning generated by this builder.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "sourceName"
        },
        "comment": "A source name for associating any warnings that we have to emit.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.Scope",
            "name": "Scope",
            "isArray": false
          },
          "name": "scope"
        },
        "comment": "The syntactic scope.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "setSourceNode(com.google.javascript.rhino.Node sourceNode)",
    "name": "setSourceNode",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "sourceNode",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inferFromOverriddenFunction(com.google.javascript.rhino.jstype.FunctionType oldType, com.google.javascript.rhino.Node paramsParent)",
    "name": "inferFromOverriddenFunction",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.FunctionType",
          "name": "FunctionType",
          "isArray": false
        },
        "name": "oldType"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "paramsParent",
        "nullable": true
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.FunctionType",
            "name": "FunctionType",
            "isArray": false
          },
          "name": "oldType"
        },
        "comment": "The function being overridden.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "paramsParent",
          "nullable": true
        },
        "comment": "The LP node of the function that we're assigning to. If null that just means we're not initializing this to a function literal.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "inferReturnType(com.google.javascript.rhino.JSDocInfo info)",
    "name": "inferReturnType",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.JSDocInfo",
          "name": "JSDocInfo",
          "isArray": false
        },
        "name": "info",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inferInheritance(com.google.javascript.rhino.JSDocInfo info)",
    "name": "inferInheritance",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.JSDocInfo",
          "name": "JSDocInfo",
          "isArray": false
        },
        "name": "info",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inferThisType(com.google.javascript.rhino.JSDocInfo info, com.google.javascript.rhino.jstype.JSType type)",
    "name": "inferThisType",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.JSDocInfo",
          "name": "JSDocInfo",
          "isArray": false
        },
        "name": "info"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "The type of this.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "inferThisType(com.google.javascript.rhino.JSDocInfo info, com.google.javascript.rhino.Node owner)",
    "name": "inferThisType",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.JSDocInfo",
          "name": "JSDocInfo",
          "isArray": false
        },
        "name": "info"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "owner",
        "nullable": true
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.JSDocInfo",
            "name": "JSDocInfo",
            "isArray": false
          },
          "name": "info"
        },
        "comment": "The JSDocInfo for this function.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "owner",
          "nullable": true
        },
        "comment": "The node for the object whose prototype \"owns\" this function. For example. owner is A in the expression A.prototype.foo. May be null to indicate that this is not a prototype property.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "inferParameterTypes(com.google.javascript.rhino.JSDocInfo info)",
    "name": "inferParameterTypes",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.JSDocInfo",
          "name": "JSDocInfo",
          "isArray": false
        },
        "name": "info"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inferParameterTypes(com.google.javascript.rhino.Node argsParent, com.google.javascript.rhino.JSDocInfo info)",
    "name": "inferParameterTypes",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "argsParent",
        "nullable": true
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.JSDocInfo",
          "name": "JSDocInfo",
          "isArray": false
        },
        "name": "info",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "inferTemplateTypeName(com.google.javascript.rhino.JSDocInfo info)",
    "name": "inferTemplateTypeName",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.JSDocInfo",
          "name": "JSDocInfo",
          "isArray": false
        },
        "name": "info",
        "nullable": true
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "buildAndRegister()",
    "name": "buildAndRegister",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.jstype.FunctionType",
      "name": "com.google.javascript.rhino.jstype.FunctionType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isFunctionTypeDeclaration(com.google.javascript.rhino.JSDocInfo info)",
    "name": "isFunctionTypeDeclaration",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionTypeBuilder",
      "name": "FunctionTypeBuilder",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionTypeBuilder",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.JSDocInfo",
          "name": "JSDocInfo",
          "isArray": false
        },
        "name": "info"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]