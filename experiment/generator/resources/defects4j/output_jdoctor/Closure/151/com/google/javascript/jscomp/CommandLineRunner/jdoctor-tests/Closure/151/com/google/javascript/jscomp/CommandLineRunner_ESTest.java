/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 07:17:49 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.base.Function;
import com.google.common.base.Supplier;
import com.google.javascript.jscomp.CommandLineRunner;
import com.google.javascript.jscomp.CompilerOptions;
import com.google.javascript.jscomp.JSModule;
import com.google.javascript.jscomp.JSSourceFile;
import java.io.PrintStream;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CommandLineRunner_ESTest extends CommandLineRunner_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        String[] stringArray0 = new String[0];
        CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);
        commandLineRunner0.createCompiler();
        commandLineRunner0.shouldRunCompiler();
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        String[] stringArray0 = new String[0];
        CommandLineRunner.main(stringArray0);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        String[] stringArray0 = new String[0];
        CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0, (PrintStream) null, (PrintStream) null);
        commandLineRunner0.shouldRunCompiler();
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        String[] stringArray0 = new String[2];
        stringArray0[0] = "w3c_event3.js";
        stringArray0[1] = "w3c_event3.js";
        CommandLineRunner.main(stringArray0);
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        String[] stringArray0 = new String[10];
        stringArray0[0] = "--A=";
        CommandLineRunner commandLineRunner0 = null;
        commandLineRunner0 = new CommandLineRunner(stringArray0);
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        String[] stringArray0 = new String[0];
        CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);
        CompilerOptions compilerOptions0 = commandLineRunner0.createOptions();
    }

    @Test(timeout = 4000)
    public void test66() throws Throwable {
        String[] stringArray0 = new String[0];
        CommandLineRunner commandLineRunner0 = new CommandLineRunner(stringArray0);
        Supplier<List<JSSourceFile>> supplier0 = (Supplier<List<JSSourceFile>>) mock(Supplier.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(supplier0).get();
        Function<Integer, Boolean> function0 = (Function<Integer, Boolean>) mock(Function.class, new ViolatedAssumptionAnswer());
        commandLineRunner0.enableTestMode(supplier0, supplier0, (Supplier<List<JSModule>>) null, function0);
        List<JSSourceFile> list0 = commandLineRunner0.createExterns();
    }
}
