[
  {
    "signature": "com.google.javascript.jscomp.Scope(com.google.javascript.jscomp.Scope parent, com.google.javascript.rhino.Node rootNode)",
    "name": "com.google.javascript.jscomp.Scope",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.Scope",
          "name": "Scope",
          "isArray": false
        },
        "name": "parent"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "rootNode"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.Scope",
            "name": "Scope",
            "isArray": false
          },
          "name": "parent"
        },
        "comment": "The parent Scope. . parent is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "rootNode"
        },
        "comment": "Typically the FUNCTION node.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "com.google.javascript.jscomp.Scope(com.google.javascript.rhino.Node rootNode, com.google.javascript.jscomp.AbstractCompiler compiler)",
    "name": "com.google.javascript.jscomp.Scope",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "rootNode"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "rootNode"
        },
        "comment": "Typically the global BLOCK node.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "com.google.javascript.jscomp.Scope(com.google.javascript.rhino.Node rootNode, com.google.javascript.rhino.jstype.ObjectType thisType)",
    "name": "com.google.javascript.jscomp.Scope",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "rootNode"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.ObjectType",
          "name": "ObjectType",
          "isArray": false
        },
        "name": "thisType"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "rootNode"
        },
        "comment": "Typically a FUNCTION node or the global BLOCK node.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.ObjectType",
            "name": "ObjectType",
            "isArray": false
          },
          "name": "thisType"
        },
        "comment": "the type of this in this scope.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getDepth()",
    "name": "getDepth",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isBottom()",
    "name": "isBottom",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRootNode()",
    "name": "getRootNode",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.Node",
      "name": "com.google.javascript.rhino.Node",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getParent()",
    "name": "getParent",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "com.google.javascript.jscomp.Scope",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getGlobalScope()",
    "name": "getGlobalScope",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "com.google.javascript.jscomp.Scope",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getParentScope()",
    "name": "getParentScope",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>",
      "name": "com.google.javascript.rhino.jstype.StaticScope<com.google.javascript.rhino.jstype.JSType>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTypeOfThis()",
    "name": "getTypeOfThis",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.jstype.ObjectType",
      "name": "com.google.javascript.rhino.jstype.ObjectType",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "declare(java.lang.String name, com.google.javascript.rhino.Node nameNode, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.jscomp.CompilerInput input)",
    "name": "declare",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.Scope$Var",
      "name": "com.google.javascript.jscomp.Scope$Var",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "nameNode"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.CompilerInput",
          "name": "CompilerInput",
          "isArray": false
        },
        "name": "input"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "name of the variable.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "nameNode"
        },
        "comment": "the NAME node declaring the variable.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "the variable's type.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.CompilerInput",
            "name": "CompilerInput",
            "isArray": false
          },
          "name": "input"
        },
        "comment": "the input in which this variable is defined.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "declare(java.lang.String name, com.google.javascript.rhino.Node nameNode, com.google.javascript.rhino.jstype.JSType type, com.google.javascript.jscomp.CompilerInput input, boolean inferred)",
    "name": "declare",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.Scope$Var",
      "name": "com.google.javascript.jscomp.Scope$Var",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "nameNode"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.CompilerInput",
          "name": "CompilerInput",
          "isArray": false
        },
        "name": "input"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "inferred"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "name of the variable.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "nameNode"
        },
        "comment": "the NAME node declaring the variable.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "the variable's type.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.CompilerInput",
            "name": "CompilerInput",
            "isArray": false
          },
          "name": "input"
        },
        "comment": "the input in which this variable is defined.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "inferred"
        },
        "comment": "Whether this variable's type is inferred (as opposed to declared).",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "undeclare(com.google.javascript.jscomp.Scope$Var var)",
    "name": "undeclare",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.Scope$Var",
          "name": "Var",
          "isArray": false
        },
        "name": "var"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSlot(java.lang.String name)",
    "name": "getSlot",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType>",
      "name": "com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getOwnSlot(java.lang.String name)",
    "name": "getOwnSlot",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType>",
      "name": "com.google.javascript.rhino.jstype.StaticSlot<com.google.javascript.rhino.jstype.JSType>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getVar(java.lang.String name)",
    "name": "getVar",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.Scope$Var",
      "name": "com.google.javascript.jscomp.Scope$Var",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isDeclared(java.lang.String name, boolean recurse)",
    "name": "isDeclared",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "recurse"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getVars()",
    "name": "getVars",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator<com.google.javascript.jscomp.Scope$Var>",
      "name": "java.util.Iterator<com.google.javascript.jscomp.Scope$Var>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getVarCount()",
    "name": "getVarCount",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isGlobal()",
    "name": "isGlobal",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isLocal()",
    "name": "isLocal",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.Scope",
      "name": "Scope",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.Scope",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]