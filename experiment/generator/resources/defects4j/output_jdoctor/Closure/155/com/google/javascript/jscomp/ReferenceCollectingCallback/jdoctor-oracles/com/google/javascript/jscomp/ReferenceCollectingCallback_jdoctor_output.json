[
  {
    "signature": "com.google.javascript.jscomp.ReferenceCollectingCallback(com.google.javascript.jscomp.AbstractCompiler compiler, com.google.javascript.jscomp.ReferenceCollectingCallback$Behavior behavior)",
    "name": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback",
      "name": "ReferenceCollectingCallback",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback$Behavior",
          "name": "Behavior",
          "isArray": false
        },
        "name": "behavior"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "com.google.javascript.jscomp.ReferenceCollectingCallback(com.google.javascript.jscomp.AbstractCompiler compiler, com.google.javascript.jscomp.ReferenceCollectingCallback$Behavior behavior, com.google.common.base.Predicate<com.google.javascript.jscomp.Scope$Var> varFilter)",
    "name": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback",
      "name": "ReferenceCollectingCallback",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback$Behavior",
          "name": "Behavior",
          "isArray": false
        },
        "name": "behavior"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Predicate",
          "name": "Predicate",
          "isArray": false
        },
        "name": "varFilter"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "process(com.google.javascript.rhino.Node externs, com.google.javascript.rhino.Node root)",
    "name": "process",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback",
      "name": "ReferenceCollectingCallback",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "externs"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "root"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getReferencedVariables()",
    "name": "getReferencedVariables",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback",
      "name": "ReferenceCollectingCallback",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Set<com.google.javascript.jscomp.Scope$Var>",
      "name": "java.util.Set<com.google.javascript.jscomp.Scope$Var>",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getReferenceCollection(com.google.javascript.jscomp.Scope$Var v)",
    "name": "getReferenceCollection",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback",
      "name": "ReferenceCollectingCallback",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceCollection",
      "name": "com.google.javascript.jscomp.ReferenceCollectingCallback$ReferenceCollection",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.Scope$Var",
          "name": "Var",
          "isArray": false
        },
        "name": "v"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "visit(com.google.javascript.jscomp.NodeTraversal t, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent)",
    "name": "visit",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback",
      "name": "ReferenceCollectingCallback",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "enterScope(com.google.javascript.jscomp.NodeTraversal t)",
    "name": "enterScope",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback",
      "name": "ReferenceCollectingCallback",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "exitScope(com.google.javascript.jscomp.NodeTraversal t)",
    "name": "exitScope",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback",
      "name": "ReferenceCollectingCallback",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "t"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "shouldTraverse(com.google.javascript.jscomp.NodeTraversal nodeTraversal, com.google.javascript.rhino.Node n, com.google.javascript.rhino.Node parent)",
    "name": "shouldTraverse",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.ReferenceCollectingCallback",
      "name": "ReferenceCollectingCallback",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.ReferenceCollectingCallback",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.NodeTraversal",
          "name": "NodeTraversal",
          "isArray": false
        },
        "name": "nodeTraversal"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "n"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "parent"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]