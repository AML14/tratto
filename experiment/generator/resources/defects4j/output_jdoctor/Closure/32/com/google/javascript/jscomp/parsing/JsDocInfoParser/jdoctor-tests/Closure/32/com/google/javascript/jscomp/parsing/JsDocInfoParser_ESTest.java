/*
 * This file was automatically generated by EvoSuite
 * Fri Nov 03 23:21:42 GMT 2023
 */
package com.google.javascript.jscomp.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.JsDocInfoParser;
import com.google.javascript.jscomp.parsing.JsDocTokenStream;
import com.google.javascript.rhino.JSDocInfo;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.head.Token;
import com.google.javascript.rhino.head.ast.Comment;
import com.google.javascript.rhino.head.ast.ErrorCollector;
import com.google.javascript.rhino.head.tools.ToolErrorReporter;
import java.util.LinkedHashSet;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class JsDocInfoParser_ESTest extends JsDocInfoParser_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = Node.newString("*/\n");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*/\n");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Node node0 = Node.newString("O\n");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("O\n", 31);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        boolean boolean0 = jsDocInfoParser0.hasParsedJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser((JsDocTokenStream) null, (Comment) null, (Node) null, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.getFileOverviewJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Node node0 = Node.newString("9K");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("9K", 31);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        Node.FileLevelJsDocBuilder node_FileLevelJsDocBuilder0 = node0.new FileLevelJsDocBuilder();
        jsDocInfoParser0.setFileLevelJsDocBuilder(node_FileLevelJsDocBuilder0);
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=z3#R}#aJvyZe&O");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.setFileOverviewJSDocInfo((JSDocInfo) null);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@*A\"X2R.$]");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[(qivbtXA|,y");
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{X\"S:");
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        LinkedHashSet<String> linkedHashSet0 = new LinkedHashSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(linkedHashSet0, linkedHashSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser((JsDocTokenStream) null, (Comment) null, (Node) null, config0, toolErrorReporter0);
        JSDocInfo jSDocInfo0 = jsDocInfoParser0.retrieveAndResetParsedJSDocInfo();
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'}");
    }

    @Test(timeout = 4000)
    public void test0910() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'}");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'}", 53);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(36, 35, token_CommentType0, "'}");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorCollector0);
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'}");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'}", 53);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(36, 35, token_CommentType0, "'}");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test0912() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("'}");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("'}", 53);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment(36, 35, token_CommentType0, "'}");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, comment0, node0, config0, errorCollector0);
        node0.isString();
    }

    @Test(timeout = 4000)
    public void test1013() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("!3@M1\"(/%");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        Node node0 = JsDocInfoParser.parseTypeString("!3@M1\"(/%");
        node0.setSourceFileForTesting("!3@M1\"(/%");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1114() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = Node.newString("*/\n");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*/\n", 50, 45);
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1215() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("@a");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1316() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*\n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*\n", 1, 39);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1417() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("Y5");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1518() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*:}\n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1619() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(">*nUY)Z");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1720() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("[(qiv3btXA|,y");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1821() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(" {\n");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test1922() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("($J&W#1T2|Ny");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2023() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(".<");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2124() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("?|4DRPZ{ps");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2225() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("|1=");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, toolErrorReporter0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2326() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("]");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2427() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = JsDocInfoParser.parseTypeString("*}\n");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*}\n", 50, 45);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2528() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream(")Ej {i");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2629() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("...", 50, 45);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2730() throws Throwable {
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("=z3#R}#aJvyZe&O");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2831() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("*, \n");
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*, \n", 15);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test2932() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("Vx3| |LO(AySkBI2.0");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2933() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("Vx3| |LO(AySkBI2.0");
        node0.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test2934() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("Vx3| |LO(AySkBI2.0");
    }

    @Test(timeout = 4000)
    public void test3035() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("!2.<ft^,|/}T7");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3036() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("!2.<ft^,|/}T7");
    }

    @Test(timeout = 4000)
    public void test3037() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("!2.<ft^,|/}T7");
        node0.hasMoreThanOneChild();
    }

    @Test(timeout = 4000)
    public void test3138() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("2.<");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3139() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("2.<");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test3140() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("2.<");
    }

    @Test(timeout = 4000)
    public void test3241() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("QTh.<q>(cnYiepnvi");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test3242() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("QTh.<q>(cnYiepnvi");
        node0.hasChildren();
    }

    @Test(timeout = 4000)
    public void test3243() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("QTh.<q>(cnYiepnvi");
    }

    @Test(timeout = 4000)
    public void test3344() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString(".su5.<oaL/N,x_^C/");
    }

    @Test(timeout = 4000)
    public void test3445() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?}J4D Z{s");
    }

    @Test(timeout = 4000)
    public void test3446() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?}J4D Z{s");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3547() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?,LmixF\"@%6O@m.");
    }

    @Test(timeout = 4000)
    public void test3548() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?,LmixF\"@%6O@m.");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3649() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("ppg|?=");
    }

    @Test(timeout = 4000)
    public void test3650() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("ppg|?=");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3651() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("ppg|?=");
        node0.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test3752() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?]`p_(");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3753() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?]`p_(");
    }

    @Test(timeout = 4000)
    public void test3854() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?|4DRP{sW");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3855() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?|4DRP{sW");
    }

    @Test(timeout = 4000)
    public void test3856() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?|4DRP{sW");
        node0.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test3957() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(?)rt");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3958() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(?)rt");
    }

    @Test(timeout = 4000)
    public void test3959() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("(?)rt");
        node0.getChildCount();
    }

    @Test(timeout = 4000)
    public void test4060() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?RnpKfk#h");
    }

    @Test(timeout = 4000)
    public void test4061() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?RnpKfk#h");
        node0.getCharno();
    }

    @Test(timeout = 4000)
    public void test4062() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("?RnpKfk#h");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4163() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("XpS2e_t9Dfdk&<?|K");
    }

    @Test(timeout = 4000)
    public void test4164() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("XpS2e_t9Dfdk&<?|K");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4165() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("XpS2e_t9Dfdk&<?|K");
        node0.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test4266() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("s\"veX\"!");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4267() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("s\"veX\"!");
    }

    @Test(timeout = 4000)
    public void test4368() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function (");
    }

    @Test(timeout = 4000)
    public void test4469() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
    }

    @Test(timeout = 4000)
    public void test4470() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test4471() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("null");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4572() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test4573() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
    }

    @Test(timeout = 4000)
    public void test4574() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("undefined");
        node0.isString();
    }

    @Test(timeout = 4000)
    public void test4675() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("2.\n");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test4676() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("2.\n");
    }

    @Test(timeout = 4000)
    public void test4677() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("2.\n");
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test4778() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString(" O\n");
        node0.getSourcePosition();
    }

    @Test(timeout = 4000)
    public void test4779() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString(" O\n");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test4780() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString(" O\n");
    }

    @Test(timeout = 4000)
    public void test4881() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("function");
    }

    @Test(timeout = 4000)
    public void test4982() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("$|Uq,(}HD?");
    }

    @Test(timeout = 4000)
    public void test5083() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("  (~Or=K<");
    }

    @Test(timeout = 4000)
    public void test5184() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[`AS;c,a5");
    }

    @Test(timeout = 4000)
    public void test5285() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[#A;X]aa5");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test5286() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[#A;X]aa5");
        node0.hasChildren();
    }

    @Test(timeout = 4000)
    public void test5287() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("[#A;X]aa5");
    }

    @Test(timeout = 4000)
    public void test5388() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{yL~tLv}Qq@y;&.");
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test5389() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{yL~tLv}Qq@y;&.");
    }

    @Test(timeout = 4000)
    public void test5390() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{yL~tLv}Qq@y;&.");
        node0.hasChildren();
    }

    @Test(timeout = 4000)
    public void test5491() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("{7&',oZc5Wm&fN:yz");
    }

    @Test(timeout = 4000)
    public void test5592() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString(" {\n");
    }

    @Test(timeout = 4000)
    public void test5693() throws Throwable {
        Node node0 = JsDocInfoParser.parseTypeString("!");
    }

    @Test(timeout = 4000)
    public void test5794() throws Throwable {
        Node node0 = Node.newString("O\n");
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("O\n", 4095, 53);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ErrorCollector errorCollector0 = new ErrorCollector();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, node0, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test5895() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("{*/-:");
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        boolean boolean0 = jsDocInfoParser0.parse();
    }

    @Test(timeout = 4000)
    public void test5996() throws Throwable {
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        JsDocTokenStream jsDocTokenStream0 = new JsDocTokenStream("*_\n");
        jsDocTokenStream0.ungetChar(10);
        JsDocInfoParser jsDocInfoParser0 = new JsDocInfoParser(jsDocTokenStream0, (Comment) null, (Node) null, config0, errorCollector0);
        jsDocInfoParser0.parse();
    }
}
