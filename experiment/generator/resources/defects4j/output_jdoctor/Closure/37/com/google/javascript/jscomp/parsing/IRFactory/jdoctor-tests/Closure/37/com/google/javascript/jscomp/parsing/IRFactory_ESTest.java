/*
 * This file was automatically generated by EvoSuite
 * Sun Nov 19 22:03:13 GMT 2023
 */
package com.google.javascript.jscomp.parsing;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.parsing.Config;
import com.google.javascript.jscomp.parsing.IRFactory;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.head.Context;
import com.google.javascript.rhino.head.ErrorReporter;
import com.google.javascript.rhino.head.Token;
import com.google.javascript.rhino.head.ast.ArrayComprehensionLoop;
import com.google.javascript.rhino.head.ast.AstRoot;
import com.google.javascript.rhino.head.ast.Block;
import com.google.javascript.rhino.head.ast.BreakStatement;
import com.google.javascript.rhino.head.ast.Comment;
import com.google.javascript.rhino.head.ast.ContinueStatement;
import com.google.javascript.rhino.head.ast.DoLoop;
import com.google.javascript.rhino.head.ast.ElementGet;
import com.google.javascript.rhino.head.ast.EmptyExpression;
import com.google.javascript.rhino.head.ast.ErrorCollector;
import com.google.javascript.rhino.head.ast.ExpressionStatement;
import com.google.javascript.rhino.head.ast.ForLoop;
import com.google.javascript.rhino.head.ast.FunctionCall;
import com.google.javascript.rhino.head.ast.FunctionNode;
import com.google.javascript.rhino.head.ast.IfStatement;
import com.google.javascript.rhino.head.ast.InfixExpression;
import com.google.javascript.rhino.head.ast.Label;
import com.google.javascript.rhino.head.ast.LabeledStatement;
import com.google.javascript.rhino.head.ast.Name;
import com.google.javascript.rhino.head.ast.NewExpression;
import com.google.javascript.rhino.head.ast.NumberLiteral;
import com.google.javascript.rhino.head.ast.ObjectLiteral;
import com.google.javascript.rhino.head.ast.ObjectProperty;
import com.google.javascript.rhino.head.ast.ParenthesizedExpression;
import com.google.javascript.rhino.head.ast.PropertyGet;
import com.google.javascript.rhino.head.ast.RegExpLiteral;
import com.google.javascript.rhino.head.ast.ReturnStatement;
import com.google.javascript.rhino.head.ast.Scope;
import com.google.javascript.rhino.head.ast.StringLiteral;
import com.google.javascript.rhino.head.ast.SwitchCase;
import com.google.javascript.rhino.head.ast.ThrowStatement;
import com.google.javascript.rhino.head.ast.VariableDeclaration;
import com.google.javascript.rhino.head.ast.WhileLoop;
import com.google.javascript.rhino.head.ast.WithStatement;
import com.google.javascript.rhino.head.ast.XmlMemberGet;
import com.google.javascript.rhino.head.tools.ToolErrorReporter;
import com.google.javascript.rhino.jstype.SimpleSourceFile;
import com.google.javascript.rhino.jstype.StaticSourceFile;
import java.util.Locale;
import java.util.Set;
import java.util.TreeSet;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class IRFactory_ESTest extends IRFactory_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ParenthesizedExpression parenthesizedExpression0 = new ParenthesizedExpression(77);
        astRoot0.addChild(parenthesizedExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "_", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        DoLoop doLoop0 = new DoLoop();
        astRoot0.addChild(doLoop0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("unsupported language extension: for each", false);
        IRFactory.transformTree(astRoot0, simpleSourceFile0, " ]@gP+L?VN;&2oX", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        PropertyGet propertyGet0 = new PropertyGet();
        astRoot0.addChild(propertyGet0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "s{My/d:0^", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        EmptyExpression emptyExpression0 = new EmptyExpression(2, 23);
        astRoot0.addChild(emptyExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        EmptyExpression emptyExpression0 = new EmptyExpression(2, 23);
        astRoot0.addChild(emptyExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.hasOneChild();
    }

    @Test(timeout = 4000)
    public void test035() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        EmptyExpression emptyExpression0 = new EmptyExpression(2, 23);
        astRoot0.addChild(emptyExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test046() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", true);
        ElementGet elementGet0 = new ElementGet(9, 15);
        astRoot0.addChild(elementGet0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "NE", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        InfixExpression infixExpression0 = new InfixExpression(12, astRoot0, astRoot0, 138);
        astRoot0.addChild(infixExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "NaNobj", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        WithStatement withStatement0 = new WithStatement(4095, 5);
        astRoot0.addChild(withStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, (Set<String>) null, false, config_LanguageMode0, false);
        ToolErrorReporter toolErrorReporter0 = new ToolErrorReporter(false);
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "[}]5S`H3j0.<!}IB<{]", config0, toolErrorReporter0);
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ForLoop forLoop0 = new ForLoop(8, 12);
        astRoot0.addChild(forLoop0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "s{My/d:0^", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Label label0 = new Label();
        astRoot0.addChild(label0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "T__CUQz*<>Vi`$&-'j", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("b!.e`p", false);
        NewExpression newExpression0 = new NewExpression(2);
        astRoot0.addChild(newExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "b!.e`p", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        NumberLiteral numberLiteral0 = new NumberLiteral(14, 112);
        astRoot0.addChild(numberLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("/07q%j", true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "#4DvxQN04S9l", config0, errorCollector0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test1013() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        NumberLiteral numberLiteral0 = new NumberLiteral(14, 112);
        astRoot0.addChild(numberLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("/07q%j", true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "#4DvxQN04S9l", config0, errorCollector0);
        node0.isFromExterns();
    }

    @Test(timeout = 4000)
    public void test1014() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        NumberLiteral numberLiteral0 = new NumberLiteral(14, 112);
        astRoot0.addChild(numberLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("/07q%j", true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "#4DvxQN04S9l", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test1115() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        BreakStatement breakStatement0 = new BreakStatement(1, 2);
        ExpressionStatement expressionStatement0 = new ExpressionStatement(breakStatement0);
        astRoot0.addChild(expressionStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test1116() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        BreakStatement breakStatement0 = new BreakStatement(1, 2);
        ExpressionStatement expressionStatement0 = new ExpressionStatement(breakStatement0);
        astRoot0.addChild(expressionStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test1217() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("r+Z;|)0/NL}`", false);
        Scope scope0 = new Scope(14, 26);
        astRoot0.addChild(scope0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "S[l", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test1218() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("r+Z;|)0/NL}`", false);
        Scope scope0 = new Scope(14, 26);
        astRoot0.addChild(scope0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "S[l", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test1319() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        WhileLoop whileLoop0 = new WhileLoop(741);
        astRoot0.addChild(whileLoop0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "oS4El]rzA#RZ-1w9aDS", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test1420() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        Block block0 = new Block();
        astRoot0.addChild(block0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "'26@1,x9T'", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test1421() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        Block block0 = new Block();
        astRoot0.addChild(block0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "'26@1,x9T'", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test1522() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Name name0 = new Name();
        astRoot0.addChild(name0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "50~m_CR%K:ei 5Pe6", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test1623() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ObjectProperty objectProperty0 = new ObjectProperty(24);
        astRoot0.addChild(objectProperty0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "r+Z;|)0/NL}`", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test1724() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        XmlMemberGet xmlMemberGet0 = new XmlMemberGet();
        astRoot0.addChild(xmlMemberGet0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "i%valid 2ecrement*targS!", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test1825() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(" iU`", false);
        Locale locale0 = Locale.CANADA_FRENCH;
        ThrowStatement throwStatement0 = new ThrowStatement(152, 1);
        astRoot0.addChild(throwStatement0);
        Set<String> set0 = locale0.getUnicodeLocaleAttributes();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(set0, set0, false, config_LanguageMode0, false);
        IRFactory.transformTree(astRoot0, simpleSourceFile0, " iU`", config0, (ErrorReporter) null);
    }

    @Test(timeout = 4000)
    public void test1926() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        RegExpLiteral regExpLiteral0 = new RegExpLiteral(20);
        regExpLiteral0.setValue("R$)");
        astRoot0.addChild(regExpLiteral0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "8UK57:!;0y!{yq", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test1927() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        RegExpLiteral regExpLiteral0 = new RegExpLiteral(20);
        regExpLiteral0.setValue("R$)");
        astRoot0.addChild(regExpLiteral0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "8UK57:!;0y!{yq", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test2028() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment((-2834), 15, token_CommentType0, "@/5>cd0^(}Qt Rhw");
        astRoot0.addComment(comment0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Context context0 = new Context();
        ErrorReporter errorReporter0 = context0.setErrorReporter(errorCollector0);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "language version", config0, errorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test2029() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment((-2834), 15, token_CommentType0, "@/5>cd0^(}Qt Rhw");
        astRoot0.addComment(comment0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Context context0 = new Context();
        ErrorReporter errorReporter0 = context0.setErrorReporter(errorCollector0);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "language version", config0, errorReporter0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test2130() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment((-2797), 15, token_CommentType0, "@/5>cd0^(}Qt Rhw");
        astRoot0.addComment(comment0);
        Context context0 = new Context();
        ErrorReporter errorReporter0 = context0.getErrorReporter();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "language version", config0, errorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test2131() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Token.CommentType token_CommentType0 = Token.CommentType.BLOCK_COMMENT;
        Comment comment0 = new Comment((-2797), 15, token_CommentType0, "@/5>cd0^(}Qt Rhw");
        astRoot0.addComment(comment0);
        Context context0 = new Context();
        ErrorReporter errorReporter0 = context0.getErrorReporter();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "language version", config0, errorReporter0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test2232() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment((-2834), 15, token_CommentType0, "@/5>cd0^(}Qt Rhw");
        astRoot0.addComment(comment0);
        astRoot0.setJsDocNode(comment0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Context context0 = new Context();
        ErrorReporter errorReporter0 = context0.setErrorReporter(errorCollector0);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "language version", config0, errorReporter0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test2233() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        Token.CommentType token_CommentType0 = Token.CommentType.JSDOC;
        Comment comment0 = new Comment((-2834), 15, token_CommentType0, "@/5>cd0^(}Qt Rhw");
        astRoot0.addComment(comment0);
        astRoot0.setJsDocNode(comment0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Context context0 = new Context();
        ErrorReporter errorReporter0 = context0.setErrorReporter(errorCollector0);
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "language version", config0, errorReporter0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2334() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("b!.}e`p", false);
        ContinueStatement continueStatement0 = new ContinueStatement(2, 14);
        astRoot0.addChild(continueStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "\n * @", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test2335() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("b!.}e`p", false);
        ContinueStatement continueStatement0 = new ContinueStatement(2, 14);
        astRoot0.addChild(continueStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "\n * @", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test2436() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        Block block0 = new Block(21, 3082);
        block0.addChildToFront(astRoot0);
        astRoot0.addChild(block0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "'26@1,x9T'", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test2537() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        Name name0 = new Name(3375);
        ContinueStatement continueStatement0 = new ContinueStatement(26, 3682, name0);
        astRoot0.addChild(continueStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("ctD]\"Lx&Zt", true);
        IRFactory.transformTree(astRoot0, simpleSourceFile0, " is not a number node", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test2638() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
        ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop();
        astRoot0.addChild(arrayComprehensionLoop0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test2739() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("", false);
        ArrayComprehensionLoop arrayComprehensionLoop0 = new ArrayComprehensionLoop();
        arrayComprehensionLoop0.setIsForEach(true);
        astRoot0.addChild(arrayComprehensionLoop0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test2840() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        FunctionNode functionNode0 = new FunctionNode();
        astRoot0.addChild(functionNode0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test2941() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("r+Z;|)0/NL}`", false);
        LabeledStatement labeledStatement0 = new LabeledStatement(4);
        astRoot0.addChild(labeledStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "r+Z;|)0/NL}`", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test3042() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(",\"qEtxy+7JESoJx", false);
        ObjectLiteral objectLiteral0 = new ObjectLiteral(2, 0);
        astRoot0.addChild(objectLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, ",\"qEtxy+7JESoJx", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3043() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(",\"qEtxy+7JESoJx", false);
        ObjectLiteral objectLiteral0 = new ObjectLiteral(2, 0);
        astRoot0.addChild(objectLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, ",\"qEtxy+7JESoJx", config0, errorCollector0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test3144() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        RegExpLiteral regExpLiteral0 = new RegExpLiteral(20);
        regExpLiteral0.setFlags("");
        regExpLiteral0.setValue("R$)");
        astRoot0.addChild(regExpLiteral0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "8UK57:!;0y!{yq", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3145() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        RegExpLiteral regExpLiteral0 = new RegExpLiteral(20);
        regExpLiteral0.setFlags("");
        regExpLiteral0.setValue("R$)");
        astRoot0.addChild(regExpLiteral0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "8UK57:!;0y!{yq", config0, errorCollector0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test3246() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        RegExpLiteral regExpLiteral0 = new RegExpLiteral();
        regExpLiteral0.setFlags("d}qzBT*");
        regExpLiteral0.setValue("2cG9]VGD}as@O<!");
        astRoot0.addChild(regExpLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("2cG9]VGD}as@O<!", true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "d}qzBT*", config0, errorCollector0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test3247() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        RegExpLiteral regExpLiteral0 = new RegExpLiteral();
        regExpLiteral0.setFlags("d}qzBT*");
        regExpLiteral0.setValue("2cG9]VGD}as@O<!");
        astRoot0.addChild(regExpLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("2cG9]VGD}as@O<!", true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "d}qzBT*", config0, errorCollector0);
        node0.isFromExterns();
    }

    @Test(timeout = 4000)
    public void test3248() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        RegExpLiteral regExpLiteral0 = new RegExpLiteral();
        regExpLiteral0.setFlags("d}qzBT*");
        regExpLiteral0.setValue("2cG9]VGD}as@O<!");
        astRoot0.addChild(regExpLiteral0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("2cG9]VGD}as@O<!", true);
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "d}qzBT*", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3349() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ReturnStatement returnStatement0 = new ReturnStatement(12);
        astRoot0.addChild(returnStatement0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3350() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        ReturnStatement returnStatement0 = new ReturnStatement(12);
        astRoot0.addChild(returnStatement0);
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3451() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        StringLiteral stringLiteral0 = new StringLiteral(6, 0);
        stringLiteral0.setValue("DZSP ,R@f7P");
        astRoot0.addChild(stringLiteral0);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, (String) null, config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test3552() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("03)7)", true);
        SwitchCase switchCase0 = new SwitchCase(140);
        astRoot0.addChild(switchCase0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "language version", config0, errorCollector0);
        node0.isFromExterns();
    }

    @Test(timeout = 4000)
    public void test3553() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("03)7)", true);
        SwitchCase switchCase0 = new SwitchCase(140);
        astRoot0.addChild(switchCase0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "language version", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3554() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile("03)7)", true);
        SwitchCase switchCase0 = new SwitchCase(140);
        astRoot0.addChild(switchCase0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, simpleSourceFile0, "language version", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3655() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration();
        astRoot0.addChild(variableDeclaration0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3656() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration();
        astRoot0.addChild(variableDeclaration0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.getType();
    }

    @Test(timeout = 4000)
    public void test3757() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration();
        astRoot0.addChild(variableDeclaration0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.getLength();
    }

    @Test(timeout = 4000)
    public void test3758() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        VariableDeclaration variableDeclaration0 = new VariableDeclaration();
        astRoot0.addChild(variableDeclaration0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        Node node0 = IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
        node0.isScript();
    }

    @Test(timeout = 4000)
    public void test3859() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        InfixExpression infixExpression0 = new InfixExpression(14, astRoot0, astRoot0, 15);
        astRoot0.addChild(infixExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, (String) null, config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test3960() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        IfStatement ifStatement0 = new IfStatement(4, 124);
        InfixExpression infixExpression0 = new InfixExpression(15, ifStatement0, astRoot0, 5);
        astRoot0.addChild(infixExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test4061() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        InfixExpression infixExpression0 = new InfixExpression(22, astRoot0, astRoot0, 15);
        astRoot0.addChild(infixExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "Catch clauses are not supported", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test4162() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        InfixExpression infixExpression0 = new InfixExpression(23, astRoot0, astRoot0, 14);
        astRoot0.addChild(infixExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "com.google.javascript.jscomp.parsing.IRFactory$TransformDispatcher", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test4263() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        InfixExpression infixExpression0 = new InfixExpression(25, astRoot0, astRoot0, 4);
        astRoot0.addChild(infixExpression0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5_STRICT;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "s{My/d:0^", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test4364() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        SimpleSourceFile simpleSourceFile0 = new SimpleSourceFile(",\"qEtxy+7JESoJx", false);
        FunctionCall functionCall0 = new FunctionCall((-2744));
        astRoot0.addChild(functionCall0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT3;
        Config config0 = new Config(treeSet0, treeSet0, false, config_LanguageMode0, false);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, simpleSourceFile0, "s+", config0, errorCollector0);
    }

    @Test(timeout = 4000)
    public void test4465() throws Throwable {
        AstRoot astRoot0 = new AstRoot();
        ExpressionStatement expressionStatement0 = new ExpressionStatement(astRoot0, true);
        astRoot0.addChild(expressionStatement0);
        TreeSet<String> treeSet0 = new TreeSet<String>();
        Config.LanguageMode config_LanguageMode0 = Config.LanguageMode.ECMASCRIPT5;
        Config config0 = new Config(treeSet0, treeSet0, true, config_LanguageMode0, true);
        ErrorCollector errorCollector0 = new ErrorCollector();
        IRFactory.transformTree(astRoot0, (StaticSourceFile) null, "R$)", config0, errorCollector0);
    }
}
