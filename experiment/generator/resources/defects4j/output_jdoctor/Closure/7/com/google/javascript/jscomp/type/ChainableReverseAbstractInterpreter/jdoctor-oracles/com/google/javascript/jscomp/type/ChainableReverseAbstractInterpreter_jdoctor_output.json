[
  {
    "signature": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter(com.google.javascript.jscomp.CodingConvention convention, com.google.javascript.rhino.jstype.JSTypeRegistry typeRegistry)",
    "name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.CodingConvention",
          "name": "CodingConvention",
          "isArray": false
        },
        "name": "convention"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSTypeRegistry",
          "name": "JSTypeRegistry",
          "isArray": false
        },
        "name": "typeRegistry"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "append(com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter lastLink)",
    "name": "append",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
          "name": "ChainableReverseAbstractInterpreter",
          "isArray": false
        },
        "name": "lastLink"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
            "name": "ChainableReverseAbstractInterpreter",
            "isArray": false
          },
          "name": "lastLink"
        },
        "comment": "a chainable interpreter. lastLink is with no next link.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the updated last link.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getFirst()",
    "name": "getFirst",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "firstPreciserScopeKnowingConditionOutcome(com.google.javascript.rhino.Node condition, com.google.javascript.jscomp.type.FlowScope blindScope, boolean outcome)",
    "name": "firstPreciserScopeKnowingConditionOutcome",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.type.FlowScope",
      "name": "com.google.javascript.jscomp.type.FlowScope",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "condition"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.type.FlowScope",
          "name": "FlowScope",
          "isArray": false
        },
        "name": "blindScope"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "outcome"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "nextPreciserScopeKnowingConditionOutcome(com.google.javascript.rhino.Node condition, com.google.javascript.jscomp.type.FlowScope blindScope, boolean outcome)",
    "name": "nextPreciserScopeKnowingConditionOutcome",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.jscomp.type.FlowScope",
      "name": "com.google.javascript.jscomp.type.FlowScope",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "condition"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.type.FlowScope",
          "name": "FlowScope",
          "isArray": false
        },
        "name": "blindScope"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "outcome"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getTypeIfRefinable(com.google.javascript.rhino.Node node, com.google.javascript.jscomp.type.FlowScope scope)",
    "name": "getTypeIfRefinable",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
      "name": "com.google.javascript.rhino.jstype.JSType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.type.FlowScope",
          "name": "FlowScope",
          "isArray": false
        },
        "name": "scope"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "The current type of the node if type can be refined, null otherwise.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "declareNameInScope(com.google.javascript.jscomp.type.FlowScope scope, com.google.javascript.rhino.Node node, com.google.javascript.rhino.jstype.JSType type)",
    "name": "declareNameInScope",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.type.FlowScope",
          "name": "FlowScope",
          "isArray": false
        },
        "name": "scope"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "node"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRestrictedWithoutUndefined(com.google.javascript.rhino.jstype.JSType type)",
    "name": "getRestrictedWithoutUndefined",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
      "name": "com.google.javascript.rhino.jstype.JSType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRestrictedWithoutNull(com.google.javascript.rhino.jstype.JSType type)",
    "name": "getRestrictedWithoutNull",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
      "name": "com.google.javascript.rhino.jstype.JSType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getRestrictedByTypeOfResult(com.google.javascript.rhino.jstype.JSType type, java.lang.String value, boolean resultEqualsValue)",
    "name": "getRestrictedByTypeOfResult",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
      "name": "com.google.javascript.rhino.jstype.JSType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
          "name": "JSType",
          "isArray": false
        },
        "name": "type"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "value"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "resultEqualsValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
            "name": "JSType",
            "isArray": false
          },
          "name": "type"
        },
        "comment": "the type to restrict.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "A value known to be equal or not equal to the result of the typeof operation.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "resultEqualsValue"
        },
        "comment": "@code true} if the typeOf result is known to equal value. resultEqualsValue is false if typeOf is known not to equal value.",
        "kind": "PARAM",
        "condition": "args[2]==false"
      }
    ],
    "returnTag": {
      "comment": "the restricted type or null if no version of the type matches the restriction.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getNativeType(com.google.javascript.rhino.jstype.JSTypeNative typeId)",
    "name": "getNativeType",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
      "name": "ChainableReverseAbstractInterpreter",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.jstype.JSType",
      "name": "com.google.javascript.rhino.jstype.JSType",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.jstype.JSTypeNative",
          "name": "JSTypeNative",
          "isArray": false
        },
        "name": "typeId"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  }
]