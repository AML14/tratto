/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 04 04:59:56 GMT 2023
 */
package com.google.javascript.jscomp;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.javascript.jscomp.AbstractCompiler;
import com.google.javascript.jscomp.Compiler;
import com.google.javascript.jscomp.ControlFlowAnalysis;
import com.google.javascript.jscomp.ControlFlowGraph;
import com.google.javascript.jscomp.NodeTraversal;
import com.google.javascript.jscomp.ScopeCreator;
import com.google.javascript.jscomp.SyntheticAst;
import com.google.javascript.rhino.Node;
import com.google.javascript.rhino.ScriptOrFnNode;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class ControlFlowAnalysis_ESTest extends ControlFlowAnalysis_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode(")c61O2+/IQN!=MR-2");
        Node node1 = new Node(119, node0, node0, node0, 23, 36);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Node node0 = new Node(127, 127, 127);
        Node node1 = new Node(49, node0, node0, 16, 43);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode(")|6OO2/NkM2");
        Node node1 = new Node(112, node0, node0, node0, 23, 29);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node1, node1);
        node0.equals((Object) node1);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        ControlFlowGraph<Node> controlFlowGraph0 = controlFlowAnalysis0.getCfg();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Node node0 = new Node((-42));
        Node node1 = new Node(120, node0, node0, 14, 33);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, controlFlowAnalysis0);
        controlFlowAnalysis0.visit(nodeTraversal0, node1, node0);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Node node0 = new Node(103);
        Node node1 = new Node(105, node0, node0, 12, 29);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode(")c61O2+/IQN!=MR-2", ")c61O2+/IQN!=MR-2");
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        Node node1 = new Node(4, node0, node0, node0, node0, 49, 48);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode(")c61OO2+/IN!=M2");
        Node node1 = new Node(110, node0, node0, node0, 23, 29);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(72);
        Node node1 = new Node(111, node0, node0, 4095, 25);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        node0.addChildrenToFront(node1);
        controlFlowAnalysis0.process(node1, node0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Node node0 = new Node(117);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
        node0.addChildrenToFront(node0);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Node node0 = new Node(117, 117, 117);
        Node node1 = new Node(118, node0, node0, node0, 39, 19);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, true);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Compiler compiler0 = new Compiler();
        SyntheticAst syntheticAst0 = new SyntheticAst("`{,s8u`5e* '8 v");
        Node node0 = syntheticAst0.getAstRoot(compiler0);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        Node node1 = new Node(120, node0, node0, 18, 14);
        controlFlowAnalysis0.process(node0, node0);
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, controlFlowAnalysis0, (ScopeCreator) null);
        boolean boolean0 = controlFlowAnalysis0.shouldTraverse(nodeTraversal0, node0, node1);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Node node0 = new Node(2337);
        Node node1 = new Node(126, node0, node0, 16, 43);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Node node0 = new Node((-2433));
        Node node1 = new Node((-2433));
        Node node2 = new Node(115, node0, node1, 12, 29);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node1, node2);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode(")c6OO2/N!M2");
        Node node1 = compiler0.parseTestCode(")c6OO2/N!M2");
        Node node2 = new Node(108, node1, node0, node0, 23, 29);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node2, node2);
    }

    @Test(timeout = 4000)
    public void test1616() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("a[iBL");
        Node node1 = compiler0.parseSyntheticCode("S#xm,}_");
        Node node2 = new Node(114, node0, node0, node1, 9, 1991);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node2, node2);
    }

    @Test(timeout = 4000)
    public void test1717() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode(")c61OO2+/IN!=M2");
        Node node1 = compiler0.parseTestCode(")c61OO2+/IN!=M2");
        Node node2 = new Node(110, node1, node0, node0, 23, 29);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node2, node2);
    }

    @Test(timeout = 4000)
    public void test1818() throws Throwable {
        Node node0 = new Node(59);
        Node node1 = new Node(59);
        Node node2 = new Node(105, node0, node1, 12, 29);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
        controlFlowAnalysis0.process(node1, node1);
        NodeTraversal nodeTraversal0 = new NodeTraversal((AbstractCompiler) null, controlFlowAnalysis0);
        boolean boolean0 = controlFlowAnalysis0.shouldTraverse(nodeTraversal0, node0, node2);
    }

    @Test(timeout = 4000)
    public void test1919() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("left");
        Node node1 = compiler0.parseSyntheticCode("left");
        Node node2 = new Node(77, node1, node1, node0, 44, 33);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node1, node2);
    }

    @Test(timeout = 4000)
    public void test2020() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("com.google.Mavascript.jscomp.ControlFlo!AnalysisAstControlFlowGraph$2");
        Node node1 = compiler0.parseSyntheticCode("com.google.Mavascript.jscomp.ControlFlo!AnalysisAstControlFlowGraph$2");
        Node node2 = new Node(77, node1, node1, node0, 4095, 26);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node2, node1);
        controlFlowAnalysis0.shouldTraverse((NodeTraversal) null, node0, node2);
    }

    @Test(timeout = 4000)
    public void test2121() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        NodeTraversal nodeTraversal0 = new NodeTraversal(compiler0, controlFlowAnalysis0);
        controlFlowAnalysis0.visit(nodeTraversal0, node0, node0);
    }

    @Test(timeout = 4000)
    public void test2222() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("h?\"");
        Node node1 = compiler0.parseTestCode("h?\"");
        Node node2 = Node.newString(111, ";]$");
        Node node3 = new Node(77, node0, node1, node2, 115, 108);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process((Node) null, node3);
    }

    @Test(timeout = 4000)
    public void test2323() throws Throwable {
        Node node0 = new Node(103);
        Node node1 = new Node(105, node0, node0, 12, 29);
        Compiler compiler0 = new Compiler();
        Node node2 = compiler0.parseSyntheticCode("*", "$iA6vY&QS5:dbf;~Ck1");
        node2.addChildToFront(node1);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node2, node2);
        node2.hasChildren();
    }

    @Test(timeout = 4000)
    public void test2424() throws Throwable {
        Compiler compiler0 = new Compiler();
        ScriptOrFnNode scriptOrFnNode0 = (ScriptOrFnNode) compiler0.parseTestCode("left");
        Node node0 = new Node(111, scriptOrFnNode0, scriptOrFnNode0, scriptOrFnNode0, 44, 421);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(scriptOrFnNode0, scriptOrFnNode0);
    }

    @Test(timeout = 4000)
    public void test2525() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode(")c6OO2/N!=M2");
        Node node1 = new Node(1, node0, node0, node0, 23, 29);
        node0.setIsSyntheticBlock(true);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node1, node0);
    }

    @Test(timeout = 4000)
    public void test2626() throws Throwable {
        Node node0 = new Node(116);
        Node node1 = new Node(115, node0, node0, node0, 0, 17);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node1, node0);
    }

    @Test(timeout = 4000)
    public void test2727() throws Throwable {
        Node node0 = new Node(117);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test2828() throws Throwable {
        Node node0 = new Node(117);
        Node node1 = new Node(115, node0, node0, node0, 39, 19);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test2929() throws Throwable {
        Node node0 = new Node(4, 4, 4);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test3030() throws Throwable {
        Node node0 = new Node(103);
        Node node1 = new Node(103);
        Node node2 = new Node(111, node0, node1, 12, 29);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node2, node2);
    }

    @Test(timeout = 4000)
    public void test3131() throws Throwable {
        Node node0 = new Node((-49));
        Compiler compiler0 = new Compiler();
        Node node1 = compiler0.parseSyntheticCode("X+sOheCa^^\"6r$N", "X+sOheCa^^\"6r$N");
        Node node2 = new Node(113, node1, node0, node0, 30, 11);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node1, node2);
        node1.equals((Object) node2);
    }

    @Test(timeout = 4000)
    public void test3232() throws Throwable {
        Node node0 = new Node(103, 103, 103);
        Node node1 = new Node(103, 103, 103);
        Node node2 = new Node(4095, node0, node1, 2, 42);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node0, node2);
    }

    @Test(timeout = 4000)
    public void test3333() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph$2");
        Node node1 = new Node(77, node0, node0, node0, 36, 10);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test3434() throws Throwable {
        Node node0 = new Node(116, 116, 116);
        MockFile mockFile0 = new MockFile("XGfS;N+tJG", "XGfS;N+tJG");
        MockPrintStream mockPrintStream0 = new MockPrintStream(mockFile0);
        Compiler compiler0 = new Compiler(mockPrintStream0);
        Node node1 = compiler0.parseSyntheticCode("com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph$2", "com.google.javascript.jscomp.ControlFlowAnalysis$AstControlFlowGraph$2");
        Node node2 = Node.newString("XGfS;N+tJG", 26, 98);
        node0.addChildToFront(node2);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node1, node0);
    }

    @Test(timeout = 4000)
    public void test3535() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode(")c61OO2+/IQN!=M2", ")c61OO2+/IQN!=M2");
        Node node1 = new Node(30, node0, node0, node0, 23, (-539));
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, true);
        controlFlowAnalysis0.process(node0, node1);
    }

    @Test(timeout = 4000)
    public void test3636() throws Throwable {
        Node node0 = new Node(35);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test3737() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = new Node(37, 37, 37);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test3838() throws Throwable {
        Node node0 = new Node(86, 86, 86);
        Compiler compiler0 = new Compiler();
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node0, node0);
    }

    @Test(timeout = 4000)
    public void test3939() throws Throwable {
        Node node0 = new Node(1899);
        Node node1 = new Node(102, node0, node0, node0, 6, 4095);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
        controlFlowAnalysis0.process(node0, node1);
        node0.isSyntheticBlock();
    }

    @Test(timeout = 4000)
    public void test4040() throws Throwable {
        Node node0 = new Node(105, 105, 105);
        Node node1 = new Node(42, node0, node0, node0, 19, (-1542));
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis((AbstractCompiler) null, false);
        controlFlowAnalysis0.process(node1, node1);
        node1.getType();
    }

    @Test(timeout = 4000)
    public void test4141() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseTestCode("com.google.javascript.jsomp.CotrolFlAnalysis$AstControlFlowGraph$2");
        Node node1 = new Node(0, node0, node0, node0, 36, 10);
        ControlFlowAnalysis controlFlowAnalysis0 = new ControlFlowAnalysis(compiler0, false);
        controlFlowAnalysis0.process(node1, node1);
    }

    @Test(timeout = 4000)
    public void test4242() throws Throwable {
        Node node0 = new Node(77);
        boolean boolean0 = ControlFlowAnalysis.isBreakStructure(node0, false);
    }

    @Test(timeout = 4000)
    public void test4343() throws Throwable {
        Node node0 = new Node(103, 103, 103);
        Node node1 = new Node(108, node0, node0, 124, 1);
        boolean boolean0 = ControlFlowAnalysis.isBreakStructure(node1, false);
    }

    @Test(timeout = 4000)
    public void test4444() throws Throwable {
        Node node0 = new Node(110);
        boolean boolean0 = ControlFlowAnalysis.isBreakStructure(node0, false);
    }

    @Test(timeout = 4000)
    public void test4545() throws Throwable {
        Node node0 = new Node(704);
        Node node1 = new Node(113, node0, node0, (-55), 43);
        boolean boolean0 = ControlFlowAnalysis.isBreakStructure(node1, false);
    }

    @Test(timeout = 4000)
    public void test4646() throws Throwable {
        Node node0 = new Node(114);
        boolean boolean0 = ControlFlowAnalysis.isBreakStructure(node0, false);
    }

    @Test(timeout = 4000)
    public void test4747() throws Throwable {
        Compiler compiler0 = new Compiler();
        Node node0 = compiler0.parseSyntheticCode(")c61O2+/IQN!=MR-2", ")c61O2+/IQN!=MR-2");
        boolean boolean0 = ControlFlowAnalysis.isBreakStructure(node0, true);
    }

    @Test(timeout = 4000)
    public void test4848() throws Throwable {
        Node node0 = new Node(113, 113, 113);
        boolean boolean0 = ControlFlowAnalysis.isContinueStructure(node0);
    }

    @Test(timeout = 4000)
    public void test4949() throws Throwable {
        Node node0 = new Node(114);
        boolean boolean0 = ControlFlowAnalysis.isContinueStructure(node0);
    }
}
