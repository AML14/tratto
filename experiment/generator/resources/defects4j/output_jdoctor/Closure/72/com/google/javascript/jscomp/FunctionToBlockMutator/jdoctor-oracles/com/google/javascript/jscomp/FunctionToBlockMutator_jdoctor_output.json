[
  {
    "signature": "com.google.javascript.jscomp.FunctionToBlockMutator(com.google.javascript.jscomp.AbstractCompiler compiler, com.google.common.base.Supplier<java.lang.String> safeNameIdSupplier)",
    "name": "com.google.javascript.jscomp.FunctionToBlockMutator",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionToBlockMutator",
      "name": "FunctionToBlockMutator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionToBlockMutator",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.google.javascript.jscomp.AbstractCompiler",
          "name": "AbstractCompiler",
          "isArray": false
        },
        "name": "compiler"
      },
      {
        "type": {
          "qualifiedName": "com.google.common.base.Supplier",
          "name": "Supplier",
          "isArray": false
        },
        "name": "safeNameIdSupplier"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "mutate(java.lang.String fnName, com.google.javascript.rhino.Node fnNode, com.google.javascript.rhino.Node callNode, java.lang.String resultName, boolean needsDefaultResult, boolean isCallInLoop)",
    "name": "mutate",
    "containingClass": {
      "qualifiedName": "com.google.javascript.jscomp.FunctionToBlockMutator",
      "name": "FunctionToBlockMutator",
      "isArray": false
    },
    "targetClass": "com.google.javascript.jscomp.FunctionToBlockMutator",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.google.javascript.rhino.Node",
      "name": "com.google.javascript.rhino.Node",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "fnName"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "fnNode"
      },
      {
        "type": {
          "qualifiedName": "com.google.javascript.rhino.Node",
          "name": "Node",
          "isArray": false
        },
        "name": "callNode"
      },
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "resultName"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "needsDefaultResult"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "isCallInLoop"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "fnName"
        },
        "comment": "The name to use when preparing human readable names.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "fnNode"
        },
        "comment": "The function to prepare.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.google.javascript.rhino.Node",
            "name": "Node",
            "isArray": false
          },
          "name": "callNode"
        },
        "comment": "The call node that . callNode is replaced.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "resultName"
        },
        "comment": "Function results should be assigned to this name.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "needsDefaultResult"
        },
        "comment": "Whether the result value . needsDefaultResult is set.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "boolean",
            "name": "boolean",
            "isArray": false
          },
          "name": "isCallInLoop"
        },
        "comment": "Whether the function body . isCallInLoop is prepared to be injected into the body of a loop.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "A clone of the function body mutated to be suitable for injection as a statement into another code block.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]