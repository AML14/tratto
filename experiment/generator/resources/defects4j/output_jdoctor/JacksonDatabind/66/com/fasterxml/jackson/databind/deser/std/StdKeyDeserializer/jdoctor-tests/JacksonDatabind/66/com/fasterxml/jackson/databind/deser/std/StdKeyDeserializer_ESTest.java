/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 28 05:59:43 GMT 2024
 */
package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.node.TextNode;
import com.fasterxml.jackson.databind.util.EnumResolver;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.net.URI;
import java.net.URL;
import java.time.chrono.ChronoLocalDate;
import java.util.Calendar;
import java.util.Currency;
import java.util.Date;
import java.util.Locale;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.util.MockGregorianCalendar;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StdKeyDeserializer_ESTest extends StdKeyDeserializer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Class<MockGregorianCalendar> class0 = MockGregorianCalendar.class;
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, (JsonDeserializer<?>) null);
        Class<?> class1 = stdKeyDeserializer_DelegatingKD0.getKeyClass();
        class1.isArray();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Class<Long> class0 = Long.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0._parse("com.fasterxml.jackson.databind.deser.impl.ExternalTypeHandler", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Class<Double> class0 = Double.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("{^gB??b@C(", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test033() throws Throwable {
        Class<String> class0 = String.class;
        StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
        Class<?> class1 = stdKeyDeserializer_StringKD0.getKeyClass();
        class1.getModifiers();
    }

    @Test(timeout = 4000)
    public void test044() throws Throwable {
        Class<Double> class0 = Double.class;
        StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
        Object object0 = stdKeyDeserializer_StringKD0.deserializeKey("1)>:8", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test055() throws Throwable {
        Class<JsonFormat.Feature> class0 = JsonFormat.Feature.class;
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        EnumResolver enumResolver0 = EnumResolver.constructUnsafe(class0, annotationIntrospector0);
        StdKeyDeserializer.EnumKD stdKeyDeserializer_EnumKD0 = new StdKeyDeserializer.EnumKD(enumResolver0, (AnnotatedMethod) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Object object0 = stdKeyDeserializer_EnumKD0.deserializeKey("WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED", defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test066() throws Throwable {
        StdKeyDeserializer.StringCtorKeyDeserializer stdKeyDeserializer_StringCtorKeyDeserializer0 = null;
        stdKeyDeserializer_StringCtorKeyDeserializer0 = new StdKeyDeserializer.StringCtorKeyDeserializer((Constructor<?>) null);
    }

    @Test(timeout = 4000)
    public void test077() throws Throwable {
        StdKeyDeserializer.StringFactoryKeyDeserializer stdKeyDeserializer_StringFactoryKeyDeserializer0 = null;
        stdKeyDeserializer_StringFactoryKeyDeserializer0 = new StdKeyDeserializer.StringFactoryKeyDeserializer((Method) null);
    }

    @Test(timeout = 4000)
    public void test088() throws Throwable {
        Class<String> class0 = String.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    }

    @Test(timeout = 4000)
    public void test099() throws Throwable {
        Class<Object> class0 = Object.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    }

    @Test(timeout = 4000)
    public void test1010() throws Throwable {
        Class<UUID> class0 = UUID.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0._parse(")cV;K}C", (DeserializationContext) null);
        object0.toString();
    }

    @Test(timeout = 4000)
    public void test1111() throws Throwable {
        Class<Integer> class0 = Integer.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("\nRequest payload : ", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1212() throws Throwable {
        Class<Date> class0 = Date.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("~", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1313() throws Throwable {
        Class<Calendar> class0 = Calendar.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("]f{'", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1414() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0._parse("fIVQeWH7TS]IO='", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1515() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    }

    @Test(timeout = 4000)
    public void test1516() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("0", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey(") to output", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1719() throws Throwable {
        Class<Float> class0 = Float.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey(")", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1820() throws Throwable {
        Class<Locale> class0 = Locale.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Locale locale0 = (Locale) stdKeyDeserializer0.deserializeKey("<P", (DeserializationContext) null);
        locale0.getCountry();
    }

    @Test(timeout = 4000)
    public void test1921() throws Throwable {
        Class<URI> class0 = URI.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("rhoM\"nmL", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2022() throws Throwable {
        Class<URL> class0 = URL.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0._parse("~4]tl2E7U>UK>XDq", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2123() throws Throwable {
        Class<Currency> class0 = Currency.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("Eg", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2224() throws Throwable {
        Class<MockGregorianCalendar> class0 = MockGregorianCalendar.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    }

    @Test(timeout = 4000)
    public void test2325() throws Throwable {
        Class<Double> class0 = Double.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey((String) null, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2426() throws Throwable {
        Class<JsonFormat.Feature> class0 = JsonFormat.Feature.class;
        FromStringDeserializer<Currency> fromStringDeserializer0 = (FromStringDeserializer<Currency>) mock(FromStringDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(fromStringDeserializer0)._deserialize(anyString(), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(9, class0, fromStringDeserializer0);
        stdKeyDeserializer0.deserializeKey("HA|A:>5kX*~@4", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2527() throws Throwable {
        Class<TextNode> class0 = TextNode.class;
        FromStringDeserializer<Currency> fromStringDeserializer0 = (FromStringDeserializer<Currency>) mock(FromStringDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(fromStringDeserializer0)._deserialize(anyString(), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(9, class0, fromStringDeserializer0);
        stdKeyDeserializer0.deserializeKey("$XpF+#", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2628() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Class<Character> class0 = Character.TYPE;
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(1, class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("false", defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test2729() throws Throwable {
        Class<ChronoLocalDate> class0 = ChronoLocalDate.class;
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(15, class0);
        stdKeyDeserializer0.deserializeKey("can only convert 1-character Strings", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2830() throws Throwable {
        Class<Integer> class0 = Integer.class;
        StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
        stdKeyDeserializer_StringKD0._parse((String) null, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2931() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(1, class0);
        Object object0 = stdKeyDeserializer0._parse("true", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3032() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("-1496", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3133() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("597", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3234() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("0", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3335() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("87897", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3436() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3537() throws Throwable {
        Class<String> class0 = String.class;
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, (JsonDeserializer<?>) null);
        Object object0 = stdKeyDeserializer_DelegatingKD0.deserializeKey((String) null, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3638() throws Throwable {
        Class<String> class0 = String.class;
        JsonDeserializer<Locale> jsonDeserializer0 = (JsonDeserializer<Locale>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Object) null).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, jsonDeserializer0);
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        stdKeyDeserializer_DelegatingKD0.deserializeKey(",YyP:gr3n", defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test3739() throws Throwable {
        Class<String> class0 = String.class;
        Locale locale0 = Locale.UK;
        JsonDeserializer<Locale> jsonDeserializer0 = (JsonDeserializer<Locale>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn(locale0).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, jsonDeserializer0);
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Locale locale1 = (Locale) stdKeyDeserializer_DelegatingKD0.deserializeKey(",YyP:gr3n", defaultDeserializationContext_Impl0);
        locale1.getLanguage();
    }

    @Test(timeout = 4000)
    public void test3840() throws Throwable {
        Class<JsonFormat.Feature> class0 = JsonFormat.Feature.class;
        AnnotationIntrospector annotationIntrospector0 = AnnotationIntrospector.nopInstance();
        EnumResolver enumResolver0 = EnumResolver.constructUnsafe(class0, annotationIntrospector0);
        StdKeyDeserializer.EnumKD stdKeyDeserializer_EnumKD0 = new StdKeyDeserializer.EnumKD(enumResolver0, (AnnotatedMethod) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        stdKeyDeserializer_EnumKD0.deserializeKey("!Pl+p>s", defaultDeserializationContext_Impl0);
    }
}
