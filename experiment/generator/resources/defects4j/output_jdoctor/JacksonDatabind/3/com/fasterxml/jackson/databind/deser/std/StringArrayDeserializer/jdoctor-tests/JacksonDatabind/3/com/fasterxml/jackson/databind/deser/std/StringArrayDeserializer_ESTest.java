/*
 * This file was automatically generated by EvoSuite
 * Wed Mar 27 23:03:41 GMT 2024
 */
package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.std.StringArrayDeserializer;
import com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.BigIntegerNode;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import com.fasterxml.jackson.databind.node.ValueNode;
import java.io.InputStream;
import java.math.BigInteger;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StringArrayDeserializer_ESTest extends StringArrayDeserializer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper();
        JsonParser jsonParser0 = jsonFactory0.createParser("JSON");
        DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
        stringArrayDeserializer0.deserializeWithType(jsonParser0, deserializationContext0, (TypeDeserializer) null);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StringArrayDeserializer stringArrayDeserializer1 = new StringArrayDeserializer(stringArrayDeserializer0);
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializationFeature deserializationFeature0 = DeserializationFeature.UNWRAP_SINGLE_VALUE_ARRAYS;
        DeserializationFeature[] deserializationFeatureArray0 = new DeserializationFeature[9];
        deserializationFeatureArray0[0] = deserializationFeature0;
        deserializationFeatureArray0[1] = deserializationFeature0;
        deserializationFeatureArray0[2] = deserializationFeature0;
        deserializationFeatureArray0[3] = deserializationFeature0;
        deserializationFeatureArray0[4] = deserializationFeatureArray0[3];
        deserializationFeatureArray0[5] = deserializationFeature0;
        deserializationFeatureArray0[6] = deserializationFeature0;
        deserializationFeatureArray0[7] = deserializationFeature0;
        deserializationFeatureArray0[8] = deserializationFeature0;
        ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0, deserializationFeatureArray0);
        JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(true);
        ArrayNode arrayNode0 = jsonNodeFactory0.arrayNode();
        ValueNode valueNode0 = arrayNode0.numberNode((Long) null);
        JsonParser jsonParser0 = objectReader0.treeAsTokens(valueNode0);
        stringArrayDeserializer1._deserializeCustom(jsonParser0, defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StringArrayDeserializer stringArrayDeserializer1 = new StringArrayDeserializer(stringArrayDeserializer0);
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
        JsonParser jsonParser0 = arrayNode0.traverse();
        StringArrayDeserializer stringArrayDeserializer2 = new StringArrayDeserializer(stringArrayDeserializer1);
        stringArrayDeserializer2._deserializeCustom(jsonParser0, defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StringArrayDeserializer stringArrayDeserializer1 = new StringArrayDeserializer(stringArrayDeserializer0);
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
        BigInteger bigInteger0 = BigInteger.ONE;
        BigIntegerNode bigIntegerNode0 = new BigIntegerNode(bigInteger0);
        ArrayNode arrayNode1 = arrayNode0.insert(3848, (JsonNode) bigIntegerNode0);
        JsonParser jsonParser0 = arrayNode1.traverse();
        stringArrayDeserializer1._deserializeCustom(jsonParser0, defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        StringArrayDeserializer stringArrayDeserializer0 = new StringArrayDeserializer();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        StringArrayDeserializer stringArrayDeserializer1 = new StringArrayDeserializer(stringArrayDeserializer0);
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
        arrayNode0.insert(1669, (JsonNode) null);
        JsonParser jsonParser0 = arrayNode0.traverse();
        stringArrayDeserializer1._deserializeCustom(jsonParser0, defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        StringArrayDeserializer stringArrayDeserializer0 = StringArrayDeserializer.instance;
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser((InputStream) null);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        stringArrayDeserializer0._deserializeCustom(jsonParser0, defaultDeserializationContext_Impl0);
    }
}
