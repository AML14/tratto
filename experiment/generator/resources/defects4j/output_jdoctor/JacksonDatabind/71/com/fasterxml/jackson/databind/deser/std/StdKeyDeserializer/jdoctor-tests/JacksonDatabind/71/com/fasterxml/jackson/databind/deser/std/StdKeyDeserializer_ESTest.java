/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 28 06:27:02 GMT 2024
 */
package com.fasterxml.jackson.databind.deser.std;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.databind.DeserializationConfig;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.InjectableValues;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.cfg.BaseSettings;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
import com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
import com.fasterxml.jackson.databind.introspect.SimpleMixInResolver;
import com.fasterxml.jackson.databind.jsontype.SubtypeResolver;
import com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
import com.fasterxml.jackson.databind.module.SimpleModule;
import com.fasterxml.jackson.databind.node.ShortNode;
import com.fasterxml.jackson.databind.util.EnumResolver;
import com.fasterxml.jackson.databind.util.RootNameLookup;
import java.io.IOException;
import java.lang.reflect.Constructor;
import java.lang.reflect.Method;
import java.net.URI;
import java.net.URL;
import java.time.format.TextStyle;
import java.util.Calendar;
import java.util.Currency;
import java.util.Date;
import java.util.Locale;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class StdKeyDeserializer_ESTest extends StdKeyDeserializer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test000() throws Throwable {
        Class<Calendar> class0 = Calendar.class;
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, (JsonDeserializer<?>) null);
        Class<?> class1 = stdKeyDeserializer_DelegatingKD0.getKeyClass();
        class1.isPrimitive();
    }

    @Test(timeout = 4000)
    public void test011() throws Throwable {
        Class<URL> class0 = URL.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("\"aS", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test022() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("6", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test034() throws Throwable {
        Class<Long> class0 = Long.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("A^WsIn2+b`ow<", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test045() throws Throwable {
        Class<Double> class0 = Double.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("y,x:cRCbsP;n", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test056() throws Throwable {
        Class<Calendar> class0 = Calendar.class;
        StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
        Class<?> class1 = stdKeyDeserializer_StringKD0.getKeyClass();
    }

    @Test(timeout = 4000)
    public void test057() throws Throwable {
        Class<Calendar> class0 = Calendar.class;
        StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
        Class<?> class1 = stdKeyDeserializer_StringKD0.getKeyClass();
        class1.getModifiers();
    }

    @Test(timeout = 4000)
    public void test068() throws Throwable {
        Class<String> class0 = String.class;
        StdKeyDeserializer.StringKD stdKeyDeserializer_StringKD0 = StdKeyDeserializer.StringKD.forType(class0);
        Object object0 = stdKeyDeserializer_StringKD0.deserializeKey((String) null, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test079() throws Throwable {
        StdKeyDeserializer.StringCtorKeyDeserializer stdKeyDeserializer_StringCtorKeyDeserializer0 = null;
        stdKeyDeserializer_StringCtorKeyDeserializer0 = new StdKeyDeserializer.StringCtorKeyDeserializer((Constructor<?>) null);
    }

    @Test(timeout = 4000)
    public void test0810() throws Throwable {
        StdKeyDeserializer.StringFactoryKeyDeserializer stdKeyDeserializer_StringFactoryKeyDeserializer0 = null;
        stdKeyDeserializer_StringFactoryKeyDeserializer0 = new StdKeyDeserializer.StringFactoryKeyDeserializer((Method) null);
    }

    @Test(timeout = 4000)
    public void test0911() throws Throwable {
        Class<String> class0 = String.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    }

    @Test(timeout = 4000)
    public void test1012() throws Throwable {
        Class<Object> class0 = Object.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    }

    @Test(timeout = 4000)
    public void test1113() throws Throwable {
        Class<UUID> class0 = UUID.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        UUID uUID0 = (UUID) stdKeyDeserializer0.deserializeKey("6", (DeserializationContext) null);
        uUID0.getLeastSignificantBits();
    }

    @Test(timeout = 4000)
    public void test1214() throws Throwable {
        Class<Integer> class0 = Integer.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0._parse("unable to parse key as Class", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1315() throws Throwable {
        Class<Date> class0 = Date.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1416() throws Throwable {
        Class<Calendar> class0 = Calendar.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("6", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1517() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("}1d3(?=D%i", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1618() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    }

    @Test(timeout = 4000)
    public void test1619() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("h", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1721() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey("6", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1823() throws Throwable {
        Class<Float> class0 = Float.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey(":00.000", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test1924() throws Throwable {
        Class<URI> class0 = URI.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0._parse("QZ+AE{Dx@ko6i", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2025() throws Throwable {
        Class<Locale> class0 = Locale.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Locale locale0 = (Locale) stdKeyDeserializer0.deserializeKey("was expecting either '*' or '/' for a comment", (DeserializationContext) null);
        locale0.getISO3Country();
    }

    @Test(timeout = 4000)
    public void test2126() throws Throwable {
        Class<Currency> class0 = Currency.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0.deserializeKey((String) null, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2227() throws Throwable {
        Class<ShortNode> class0 = ShortNode.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
    }

    @Test(timeout = 4000)
    public void test2328() throws Throwable {
        Class<Long> class0 = Long.class;
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer((-3087), class0);
        stdKeyDeserializer0.deserializeKey("true", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2429() throws Throwable {
        Class<TextStyle> class0 = TextStyle.class;
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer((-2029), class0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        RootNameLookup rootNameLookup0 = new RootNameLookup();
        DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, (SubtypeResolver) null, (SimpleMixInResolver) null, rootNameLookup0);
        InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
        DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, injectableValues_Std0);
        stdKeyDeserializer0.deserializeKey("com.fasterxmljackson.databind.util.ArrayIterator", defaultDeserializationContext0);
    }

    @Test(timeout = 4000)
    public void test2530() throws Throwable {
        Class<Calendar> class0 = Calendar.class;
        StdKeyDeserializer stdKeyDeserializer0 = new StdKeyDeserializer(15, class0);
        stdKeyDeserializer0.deserializeKey("L", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2631() throws Throwable {
        Class<Currency> class0 = Currency.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("coN.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringCtorKeyDeserializer", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2732() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Object object0 = stdKeyDeserializer0.deserializeKey("true", defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test2833() throws Throwable {
        Class<Boolean> class0 = Boolean.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        Object object0 = stdKeyDeserializer0._parse("false", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test2935() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("-685", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3036() throws Throwable {
        Class<Byte> class0 = Byte.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0.deserializeKey("3412", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3137() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0._parse("-36285", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3238() throws Throwable {
        Class<Short> class0 = Short.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0._parse("93685", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3339() throws Throwable {
        Class<Character> class0 = Character.class;
        StdKeyDeserializer stdKeyDeserializer0 = StdKeyDeserializer.forType(class0);
        stdKeyDeserializer0._parse("", (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3440() throws Throwable {
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        Class<SimpleModule> class0 = SimpleModule.class;
        JsonDeserializer<Currency> jsonDeserializer0 = (JsonDeserializer<Currency>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn((Currency) null).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, jsonDeserializer0);
        stdKeyDeserializer_DelegatingKD0.deserializeKey("3412", defaultDeserializationContext_Impl0);
    }

    @Test(timeout = 4000)
    public void test3541() throws Throwable {
        Class<Calendar> class0 = Calendar.class;
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, (JsonDeserializer<?>) null);
        Object object0 = stdKeyDeserializer_DelegatingKD0.deserializeKey((String) null, (DeserializationContext) null);
    }

    @Test(timeout = 4000)
    public void test3642() throws Throwable {
        Class<Float> class0 = Float.class;
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        ShortNode shortNode0 = ShortNode.valueOf((short) 117);
        JsonDeserializer<ShortNode> jsonDeserializer0 = (JsonDeserializer<ShortNode>) mock(JsonDeserializer.class, new ViolatedAssumptionAnswer());
        doReturn(shortNode0).when(jsonDeserializer0).deserialize(any(com.fasterxml.jackson.core.JsonParser.class), any(com.fasterxml.jackson.databind.DeserializationContext.class));
        StdKeyDeserializer.DelegatingKD stdKeyDeserializer_DelegatingKD0 = new StdKeyDeserializer.DelegatingKD(class0, jsonDeserializer0);
        ShortNode shortNode1 = (ShortNode) stdKeyDeserializer_DelegatingKD0.deserializeKey("73", defaultDeserializationContext_Impl0);
        shortNode1.shortValue();
    }

    @Test(timeout = 4000)
    public void test3743() throws Throwable {
        Class<TextStyle> class0 = TextStyle.class;
        EnumResolver enumResolver0 = EnumResolver.constructUnsafeUsingToString(class0);
        StdKeyDeserializer.EnumKD stdKeyDeserializer_EnumKD0 = new StdKeyDeserializer.EnumKD(enumResolver0, (AnnotatedMethod) null);
        StdSubtypeResolver stdSubtypeResolver0 = new StdSubtypeResolver();
        RootNameLookup rootNameLookup0 = new RootNameLookup();
        DeserializationConfig deserializationConfig0 = new DeserializationConfig((BaseSettings) null, stdSubtypeResolver0, (SimpleMixInResolver) null, rootNameLookup0);
        InjectableValues.Std injectableValues_Std0 = new InjectableValues.Std();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.createInstance(deserializationConfig0, (JsonParser) null, injectableValues_Std0);
        stdKeyDeserializer_EnumKD0.deserializeKey("&a^r$^H.RvI'Y5Y", defaultDeserializationContext0);
    }
}
