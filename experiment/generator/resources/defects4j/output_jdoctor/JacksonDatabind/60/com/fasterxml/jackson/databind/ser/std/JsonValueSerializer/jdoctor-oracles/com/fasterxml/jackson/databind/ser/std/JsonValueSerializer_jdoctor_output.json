[
  {
    "signature": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer(com.fasterxml.jackson.databind.introspect.AnnotatedMethod valueMethod, com.fasterxml.jackson.databind.JsonSerializer<?> ser)",
    "name": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.introspect.AnnotatedMethod",
          "name": "AnnotatedMethod",
          "isArray": false
        },
        "name": "valueMethod"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.JsonSerializer",
          "name": "JsonSerializer",
          "isArray": false
        },
        "name": "ser"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "com.fasterxml.jackson.databind.JsonSerializer",
            "name": "JsonSerializer",
            "isArray": false
          },
          "name": "ser"
        },
        "comment": "Explicit serializer to use if caller knows Explicit (which occurs if and only if the \"value method\" was annotated with com.fasterxml.jackson.databind.annotation.JsonSerialize#using). ser is otherwise null.",
        "kind": "PARAM",
        "condition": "args[1]==null"
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer(com.fasterxml.jackson.databind.ser.std.JsonValueSerializer src, com.fasterxml.jackson.databind.BeanProperty property, com.fasterxml.jackson.databind.JsonSerializer<?> ser, boolean forceTypeInfo)",
    "name": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
          "name": "JsonValueSerializer",
          "isArray": false
        },
        "name": "src"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.BeanProperty",
          "name": "BeanProperty",
          "isArray": false
        },
        "name": "property"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.JsonSerializer",
          "name": "JsonSerializer",
          "isArray": false
        },
        "name": "ser"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "forceTypeInfo"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "withResolved(com.fasterxml.jackson.databind.BeanProperty property, com.fasterxml.jackson.databind.JsonSerializer<?> ser, boolean forceTypeInfo)",
    "name": "withResolved",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.BeanProperty",
          "name": "BeanProperty",
          "isArray": false
        },
        "name": "property"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.JsonSerializer",
          "name": "JsonSerializer",
          "isArray": false
        },
        "name": "ser"
      },
      {
        "type": {
          "qualifiedName": "boolean",
          "name": "boolean",
          "isArray": false
        },
        "name": "forceTypeInfo"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "createContextual(com.fasterxml.jackson.databind.SerializerProvider provider, com.fasterxml.jackson.databind.BeanProperty property)",
    "name": "createContextual",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.JsonSerializer<?>",
      "name": "com.fasterxml.jackson.databind.JsonSerializer<?>",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.SerializerProvider",
          "name": "SerializerProvider",
          "isArray": false
        },
        "name": "provider"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.BeanProperty",
          "name": "BeanProperty",
          "isArray": false
        },
        "name": "property"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "serialize(java.lang.Object bean, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider prov)",
    "name": "serialize",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "bean"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
          "name": "JsonGenerator",
          "isArray": false
        },
        "name": "gen"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.SerializerProvider",
          "name": "SerializerProvider",
          "isArray": false
        },
        "name": "prov"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "serializeWithType(java.lang.Object bean, com.fasterxml.jackson.core.JsonGenerator gen, com.fasterxml.jackson.databind.SerializerProvider provider, com.fasterxml.jackson.databind.jsontype.TypeSerializer typeSer0)",
    "name": "serializeWithType",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "bean"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.core.JsonGenerator",
          "name": "JsonGenerator",
          "isArray": false
        },
        "name": "gen"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.SerializerProvider",
          "name": "SerializerProvider",
          "isArray": false
        },
        "name": "provider"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.jsontype.TypeSerializer",
          "name": "TypeSerializer",
          "isArray": false
        },
        "name": "typeSer0"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "getSchema(com.fasterxml.jackson.databind.SerializerProvider provider, java.lang.reflect.Type typeHint)",
    "name": "getSchema",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "com.fasterxml.jackson.databind.JsonNode",
      "name": "com.fasterxml.jackson.databind.JsonNode",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.SerializerProvider",
          "name": "SerializerProvider",
          "isArray": false
        },
        "name": "provider"
      },
      {
        "type": {
          "qualifiedName": "java.lang.reflect.Type",
          "name": "Type",
          "isArray": false
        },
        "name": "typeHint"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper visitor, com.fasterxml.jackson.databind.JavaType typeHint)",
    "name": "acceptJsonFormatVisitor",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "void",
      "name": "void",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
          "name": "JsonFormatVisitorWrapper",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.JavaType",
          "name": "JavaType",
          "isArray": false
        },
        "name": "typeHint"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "_acceptJsonFormatVisitorForEnum(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper visitor, com.fasterxml.jackson.databind.JavaType typeHint, java.lang.Class<?> enumType)",
    "name": "_acceptJsonFormatVisitorForEnum",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper",
          "name": "JsonFormatVisitorWrapper",
          "isArray": false
        },
        "name": "visitor"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.JavaType",
          "name": "JavaType",
          "isArray": false
        },
        "name": "typeHint"
      },
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "enumType"
      }
    ],
    "paramTags": [],
    "returnTag": {
      "comment": "True if method handled callbacks; false if not; in latter case caller will send default callbacks.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isNaturalTypeWithStdHandling(java.lang.Class<?> rawType, com.fasterxml.jackson.databind.JsonSerializer<?> ser)",
    "name": "isNaturalTypeWithStdHandling",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "rawType"
      },
      {
        "type": {
          "qualifiedName": "com.fasterxml.jackson.databind.JsonSerializer",
          "name": "JsonSerializer",
          "isArray": false
        },
        "name": "ser"
      }
    ],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
      "name": "JsonValueSerializer",
      "isArray": false
    },
    "targetClass": "com.fasterxml.jackson.databind.ser.std.JsonValueSerializer",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  }
]