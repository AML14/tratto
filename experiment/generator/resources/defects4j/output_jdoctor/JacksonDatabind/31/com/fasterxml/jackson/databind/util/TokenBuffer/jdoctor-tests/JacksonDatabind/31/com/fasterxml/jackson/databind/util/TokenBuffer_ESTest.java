/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 28 15:27:13 GMT 2024
 */
package com.fasterxml.jackson.databind.util;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.core.Base64Variant;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonLocation;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonToken;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.core.SerializableString;
import com.fasterxml.jackson.core.TreeNode;
import com.fasterxml.jackson.core.filter.FilteringParserDelegate;
import com.fasterxml.jackson.core.filter.TokenFilter;
import com.fasterxml.jackson.core.io.CharacterEscapes;
import com.fasterxml.jackson.core.io.SerializedString;
import com.fasterxml.jackson.core.util.DefaultPrettyPrinter;
import com.fasterxml.jackson.core.util.JsonGeneratorDelegate;
import com.fasterxml.jackson.core.util.JsonParserSequence;
import com.fasterxml.jackson.databind.AnnotationIntrospector;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.MapperFeature;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.cfg.DeserializerFactoryConfig;
import com.fasterxml.jackson.databind.deser.BeanDeserializerFactory;
import com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
import com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
import com.fasterxml.jackson.databind.module.SimpleKeyDeserializers;
import com.fasterxml.jackson.databind.node.ArrayNode;
import com.fasterxml.jackson.databind.node.BigIntegerNode;
import com.fasterxml.jackson.databind.node.FloatNode;
import com.fasterxml.jackson.databind.node.JsonNodeFactory;
import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.node.POJONode;
import com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
import com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
import com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
import com.fasterxml.jackson.databind.type.TypeFactory;
import com.fasterxml.jackson.databind.util.RawValue;
import com.fasterxml.jackson.databind.util.TokenBuffer;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.io.SequenceInputStream;
import java.lang.reflect.Array;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.math.MathContext;
import java.math.RoundingMode;
import java.time.chrono.MinguoDate;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Locale;
import java.util.TreeMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.Random;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class TokenBuffer_ESTest extends TokenBuffer_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        byte byte0 = (byte) (-59);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0.writeRaw('\"');
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0012() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test0013() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        boolean boolean0 = false;
        tokenBuffer0.writeRaw((SerializableString) null);
    }

    @Test(timeout = 4000)
    public void test0024() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
        TokenBuffer tokenBuffer2 = new TokenBuffer(tokenBuffer_Parser0, deserializationContext0);
        tokenBuffer2.deserialize(tokenBuffer_Parser0, deserializationContext0);
    }

    @Test(timeout = 4000)
    public void test0035() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.ESCAPE_NON_ASCII;
        tokenBuffer0.disable(jsonGenerator_Feature0);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test0036() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.ESCAPE_NON_ASCII;
        tokenBuffer0.disable(jsonGenerator_Feature0);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test0037() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.ESCAPE_NON_ASCII;
        tokenBuffer0.disable(jsonGenerator_Feature0);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test0038() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.ESCAPE_NON_ASCII;
        tokenBuffer0.disable(jsonGenerator_Feature0);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test0049() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getIntValue();
    }

    @Test(timeout = 4000)
    public void test00510() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_FLOAT;
        tokenBuffer_Segment0.append(0, jsonToken0, (Object) tokenBuffer0, (Object) objectMapper0);
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test00611() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeEndObject();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test00612() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeEndObject();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test00613() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeEndObject();
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test00614() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeEndObject();
        String string0 = tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test00615() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeEndObject();
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test00716() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        TokenBuffer tokenBuffer0 = new TokenBuffer(tokenBuffer_Parser0);
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test00817() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        TokenBuffer tokenBuffer0 = new TokenBuffer(tokenBuffer_Parser0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test00818() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        TokenBuffer tokenBuffer0 = new TokenBuffer(tokenBuffer_Parser0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test00819() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        TokenBuffer tokenBuffer0 = new TokenBuffer(tokenBuffer_Parser0);
        String string0 = tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test00820() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        TokenBuffer tokenBuffer0 = new TokenBuffer(tokenBuffer_Parser0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test00921() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectMapper objectMapper1 = objectMapper0.findAndRegisterModules();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ObjectMapper objectMapper2 = objectMapper1.setTypeFactory(typeFactory0);
        MapperFeature mapperFeature0 = MapperFeature.USE_STD_BEAN_NAMING;
        ObjectMapper objectMapper3 = objectMapper2.configure(mapperFeature0, true);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper3);
        ObjectCodec objectCodec0 = tokenBuffer0.getCodec();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test00922() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectMapper objectMapper1 = objectMapper0.findAndRegisterModules();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ObjectMapper objectMapper2 = objectMapper1.setTypeFactory(typeFactory0);
        MapperFeature mapperFeature0 = MapperFeature.USE_STD_BEAN_NAMING;
        ObjectMapper objectMapper3 = objectMapper2.configure(mapperFeature0, true);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper3);
        ObjectCodec objectCodec0 = tokenBuffer0.getCodec();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test00923() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectMapper objectMapper1 = objectMapper0.findAndRegisterModules();
        TypeFactory typeFactory0 = TypeFactory.defaultInstance();
        ObjectMapper objectMapper2 = objectMapper1.setTypeFactory(typeFactory0);
        MapperFeature mapperFeature0 = MapperFeature.USE_STD_BEAN_NAMING;
        ObjectMapper objectMapper3 = objectMapper2.configure(mapperFeature0, true);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper3);
        ObjectCodec objectCodec0 = tokenBuffer0.getCodec();
    }

    @Test(timeout = 4000)
    public void test01024() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        int int0 = tokenBuffer_Parser0.getTextLength();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test01025() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        int int0 = tokenBuffer_Parser0.getTextLength();
    }

    @Test(timeout = 4000)
    public void test01026() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        int int0 = tokenBuffer_Parser0.getTextLength();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test01027() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        int int0 = tokenBuffer_Parser0.getTextLength();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test01028() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        int int0 = tokenBuffer_Parser0.getTextLength();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test01129() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getTextCharacters();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test01130() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getTextCharacters();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test01131() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getTextCharacters();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test01132() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getTextCharacters();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test01233() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        BigInteger bigInteger0 = BigInteger.TEN;
        tokenBuffer0.writeNumber(bigInteger0);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test01234() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        BigInteger bigInteger0 = BigInteger.TEN;
        tokenBuffer0.writeNumber(bigInteger0);
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test01235() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        BigInteger bigInteger0 = BigInteger.TEN;
        tokenBuffer0.writeNumber(bigInteger0);
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test01236() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        BigInteger bigInteger0 = BigInteger.TEN;
        tokenBuffer0.writeNumber(bigInteger0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test01237() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        BigInteger bigInteger0 = BigInteger.TEN;
        tokenBuffer0.writeNumber(bigInteger0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
    }

    @Test(timeout = 4000)
    public void test01338() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        JsonLocation jsonLocation0 = tokenBuffer_Parser0.getTokenLocation();
    }

    @Test(timeout = 4000)
    public void test01339() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        JsonLocation jsonLocation0 = tokenBuffer_Parser0.getTokenLocation();
        tokenBuffer_Parser0.setLocation(jsonLocation0);
        tokenBuffer_Parser0.overrideCurrentName("");
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test01340() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        JsonLocation jsonLocation0 = tokenBuffer_Parser0.getTokenLocation();
        tokenBuffer_Parser0.setLocation(jsonLocation0);
        tokenBuffer_Parser0.overrideCurrentName("");
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test01441() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        tokenBuffer0.writeNumber(1L);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test01442() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        tokenBuffer0.writeNumber(1L);
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test01443() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        tokenBuffer0.writeNumber(1L);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test01444() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        tokenBuffer0.writeNumber(1L);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.nextFieldName();
        SerializedString serializedString0 = new SerializedString("VO[JD^rDYZAsmJ{:#r");
        Class<Integer> class0 = Integer.TYPE;
        tokenBuffer_Segment0.appendRaw(0, 81, (Object) class0, (Object) "VO[JD^rDYZAsmJ{:#r", (Object) tokenBuffer_Parser0);
        tokenBuffer_Parser0.getNumberType();
    }

    @Test(timeout = 4000)
    public void test01545() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory((DeserializerFactoryConfig) null);
        BigInteger bigInteger0 = BigInteger.ZERO;
        TokenBuffer tokenBuffer1 = tokenBuffer0.append(tokenBuffer0);
        tokenBuffer1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test01546() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory((DeserializerFactoryConfig) null);
        BigInteger bigInteger0 = BigInteger.ZERO;
        TokenBuffer tokenBuffer1 = tokenBuffer0.append(tokenBuffer0);
        tokenBuffer1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test01647() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
        ObjectMapper objectMapper1 = new ObjectMapper(jsonFactory0);
        boolean boolean0 = false;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper1, false, false);
        JsonParser jsonParser0 = tokenBuffer_Parser0.setFeatureMask(16);
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        tokenBuffer_Parser0.setFeatureMask(16);
        deserializerFactoryConfig0.valueInstantiators();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.copy();
        TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0, defaultDeserializationContext0);
        tokenBuffer0.writeRawValue("JSON");
        tokenBuffer0.isClosed();
        tokenBuffer_Parser0.getFloatValue();
    }

    @Test(timeout = 4000)
    public void test01748() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        String string0 = tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test01749() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test01750() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test01851() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getFloatValue();
    }

    @Test(timeout = 4000)
    public void test01952() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS;
        ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);
        JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;
        ObjectReader objectReader1 = objectReader0.with(jsonParser_Feature0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectReader1);
        tokenBuffer0.writeBoolean(true);
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test01953() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS;
        ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);
        JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;
        ObjectReader objectReader1 = objectReader0.with(jsonParser_Feature0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectReader1);
        tokenBuffer0.writeBoolean(true);
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test01954() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializationFeature deserializationFeature0 = DeserializationFeature.USE_BIG_DECIMAL_FOR_FLOATS;
        ObjectReader objectReader0 = objectMapper0.reader(deserializationFeature0);
        JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.AUTO_CLOSE_SOURCE;
        ObjectReader objectReader1 = objectReader0.with(jsonParser_Feature0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectReader1);
        tokenBuffer0.writeBoolean(true);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test02055() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        boolean boolean0 = tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test02056() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        boolean boolean0 = tokenBuffer_Segment0.hasIds();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        tokenBuffer0.writeStartObject();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test02057() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        boolean boolean0 = tokenBuffer_Segment0.hasIds();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        tokenBuffer0.writeStartObject();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test02158() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        ObjectMapper objectMapper1 = objectMapper0.setSerializerProvider(defaultSerializerProvider_Impl0);
        JsonGenerator jsonGenerator0 = tokenBuffer0.setCodec(objectMapper1);
        tokenBuffer0.serialize(jsonGenerator0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper1, true, true);
        tokenBuffer_Parser0.getDecimalValue();
    }

    @Test(timeout = 4000)
    public void test02259() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        objectMapper0.getDateFormat();
        tokenBuffer0.writeEndObject();
        tokenBuffer0.writeEndObject();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test02260() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        objectMapper0.getDateFormat();
        tokenBuffer0.writeEndObject();
        tokenBuffer0.writeEndObject();
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test02261() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        objectMapper0.getDateFormat();
        tokenBuffer0.writeEndObject();
        tokenBuffer0.writeEndObject();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test02362() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.writeStringField("dv0Qyw", "dv0Qyw");
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test02363() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.writeStringField("dv0Qyw", "dv0Qyw");
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test02364() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.writeStringField("dv0Qyw", "dv0Qyw");
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test02465() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeObject(objectMapper0);
    }

    @Test(timeout = 4000)
    public void test02566() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0._appendRaw(16, objectMapper0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test02567() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0._appendRaw(16, objectMapper0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test02568() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0._appendRaw(16, objectMapper0);
        String string0 = tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test02669() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.close();
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeStringField("OBJECT_AND_NON_CONCRETE", "");
        tokenBuffer0.writeNumberField("/go'+~ro:<", (-1277.7366F));
        tokenBuffer0._appendRaw((-1308), tokenBuffer_Segment0);
        tokenBuffer0.toString();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getValueAsString();
        System.setCurrentTimeMillis(0L);
    }

    @Test(timeout = 4000)
    public void test02770() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        tokenBuffer0.writeNumber(bigDecimal0);
        tokenBuffer0.writeStringField("Unrecognized value type for VALUE_NUMBER_FLOAT: ", "Unrecognized value type for VALUE_NUMBER_FLOAT: ");
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test02771() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        tokenBuffer0.writeNumber(bigDecimal0);
        tokenBuffer0.writeStringField("Unrecognized value type for VALUE_NUMBER_FLOAT: ", "Unrecognized value type for VALUE_NUMBER_FLOAT: ");
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test02772() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        tokenBuffer0.writeNumber(bigDecimal0);
        tokenBuffer0.writeStringField("Unrecognized value type for VALUE_NUMBER_FLOAT: ", "Unrecognized value type for VALUE_NUMBER_FLOAT: ");
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test02873() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        JsonToken jsonToken0 = JsonToken.END_ARRAY;
        short short0 = (short) 100;
        Short short1 = new Short((short) 100);
        tokenBuffer_Segment0.append((-329), jsonToken0, (Object) null, (Object) tokenBuffer0, (Object) short1);
    }

    @Test(timeout = 4000)
    public void test02974() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0, false);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        boolean boolean0 = tokenBuffer_Parser0.hasTextCharacters();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test02975() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0, false);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        boolean boolean0 = tokenBuffer_Parser0.hasTextCharacters();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test02976() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0, false);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        boolean boolean0 = tokenBuffer_Parser0.hasTextCharacters();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test02977() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0, false);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        boolean boolean0 = tokenBuffer_Parser0.hasTextCharacters();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test02978() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0, false);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        boolean boolean0 = tokenBuffer_Parser0.hasTextCharacters();
    }

    @Test(timeout = 4000)
    public void test03079() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        RawValue rawValue0 = new RawValue("vmG");
        tokenBuffer0.writeNumber("vmG");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(515, 16, (Object) rawValue0);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        tokenBuffer_Segment1.append(515, jsonToken0, (Object) "vmG", (Object) "vmG", (Object) "vmG");
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test03080() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        RawValue rawValue0 = new RawValue("vmG");
        tokenBuffer0.writeNumber("vmG");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(515, 16, (Object) rawValue0);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        tokenBuffer_Segment1.append(515, jsonToken0, (Object) "vmG", (Object) "vmG", (Object) "vmG");
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test03181() throws Throwable {
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeBooleanField("RkZH,s h8S_ ula.", false);
        tokenBuffer0.writeTypeId(objectMapper0);
        tokenBuffer0.writeEndObject();
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test03182() throws Throwable {
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeBooleanField("RkZH,s h8S_ ula.", false);
        tokenBuffer0.writeTypeId(objectMapper0);
        tokenBuffer0.writeEndObject();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test03183() throws Throwable {
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeBooleanField("RkZH,s h8S_ ula.", false);
        tokenBuffer0.writeTypeId(objectMapper0);
        tokenBuffer0.writeEndObject();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test03284() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        JsonToken jsonToken0 = JsonToken.VALUE_NULL;
        tokenBuffer_Segment0.append(16, jsonToken0, (Object) tokenBuffer0, (Object) tokenBuffer0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getDecimalValue();
    }

    @Test(timeout = 4000)
    public void test03385() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer0.writeRaw(", ", 4, 56320);
    }

    @Test(timeout = 4000)
    public void test03486() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeEndArray();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer_Parser0.peekNextToken();
    }

    @Test(timeout = 4000)
    public void test03487() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeEndArray();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test03488() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeEndArray();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test03489() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeEndArray();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test03490() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeEndArray();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test03491() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeEndArray();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test03592() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        boolean boolean0 = false;
        byte[] byteArray0 = new byte[0];
        tokenBuffer0.writeRawUTF8String(byteArray0, 16, 555);
    }

    @Test(timeout = 4000)
    public void test03693() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0.writeNumber(0.0F);
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test03794() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.firstToken();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test03795() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.firstToken();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test03896() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        Double double0 = new Double(16);
        tokenBuffer0._appendRaw(16, double0);
        JsonGenerator jsonGenerator0 = tokenBuffer0.overrideStdFeatures(16, 100);
        jsonGenerator0.writeEndObject();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test03997() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0._hasNativeId = true;
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test03998() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0._hasNativeId = true;
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test03999() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0._hasNativeId = true;
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test039100() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0._hasNativeId = true;
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test040101() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.setCurrentValue((Object) null);
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test040102() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.setCurrentValue((Object) null);
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test041103() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM;
        boolean boolean0 = tokenBuffer0.isEnabled(jsonGenerator_Feature0);
    }

    @Test(timeout = 4000)
    public void test041104() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM;
        boolean boolean0 = tokenBuffer0.isEnabled(jsonGenerator_Feature0);
        tokenBuffer0.writeEndObject();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test041105() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM;
        boolean boolean0 = tokenBuffer0.isEnabled(jsonGenerator_Feature0);
        tokenBuffer0.writeEndObject();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test042106() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-60));
        tokenBuffer0._appendRaw((byte) (-60), double0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test042107() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-60));
        tokenBuffer0._appendRaw((byte) (-60), double0);
        String string0 = tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test042108() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-60));
        tokenBuffer0._appendRaw((byte) (-60), double0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test043109() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeNumberField((String) null, 1554.2620651919);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test043110() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeNumberField((String) null, 1554.2620651919);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeEndObject();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test043111() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeNumberField((String) null, 1554.2620651919);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeEndObject();
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test043112() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeNumberField((String) null, 1554.2620651919);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeEndObject();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test044113() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.writeNumber(1L);
        // Undeclared exception!
        tokenBuffer0.serialize(tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test045114() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ObjectMapper objectMapper1 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper1);
        tokenBuffer0.serialize(tokenBuffer0);
        tokenBuffer0.firstToken();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test045115() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ObjectMapper objectMapper1 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper1);
        tokenBuffer0.serialize(tokenBuffer0);
        tokenBuffer0.firstToken();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test046116() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        TokenBuffer tokenBuffer0 = new TokenBuffer(tokenBuffer_Parser0);
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test047117() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        JsonFactory jsonFactory0 = new JsonFactory(objectMapper0);
        JsonFactory jsonFactory1 = jsonFactory0.setRootValueSeparator("b9fgc`7\"");
        JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_YAML_COMMENTS;
        JsonFactory.Feature jsonFactory_Feature0 = JsonFactory.Feature.CANONICALIZE_FIELD_NAMES;
        jsonFactory1.isEnabled(jsonFactory_Feature0);
        JsonFactory jsonFactory2 = jsonFactory1.enable(jsonParser_Feature0);
        File file0 = MockFile.createTempFile("JSON", ";..kAOZ uw>C<dr+0", (File) null);
        JsonParser jsonParser0 = jsonFactory2.createParser(file0);
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0, defaultDeserializationContext_Impl0);
        char[] charArray0 = new char[5];
        charArray0[0] = '\"';
        charArray0[1] = 'k';
        charArray0[2] = 'Z';
        charArray0[3] = '2';
        charArray0[4] = 'o';
        int int0 = (-1226);
        tokenBuffer0.writeRawValue(charArray0, (-1226), (-1226));
    }

    @Test(timeout = 4000)
    public void test048118() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;
        ObjectMapper objectMapper1 = objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, "JSON");
        ObjectMapper objectMapper2 = objectMapper1.setAnnotationIntrospectors((AnnotationIntrospector) null, (AnnotationIntrospector) null);
        Locale locale0 = Locale.CHINA;
        ObjectMapper objectMapper3 = objectMapper2.setLocale(locale0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper3, true, true);
        boolean boolean0 = tokenBuffer_Parser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test048119() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;
        ObjectMapper objectMapper1 = objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, "JSON");
        ObjectMapper objectMapper2 = objectMapper1.setAnnotationIntrospectors((AnnotationIntrospector) null, (AnnotationIntrospector) null);
        Locale locale0 = Locale.CHINA;
        ObjectMapper objectMapper3 = objectMapper2.setLocale(locale0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper3, true, true);
        boolean boolean0 = tokenBuffer_Parser0.isClosed();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test048120() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;
        ObjectMapper objectMapper1 = objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, "JSON");
        ObjectMapper objectMapper2 = objectMapper1.setAnnotationIntrospectors((AnnotationIntrospector) null, (AnnotationIntrospector) null);
        Locale locale0 = Locale.CHINA;
        ObjectMapper objectMapper3 = objectMapper2.setLocale(locale0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper3, true, true);
        boolean boolean0 = tokenBuffer_Parser0.isClosed();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test048121() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;
        ObjectMapper objectMapper1 = objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, "JSON");
        ObjectMapper objectMapper2 = objectMapper1.setAnnotationIntrospectors((AnnotationIntrospector) null, (AnnotationIntrospector) null);
        Locale locale0 = Locale.CHINA;
        ObjectMapper objectMapper3 = objectMapper2.setLocale(locale0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper3, true, true);
        boolean boolean0 = tokenBuffer_Parser0.isClosed();
        Double double0 = new Double(46);
        Double double1 = new Double(16);
        tokenBuffer_Segment0.type((-437));
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test048122() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        FileSystemHandling fileSystemHandling0 = new FileSystemHandling();
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        JsonFactory jsonFactory0 = new JsonFactory();
        ObjectMapper objectMapper0 = new ObjectMapper(jsonFactory0);
        ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.OBJECT_AND_NON_CONCRETE;
        ObjectMapper objectMapper1 = objectMapper0.enableDefaultTypingAsProperty(objectMapper_DefaultTyping0, "JSON");
        ObjectMapper objectMapper2 = objectMapper1.setAnnotationIntrospectors((AnnotationIntrospector) null, (AnnotationIntrospector) null);
        Locale locale0 = Locale.CHINA;
        ObjectMapper objectMapper3 = objectMapper2.setLocale(locale0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper3, true, true);
        boolean boolean0 = tokenBuffer_Parser0.isClosed();
        Double double0 = new Double(46);
        Double double1 = new Double(16);
        tokenBuffer_Segment0.type((-437));
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test049123() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.overrideCurrentName("");
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test049124() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.overrideCurrentName("");
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test050125() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TreeMap<Integer, Object> treeMap0 = new TreeMap<Integer, Object>();
        tokenBuffer_Segment0._nativeIds = treeMap0;
        JsonToken jsonToken0 = JsonToken.VALUE_NUMBER_FLOAT;
        tokenBuffer_Segment0.append(0, jsonToken0, (Object) tokenBuffer0, (Object) objectMapper0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, objectMapper0, true, true);
        tokenBuffer_Parser0._checkIsNumber();
    }

    @Test(timeout = 4000)
    public void test051126() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        FloatNode floatNode0 = FloatNode.valueOf(0.0F);
        Long long0 = new Long(16);
        tokenBuffer_Segment0.appendRaw(169, 169, (Object) objectMapper0, (Object) floatNode0, (Object) long0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        TokenBuffer tokenBuffer0 = new TokenBuffer(tokenBuffer_Parser0);
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test052127() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test052128() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test053129() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer1._objectCodec = null;
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.IGNORE_UNKNOWN;
        boolean boolean0 = tokenBuffer1.isEnabled(jsonGenerator_Feature0);
    }

    @Test(timeout = 4000)
    public void test053130() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer1._objectCodec = null;
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.IGNORE_UNKNOWN;
        boolean boolean0 = tokenBuffer1.isEnabled(jsonGenerator_Feature0);
        tokenBuffer1.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test053131() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer1._objectCodec = null;
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.IGNORE_UNKNOWN;
        boolean boolean0 = tokenBuffer1.isEnabled(jsonGenerator_Feature0);
        tokenBuffer1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test053132() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer1._objectCodec = null;
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.IGNORE_UNKNOWN;
        boolean boolean0 = tokenBuffer1.isEnabled(jsonGenerator_Feature0);
        tokenBuffer0.writeEndObject();
        JsonToken jsonToken0 = JsonToken.VALUE_STRING;
        tokenBuffer0._append(jsonToken0);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test053133() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer1._objectCodec = null;
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.IGNORE_UNKNOWN;
        boolean boolean0 = tokenBuffer1.isEnabled(jsonGenerator_Feature0);
        tokenBuffer0.writeEndObject();
        JsonToken jsonToken0 = JsonToken.VALUE_STRING;
        tokenBuffer0._append(jsonToken0);
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test054134() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        Integer integer0 = new Integer((-528));
        tokenBuffer_Segment0.appendRaw(0, 0, (Object) integer0, (Object) integer0, (Object) integer0);
        tokenBuffer_Segment0._tokenTypes = (long) 16;
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test054135() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        Integer integer0 = new Integer((-528));
        tokenBuffer_Segment0.appendRaw(0, 0, (Object) integer0, (Object) integer0, (Object) integer0);
        tokenBuffer_Segment0._tokenTypes = (long) 16;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.getParsingContext();
        tokenBuffer_Parser0.getTextCharacters();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        DefaultDeserializationContext defaultDeserializationContext0 = defaultDeserializationContext_Impl0.copy();
        TokenBuffer tokenBuffer0 = new TokenBuffer(tokenBuffer_Parser0, defaultDeserializationContext0);
        tokenBuffer0.useDefaultPrettyPrinter();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test055136() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeNumber("");
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test055137() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeNumber("");
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        tokenBuffer1.writeEndObject();
        tokenBuffer1.firstToken();
        tokenBuffer1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test055138() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeNumber("");
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        tokenBuffer1.writeEndObject();
        tokenBuffer1.firstToken();
        tokenBuffer1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test056139() throws Throwable {
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ObjectNode objectNode1 = objectNode0.deepCopy();
        ArrayNode arrayNode0 = objectNode1.withArray(" ^44}c");
        ObjectMapper objectMapper0 = new ObjectMapper();
        JsonParser jsonParser0 = arrayNode0.traverse((ObjectCodec) objectMapper0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParser0);
        tokenBuffer0.firstToken();
        tokenBuffer0.setFeatureMask(4280);
        tokenBuffer0.writeObjectId(jsonParser0);
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-40);
        byteArray0[1] = (byte) 117;
        BigInteger bigInteger0 = new BigInteger(byteArray0);
        tokenBuffer0.writeNumber(bigInteger0);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test057140() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeObjectId("^F2q>xg");
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test057141() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeObjectId("^F2q>xg");
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
        tokenBuffer_Parser0.nextIntValue(3);
        tokenBuffer_Parser0.nextTextValue();
        objectMapper0.getDeserializationContext();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.peekNextToken();
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test057142() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeObjectId("^F2q>xg");
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
        tokenBuffer_Parser0.nextIntValue(3);
        tokenBuffer_Parser0.nextTextValue();
        objectMapper0.getDeserializationContext();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.peekNextToken();
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test057143() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeObjectId("^F2q>xg");
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, true);
        tokenBuffer_Parser0.nextIntValue(3);
        tokenBuffer_Parser0.nextTextValue();
        objectMapper0.getDeserializationContext();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.peekNextToken();
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.isExpectedStartObjectToken();
    }

    @Test(timeout = 4000)
    public void test058144() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        Double double0 = new Double(16);
        tokenBuffer0._appendRaw(40, double0);
        // Undeclared exception!
        tokenBuffer0.serialize(tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test059145() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.close();
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test060146() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        boolean boolean0 = false;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer0.copyCurrentEvent(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test061147() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F");
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getCurrentLocation();
        tokenBuffer_Parser0.getDoubleValue();
    }

    @Test(timeout = 4000)
    public void test062148() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(515, 515, (Object) rawValue0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getCurrentLocation();
        tokenBuffer0.writeNumber((short) 2965);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test062149() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(515, 515, (Object) rawValue0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getCurrentLocation();
        tokenBuffer0.writeNumber((short) 2965);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.firstToken();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test063150() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        deserializerFactoryConfig0.abstractTypeResolvers();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        deserializerFactoryConfig0.keyDeserializers();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, false);
        tokenBuffer_Parser0.getTextOffset();
        tokenBuffer_Parser0.getTextCharacters();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        BigInteger bigInteger0 = BigInteger.TEN;
        tokenBuffer0.writeNumber(bigInteger0);
        tokenBuffer_Parser0.close();
        tokenBuffer_Parser0.close();
        tokenBuffer0.getOutputContext();
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer_Parser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test064151() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.serialize(tokenBuffer0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test064152() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.serialize(tokenBuffer0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.firstToken();
        tokenBuffer0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test064153() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.serialize(tokenBuffer0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.firstToken();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test064154() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.serialize(tokenBuffer0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.firstToken();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test065155() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, true);
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.copyCurrentEvent(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test066156() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.close();
        tokenBuffer_Parser0.close();
        tokenBuffer_Parser0.overrideCurrentName("");
        tokenBuffer_Parser0.isClosed();
    }

    @Test(timeout = 4000)
    public void test067157() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer tokenBuffer1 = tokenBuffer0.forceUseOfBigDecimal(true);
        tokenBuffer0.writeString((SerializableString) null);
        boolean boolean0 = tokenBuffer_Segment0.hasIds();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test067158() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer tokenBuffer1 = tokenBuffer0.forceUseOfBigDecimal(true);
        tokenBuffer0.writeString((SerializableString) null);
        boolean boolean0 = tokenBuffer_Segment0.hasIds();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test067159() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer tokenBuffer1 = tokenBuffer0.forceUseOfBigDecimal(true);
        tokenBuffer0.writeString((SerializableString) null);
        boolean boolean0 = tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test067160() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer tokenBuffer1 = tokenBuffer0.forceUseOfBigDecimal(true);
        tokenBuffer0.writeString((SerializableString) null);
        boolean boolean0 = tokenBuffer_Segment0.hasIds();
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test068161() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeNumber("");
        tokenBuffer0._appendRaw(8, objectMapper0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test068162() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeNumber("");
        tokenBuffer0._appendRaw(8, objectMapper0);
        String string0 = tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test068163() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeNumber("");
        tokenBuffer0._appendRaw(8, objectMapper0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test069164() throws Throwable {
        ObjectCodec objectCodec0 = null;
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F~");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer0._last;
        JsonToken jsonToken0 = JsonToken.NOT_AVAILABLE;
        FloatNode floatNode0 = new FloatNode(16);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Segment1.append(16, jsonToken0);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        Enumeration<BufferedInputStream> enumeration0 = (Enumeration<BufferedInputStream>) mock(Enumeration.class, new ViolatedAssumptionAnswer());
        doReturn(false).when(enumeration0).hasMoreElements();
        SequenceInputStream sequenceInputStream0 = new SequenceInputStream(enumeration0);
        PushbackInputStream pushbackInputStream0 = new PushbackInputStream(sequenceInputStream0, 68);
        tokenBuffer0.writeBinary((Base64Variant) null, (InputStream) sequenceInputStream0, 10);
    }

    @Test(timeout = 4000)
    public void test070165() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        Integer integer0 = new Integer((-528));
        tokenBuffer_Segment0.appendRaw(0, 0, (Object) integer0, (Object) integer0, (Object) integer0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getParsingContext();
        tokenBuffer_Parser0.getTextCharacters();
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        BigInteger bigInteger0 = BigInteger.TEN;
        tokenBuffer0.writeNumber(bigInteger0);
        tokenBuffer_Parser0.close();
        tokenBuffer_Parser0.close();
        tokenBuffer_Parser0.peekNextToken();
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test070166() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        Integer integer0 = new Integer((-528));
        tokenBuffer_Segment0.appendRaw(0, 0, (Object) integer0, (Object) integer0, (Object) integer0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getParsingContext();
        tokenBuffer_Parser0.getTextCharacters();
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        BigInteger bigInteger0 = BigInteger.TEN;
        tokenBuffer0.writeNumber(bigInteger0);
        tokenBuffer_Parser0.close();
        tokenBuffer_Parser0.close();
        tokenBuffer_Parser0.peekNextToken();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test071167() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test071168() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test071169() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test071170() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test072171() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        tokenBuffer1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test072172() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        tokenBuffer1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test072173() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer_Parser0.peekNextToken();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test072174() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer_Parser0.peekNextToken();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test073175() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        char[] charArray0 = new char[4];
        charArray0[0] = 'o';
        charArray0[1] = '?';
        charArray0[2] = '(';
        charArray0[3] = 'N';
        tokenBuffer0.writeRaw(charArray0, 16, 13);
    }

    @Test(timeout = 4000)
    public void test074176() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        FileSystemHandling.shouldAllThrowIOExceptions();
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM;
        tokenBuffer0.setCodec((ObjectCodec) null);
        tokenBuffer0.isEnabled(jsonGenerator_Feature0);
        tokenBuffer0.writeEndObject();
        JsonToken jsonToken0 = JsonToken.VALUE_STRING;
        tokenBuffer0.writeRaw((String) null);
    }

    @Test(timeout = 4000)
    public void test075177() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        boolean boolean0 = true;
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0, true);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeNumber((BigInteger) null);
        boolean boolean1 = false;
        MinguoDate minguoDate0 = MockMinguoDate.now();
        short short0 = (short) 86;
        Short short1 = new Short((short) 86);
        tokenBuffer_Segment0.appendRaw((-3148), 16, (Object) minguoDate0, (Object) short1, (Object) tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test076178() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.peekNextToken();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test076179() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.peekNextToken();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test077180() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.AUTO_CLOSE_JSON_CONTENT;
        TokenBuffer tokenBuffer1 = (TokenBuffer) tokenBuffer0.disable(jsonGenerator_Feature0);
        tokenBuffer1.serialize(tokenBuffer0);
        tokenBuffer0._objectCodec = null;
        tokenBuffer0.writeEndArray();
        tokenBuffer0.toString();
        JsonGenerator.Feature jsonGenerator_Feature1 = JsonGenerator.Feature.ESCAPE_NON_ASCII;
        tokenBuffer0.isEnabled(jsonGenerator_Feature1);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        TokenBuffer tokenBuffer2 = new TokenBuffer(tokenBuffer_Parser0);
        tokenBuffer2.firstToken();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        tokenBuffer_Parser0.overrideCurrentName("qF>>~9{LZf\"V-");
        tokenBuffer_Parser0.getTextLength();
        tokenBuffer1.canWriteBinaryNatively();
        Base64Variant base64Variant0 = null;
        base64Variant0 = new Base64Variant("qF>>~9{LZf\"V-", "", false, '\'', 0);
    }

    @Test(timeout = 4000)
    public void test078181() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.writeArrayFieldStart("'dW`5F/~5~em[Gs-l");
        tokenBuffer0.firstToken();
        System.setCurrentTimeMillis(1978L);
    }

    @Test(timeout = 4000)
    public void test079182() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeRawValue("com.fasterxml.jackson.databind.util.TokenBuffer$1", 0, 0);
        RawValue rawValue0 = new RawValue("&rZ0yIQ.");
        BigDecimal bigDecimal0 = BigDecimal.TEN;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getDoubleValue();
    }

    @Test(timeout = 4000)
    public void test080183() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer_Segment0.next();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test080184() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer_Segment0.next();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test080185() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer_Segment0.next();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test080186() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer_Segment0.next();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test081187() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) (-9);
        tokenBuffer0.writeBinary(byteArray0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer0.copyCurrentEvent(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test082188() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getLongValue();
    }

    @Test(timeout = 4000)
    public void test083189() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F");
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, false, false);
        tokenBuffer_Parser1.getEmbeddedObject();
        JsonToken jsonToken0 = JsonToken.VALUE_EMBEDDED_OBJECT;
        tokenBuffer_Segment0.append(16, jsonToken0);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        tokenBuffer0.getOutputContext();
        tokenBuffer_Parser0.nextToken();
        tokenBuffer0.getFeatureMask();
        byte[] byteArray0 = new byte[6];
        byteArray0[0] = (byte) 96;
        byteArray0[1] = (byte) 64;
        byteArray0[2] = (byte) 2;
        byteArray0[3] = (byte) 64;
        byteArray0[4] = (byte) 0;
        byteArray0[5] = (byte) 31;
        tokenBuffer0.writeUTF8String(byteArray0, (byte) 64, (byte) 64);
    }

    @Test(timeout = 4000)
    public void test084190() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        HashMap<String, RawValue> hashMap0 = new HashMap<String, RawValue>();
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider(hashMap0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0, true);
        tokenBuffer0.writeRawValue("[objectId=", 1721, 1721);
    }

    @Test(timeout = 4000)
    public void test085191() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.setCodec((ObjectCodec) null);
        tokenBuffer_Parser0.overrideCurrentName("");
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test085192() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.setCodec((ObjectCodec) null);
        tokenBuffer_Parser0.overrideCurrentName("");
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test086193() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        deserializerFactoryConfig0.abstractTypeResolvers();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        deserializerFactoryConfig0.keyDeserializers();
        deserializerFactoryConfig0.deserializerModifiers();
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer2 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer3 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer4 = tokenBuffer0.append(tokenBuffer2);
        tokenBuffer4.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test086194() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        deserializerFactoryConfig0.abstractTypeResolvers();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        deserializerFactoryConfig0.keyDeserializers();
        deserializerFactoryConfig0.deserializerModifiers();
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer2 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer3 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer4 = tokenBuffer0.append(tokenBuffer2);
        tokenBuffer4.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test086195() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        deserializerFactoryConfig0.abstractTypeResolvers();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        deserializerFactoryConfig0.keyDeserializers();
        deserializerFactoryConfig0.deserializerModifiers();
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer2 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer3 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer4 = tokenBuffer0.append(tokenBuffer2);
        int int0 = tokenBuffer_Segment0.rawType(53);
    }

    @Test(timeout = 4000)
    public void test087196() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test087197() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test087198() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.nextIntValue((-2432));
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, false);
        tokenBuffer_Parser1.nextTextValue();
        objectMapper0.getDeserializationContext();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test087199() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.nextIntValue((-2432));
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, false);
        tokenBuffer_Parser1.nextTextValue();
        objectMapper0.getDeserializationContext();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser1.nextTextValue();
        tokenBuffer_Parser1._closed = true;
        tokenBuffer_Parser1.nextFieldName();
        tokenBuffer_Parser1.nextFieldName();
        tokenBuffer_Parser1.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test087200() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.nextIntValue((-2432));
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, false);
        tokenBuffer_Parser1.nextTextValue();
        objectMapper0.getDeserializationContext();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser1.nextTextValue();
        tokenBuffer_Parser1._closed = true;
        tokenBuffer_Parser1.nextFieldName();
        tokenBuffer_Parser1.nextFieldName();
        tokenBuffer_Parser1.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test088201() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test088202() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test088203() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test088204() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test088205() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.hasCurrentToken();
    }

    @Test(timeout = 4000)
    public void test089206() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw(1848, double0);
        String string0 = tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test089207() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw(1848, double0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test089208() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw(1848, double0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test089209() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw(1848, double0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test090210() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        RawValue rawValue0 = new RawValue("F");
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.append(515, jsonToken0, (Object) null, (Object) null, (Object) "vmG");
        JsonToken jsonToken1 = JsonToken.END_ARRAY;
        tokenBuffer_Segment1.append(16, jsonToken1, (Object) null, (Object) jsonToken1);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getCurrentLocation();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.writeEndArray();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test090211() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        RawValue rawValue0 = new RawValue("F");
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.append(515, jsonToken0, (Object) null, (Object) null, (Object) "vmG");
        JsonToken jsonToken1 = JsonToken.END_ARRAY;
        tokenBuffer_Segment1.append(16, jsonToken1, (Object) null, (Object) jsonToken1);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getCurrentLocation();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.writeEndArray();
        tokenBuffer_Parser0.version();
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test090212() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        RawValue rawValue0 = new RawValue("F");
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.append(515, jsonToken0, (Object) null, (Object) null, (Object) "vmG");
        JsonToken jsonToken1 = JsonToken.END_ARRAY;
        tokenBuffer_Segment1.append(16, jsonToken1, (Object) null, (Object) jsonToken1);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getCurrentLocation();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.writeEndArray();
        tokenBuffer_Parser0.version();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test090213() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        RawValue rawValue0 = new RawValue("F");
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.append(515, jsonToken0, (Object) null, (Object) null, (Object) "vmG");
        JsonToken jsonToken1 = JsonToken.END_ARRAY;
        tokenBuffer_Segment1.append(16, jsonToken1, (Object) null, (Object) jsonToken1);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getCurrentLocation();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.writeEndArray();
        tokenBuffer_Parser0.version();
        tokenBuffer_Parser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test091214() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("");
        JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(jsonParser0, jsonParser0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParserSequence0);
        tokenBuffer0.writeNumber((BigDecimal) null);
        tokenBuffer0.firstToken();
        TokenBuffer tokenBuffer1 = new TokenBuffer(jsonParserSequence0);
        TokenBuffer tokenBuffer2 = tokenBuffer0.append(tokenBuffer1);
        tokenBuffer2.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test091215() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("");
        JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(jsonParser0, jsonParser0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParserSequence0);
        tokenBuffer0.writeNumber((BigDecimal) null);
        tokenBuffer0.firstToken();
        TokenBuffer tokenBuffer1 = new TokenBuffer(jsonParserSequence0);
        TokenBuffer tokenBuffer2 = tokenBuffer0.append(tokenBuffer1);
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test092216() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(515, 515, (Object) rawValue0);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment2 = tokenBuffer_Segment1.append(515, jsonToken0, (Object) null, (Object) null, (Object) "vmG");
        JsonToken jsonToken1 = JsonToken.END_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment3 = tokenBuffer_Segment2.append(16, jsonToken1, (Object) null, (Object) jsonToken1);
    }

    @Test(timeout = 4000)
    public void test092217() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(515, 515, (Object) rawValue0);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment2 = tokenBuffer_Segment1.append(515, jsonToken0, (Object) null, (Object) null, (Object) "vmG");
        JsonToken jsonToken1 = JsonToken.END_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment3 = tokenBuffer_Segment2.append(16, jsonToken1, (Object) null, (Object) jsonToken1);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test092218() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(515, 515, (Object) rawValue0);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment2 = tokenBuffer_Segment1.append(515, jsonToken0, (Object) null, (Object) null, (Object) "vmG");
        JsonToken jsonToken1 = JsonToken.END_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment3 = tokenBuffer_Segment2.append(16, jsonToken1, (Object) null, (Object) jsonToken1);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test092219() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(515, 515, (Object) rawValue0);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment2 = tokenBuffer_Segment1.append(515, jsonToken0, (Object) null, (Object) null, (Object) "vmG");
        JsonToken jsonToken1 = JsonToken.END_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment3 = tokenBuffer_Segment2.append(16, jsonToken1, (Object) null, (Object) jsonToken1);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, true, true);
        int int0 = tokenBuffer_Segment0.rawType((-817));
    }

    @Test(timeout = 4000)
    public void test092220() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(515, 515, (Object) rawValue0);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment2 = tokenBuffer_Segment1.append(515, jsonToken0, (Object) null, (Object) null, (Object) "vmG");
        JsonToken jsonToken1 = JsonToken.END_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment3 = tokenBuffer_Segment2.append(16, jsonToken1, (Object) null, (Object) jsonToken1);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, true, true);
        int int0 = tokenBuffer_Segment0.rawType((-817));
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test092221() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        RawValue rawValue0 = new RawValue("F");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(515, 515, (Object) rawValue0);
        JsonToken jsonToken0 = JsonToken.START_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment2 = tokenBuffer_Segment1.append(515, jsonToken0, (Object) null, (Object) null, (Object) "vmG");
        JsonToken jsonToken1 = JsonToken.END_ARRAY;
        TokenBuffer.Segment tokenBuffer_Segment3 = tokenBuffer_Segment2.append(16, jsonToken1, (Object) null, (Object) jsonToken1);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, true, true);
        int int0 = tokenBuffer_Segment0.rawType((-817));
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test093222() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.forceUseOfBigDecimal(true);
        tokenBuffer0._appendRaw((-699), "");
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test093223() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.forceUseOfBigDecimal(true);
        tokenBuffer0._appendRaw((-699), "");
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test093224() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.forceUseOfBigDecimal(true);
        tokenBuffer0._appendRaw((-699), "");
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test094225() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer_Segment0.next();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getNumberType();
    }

    @Test(timeout = 4000)
    public void test095226() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        DeserializationContext deserializationContext0 = objectMapper0.getDeserializationContext();
        tokenBuffer0.deserialize(tokenBuffer_Parser0, deserializationContext0);
    }

    @Test(timeout = 4000)
    public void test096227() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-59));
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.FLUSH_PASSED_TO_STREAM;
        tokenBuffer0.enable(jsonGenerator_Feature0);
        tokenBuffer0._appendRaw((byte) (-59), double0);
        tokenBuffer0.toString();
        System.setCurrentTimeMillis((byte) (-59));
    }

    @Test(timeout = 4000)
    public void test097228() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
        tokenBuffer0.writeTree(arrayNode0);
        tokenBuffer0.writeObject((Object) null);
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test097229() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
        tokenBuffer0.writeTree(arrayNode0);
        tokenBuffer0.writeObject((Object) null);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test097230() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
        tokenBuffer0.writeTree(arrayNode0);
        tokenBuffer0.writeObject((Object) null);
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test098231() throws Throwable {
        FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ObjectNode objectNode1 = jsonNodeFactory0.objectNode();
        objectNode1.path(1828);
        tokenBuffer0.writeTree(objectNode0);
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test098232() throws Throwable {
        FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ObjectNode objectNode1 = jsonNodeFactory0.objectNode();
        objectNode1.path(1828);
        tokenBuffer0.writeTree(objectNode0);
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test098233() throws Throwable {
        FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ObjectNode objectNode1 = jsonNodeFactory0.objectNode();
        objectNode1.path(1828);
        tokenBuffer0.writeTree(objectNode0);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test099234() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.append(tokenBuffer1);
        tokenBuffer0.writeNumber(1L);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test099235() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.append(tokenBuffer1);
        tokenBuffer0.writeNumber(1L);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.firstToken();
        tokenBuffer0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test099236() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.append(tokenBuffer1);
        tokenBuffer0.writeNumber(1L);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.firstToken();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test099237() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.append(tokenBuffer1);
        tokenBuffer0.writeNumber(1L);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.firstToken();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test100238() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        byte byte0 = (byte) (-59);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0.writeString((char[]) null, 304, 304);
    }

    @Test(timeout = 4000)
    public void test101239() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0._handleEOF();
    }

    @Test(timeout = 4000)
    public void test102240() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.nextLongValue((-2096L));
        tokenBuffer_Parser0.getIntValue();
    }

    @Test(timeout = 4000)
    public void test103241() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        deserializerFactoryConfig0.abstractTypeResolvers();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        tokenBuffer_Segment0.appendRaw(11, 11, (Object) deserializerFactoryConfig0, (Object) tokenBuffer1, (Object) objectMapper0);
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test103242() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        deserializerFactoryConfig0.abstractTypeResolvers();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        tokenBuffer_Segment0.appendRaw(11, 11, (Object) deserializerFactoryConfig0, (Object) tokenBuffer1, (Object) objectMapper0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, objectMapper0, false, true);
        tokenBuffer_Parser0.getCurrentName();
        tokenBuffer_Parser0.getEmbeddedObject();
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test104243() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ObjectMapper objectMapper1 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper1);
        tokenBuffer0.writeNumberField("e$", 9.223372E18F);
        Double double0 = new Double(9.223372E18F);
        // Undeclared exception!
        tokenBuffer0.serialize(tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test105244() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test105245() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test105246() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test105247() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        String string0 = tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test106248() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer_Segment0.next();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        SimpleKeyDeserializers simpleKeyDeserializers0 = new SimpleKeyDeserializers();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null);
        Float float0 = new Float((float) 16);
        tokenBuffer1.writeObject(float0);
        tokenBuffer1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test106249() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer_Segment0.next();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        SimpleKeyDeserializers simpleKeyDeserializers0 = new SimpleKeyDeserializers();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null);
        Float float0 = new Float((float) 16);
        tokenBuffer1.writeObject(float0);
        tokenBuffer1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test106250() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer_Segment0.next();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        SimpleKeyDeserializers simpleKeyDeserializers0 = new SimpleKeyDeserializers();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null);
        Float float0 = new Float((float) 16);
        tokenBuffer1.writeObject(float0);
        tokenBuffer1.firstToken();
    }

    @Test(timeout = 4000)
    public void test107251() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("");
        JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(jsonParser0, jsonParser0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParserSequence0);
        tokenBuffer0.writeNumber((BigDecimal) null);
        JsonToken jsonToken0 = tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test107252() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("");
        JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(jsonParser0, jsonParser0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParserSequence0);
        tokenBuffer0.writeNumber((BigDecimal) null);
        JsonToken jsonToken0 = tokenBuffer0.firstToken();
        TokenBuffer tokenBuffer1 = new TokenBuffer(jsonParserSequence0);
        tokenBuffer0.serialize(tokenBuffer1);
        tokenBuffer1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test107253() throws Throwable {
        JsonFactory jsonFactory0 = new JsonFactory();
        JsonParser jsonParser0 = jsonFactory0.createParser("");
        JsonParserSequence jsonParserSequence0 = JsonParserSequence.createFlattened(jsonParser0, jsonParser0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(jsonParserSequence0);
        tokenBuffer0.writeNumber((BigDecimal) null);
        JsonToken jsonToken0 = tokenBuffer0.firstToken();
        TokenBuffer tokenBuffer1 = new TokenBuffer(jsonParserSequence0);
        tokenBuffer0.serialize(tokenBuffer1);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test108254() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        Integer integer0 = new Integer((-528));
        tokenBuffer_Segment0.appendRaw(0, 0, (Object) integer0, (Object) integer0, (Object) integer0);
        tokenBuffer_Segment0._tokenTypes = (-158L);
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test108255() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        Integer integer0 = new Integer((-528));
        tokenBuffer_Segment0.appendRaw(0, 0, (Object) integer0, (Object) integer0, (Object) integer0);
        tokenBuffer_Segment0._tokenTypes = (-158L);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.getParsingContext();
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, false, false);
        tokenBuffer_Parser1.nextTextValue();
        tokenBuffer_Parser1.getTextCharacters();
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.asParser((JsonParser) tokenBuffer_Parser1);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test109256() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ObjectNode objectNode1 = objectNode0.put("J~?x{N", (byte[]) null);
        objectNode1.removeAll();
        Float float0 = new Float((-1.0F));
        objectNode1.path(48);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer1.setCharacterEscapes((CharacterEscapes) null);
        BigIntegerNode bigIntegerNode0 = new BigIntegerNode((BigInteger) null);
        bigIntegerNode0.get(500);
        tokenBuffer1.writeTree((TreeNode) null);
        tokenBuffer1.firstToken();
    }

    @Test(timeout = 4000)
    public void test109257() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ObjectNode objectNode1 = objectNode0.put("J~?x{N", (byte[]) null);
        objectNode1.removeAll();
        Float float0 = new Float((-1.0F));
        objectNode1.path(48);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer1.setCharacterEscapes((CharacterEscapes) null);
        BigIntegerNode bigIntegerNode0 = new BigIntegerNode((BigInteger) null);
        bigIntegerNode0.get(500);
        tokenBuffer1.writeTree((TreeNode) null);
        tokenBuffer1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test109258() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        JsonNodeFactory jsonNodeFactory0 = new JsonNodeFactory(false);
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ObjectNode objectNode1 = objectNode0.put("J~?x{N", (byte[]) null);
        objectNode1.removeAll();
        Float float0 = new Float((-1.0F));
        objectNode1.path(48);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer1.setCharacterEscapes((CharacterEscapes) null);
        BigIntegerNode bigIntegerNode0 = new BigIntegerNode((BigInteger) null);
        bigIntegerNode0.get(500);
        tokenBuffer1.writeTree((TreeNode) null);
        tokenBuffer1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test110259() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        BeanDeserializerFactory beanDeserializerFactory1 = new BeanDeserializerFactory((DeserializerFactoryConfig) null);
        beanDeserializerFactory1.withConfig((DeserializerFactoryConfig) null);
        BigInteger bigInteger0 = BigInteger.ZERO;
        tokenBuffer0.writeNumber(bigInteger0);
        // Undeclared exception!
        tokenBuffer0.append(tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test111260() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = tokenBuffer0.forceUseOfBigDecimal(true);
        tokenBuffer_Segment0.hasIds();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        tokenBuffer0.writeStartObject();
        // Undeclared exception!
        tokenBuffer1.append(tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test112261() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        tokenBuffer0.writeNumber(bigDecimal0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
        tokenBuffer_Parser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test112262() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        tokenBuffer0.writeNumber(bigDecimal0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test113263() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.writeObjectFieldStart("Unrecognized filter type (");
        Double double0 = new Double((byte) (-88));
        tokenBuffer0._appendRaw((byte) (-88), double0);
        String string0 = tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test113264() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.writeObjectFieldStart("Unrecognized filter type (");
        Double double0 = new Double((byte) (-88));
        tokenBuffer0._appendRaw((byte) (-88), double0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteTypeId();
    }

    @Test(timeout = 4000)
    public void test113265() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.writeObjectFieldStart("Unrecognized filter type (");
        Double double0 = new Double((byte) (-88));
        tokenBuffer0._appendRaw((byte) (-88), double0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test113266() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.writeObjectFieldStart("Unrecognized filter type (");
        Double double0 = new Double((byte) (-88));
        tokenBuffer0._appendRaw((byte) (-88), double0);
        String string0 = tokenBuffer0.toString();
        tokenBuffer0.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test114267() throws Throwable {
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(true);
        ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
        JsonParser jsonParser0 = arrayNode0.traverse();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, (TokenFilter) null, false, true);
        TokenBuffer tokenBuffer0 = new TokenBuffer(filteringParserDelegate0);
        tokenBuffer0.writeString("");
        tokenBuffer0.writeRawValue("}8BTrK\"D_s}M", (-386), 12);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test114268() throws Throwable {
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.withExactBigDecimals(true);
        ArrayNode arrayNode0 = new ArrayNode(jsonNodeFactory0);
        JsonParser jsonParser0 = arrayNode0.traverse();
        FilteringParserDelegate filteringParserDelegate0 = new FilteringParserDelegate(jsonParser0, (TokenFilter) null, false, true);
        TokenBuffer tokenBuffer0 = new TokenBuffer(filteringParserDelegate0);
        tokenBuffer0.writeString("");
        tokenBuffer0.writeRawValue("}8BTrK\"D_s}M", (-386), 12);
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test115269() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        JsonGenerator.Feature jsonGenerator_Feature0 = JsonGenerator.Feature.AUTO_CLOSE_TARGET;
        TokenBuffer tokenBuffer1 = (TokenBuffer) tokenBuffer0.disable(jsonGenerator_Feature0);
        tokenBuffer1.serialize(tokenBuffer0);
        tokenBuffer0._objectCodec = null;
        tokenBuffer0.writeEndArray();
        tokenBuffer0.toString();
        JsonNodeFactory jsonNodeFactory0 = JsonNodeFactory.instance;
        ObjectNode objectNode0 = new ObjectNode(jsonNodeFactory0);
        ObjectNode objectNode1 = jsonNodeFactory0.objectNode();
        objectNode1.path(1828);
        tokenBuffer0.writeTree(objectNode0);
        tokenBuffer0.version();
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test116270() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        tokenBuffer1.writeString((SerializableString) serializedString0);
        tokenBuffer1.writeEndObject();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.canReadObjectId();
    }

    @Test(timeout = 4000)
    public void test116271() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        tokenBuffer1.writeString((SerializableString) serializedString0);
        tokenBuffer1.writeEndObject();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.canReadTypeId();
    }

    @Test(timeout = 4000)
    public void test116272() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        tokenBuffer1.writeString((SerializableString) serializedString0);
        tokenBuffer1.writeEndObject();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        objectMapper0.getDeserializationContext();
        tokenBuffer0.writeEndObject();
        JsonToken jsonToken0 = tokenBuffer1.firstToken();
        tokenBuffer1.canWriteObjectId();
    }

    @Test(timeout = 4000)
    public void test116273() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        tokenBuffer1.writeString((SerializableString) serializedString0);
        tokenBuffer1.writeEndObject();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        objectMapper0.getDeserializationContext();
        tokenBuffer0.writeEndObject();
        JsonToken jsonToken0 = tokenBuffer1.firstToken();
    }

    @Test(timeout = 4000)
    public void test116274() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        tokenBuffer1.writeString((SerializableString) serializedString0);
        tokenBuffer1.writeEndObject();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        objectMapper0.getDeserializationContext();
        tokenBuffer0.writeEndObject();
        JsonToken jsonToken0 = tokenBuffer1.firstToken();
        tokenBuffer1.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test117275() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        SerializedString serializedString0 = new SerializedString("Internal error: should never end up through this code path");
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.copyCurrentEvent(tokenBuffer_Parser0);
        tokenBuffer_Parser0.getCurrentTokenId();
    }

    @Test(timeout = 4000)
    public void test117276() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        SerializedString serializedString0 = new SerializedString("Internal error: should never end up through this code path");
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.copyCurrentEvent(tokenBuffer_Parser0);
        tokenBuffer0.getFeatureMask();
    }

    @Test(timeout = 4000)
    public void test118277() throws Throwable {
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser((TokenBuffer.Segment) null, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.getBinaryValue();
    }

    @Test(timeout = 4000)
    public void test119278() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer tokenBuffer1 = tokenBuffer0.forceUseOfBigDecimal(true);
        JsonToken jsonToken0 = JsonToken.START_OBJECT;
        Short short0 = new Short((short) 46);
        tokenBuffer_Segment0.append(15, jsonToken0, (Object) short0, (Object) null);
        tokenBuffer0.writeString((SerializableString) null);
        tokenBuffer_Segment0.hasIds();
        tokenBuffer_Segment0.hasIds();
    }

    @Test(timeout = 4000)
    public void test119279() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer tokenBuffer1 = tokenBuffer0.forceUseOfBigDecimal(true);
        JsonToken jsonToken0 = JsonToken.START_OBJECT;
        Short short0 = new Short((short) 46);
        tokenBuffer_Segment0.append(15, jsonToken0, (Object) short0, (Object) null);
        tokenBuffer0.writeString((SerializableString) null);
        tokenBuffer_Segment0.hasIds();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        BeanDeserializerFactory beanDeserializerFactory1 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        beanDeserializerFactory1.withConfig(deserializerFactoryConfig0);
        tokenBuffer1.append(tokenBuffer0);
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test120280() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, true);
        TokenBuffer tokenBuffer0 = new TokenBuffer(tokenBuffer_Parser0, (DeserializationContext) null);
        tokenBuffer0.writeNumberField((String) null, (double) 16);
        Double double0 = new Double(65.2428724697);
        tokenBuffer0.setCurrentValue(double0);
        tokenBuffer0.writeNumber("");
        Double double1 = new Double(Double.NaN);
        Byte byte0 = new Byte((byte) 100);
        tokenBuffer0._appendRaw((-402), byte0);
        tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test121281() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        BigDecimal bigDecimal0 = new BigDecimal(338);
        tokenBuffer0._appendRaw(338, bigDecimal0);
        JsonGenerator jsonGenerator0 = tokenBuffer0.overrideStdFeatures(338, 338);
        tokenBuffer0.serialize(jsonGenerator0);
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.getValueAsString();
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser1.nextToken();
    }

    @Test(timeout = 4000)
    public void test122282() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((-828), (Object) null);
        tokenBuffer0.toString();
        tokenBuffer0.serialize(tokenBuffer0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
    }

    @Test(timeout = 4000)
    public void test123283() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0);
        Short short0 = new Short((short) 674);
        TokenBuffer.Segment tokenBuffer_Segment1 = new TokenBuffer.Segment();
        JsonToken jsonToken0 = JsonToken.END_ARRAY;
        JsonToken jsonToken1 = JsonToken.END_OBJECT;
        tokenBuffer_Segment1.append(12, jsonToken1, (Object) short0, (Object) jsonToken0, (Object) tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test124284() throws Throwable {
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer_Segment0._tokenTypes = 0L;
        TokenBuffer tokenBuffer1 = tokenBuffer0.forceUseOfBigDecimal(true);
        tokenBuffer_Segment0.hasIds();
        objectMapper0.disableDefaultTyping();
        DeserializerFactoryConfig deserializerFactoryConfig0 = new DeserializerFactoryConfig();
        tokenBuffer0.toString();
        BeanDeserializerFactory beanDeserializerFactory0 = new BeanDeserializerFactory(deserializerFactoryConfig0);
        BeanDeserializerFactory beanDeserializerFactory1 = BeanDeserializerFactory.instance;
        tokenBuffer0.writeStartObject();
        // Undeclared exception!
        tokenBuffer1.serialize(tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test125285() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        tokenBuffer0.writeNumber(bigDecimal0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getBigIntegerValue();
        SerializedString serializedString0 = DefaultPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR;
        tokenBuffer_Parser0.peekNextToken();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
        JsonGeneratorDelegate jsonGeneratorDelegate0 = new JsonGeneratorDelegate(tokenBuffer0);
        // Undeclared exception!
        tokenBuffer0.serialize(jsonGeneratorDelegate0);
    }

    @Test(timeout = 4000)
    public void test126286() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeNumberField("/go'+~ro:<", (-1277.7366F));
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test127287() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        Double double0 = new Double((byte) (-59));
        tokenBuffer0._appendRaw((byte) (-59), double0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, true);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test128288() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        JsonToken jsonToken0 = JsonToken.VALUE_NULL;
        tokenBuffer_Segment0.append((-1106), jsonToken0, (Object) tokenBuffer0, (Object) tokenBuffer0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getDecimalValue();
    }

    @Test(timeout = 4000)
    public void test129289() throws Throwable {
        FileSystemHandling.appendLineToFile((EvoSuiteFile) null, (String) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeStringField("com.fasterxml.jackson.annotation.JsonCreator$Mode", (String) null);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.toString();
    }

    @Test(timeout = 4000)
    public void test130290() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        FileSystemHandling.createFolder((EvoSuiteFile) null);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer1.serialize((JsonGenerator) null);
        tokenBuffer1.writeNumber(2142.82864046);
        tokenBuffer1.writeNumber(1L);
        tokenBuffer1.serialize(tokenBuffer0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        JsonToken jsonToken0 = JsonToken.VALUE_STRING;
        tokenBuffer_Segment0.appendRaw(0, 0, (Object) null, (Object) "! vUOMG_S", (Object) null);
        tokenBuffer_Parser0.getNumberType();
        tokenBuffer1.firstToken();
    }

    @Test(timeout = 4000)
    public void test131291() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        boolean boolean0 = false;
        SerializedString serializedString0 = new SerializedString("]:/WH");
        tokenBuffer0._appendRaw(7, serializedString0);
        tokenBuffer0.toString();
        JsonGenerator jsonGenerator0 = tokenBuffer0.setCodec(objectMapper0);
        // Undeclared exception!
        tokenBuffer0.serialize(jsonGenerator0);
    }

    @Test(timeout = 4000)
    public void test132292() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        tokenBuffer0.writeStartArray();
        tokenBuffer0.writeNullField("com.fasterxml.jackson.databind.ser.std.MapSerializer");
        Double double0 = new Double((byte) (-59));
        tokenBuffer0.writeNumber((int) (byte) (-59));
        tokenBuffer0._appendRaw((-828), (Object) null);
        tokenBuffer0.toString();
        tokenBuffer0.serialize(tokenBuffer0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
    }

    @Test(timeout = 4000)
    public void test133293() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        Byte byte0 = new Byte((byte) (-60));
        Class<Integer> class0 = Integer.TYPE;
        RawValue rawValue0 = new RawValue("Internal error: SimpleType.widenContentsBy() should never be called");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(626, 626, (Object) byte0, (Object) class0, (Object) rawValue0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, false, false);
        SerializedString serializedString0 = new SerializedString("Internal error: SimpleType.widenContentsBy() should never be called");
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        tokenBuffer0.serialize((JsonGenerator) null);
    }

    @Test(timeout = 4000)
    public void test134294() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeStringField("dv0Qyw", ") ");
        byte[] byteArray0 = new byte[1];
        byteArray0[0] = (byte) (-59);
        tokenBuffer0.writeBinary(byteArray0);
        SerializedString serializedString0 = new SerializedString("OD}ia{mXpg,[vd;Juy");
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        tokenBuffer0._appendRaw(708, ") ");
        JsonGenerator jsonGenerator0 = tokenBuffer0.setCodec((ObjectCodec) null);
        tokenBuffer0.serialize(jsonGenerator0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, false);
        tokenBuffer_Parser0.getDecimalValue();
    }

    @Test(timeout = 4000)
    public void test135295() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        Double double0 = new Double(0.0);
        tokenBuffer0._appendRaw((-582), double0);
        JsonGenerator jsonGenerator0 = tokenBuffer0.overrideStdFeatures(16, 16);
        tokenBuffer0.serialize(jsonGenerator0);
        tokenBuffer0.writeEndObject();
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test136296() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        tokenBuffer0.writeNumber(1L);
        tokenBuffer0.toString();
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.nextIntValue(16);
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, true);
        tokenBuffer_Parser1.nextFieldName();
        tokenBuffer_Parser1.getDecimalValue();
    }

    @Test(timeout = 4000)
    public void test137297() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        tokenBuffer0.writeNumber(bigDecimal0);
        tokenBuffer0.toString();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test138298() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, true);
        tokenBuffer0.writeNumber(1L);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.getDecimalValue();
    }

    @Test(timeout = 4000)
    public void test139299() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0, false);
        tokenBuffer1.writeNumber(" noJ#f1UP&1}3I8s");
        tokenBuffer0.serialize(tokenBuffer1);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.append(tokenBuffer1);
    }

    @Test(timeout = 4000)
    public void test140300() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0, false);
        tokenBuffer0.serialize((JsonGenerator) null);
        tokenBuffer1.writeNumber((-1L));
        tokenBuffer1.serialize(tokenBuffer0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, false);
        tokenBuffer_Parser0.nextFieldName();
        SerializedString serializedString0 = new SerializedString("VO[JD^rDYZAsmJ{:#r");
        tokenBuffer_Segment0.appendRaw(0, 0, (Object) null, (Object) null, (Object) serializedString0);
        tokenBuffer_Parser0.getNumberType();
    }

    @Test(timeout = 4000)
    public void test141301() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        tokenBuffer0.writeStringField("OBJECT_AND_NON_CONCRETE", "");
        tokenBuffer0.writeNumberField("/go'+~ro:<", (-1277.7366F));
        tokenBuffer0._appendRaw((-1298), tokenBuffer_Segment0);
        tokenBuffer0.toString();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getTextLength();
        tokenBuffer_Parser0.nextFieldName();
    }

    @Test(timeout = 4000)
    public void test142302() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        Double double0 = new Double(16);
        tokenBuffer0.writeNumberField("cd", (-1277.7366F));
        RoundingMode roundingMode0 = RoundingMode.UP;
        MathContext mathContext0 = new MathContext(16, roundingMode0);
        BigDecimal bigDecimal0 = new BigDecimal((-262L), mathContext0);
        tokenBuffer0._appendRaw(16, bigDecimal0);
        tokenBuffer0.writeNumberField("cd", (-81L));
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
        tokenBuffer_Parser0.nextFieldName();
    }

    @Test(timeout = 4000)
    public void test143303() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        tokenBuffer0.writeNumber(1L);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test144304() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        SerializedString serializedString0 = new SerializedString("OD}ia{mXpg,[vd;Juy");
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        tokenBuffer0.toString();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test145305() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        Byte byte0 = new Byte((byte) (-60));
        Class<Integer> class0 = Integer.TYPE;
        RawValue rawValue0 = new RawValue("Internal error: SimpleType.widenContentsBy() should never be called");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(626, 626, (Object) byte0, (Object) class0, (Object) rawValue0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, false, false);
        SerializedString serializedString0 = new SerializedString("Internal error:VSimpleType.widenContentsBy() should never be called");
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        tokenBuffer0.toString();
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.copyCurrentEvent(tokenBuffer_Parser0);
        tokenBuffer0.firstToken();
    }

    @Test(timeout = 4000)
    public void test146306() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        SerializedString serializedString0 = new SerializedString("O}ia{mXpg,T3[vd;Juy");
        tokenBuffer0._appendRaw(7, tokenBuffer_Segment0);
        tokenBuffer0.toString();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, true);
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer0.copyCurrentStructure((JsonParser) null);
    }

    @Test(timeout = 4000)
    public void test147307() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null, false);
        tokenBuffer0.writeNumber(1L);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test148308() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        Byte byte0 = new Byte((byte) (-60));
        Class<Integer> class0 = Integer.TYPE;
        RawValue rawValue0 = new RawValue("Internal error: SimpleType.widenContentsBy() should never be called");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(626, 626, (Object) byte0, (Object) class0, (Object) rawValue0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, false, false);
        SerializedString serializedString0 = new SerializedString("Internal error: SimpleType.widenContentsBy() should never be called");
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.copyCurrentEvent(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test149309() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        JsonParser.Feature[] jsonParser_FeatureArray0 = new JsonParser.Feature[1];
        JsonParser.Feature jsonParser_Feature0 = JsonParser.Feature.ALLOW_UNQUOTED_CONTROL_CHARS;
        jsonParser_FeatureArray0[0] = jsonParser_Feature0;
        ObjectMapper objectMapper1 = objectMapper0.disable(jsonParser_FeatureArray0);
        DeserializationFeature deserializationFeature0 = DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES;
        ObjectMapper objectMapper2 = objectMapper1.disable(deserializationFeature0);
        SimpleFilterProvider simpleFilterProvider0 = new SimpleFilterProvider();
        Class<Short>[] classArray0 = (Class<Short>[]) Array.newInstance(Class.class, 1);
        Class<Short> class0 = Short.class;
        classArray0[0] = class0;
        objectMapper2.registerSubtypes(classArray0);
        SimpleFilterProvider simpleFilterProvider1 = simpleFilterProvider0.setDefaultFilter((SimpleBeanPropertyFilter) null);
        ObjectMapper objectMapper3 = objectMapper2.setFilterProvider(simpleFilterProvider1);
        FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
        JsonFormatVisitorWrapper.Base jsonFormatVisitorWrapper_Base0 = new JsonFormatVisitorWrapper.Base();
        objectMapper3.acceptJsonFormatVisitor((Class<?>) class0, (JsonFormatVisitorWrapper) jsonFormatVisitorWrapper_Base0);
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper3, true);
        POJONode pOJONode0 = new POJONode(simpleFilterProvider1);
        tokenBuffer0.writeTree(pOJONode0);
        JsonParser jsonParser0 = objectMapper3.treeAsTokens(pOJONode0);
        tokenBuffer0.copyCurrentStructure(jsonParser0);
    }

    @Test(timeout = 4000)
    public void test150310() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeNumber((short) (-4757));
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        Double double0 = new Double(16);
        tokenBuffer0._appendRaw(40, double0);
        // Undeclared exception!
        tokenBuffer0.serialize(tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test151311() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._last;
        BigDecimal bigDecimal0 = new BigDecimal((long) 16);
        tokenBuffer0._appendRaw(69, tokenBuffer_Segment0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, true);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser1.nextTextValue();
        tokenBuffer_Parser1.nextFieldName();
    }

    @Test(timeout = 4000)
    public void test152312() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = new TokenBuffer.Segment();
        Byte byte0 = new Byte((byte) (-60));
        Class<Integer> class0 = Integer.TYPE;
        RawValue rawValue0 = new RawValue("Internal error: SimpleType.widenContentsBy() should never be called");
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.appendRaw(626, 626, (Object) byte0, (Object) class0, (Object) rawValue0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.nextIntValue((-1212));
        tokenBuffer_Parser0.nextTextValue();
        JsonFactory jsonFactory0 = new JsonFactory();
        DefaultSerializerProvider.Impl defaultSerializerProvider_Impl0 = new DefaultSerializerProvider.Impl();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null, false);
        tokenBuffer1.writeNumberField("", (-1013L));
        TokenBuffer.Segment tokenBuffer_Segment2 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser(tokenBuffer_Segment2, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer1.copyCurrentEvent(tokenBuffer_Parser0);
        tokenBuffer1.firstToken();
        tokenBuffer_Parser0.getTextCharacters();
    }

    @Test(timeout = 4000)
    public void test153313() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0, false);
        tokenBuffer0.serialize((JsonGenerator) null);
        tokenBuffer1.writeNumber((-1L));
        tokenBuffer1.serialize(tokenBuffer0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, false);
        tokenBuffer_Parser0.nextFieldName();
        JsonToken jsonToken0 = JsonToken.VALUE_STRING;
        SerializedString serializedString0 = new SerializedString("VO[JD^rDYZAsmJ{:#r");
        tokenBuffer_Segment0.appendRaw(0, 0, (Object) null, (Object) null, (Object) serializedString0);
        tokenBuffer_Parser0.getNumberType();
        tokenBuffer_Parser0.getValueAsString("VO[JD^rDYZAsmJ{:#r");
    }

    @Test(timeout = 4000)
    public void test154314() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        tokenBuffer0.writeStringField(",'~", "Z&;<`9O/`T");
        SerializedString serializedString0 = new SerializedString(",'~");
        tokenBuffer0.writeRawValue((SerializableString) serializedString0);
        tokenBuffer0.toString();
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        JsonToken jsonToken0 = JsonToken.VALUE_FALSE;
        BigInteger bigInteger0 = BigInteger.TEN;
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer_Segment0.append(3101, jsonToken0, (Object) bigInteger0, (Object) tokenBuffer0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, objectMapper0, true, true);
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, true, true);
        tokenBuffer_Parser1.nextTextValue();
        tokenBuffer_Parser0.getValueAsString();
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.copyCurrentEvent(tokenBuffer_Parser1);
        tokenBuffer0.firstToken();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        DefaultDeserializationContext.Impl defaultDeserializationContext_Impl0 = new DefaultDeserializationContext.Impl(beanDeserializerFactory0);
        defaultDeserializationContext_Impl0.getBase64Variant();
    }

    @Test(timeout = 4000)
    public void test155315() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer.Segment tokenBuffer_Segment1 = tokenBuffer0._first;
        BigDecimal bigDecimal0 = BigDecimal.ONE;
        Integer integer0 = new Integer(10);
        tokenBuffer0._appendRaw(1214, integer0);
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment1, (ObjectCodec) null, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
        TokenBuffer.Parser tokenBuffer_Parser1 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, false, false);
        TokenBuffer.Segment tokenBuffer_Segment2 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser2 = new TokenBuffer.Parser(tokenBuffer_Segment2, (ObjectCodec) null, false, false);
        JsonLocation jsonLocation0 = tokenBuffer_Parser2.getTokenLocation();
        tokenBuffer_Parser0.setLocation(jsonLocation0);
        JsonToken jsonToken0 = JsonToken.END_ARRAY;
        tokenBuffer_Segment0.append(9, jsonToken0);
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser1.nextFieldName();
    }

    @Test(timeout = 4000)
    public void test156316() throws Throwable {
        FileSystemHandling.setPermissions((EvoSuiteFile) null, true, true, true);
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.writeStringField("dv0Qyw", "dv0Qyw");
        SerializedString serializedString0 = new SerializedString("O}ia{mXpg,T3[vd;Juy");
        tokenBuffer0._appendRaw(708, "dv0Qyw");
        tokenBuffer0.toString();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, (ObjectCodec) null, true, true);
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getText();
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
    }

    @Test(timeout = 4000)
    public void test157317() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        BigDecimal bigDecimal0 = new BigDecimal(16);
        tokenBuffer0.writeNumber(bigDecimal0);
        tokenBuffer0.writeStringField("Unrecognized value type for VALUE_NUMBER_FLOAT: ", "Unrecognized value type for VALUE_NUMBER_FLOAT: ");
        tokenBuffer0.writeNull();
        tokenBuffer0.writeNumber(bigDecimal0);
        tokenBuffer0.writeStartObject();
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        tokenBuffer0.writeNumber(16);
        beanDeserializerFactory0.withConfig((DeserializerFactoryConfig) null);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null, true);
        BigInteger bigInteger0 = BigInteger.ONE;
        tokenBuffer0.writeNumber(bigInteger0);
        tokenBuffer1.append(tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test158318() throws Throwable {
        TokenBuffer tokenBuffer0 = new TokenBuffer((ObjectCodec) null);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.writeStringField("dv0Qyw", "dv0Qyw");
        BeanDeserializerFactory beanDeserializerFactory0 = BeanDeserializerFactory.instance;
        beanDeserializerFactory0.withConfig((DeserializerFactoryConfig) null);
        TokenBuffer tokenBuffer1 = new TokenBuffer((ObjectCodec) null, true);
        JsonToken jsonToken0 = JsonToken.START_OBJECT;
        tokenBuffer1._append(jsonToken0, (Object) null);
        BigInteger bigInteger0 = BigInteger.ZERO;
        tokenBuffer0.writeNumber(bigInteger0);
        tokenBuffer1.append(tokenBuffer0);
    }

    @Test(timeout = 4000)
    public void test159319() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer tokenBuffer1 = new TokenBuffer(objectMapper0, false);
        tokenBuffer1.writeNumber(" noJ#f1UP&1}3I8s");
        tokenBuffer0.serialize(tokenBuffer1);
        tokenBuffer1.serialize(tokenBuffer0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, false);
        tokenBuffer_Parser0.nextFieldName();
        tokenBuffer0.append(tokenBuffer1);
    }

    @Test(timeout = 4000)
    public void test160320() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        TokenBuffer tokenBuffer0 = new TokenBuffer(objectMapper0);
        TokenBuffer.Segment tokenBuffer_Segment0 = tokenBuffer0._first;
        tokenBuffer0.writeArrayFieldStart("#`g");
        tokenBuffer0.writeStringField("dv0Qyw", "dv0Qyw");
        SerializedString serializedString0 = new SerializedString("dv0Qyw");
        tokenBuffer0.toString();
        TokenBuffer.Parser tokenBuffer_Parser0 = new TokenBuffer.Parser(tokenBuffer_Segment0, objectMapper0, false, true);
        tokenBuffer_Parser0.nextTextValue();
        tokenBuffer_Parser0.getValueAsString();
        // Undeclared exception!
        tokenBuffer0.copyCurrentStructure(tokenBuffer_Parser0);
    }
}
