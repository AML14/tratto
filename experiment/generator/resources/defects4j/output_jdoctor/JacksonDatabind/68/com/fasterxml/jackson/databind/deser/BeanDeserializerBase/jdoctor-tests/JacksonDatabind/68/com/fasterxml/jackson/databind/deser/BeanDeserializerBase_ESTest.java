/*
 * This file was automatically generated by EvoSuite
 * Thu Mar 28 06:05:09 GMT 2024
 */
package com.fasterxml.jackson.databind.deser;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.ObjectReader;
import com.fasterxml.jackson.databind.deser.CreatorProperty;
import com.fasterxml.jackson.databind.ext.CoreXMLDeserializers;
import com.fasterxml.jackson.databind.ext.NioPathDeserializer;
import com.fasterxml.jackson.databind.node.FloatNode;
import java.io.IOException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class BeanDeserializerBase_ESTest extends BeanDeserializerBase_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        FloatNode floatNode0 = FloatNode.valueOf((-4922.759F));
        Class<IOException> class0 = IOException.class;
        objectMapper0.convertValue((Object) floatNode0, class0);
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        Class<CreatorProperty> class0 = CreatorProperty.class;
        ObjectReader objectReader0 = objectMapper0.readerFor(class0);
    }

    @Test(timeout = 4000)
    public void test22() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ObjectMapper objectMapper1 = objectMapper0.enableDefaultTyping();
        Class<CoreXMLDeserializers.Std> class0 = CoreXMLDeserializers.Std.class;
        ObjectReader objectReader0 = objectMapper1.readerFor(class0);
    }

    @Test(timeout = 4000)
    public void test33() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        Class<NioPathDeserializer> class0 = NioPathDeserializer.class;
        ObjectReader objectReader0 = objectMapper0.readerFor(class0);
    }

    @Test(timeout = 4000)
    public void test44() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ObjectIdGenerators.UUIDGenerator objectIdGenerators_UUIDGenerator0 = new ObjectIdGenerators.UUIDGenerator();
        Class<IOException> class0 = IOException.class;
        objectMapper0.convertValue((Object) objectIdGenerators_UUIDGenerator0, class0);
    }

    @Test(timeout = 4000)
    public void test55() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        ObjectMapper.DefaultTyping objectMapper_DefaultTyping0 = ObjectMapper.DefaultTyping.NON_FINAL;
        objectMapper0.enableDefaultTyping(objectMapper_DefaultTyping0);
        Class<IOException> class0 = IOException.class;
        objectMapper0.convertValue((Object) class0, class0);
    }

    @Test(timeout = 4000)
    public void test66() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        Class<IOException> class0 = IOException.class;
        Long long0 = new Long(0L);
        objectMapper0.convertValue((Object) long0, class0);
    }

    @Test(timeout = 4000)
    public void test77() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        Integer integer0 = new Integer(360);
        Class<IOException> class0 = IOException.class;
        objectMapper0.convertValue((Object) integer0, class0);
    }

    @Test(timeout = 4000)
    public void test88() throws Throwable {
        ObjectMapper objectMapper0 = new ObjectMapper();
        Class<IOException> class0 = IOException.class;
        IOException iOException0 = objectMapper0.convertValue((Object) class0, class0);
        iOException0.getMessage();
    }
}
