/*
 * This file was automatically generated by EvoSuite
 * Mon Nov 20 07:22:47 GMT 2023
 */
package org.apache.commons.jxpath.ri.compiler;

import org.junit.Test;
import static org.junit.Assert.*;
import java.util.Locale;
import org.apache.commons.jxpath.JXPathContext;
import org.apache.commons.jxpath.ri.JXPathContextReferenceImpl;
import org.apache.commons.jxpath.ri.QName;
import org.apache.commons.jxpath.ri.axes.RootContext;
import org.apache.commons.jxpath.ri.compiler.CoreOperationAdd;
import org.apache.commons.jxpath.ri.compiler.CoreOperationGreaterThanOrEqual;
import org.apache.commons.jxpath.ri.compiler.CoreOperationLessThan;
import org.apache.commons.jxpath.ri.compiler.Expression;
import org.apache.commons.jxpath.ri.model.NodePointer;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true)
public class CoreOperationLessThan_ESTest extends CoreOperationLessThan_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test00() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
        CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(coreOperationAdd0, coreOperationAdd0);
        CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(coreOperationGreaterThanOrEqual0, coreOperationAdd0);
        String string0 = coreOperationLessThan0.getSymbol();
    }

    @Test(timeout = 4000)
    public void test11() throws Throwable {
        Expression[] expressionArray0 = new Expression[0];
        CoreOperationAdd coreOperationAdd0 = new CoreOperationAdd(expressionArray0);
        CoreOperationGreaterThanOrEqual coreOperationGreaterThanOrEqual0 = new CoreOperationGreaterThanOrEqual(coreOperationAdd0, coreOperationAdd0);
        CoreOperationLessThan coreOperationLessThan0 = new CoreOperationLessThan(coreOperationGreaterThanOrEqual0, coreOperationAdd0);
        QName qName0 = new QName("<");
        Locale locale0 = Locale.ROOT;
        NodePointer nodePointer0 = NodePointer.newNodePointer(qName0, "org.apache.commons.jxpath.ri.parser.XPathParser", locale0);
        JXPathContextReferenceImpl jXPathContextReferenceImpl0 = new JXPathContextReferenceImpl((JXPathContext) null, nodePointer0.WHOLE_COLLECTION, nodePointer0);
        RootContext rootContext0 = new RootContext(jXPathContextReferenceImpl0, nodePointer0);
        CoreOperationLessThan coreOperationLessThan1 = new CoreOperationLessThan(coreOperationAdd0, coreOperationLessThan0);
        Object object0 = coreOperationLessThan1.computeValue(rootContext0);
    }
}
