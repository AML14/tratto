/*
 * This file was automatically generated by EvoSuite
 * Mon Oct 16 02:08:36 GMT 2023
 */
package org.apache.commons.lang3;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.lang.reflect.Array;
import java.util.AbstractMap;
import java.util.Arrays;
import java.util.Map;
import org.apache.commons.lang3.ArrayUtils;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class)
@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class ArrayUtils_ESTest extends ArrayUtils_ESTest_scaffolding {

    @Test(timeout = 4000)
    public void test0000() throws Throwable {
        byte[] byteArray0 = new byte[5];
        ArrayUtils.remove(byteArray0, (int) (byte) 5);
    }

    @Test(timeout = 4000)
    public void test0011() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 0);
    }

    @Test(timeout = 4000)
    public void test0013() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 0);
        Arrays.equals(new boolean[] { false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test0024() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        int int0 = ArrayUtils.indexOf(booleanArray0, true, Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test0026() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        int int0 = ArrayUtils.indexOf(booleanArray0, true, Integer.MAX_VALUE);
        Arrays.equals(new boolean[] { false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test0037() throws Throwable {
        float[] floatArray0 = new float[8];
        int int0 = ArrayUtils.indexOf(floatArray0, (-1539.0F), 1352);
    }

    @Test(timeout = 4000)
    public void test00410() throws Throwable {
        double[] doubleArray0 = new double[5];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 1985, 0.0);
    }

    @Test(timeout = 4000)
    public void test00513() throws Throwable {
        double[] doubleArray0 = new double[1];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1.0, 1);
    }

    @Test(timeout = 4000)
    public void test00616() throws Throwable {
        double[] doubleArray0 = new double[3];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 0);
    }

    @Test(timeout = 4000)
    public void test00719() throws Throwable {
        double[] doubleArray0 = new double[4];
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0, 3751, (-1.0));
    }

    @Test(timeout = 4000)
    public void test00822() throws Throwable {
        byte[] byteArray0 = new byte[9];
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-100), 2022);
    }

    @Test(timeout = 4000)
    public void test00925() throws Throwable {
        char[] charArray0 = new char[6];
        charArray0[1] = 'u';
        int int0 = ArrayUtils.lastIndexOf(charArray0, '\"', 4586);
    }

    @Test(timeout = 4000)
    public void test01028() throws Throwable {
        char[] charArray0 = new char[1];
        charArray0[0] = 'j';
        boolean boolean0 = ArrayUtils.contains(charArray0, '@');
    }

    @Test(timeout = 4000)
    public void test01131() throws Throwable {
        char[] charArray0 = new char[1];
        int int0 = ArrayUtils.indexOf(charArray0, '+', 551);
    }

    @Test(timeout = 4000)
    public void test01234() throws Throwable {
        short[] shortArray0 = new short[7];
        shortArray0[2] = (short) 3693;
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 48);
    }

    @Test(timeout = 4000)
    public void test01337() throws Throwable {
        int[] intArray0 = new int[3];
        int int0 = ArrayUtils.indexOf(intArray0, 0, 3847);
    }

    @Test(timeout = 4000)
    public void test01440() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        ArrayUtils.reverse(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test01441() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        ArrayUtils.reverse(booleanArray0);
        Arrays.equals(new boolean[] { false, false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test01542() throws Throwable {
        float[] floatArray0 = new float[2];
        ArrayUtils.reverse(floatArray0);
    }

    @Test(timeout = 4000)
    public void test01644() throws Throwable {
        double[] doubleArray0 = new double[8];
        ArrayUtils.reverse(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test01746() throws Throwable {
        byte[] byteArray0 = new byte[2];
        ArrayUtils.reverse(byteArray0);
    }

    @Test(timeout = 4000)
    public void test01848() throws Throwable {
        char[] charArray0 = new char[3];
        ArrayUtils.reverse(charArray0);
    }

    @Test(timeout = 4000)
    public void test01950() throws Throwable {
        short[] shortArray0 = new short[0];
        ArrayUtils.reverse(shortArray0);
    }

    @Test(timeout = 4000)
    public void test02052() throws Throwable {
        int[] intArray0 = new int[0];
        ArrayUtils.reverse(intArray0);
    }

    @Test(timeout = 4000)
    public void test02154() throws Throwable {
        long[] longArray0 = new long[3];
        ArrayUtils.reverse(longArray0);
    }

    @Test(timeout = 4000)
    public void test02256() throws Throwable {
        Object[] objectArray0 = new Object[2];
        ArrayUtils.reverse(objectArray0);
    }

    @Test(timeout = 4000)
    public void test02357() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        boolean[] booleanArray1 = new boolean[8];
        booleanArray1.equals((Object) booleanArray0);
    }

    @Test(timeout = 4000)
    public void test02358() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        boolean[] booleanArray1 = new boolean[8];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test02362() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        boolean[] booleanArray1 = new boolean[8];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
        booleanArray0.equals((Object) booleanArray1);
    }

    @Test(timeout = 4000)
    public void test02363() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        boolean[] booleanArray1 = new boolean[8];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
        booleanArray1.equals((Object) booleanArray0);
    }

    @Test(timeout = 4000)
    public void test02365() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        boolean[] booleanArray1 = new boolean[8];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
        Arrays.equals(new boolean[] { false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test02366() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        boolean[] booleanArray1 = new boolean[8];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
        Arrays.equals(new boolean[] { false, false, false, false, false, false, false, false }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test02467() throws Throwable {
        short[] shortArray0 = new short[3];
        Short[] shortArray1 = new Short[5];
        short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    }

    @Test(timeout = 4000)
    public void test02471() throws Throwable {
        short[] shortArray0 = new short[3];
        Short[] shortArray1 = new Short[5];
        short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
        shortArray2.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test02473() throws Throwable {
        short[] shortArray0 = new short[3];
        Short[] shortArray1 = new Short[5];
        short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
        boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
    }

    @Test(timeout = 4000)
    public void test02478() throws Throwable {
        short[] shortArray0 = new short[3];
        Short[] shortArray1 = new Short[5];
        short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
        boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
        shortArray0.equals((Object) shortArray2);
    }

    @Test(timeout = 4000)
    public void test02479() throws Throwable {
        short[] shortArray0 = new short[3];
        Short[] shortArray1 = new Short[5];
        short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
        boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray2);
        shortArray2.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test02583() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 4, 4);
    }

    @Test(timeout = 4000)
    public void test02588() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 4, 4);
        booleanArray1.equals((Object) booleanArray0);
    }

    @Test(timeout = 4000)
    public void test02589() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 4, 4);
        Arrays.equals(new boolean[] { false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test02590() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 4, 4);
        Arrays.equals(new boolean[] {}, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test02691() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test02696() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 0);
        booleanArray1.equals((Object) booleanArray0);
    }

    @Test(timeout = 4000)
    public void test02697() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 0);
        Arrays.equals(new boolean[] { false, false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test02698() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 0, 0);
        Arrays.equals(new boolean[] {}, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test02799() throws Throwable {
        float[] floatArray0 = new float[1];
        float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test027104() throws Throwable {
        float[] floatArray0 = new float[1];
        float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, 0);
        floatArray1.equals((Object) floatArray0);
    }

    @Test(timeout = 4000)
    public void test028107() throws Throwable {
        double[] doubleArray0 = new double[0];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 0);
    }

    @Test(timeout = 4000)
    public void test028112() throws Throwable {
        double[] doubleArray0 = new double[0];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 0);
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test029115() throws Throwable {
        double[] doubleArray0 = new double[3];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test029120() throws Throwable {
        double[] doubleArray0 = new double[3];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 0, 0);
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test030123() throws Throwable {
        Short[] shortArray0 = new Short[5];
        Short short0 = new Short((short) 1588);
    }

    @Test(timeout = 4000)
    public void test030125() throws Throwable {
        Short[] shortArray0 = new Short[5];
        Short short0 = new Short((short) 1588);
        shortArray0[0] = short0;
        short short1 = (short) 2;
        byte[] byteArray0 = new byte[2];
        byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) shortArray0[0], (int) short1);
    }

    @Test(timeout = 4000)
    public void test030131() throws Throwable {
        Short[] shortArray0 = new Short[5];
        Short short0 = new Short((short) 1588);
        shortArray0[0] = short0;
        short short1 = (short) 2;
        byte[] byteArray0 = new byte[2];
        byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) shortArray0[0], (int) short1);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test031134() throws Throwable {
        char[] charArray0 = new char[2];
        char[] charArray1 = ArrayUtils.subarray(charArray0, 831, 831);
    }

    @Test(timeout = 4000)
    public void test031139() throws Throwable {
        char[] charArray0 = new char[2];
        char[] charArray1 = ArrayUtils.subarray(charArray0, 831, 831);
        charArray1.equals((Object) charArray0);
    }

    @Test(timeout = 4000)
    public void test032142() throws Throwable {
        short[] shortArray0 = new short[0];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (byte) (-46), 1123);
    }

    @Test(timeout = 4000)
    public void test032147() throws Throwable {
        short[] shortArray0 = new short[0];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (byte) (-46), 1123);
        shortArray1.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test033150() throws Throwable {
        short[] shortArray0 = new short[8];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, 0, (-3540));
    }

    @Test(timeout = 4000)
    public void test033155() throws Throwable {
        short[] shortArray0 = new short[8];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, 0, (-3540));
        shortArray1.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test034158() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.subarray(intArray0, 0, (-181));
    }

    @Test(timeout = 4000)
    public void test034163() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.subarray(intArray0, 0, (-181));
        intArray1.equals((Object) intArray0);
    }

    @Test(timeout = 4000)
    public void test035166() throws Throwable {
        long[] longArray0 = new long[0];
        long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test035171() throws Throwable {
        long[] longArray0 = new long[0];
        long[] longArray1 = ArrayUtils.subarray(longArray0, 0, 0);
        longArray1.equals((Object) longArray0);
    }

    @Test(timeout = 4000)
    public void test036174() throws Throwable {
        String string0 = ArrayUtils.toString((Object) null);
    }

    @Test(timeout = 4000)
    public void test037176() throws Throwable {
        short[] shortArray0 = new short[1];
        short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 0);
    }

    @Test(timeout = 4000)
    public void test037181() throws Throwable {
        short[] shortArray0 = new short[1];
        short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) 0);
        shortArray1.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test038184() throws Throwable {
        Object object0 = new Object();
    }

    @Test(timeout = 4000)
    public void test038185() throws Throwable {
        Object object0 = new Object();
        Object[] objectArray0 = ArrayUtils.removeElement((Object[]) null, object0);
    }

    @Test(timeout = 4000)
    public void test039186() throws Throwable {
        long[] longArray0 = new long[3];
        long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
    }

    @Test(timeout = 4000)
    public void test039191() throws Throwable {
        long[] longArray0 = new long[3];
        long[] longArray1 = ArrayUtils.removeElement(longArray0, 0L);
        longArray1.equals((Object) longArray0);
    }

    @Test(timeout = 4000)
    public void test040194() throws Throwable {
        int[] intArray0 = ArrayUtils.removeElement((int[]) null, (-159));
    }

    @Test(timeout = 4000)
    public void test041195() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.removeElement(intArray0, (-416));
    }

    @Test(timeout = 4000)
    public void test041200() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.removeElement(intArray0, (-416));
        intArray1.equals((Object) intArray0);
    }

    @Test(timeout = 4000)
    public void test042203() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (-4025.3044F));
    }

    @Test(timeout = 4000)
    public void test042208() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (-4025.3044F));
        floatArray1.equals((Object) floatArray0);
    }

    @Test(timeout = 4000)
    public void test043211() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
    }

    @Test(timeout = 4000)
    public void test043213() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        byte[] byteArray0 = ArrayUtils.removeElement(arrayUtils0.EMPTY_BYTE_ARRAY, (byte) (-32));
    }

    @Test(timeout = 4000)
    public void test044217() throws Throwable {
        short[] shortArray0 = new short[8];
        short[] shortArray1 = ArrayUtils.remove(shortArray0, 0);
    }

    @Test(timeout = 4000)
    public void test044222() throws Throwable {
        short[] shortArray0 = new short[8];
        short[] shortArray1 = ArrayUtils.remove(shortArray0, 0);
        shortArray1.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test045225() throws Throwable {
        short[] shortArray0 = new short[1];
        short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test045230() throws Throwable {
        short[] shortArray0 = new short[1];
        short[] shortArray1 = ArrayUtils.remove(shortArray0, (int) (byte) 0);
        shortArray1.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test046233() throws Throwable {
        String[] stringArray0 = new String[6];
        String[] stringArray1 = ArrayUtils.remove(stringArray0, 0);
    }

    @Test(timeout = 4000)
    public void test046238() throws Throwable {
        String[] stringArray0 = new String[6];
        String[] stringArray1 = ArrayUtils.remove(stringArray0, 0);
        stringArray1.equals((Object) stringArray0);
    }

    @Test(timeout = 4000)
    public void test047239() throws Throwable {
        long[] longArray0 = new long[4];
        long[] longArray1 = ArrayUtils.remove(longArray0, 0);
    }

    @Test(timeout = 4000)
    public void test047244() throws Throwable {
        long[] longArray0 = new long[4];
        long[] longArray1 = ArrayUtils.remove(longArray0, 0);
        longArray1.equals((Object) longArray0);
    }

    @Test(timeout = 4000)
    public void test048247() throws Throwable {
        int[] intArray0 = new int[7];
        int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    }

    @Test(timeout = 4000)
    public void test048252() throws Throwable {
        int[] intArray0 = new int[7];
        int[] intArray1 = ArrayUtils.remove(intArray0, 0);
        intArray1.equals((Object) intArray0);
    }

    @Test(timeout = 4000)
    public void test049255() throws Throwable {
        float[] floatArray0 = new float[3];
        float[] floatArray1 = ArrayUtils.remove(floatArray0, 0);
    }

    @Test(timeout = 4000)
    public void test049260() throws Throwable {
        float[] floatArray0 = new float[3];
        float[] floatArray1 = ArrayUtils.remove(floatArray0, 0);
        floatArray1.equals((Object) floatArray0);
    }

    @Test(timeout = 4000)
    public void test050263() throws Throwable {
        double[] doubleArray0 = new double[4];
        double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 0);
    }

    @Test(timeout = 4000)
    public void test050268() throws Throwable {
        double[] doubleArray0 = new double[4];
        double[] doubleArray1 = ArrayUtils.remove(doubleArray0, 0);
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test051271() throws Throwable {
        char[] charArray0 = new char[9];
        char[] charArray1 = ArrayUtils.remove(charArray0, 0);
    }

    @Test(timeout = 4000)
    public void test051276() throws Throwable {
        char[] charArray0 = new char[9];
        char[] charArray1 = ArrayUtils.remove(charArray0, 0);
        charArray1.equals((Object) charArray0);
    }

    @Test(timeout = 4000)
    public void test052279() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byte[] byteArray1 = ArrayUtils.remove(byteArray0, 1);
    }

    @Test(timeout = 4000)
    public void test052284() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byte[] byteArray1 = ArrayUtils.remove(byteArray0, 1);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test053287() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        booleanArray0[1] = true;
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 2341);
    }

    @Test(timeout = 4000)
    public void test053289() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        booleanArray0[1] = true;
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 2341);
        Arrays.equals(new boolean[] { false, true, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test054290() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test054292() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, false);
        Arrays.equals(new boolean[] { false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test055293() throws Throwable {
        short[] shortArray0 = new short[3];
        shortArray0[0] = (short) 1019;
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 1019);
    }

    @Test(timeout = 4000)
    public void test056296() throws Throwable {
        Object[] objectArray0 = new Object[8];
        objectArray0[1] = (Object) (-2312L);
        objectArray0[2] = (Object) (-2312L);
        objectArray0[3] = (Object) (-780L);
        objectArray0[4] = objectArray0[2];
        objectArray0[5] = (Object) (-2312L);
        objectArray0[6] = (Object) (-2312L);
        objectArray0[7] = (Object) (-780L);
        int int0 = ArrayUtils.lastIndexOf(objectArray0, (Object) null, 3937);
    }

    @Test(timeout = 4000)
    public void test057298() throws Throwable {
        Object[] objectArray0 = new Object[6];
        Object object0 = new Object();
    }

    @Test(timeout = 4000)
    public void test057299() throws Throwable {
        Object[] objectArray0 = new Object[6];
        Object object0 = new Object();
        objectArray0[1] = object0;
        int int0 = ArrayUtils.lastIndexOf(objectArray0, object0);
    }

    @Test(timeout = 4000)
    public void test058301() throws Throwable {
        long[] longArray0 = new long[6];
        longArray0[0] = (-2319L);
        int int0 = ArrayUtils.lastIndexOf(longArray0, (-2319L));
    }

    @Test(timeout = 4000)
    public void test059304() throws Throwable {
        long[] longArray0 = new long[4];
        longArray0[1] = (-1L);
        int int0 = ArrayUtils.lastIndexOf(longArray0, (-1L));
    }

    @Test(timeout = 4000)
    public void test060307() throws Throwable {
        int[] intArray0 = new int[9];
        intArray0[7] = (-2032);
        int int0 = ArrayUtils.lastIndexOf(intArray0, (-2032), 792);
    }

    @Test(timeout = 4000)
    public void test061310() throws Throwable {
        int[] intArray0 = new int[2];
        intArray0[1] = 2;
        int int0 = ArrayUtils.lastIndexOf(intArray0, 0);
    }

    @Test(timeout = 4000)
    public void test062313() throws Throwable {
        int[] intArray0 = new int[9];
        int int0 = ArrayUtils.lastIndexOf(intArray0, 96);
    }

    @Test(timeout = 4000)
    public void test063316() throws Throwable {
        float[] floatArray0 = new float[5];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (float) 0, 0);
    }

    @Test(timeout = 4000)
    public void test064319() throws Throwable {
        float[] floatArray0 = new float[3];
        floatArray0[0] = (-1.0F);
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (-1.0F));
    }

    @Test(timeout = 4000)
    public void test065322() throws Throwable {
        Float[] floatArray0 = new Float[4];
        Float float0 = new Float(0.0);
    }

    @Test(timeout = 4000)
    public void test065324() throws Throwable {
        Float[] floatArray0 = new Float[4];
        Float float0 = new Float(0.0);
        floatArray0[0] = float0;
        floatArray0[1] = floatArray0[0];
        floatArray0[2] = floatArray0[1];
        floatArray0[3] = floatArray0[2];
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    }

    @Test(timeout = 4000)
    public void test065328() throws Throwable {
        Float[] floatArray0 = new Float[4];
        Float float0 = new Float(0.0);
        floatArray0[0] = float0;
        floatArray0[1] = floatArray0[0];
        floatArray0[2] = floatArray0[1];
        floatArray0[3] = floatArray0[2];
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
        int int0 = ArrayUtils.lastIndexOf(floatArray1, (float) floatArray0[1]);
    }

    @Test(timeout = 4000)
    public void test066332() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 3165.946;
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 3165.946, 2169, 1241.77977461);
    }

    @Test(timeout = 4000)
    public void test067335() throws Throwable {
        double[] doubleArray0 = new double[8];
        doubleArray0[4] = (double) (short) 9;
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 9.0, 1452);
    }

    @Test(timeout = 4000)
    public void test068338() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (double) 3313;
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) 3313, 538.76239278);
    }

    @Test(timeout = 4000)
    public void test069341() throws Throwable {
        double[] doubleArray0 = new double[5];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 0.0, 2149.0);
    }

    @Test(timeout = 4000)
    public void test070344() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[1] = (-1.0);
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    }

    @Test(timeout = 4000)
    public void test071347() throws Throwable {
        char[] charArray0 = new char[2];
        charArray0[1] = 'L';
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'L', 808);
    }

    @Test(timeout = 4000)
    public void test072350() throws Throwable {
        char[] charArray0 = new char[4];
        charArray0[3] = 'S';
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'S');
    }

    @Test(timeout = 4000)
    public void test073353() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[2] = (byte) 70;
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 70, (int) (byte) 42);
    }

    @Test(timeout = 4000)
    public void test074356() throws Throwable {
        byte[] byteArray0 = new byte[2];
        byteArray0[0] = (byte) (-66);
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-66));
    }

    @Test(timeout = 4000)
    public void test075359() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byteArray0[6] = (byte) (-1);
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test076362() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameType("MZ&P", "MZ&P");
    }

    @Test(timeout = 4000)
    public void test077363() throws Throwable {
        Integer integer0 = new Integer(57);
    }

    @Test(timeout = 4000)
    public void test077365() throws Throwable {
        Integer integer0 = new Integer(57);
        boolean boolean0 = ArrayUtils.isEquals(integer0, (Object) null);
    }

    @Test(timeout = 4000)
    public void test078366() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        int int0 = ArrayUtils.indexOf(booleanArray0, false, 1);
    }

    @Test(timeout = 4000)
    public void test078368() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        int int0 = ArrayUtils.indexOf(booleanArray0, false, 1);
        Arrays.equals(new boolean[] { false, false, false, false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test079369() throws Throwable {
        boolean[] booleanArray0 = new boolean[8];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.indexOf(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test079371() throws Throwable {
        boolean[] booleanArray0 = new boolean[8];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.indexOf(booleanArray0, false);
        Arrays.equals(new boolean[] { true, false, false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test080372() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.indexOf(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test080374() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.indexOf(booleanArray0, false);
        Arrays.equals(new boolean[] { true }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test081375() throws Throwable {
        short[] shortArray0 = new short[7];
        shortArray0[0] = (short) (byte) (-24);
        int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-471));
    }

    @Test(timeout = 4000)
    public void test082378() throws Throwable {
        short[] shortArray0 = new short[2];
        shortArray0[0] = (short) 2;
        int int0 = ArrayUtils.indexOf(shortArray0, (short) 2);
    }

    @Test(timeout = 4000)
    public void test083381() throws Throwable {
        short[] shortArray0 = new short[6];
        shortArray0[1] = (short) 3295;
        int int0 = ArrayUtils.indexOf(shortArray0, (short) 3295);
    }

    @Test(timeout = 4000)
    public void test084384() throws Throwable {
        Object[] objectArray0 = new Object[5];
        Object object0 = new Object();
    }

    @Test(timeout = 4000)
    public void test084385() throws Throwable {
        Object[] objectArray0 = new Object[5];
        Object object0 = new Object();
        objectArray0[1] = object0;
        int int0 = ArrayUtils.indexOf(objectArray0, object0, 0);
    }

    @Test(timeout = 4000)
    public void test085387() throws Throwable {
        Object[] objectArray0 = new Object[1];
        int int0 = ArrayUtils.indexOf(objectArray0, (Object) "");
    }

    @Test(timeout = 4000)
    public void test086389() throws Throwable {
        long[] longArray0 = new long[6];
        longArray0[3] = (long) Integer.MAX_VALUE;
        int int0 = ArrayUtils.indexOf(longArray0, (long) Integer.MAX_VALUE, (-1));
    }

    @Test(timeout = 4000)
    public void test087392() throws Throwable {
        long[] longArray0 = new long[5];
        longArray0[4] = 5314L;
        int int0 = ArrayUtils.indexOf(longArray0, 5314L);
    }

    @Test(timeout = 4000)
    public void test088395() throws Throwable {
        int int0 = ArrayUtils.indexOf((long[]) null, 1L);
    }

    @Test(timeout = 4000)
    public void test089396() throws Throwable {
        int[] intArray0 = new int[2];
        intArray0[0] = (-819);
        int int0 = ArrayUtils.indexOf(intArray0, (-819), 0);
    }

    @Test(timeout = 4000)
    public void test090399() throws Throwable {
        int[] intArray0 = new int[9];
        intArray0[3] = (-839);
        int int0 = ArrayUtils.indexOf(intArray0, (-839));
    }

    @Test(timeout = 4000)
    public void test091402() throws Throwable {
        int[] intArray0 = new int[2];
        intArray0[0] = 3;
        intArray0[1] = 233;
        int int0 = ArrayUtils.indexOf(intArray0, 0);
    }

    @Test(timeout = 4000)
    public void test092405() throws Throwable {
        float[] floatArray0 = new float[7];
        floatArray0[0] = 2883.183F;
        int int0 = ArrayUtils.indexOf(floatArray0, 2883.183F, 0);
    }

    @Test(timeout = 4000)
    public void test093408() throws Throwable {
        float[] floatArray0 = new float[5];
        floatArray0[4] = (-345.353F);
        int int0 = ArrayUtils.indexOf(floatArray0, (-345.353F));
    }

    @Test(timeout = 4000)
    public void test094411() throws Throwable {
        float[] floatArray0 = new float[3];
        floatArray0[0] = (float) (byte) (-92);
        floatArray0[1] = (float) (-1);
        floatArray0[2] = (float) (-1);
        int int0 = ArrayUtils.indexOf(floatArray0, 0.0F);
    }

    @Test(timeout = 4000)
    public void test095414() throws Throwable {
        double[] doubleArray0 = new double[2];
        int int0 = ArrayUtils.indexOf(doubleArray0, 1.0, (-518), (double) Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test096417() throws Throwable {
        double[] doubleArray0 = new double[8];
        doubleArray0[0] = (double) (-860.273F);
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) 0, (double) 0L);
    }

    @Test(timeout = 4000)
    public void test097420() throws Throwable {
        double[] doubleArray0 = new double[3];
        doubleArray0[0] = 1.0;
        int int0 = ArrayUtils.indexOf(doubleArray0, 1.0);
    }

    @Test(timeout = 4000)
    public void test098423() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (double) (short) 57;
        int int0 = ArrayUtils.indexOf(doubleArray0, 0.0);
    }

    @Test(timeout = 4000)
    public void test099426() throws Throwable {
        char[] charArray0 = new char[9];
        charArray0[2] = 'C';
        int int0 = ArrayUtils.indexOf(charArray0, 'C', 0);
    }

    @Test(timeout = 4000)
    public void test100429() throws Throwable {
        char[] charArray0 = new char[3];
        charArray0[0] = '.';
        int int0 = ArrayUtils.indexOf(charArray0, '.');
    }

    @Test(timeout = 4000)
    public void test101432() throws Throwable {
        char[] charArray0 = new char[9];
        charArray0[7] = 'h';
        int int0 = ArrayUtils.indexOf(charArray0, 'h');
    }

    @Test(timeout = 4000)
    public void test102435() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[4] = (byte) 120;
        ArrayUtils.reverse(byteArray0);
    }

    @Test(timeout = 4000)
    public void test102437() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[4] = (byte) 120;
        ArrayUtils.reverse(byteArray0);
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) 120, 0);
    }

    @Test(timeout = 4000)
    public void test103440() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[0] = (byte) 49;
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) 49);
    }

    @Test(timeout = 4000)
    public void test104443() throws Throwable {
        byte[] byteArray0 = new byte[6];
        byteArray0[4] = (byte) (-56);
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-56));
    }

    @Test(timeout = 4000)
    public void test105446() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test105451() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
        booleanArray1.equals((Object) booleanArray0);
    }

    @Test(timeout = 4000)
    public void test105452() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
        Arrays.equals(new boolean[] {}, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test105453() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
        Arrays.equals(new boolean[] {}, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test106454() throws Throwable {
        short[] shortArray0 = new short[7];
        short[] shortArray1 = ArrayUtils.clone(shortArray0);
    }

    @Test(timeout = 4000)
    public void test106459() throws Throwable {
        short[] shortArray0 = new short[7];
        short[] shortArray1 = ArrayUtils.clone(shortArray0);
        shortArray1.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test107462() throws Throwable {
        Integer[] integerArray0 = new Integer[0];
        Integer[] integerArray1 = ArrayUtils.clone(integerArray0);
    }

    @Test(timeout = 4000)
    public void test107467() throws Throwable {
        Integer[] integerArray0 = new Integer[0];
        Integer[] integerArray1 = ArrayUtils.clone(integerArray0);
        integerArray1.equals((Object) integerArray0);
    }

    @Test(timeout = 4000)
    public void test108468() throws Throwable {
        long[] longArray0 = new long[8];
        long[] longArray1 = ArrayUtils.clone(longArray0);
    }

    @Test(timeout = 4000)
    public void test108473() throws Throwable {
        long[] longArray0 = new long[8];
        long[] longArray1 = ArrayUtils.clone(longArray0);
        longArray1.equals((Object) longArray0);
    }

    @Test(timeout = 4000)
    public void test109476() throws Throwable {
        int[] intArray0 = new int[2];
        int[] intArray1 = ArrayUtils.clone(intArray0);
    }

    @Test(timeout = 4000)
    public void test109481() throws Throwable {
        int[] intArray0 = new int[2];
        int[] intArray1 = ArrayUtils.clone(intArray0);
        intArray1.equals((Object) intArray0);
    }

    @Test(timeout = 4000)
    public void test110484() throws Throwable {
        char[] charArray0 = new char[7];
        char[] charArray1 = ArrayUtils.clone(charArray0);
    }

    @Test(timeout = 4000)
    public void test110489() throws Throwable {
        char[] charArray0 = new char[7];
        char[] charArray1 = ArrayUtils.clone(charArray0);
        charArray1.equals((Object) charArray0);
    }

    @Test(timeout = 4000)
    public void test111492() throws Throwable {
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    }

    @Test(timeout = 4000)
    public void test111497() throws Throwable {
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = ArrayUtils.clone(byteArray0);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test112500() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test112505() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
        booleanArray1.equals((Object) booleanArray0);
    }

    @Test(timeout = 4000)
    public void test112506() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
        Arrays.equals(new boolean[] {}, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test112507() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
        Arrays.equals(new boolean[] {}, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test113508() throws Throwable {
        short[] shortArray0 = new short[0];
        short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    }

    @Test(timeout = 4000)
    public void test113513() throws Throwable {
        short[] shortArray0 = new short[0];
        short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
        shortArray1.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test114516() throws Throwable {
        String[] stringArray0 = new String[0];
        String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    }

    @Test(timeout = 4000)
    public void test114521() throws Throwable {
        String[] stringArray0 = new String[0];
        String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
        stringArray1.equals((Object) stringArray0);
    }

    @Test(timeout = 4000)
    public void test115522() throws Throwable {
        long[] longArray0 = new long[0];
        long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    }

    @Test(timeout = 4000)
    public void test115527() throws Throwable {
        long[] longArray0 = new long[0];
        long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
        longArray1.equals((Object) longArray0);
    }

    @Test(timeout = 4000)
    public void test116530() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    }

    @Test(timeout = 4000)
    public void test116535() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
        intArray1.equals((Object) intArray0);
    }

    @Test(timeout = 4000)
    public void test117538() throws Throwable {
        double[] doubleArray0 = new double[0];
        double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test117543() throws Throwable {
        double[] doubleArray0 = new double[0];
        double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test118546() throws Throwable {
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    }

    @Test(timeout = 4000)
    public void test118551() throws Throwable {
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test119554() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, 0, true);
    }

    @Test(timeout = 4000)
    public void test119559() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, 0, true);
        booleanArray1.equals((Object) booleanArray0);
    }

    @Test(timeout = 4000)
    public void test119560() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, 0, true);
        Arrays.equals(new boolean[] { false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test119561() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, 0, true);
        Arrays.equals(new boolean[] { true, false, false }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test120562() throws Throwable {
        long[] longArray0 = new long[5];
        long[] longArray1 = ArrayUtils.add(longArray0, 1, (-1617L));
    }

    @Test(timeout = 4000)
    public void test120567() throws Throwable {
        long[] longArray0 = new long[5];
        long[] longArray1 = ArrayUtils.add(longArray0, 1, (-1617L));
        longArray1.equals((Object) longArray0);
    }

    @Test(timeout = 4000)
    public void test121570() throws Throwable {
        float[] floatArray0 = new float[5];
        float[] floatArray1 = ArrayUtils.add(floatArray0, 0, 1088.0F);
    }

    @Test(timeout = 4000)
    public void test121575() throws Throwable {
        float[] floatArray0 = new float[5];
        float[] floatArray1 = ArrayUtils.add(floatArray0, 0, 1088.0F);
        floatArray1.equals((Object) floatArray0);
    }

    @Test(timeout = 4000)
    public void test122578() throws Throwable {
        char[] charArray0 = new char[3];
        char[] charArray1 = ArrayUtils.add(charArray0, 2, 'g');
    }

    @Test(timeout = 4000)
    public void test122583() throws Throwable {
        char[] charArray0 = new char[3];
        char[] charArray1 = ArrayUtils.add(charArray0, 2, 'g');
        charArray1.equals((Object) charArray0);
    }

    @Test(timeout = 4000)
    public void test123586() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byte[] byteArray1 = ArrayUtils.add(byteArray0, (int) (byte) 3, (byte) 18);
    }

    @Test(timeout = 4000)
    public void test123591() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byte[] byteArray1 = ArrayUtils.add(byteArray0, (int) (byte) 3, (byte) 18);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test124594() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        ArrayUtils.remove(booleanArray0, (-2145610062));
    }

    @Test(timeout = 4000)
    public void test125595() throws Throwable {
        int[] intArray0 = new int[8];
        ArrayUtils.remove(intArray0, 707);
    }

    @Test(timeout = 4000)
    public void test126596() throws Throwable {
        short[] shortArray0 = new short[1];
        ArrayUtils.add(shortArray0, (-3481), (short) 0);
    }

    @Test(timeout = 4000)
    public void test127597() throws Throwable {
        double[] doubleArray0 = new double[3];
        ArrayUtils.add(doubleArray0, (-1), 84.0);
    }

    @Test(timeout = 4000)
    public void test128598() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test128600() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
        Arrays.equals(new boolean[] {}, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test129601() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test130602() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test130604() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        boolean boolean0 = ArrayUtils.isEmpty(booleanArray0);
        Arrays.equals(new boolean[] { false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test131605() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((float[]) null);
    }

    @Test(timeout = 4000)
    public void test132606() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
    }

    @Test(timeout = 4000)
    public void test132611() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
        floatArray1.equals((Object) floatArray0);
    }

    @Test(timeout = 4000)
    public void test132614() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
        boolean boolean0 = ArrayUtils.isEmpty(floatArray1);
    }

    @Test(timeout = 4000)
    public void test132618() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
        boolean boolean0 = ArrayUtils.isEmpty(floatArray1);
        floatArray0.equals((Object) floatArray1);
    }

    @Test(timeout = 4000)
    public void test132619() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
        boolean boolean0 = ArrayUtils.isEmpty(floatArray1);
        floatArray1.equals((Object) floatArray0);
    }

    @Test(timeout = 4000)
    public void test133623() throws Throwable {
        float[] floatArray0 = new float[2];
        boolean boolean0 = ArrayUtils.isEmpty(floatArray0);
    }

    @Test(timeout = 4000)
    public void test134626() throws Throwable {
        double[] doubleArray0 = new double[0];
        boolean boolean0 = ArrayUtils.isEmpty(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test135629() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((double[]) null);
    }

    @Test(timeout = 4000)
    public void test136630() throws Throwable {
        double[] doubleArray0 = new double[4];
        boolean boolean0 = ArrayUtils.isEmpty(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test137633() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 2341);
    }

    @Test(timeout = 4000)
    public void test137635() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, 2341);
        Arrays.equals(new boolean[] { true, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test138636() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.indexOf(booleanArray0, true, (int) (byte) (-66));
    }

    @Test(timeout = 4000)
    public void test138638() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        booleanArray0[0] = true;
        int int0 = ArrayUtils.indexOf(booleanArray0, true, (int) (byte) (-66));
        Arrays.equals(new boolean[] { true }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test139639() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        int int0 = ArrayUtils.indexOf(booleanArray0, true, 0);
    }

    @Test(timeout = 4000)
    public void test139641() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        int int0 = ArrayUtils.indexOf(booleanArray0, true, 0);
        Arrays.equals(new boolean[] { false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test140642() throws Throwable {
        int int0 = ArrayUtils.indexOf((boolean[]) null, true, 2);
    }

    @Test(timeout = 4000)
    public void test141643() throws Throwable {
        float[] floatArray0 = new float[6];
        int int0 = ArrayUtils.indexOf(floatArray0, 0.0F, (int) (byte) 1);
    }

    @Test(timeout = 4000)
    public void test142646() throws Throwable {
        double[] doubleArray0 = new double[1];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1084.18), 556);
    }

    @Test(timeout = 4000)
    public void test143649() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[1] = 2046.087994;
        int int0 = ArrayUtils.indexOf(doubleArray0, 2878.4661, (-979), 963.0356);
    }

    @Test(timeout = 4000)
    public void test144652() throws Throwable {
        double[] doubleArray0 = new double[8];
        int int0 = ArrayUtils.indexOf(doubleArray0, 343.0, 0, (double) 0);
    }

    @Test(timeout = 4000)
    public void test145655() throws Throwable {
        int int0 = ArrayUtils.indexOf((double[]) null, (-1084.18), 0, (double) 0);
    }

    @Test(timeout = 4000)
    public void test146656() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[0] = (double) 'w';
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) (short) 0, (int) (short) (-1289));
    }

    @Test(timeout = 4000)
    public void test147659() throws Throwable {
        double[] doubleArray0 = new double[4];
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) (byte) (-125), 474);
    }

    @Test(timeout = 4000)
    public void test148662() throws Throwable {
        int int0 = ArrayUtils.indexOf((double[]) null, 630.736923883764, (-453));
    }

    @Test(timeout = 4000)
    public void test149663() throws Throwable {
        byte[] byteArray0 = new byte[4];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 70, (int) (byte) 42);
    }

    @Test(timeout = 4000)
    public void test150666() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((byte[]) null, (byte) 127, (-1286));
    }

    @Test(timeout = 4000)
    public void test151667() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byteArray0[4] = (byte) 120;
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) 120, 0);
    }

    @Test(timeout = 4000)
    public void test152670() throws Throwable {
        int int0 = ArrayUtils.indexOf((byte[]) null, (byte) 0, Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test153671() throws Throwable {
        char[] charArray0 = new char[1];
        charArray0[0] = 'j';
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'j', 0);
    }

    @Test(timeout = 4000)
    public void test154674() throws Throwable {
        char[] charArray0 = new char[3];
        charArray0[0] = 'E';
        int int0 = ArrayUtils.indexOf(charArray0, 'E', (int) (byte) (-24));
    }

    @Test(timeout = 4000)
    public void test155677() throws Throwable {
        int int0 = ArrayUtils.indexOf((char[]) null, 'p', 0);
    }

    @Test(timeout = 4000)
    public void test156678() throws Throwable {
        short[] shortArray0 = new short[9];
        shortArray0[8] = (short) 4;
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 4, 2281);
    }

    @Test(timeout = 4000)
    public void test157681() throws Throwable {
        short[] shortArray0 = new short[9];
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 4, 2281);
    }

    @Test(timeout = 4000)
    public void test158684() throws Throwable {
        short[] shortArray0 = new short[1];
        shortArray0[0] = (short) (byte) (-24);
        int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-458));
    }

    @Test(timeout = 4000)
    public void test159687() throws Throwable {
        short[] shortArray0 = new short[3];
        int int0 = ArrayUtils.indexOf(shortArray0, (short) 2944, 64);
    }

    @Test(timeout = 4000)
    public void test160690() throws Throwable {
        int[] intArray0 = new int[2];
        intArray0[1] = 1;
        int int0 = ArrayUtils.indexOf(intArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test161693() throws Throwable {
        int[] intArray0 = new int[2];
        int int0 = ArrayUtils.indexOf(intArray0, 1, 1);
    }

    @Test(timeout = 4000)
    public void test162696() throws Throwable {
        int int0 = ArrayUtils.indexOf((int[]) null, 258, 1);
    }

    @Test(timeout = 4000)
    public void test163697() throws Throwable {
        long[] longArray0 = new long[8];
        longArray0[0] = (long) 556;
        int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, 0);
    }

    @Test(timeout = 4000)
    public void test164700() throws Throwable {
        long[] longArray0 = new long[5];
        int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, (int) (short) 527);
    }

    @Test(timeout = 4000)
    public void test165703() throws Throwable {
        long[] longArray0 = new long[4];
        longArray0[0] = 439L;
        int int0 = ArrayUtils.indexOf(longArray0, 439L, 0);
    }

    @Test(timeout = 4000)
    public void test166706() throws Throwable {
        long[] longArray0 = new long[1];
        int int0 = ArrayUtils.indexOf(longArray0, (-3266L), 100);
    }

    @Test(timeout = 4000)
    public void test167709() throws Throwable {
        Object[] objectArray0 = new Object[8];
        objectArray0[5] = (Object) (-2312L);
        int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[5], 3937);
    }

    @Test(timeout = 4000)
    public void test168711() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test168714() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
        Arrays.equals(new boolean[] { false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test168715() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
        int int0 = ArrayUtils.lastIndexOf((Object[]) booleanArray1, (Object) "", 31);
    }

    @Test(timeout = 4000)
    public void test168718() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
        int int0 = ArrayUtils.lastIndexOf((Object[]) booleanArray1, (Object) "", 31);
        Arrays.equals(new boolean[] { false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test169720() throws Throwable {
        Object[] objectArray0 = new Object[5];
        Object object0 = new Object();
        int int0 = ArrayUtils.indexOf(objectArray0, object0, 0);
    }

    @Test(timeout = 4000)
    public void test170723() throws Throwable {
        Object[] objectArray0 = new Object[5];
        Object object0 = new Object();
        objectArray0[0] = object0;
        int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[0], 0);
    }

    @Test(timeout = 4000)
    public void test171725() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[3];
        int int0 = ArrayUtils.indexOf((Object[]) booleanArray0, (Object) "', is neither of type Map.Entry nor an Array", 64);
    }

    @Test(timeout = 4000)
    public void test172727() throws Throwable {
        Object[] objectArray0 = new Object[8];
        int int0 = ArrayUtils.indexOf(objectArray0, (Object) null, (int) (byte) 70);
    }

    @Test(timeout = 4000)
    public void test173729() throws Throwable {
        Object[] objectArray0 = new Object[0];
        Object object0 = new Object();
    }

    @Test(timeout = 4000)
    public void test173730() throws Throwable {
        Object[] objectArray0 = new Object[0];
        Object object0 = new Object();
        int int0 = ArrayUtils.indexOf(objectArray0, object0, 1406);
    }

    @Test(timeout = 4000)
    public void test174732() throws Throwable {
        int int0 = ArrayUtils.indexOf((Object[]) null, (Object) "java.lang.Integer", (int) (short) (-1));
    }

    @Test(timeout = 4000)
    public void test175734() throws Throwable {
        Object object0 = new Object();
        ArrayUtils.getLength(object0);
    }

    @Test(timeout = 4000)
    public void test176735() throws Throwable {
        int int0 = ArrayUtils.getLength((Object) null);
    }

    @Test(timeout = 4000)
    public void test177736() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.clone((boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test178737() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test178742() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
        booleanArray1.equals((Object) booleanArray0);
    }

    @Test(timeout = 4000)
    public void test178743() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
        Arrays.equals(new boolean[] { false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test178744() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean[] booleanArray1 = ArrayUtils.clone(booleanArray0);
        Arrays.equals(new boolean[] { false }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test179745() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test179750() throws Throwable {
        double[] doubleArray0 = new double[5];
        double[] doubleArray1 = ArrayUtils.clone(doubleArray0);
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test180753() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byte[] byteArray1 = ArrayUtils.clone(byteArray0);
    }

    @Test(timeout = 4000)
    public void test180758() throws Throwable {
        byte[] byteArray0 = new byte[8];
        byte[] byteArray1 = ArrayUtils.clone(byteArray0);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test181761() throws Throwable {
        char[] charArray0 = ArrayUtils.clone((char[]) null);
    }

    @Test(timeout = 4000)
    public void test182762() throws Throwable {
        char[] charArray0 = new char[0];
        char[] charArray1 = ArrayUtils.clone(charArray0);
    }

    @Test(timeout = 4000)
    public void test182767() throws Throwable {
        char[] charArray0 = new char[0];
        char[] charArray1 = ArrayUtils.clone(charArray0);
        charArray1.equals((Object) charArray0);
    }

    @Test(timeout = 4000)
    public void test183770() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.clone(intArray0);
    }

    @Test(timeout = 4000)
    public void test183775() throws Throwable {
        int[] intArray0 = new int[0];
        int[] intArray1 = ArrayUtils.clone(intArray0);
        intArray1.equals((Object) intArray0);
    }

    @Test(timeout = 4000)
    public void test184778() throws Throwable {
        int[] intArray0 = ArrayUtils.clone((int[]) null);
    }

    @Test(timeout = 4000)
    public void test185783() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
        Object[] objectArray0 = ArrayUtils.clone((Object[]) booleanArray1);
    }

    @Test(timeout = 4000)
    public void test185788() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
        Object[] objectArray0 = ArrayUtils.clone((Object[]) booleanArray1);
        Arrays.equals(new boolean[] { false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test186790() throws Throwable {
        Object object0 = new Object();
        String string0 = ArrayUtils.toString(object0, "sj[7zW`^LaSlQ");
    }

    @Test(timeout = 4000)
    public void test187791() throws Throwable {
        char[] charArray0 = new char[3];
        int int0 = ArrayUtils.indexOf(charArray0, '.');
    }

    @Test(timeout = 4000)
    public void test188794() throws Throwable {
        boolean[] booleanArray0 = new boolean[8];
        int int0 = ArrayUtils.indexOf(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test188796() throws Throwable {
        boolean[] booleanArray0 = new boolean[8];
        int int0 = ArrayUtils.indexOf(booleanArray0, false);
        Arrays.equals(new boolean[] { false, false, false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test189797() throws Throwable {
        byte[] byteArray0 = new byte[7];
        int int0 = ArrayUtils.indexOf(byteArray0, (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test190800() throws Throwable {
        int[] intArray0 = new int[1];
        int[] intArray1 = ArrayUtils.remove(intArray0, 0);
    }

    @Test(timeout = 4000)
    public void test190805() throws Throwable {
        int[] intArray0 = new int[1];
        int[] intArray1 = ArrayUtils.remove(intArray0, 0);
        intArray1.equals((Object) intArray0);
    }

    @Test(timeout = 4000)
    public void test191808() throws Throwable {
        int[] intArray0 = new int[2];
        int int0 = ArrayUtils.indexOf(intArray0, 0);
    }

    @Test(timeout = 4000)
    public void test192811() throws Throwable {
        short[] shortArray0 = new short[6];
        shortArray0[3] = (short) (-468);
        short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-468));
    }

    @Test(timeout = 4000)
    public void test192816() throws Throwable {
        short[] shortArray0 = new short[6];
        shortArray0[3] = (short) (-468);
        short[] shortArray1 = ArrayUtils.removeElement(shortArray0, (short) (-468));
        shortArray1.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test193819() throws Throwable {
        long[] longArray0 = ArrayUtils.removeElement((long[]) null, 1L);
    }

    @Test(timeout = 4000)
    public void test194820() throws Throwable {
        long[] longArray0 = new long[1];
        longArray0[0] = (-1L);
        long[] longArray1 = ArrayUtils.removeElement(longArray0, (-1L));
    }

    @Test(timeout = 4000)
    public void test194825() throws Throwable {
        long[] longArray0 = new long[1];
        longArray0[0] = (-1L);
        long[] longArray1 = ArrayUtils.removeElement(longArray0, (-1L));
        longArray1.equals((Object) longArray0);
    }

    @Test(timeout = 4000)
    public void test195828() throws Throwable {
        float[] floatArray0 = ArrayUtils.removeElement((float[]) null, 2646.16F);
    }

    @Test(timeout = 4000)
    public void test196829() throws Throwable {
        float[] floatArray0 = new float[6];
        float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) 0);
    }

    @Test(timeout = 4000)
    public void test196834() throws Throwable {
        float[] floatArray0 = new float[6];
        float[] floatArray1 = ArrayUtils.removeElement(floatArray0, (float) 0);
        floatArray1.equals((Object) floatArray0);
    }

    @Test(timeout = 4000)
    public void test197837() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 1.0;
        double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1.0);
    }

    @Test(timeout = 4000)
    public void test197842() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = 1.0;
        double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1.0);
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test198845() throws Throwable {
        char[] charArray0 = new char[3];
        charArray0[0] = 'j';
        char[] charArray1 = ArrayUtils.removeElement(charArray0, 'j');
    }

    @Test(timeout = 4000)
    public void test198850() throws Throwable {
        char[] charArray0 = new char[3];
        charArray0[0] = 'j';
        char[] charArray1 = ArrayUtils.removeElement(charArray0, 'j');
        charArray1.equals((Object) charArray0);
    }

    @Test(timeout = 4000)
    public void test199853() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        booleanArray0[0] = true;
        boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
    }

    @Test(timeout = 4000)
    public void test199858() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        booleanArray0[0] = true;
        boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
        booleanArray1.equals((Object) booleanArray0);
    }

    @Test(timeout = 4000)
    public void test199859() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        booleanArray0[0] = true;
        boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
        Arrays.equals(new boolean[] { true, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test199860() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        booleanArray0[0] = true;
        boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
        Arrays.equals(new boolean[] { false, false }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test200861() throws Throwable {
        String[] stringArray0 = new String[5];
        stringArray0[1] = "user.name";
        String[] stringArray1 = ArrayUtils.removeElement(stringArray0, (Object) "user.name");
    }

    @Test(timeout = 4000)
    public void test200866() throws Throwable {
        String[] stringArray0 = new String[5];
        stringArray0[1] = "user.name";
        String[] stringArray1 = ArrayUtils.removeElement(stringArray0, (Object) "user.name");
        stringArray1.equals((Object) stringArray0);
    }

    @Test(timeout = 4000)
    public void test201869() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        int[] intArray0 = ArrayUtils.add(arrayUtils0.EMPTY_INT_ARRAY, 0, 0);
    }

    @Test(timeout = 4000)
    public void test202873() throws Throwable {
        Object[] objectArray0 = ArrayUtils.add((Object[]) null, 64, (Object) null);
    }

    @Test(timeout = 4000)
    public void test203875() throws Throwable {
        String[] stringArray0 = new String[8];
        String[] stringArray1 = ArrayUtils.add(stringArray0, 0, "");
    }

    @Test(timeout = 4000)
    public void test203880() throws Throwable {
        String[] stringArray0 = new String[8];
        String[] stringArray1 = ArrayUtils.add(stringArray0, 0, "");
        stringArray1.equals((Object) stringArray0);
    }

    @Test(timeout = 4000)
    public void test204882() throws Throwable {
        Object object0 = new Object();
        ArrayUtils.add((Object[]) null, (-1963), object0);
    }

    @Test(timeout = 4000)
    public void test205884() throws Throwable {
        Object object0 = new Object();
        Object[] objectArray0 = ArrayUtils.add((Object[]) null, object0);
    }

    @Test(timeout = 4000)
    public void test206886() throws Throwable {
        double[] doubleArray0 = new double[8];
        double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test206891() throws Throwable {
        double[] doubleArray0 = new double[8];
        double[] doubleArray1 = ArrayUtils.addAll(doubleArray0, doubleArray0);
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test207893() throws Throwable {
        long[] longArray0 = ArrayUtils.addAll((long[]) null, (long[]) null);
    }

    @Test(timeout = 4000)
    public void test208894() throws Throwable {
        long[] longArray0 = new long[7];
        long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
    }

    @Test(timeout = 4000)
    public void test208899() throws Throwable {
        long[] longArray0 = new long[7];
        long[] longArray1 = ArrayUtils.addAll(longArray0, longArray0);
        longArray1.equals((Object) longArray0);
    }

    @Test(timeout = 4000)
    public void test209901() throws Throwable {
        int[] intArray0 = new int[4];
        int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
    }

    @Test(timeout = 4000)
    public void test209906() throws Throwable {
        int[] intArray0 = new int[4];
        int[] intArray1 = ArrayUtils.addAll(intArray0, intArray0);
        intArray1.equals((Object) intArray0);
    }

    @Test(timeout = 4000)
    public void test210909() throws Throwable {
        short[] shortArray0 = ArrayUtils.addAll((short[]) null, (short[]) null);
    }

    @Test(timeout = 4000)
    public void test211910() throws Throwable {
        short[] shortArray0 = new short[3];
        short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
    }

    @Test(timeout = 4000)
    public void test211915() throws Throwable {
        short[] shortArray0 = new short[3];
        short[] shortArray1 = ArrayUtils.addAll(shortArray0, shortArray0);
        shortArray1.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test212918() throws Throwable {
        byte[] byteArray0 = ArrayUtils.addAll((byte[]) null, (byte[]) null);
    }

    @Test(timeout = 4000)
    public void test213919() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
    }

    @Test(timeout = 4000)
    public void test213924() throws Throwable {
        byte[] byteArray0 = new byte[1];
        byte[] byteArray1 = ArrayUtils.addAll(byteArray0, byteArray0);
        byteArray1.equals((Object) byteArray0);
    }

    @Test(timeout = 4000)
    public void test214927() throws Throwable {
        char[] charArray0 = new char[5];
        char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    }

    @Test(timeout = 4000)
    public void test214932() throws Throwable {
        char[] charArray0 = new char[5];
        char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
        charArray1.equals((Object) charArray0);
    }

    @Test(timeout = 4000)
    public void test215935() throws Throwable {
        char[] charArray0 = ArrayUtils.addAll((char[]) null, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test216936() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.addAll((boolean[]) null, (boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test217937() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test217942() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
        booleanArray1.equals((Object) booleanArray0);
    }

    @Test(timeout = 4000)
    public void test217943() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        boolean[] booleanArray1 = ArrayUtils.addAll(booleanArray0, booleanArray0);
        Arrays.equals(new boolean[] { false, false, false, false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test218944() throws Throwable {
        String[] stringArray0 = new String[6];
        String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
    }

    @Test(timeout = 4000)
    public void test218949() throws Throwable {
        String[] stringArray0 = new String[6];
        String[] stringArray1 = ArrayUtils.addAll(stringArray0, stringArray0);
        stringArray1.equals((Object) stringArray0);
    }

    @Test(timeout = 4000)
    public void test219950() throws Throwable {
        byte[] byteArray0 = new byte[0];
        boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    }

    @Test(timeout = 4000)
    public void test220953() throws Throwable {
        byte[] byteArray0 = new byte[5];
        boolean boolean0 = ArrayUtils.isEmpty(byteArray0);
    }

    @Test(timeout = 4000)
    public void test221956() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test222957() throws Throwable {
        char[] charArray0 = new char[0];
        boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    }

    @Test(timeout = 4000)
    public void test223960() throws Throwable {
        char[] charArray0 = new char[7];
        boolean boolean0 = ArrayUtils.isEmpty(charArray0);
    }

    @Test(timeout = 4000)
    public void test224963() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((char[]) null);
    }

    @Test(timeout = 4000)
    public void test225964() throws Throwable {
        short[] shortArray0 = new short[0];
        boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    }

    @Test(timeout = 4000)
    public void test226967() throws Throwable {
        short[] shortArray0 = new short[6];
        boolean boolean0 = ArrayUtils.isEmpty(shortArray0);
    }

    @Test(timeout = 4000)
    public void test227970() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((short[]) null);
    }

    @Test(timeout = 4000)
    public void test228971() throws Throwable {
        int[] intArray0 = new int[0];
        boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    }

    @Test(timeout = 4000)
    public void test229974() throws Throwable {
        int[] intArray0 = new int[3];
        boolean boolean0 = ArrayUtils.isEmpty(intArray0);
    }

    @Test(timeout = 4000)
    public void test230977() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((int[]) null);
    }

    @Test(timeout = 4000)
    public void test231978() throws Throwable {
        long[] longArray0 = new long[0];
        boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    }

    @Test(timeout = 4000)
    public void test232981() throws Throwable {
        long[] longArray0 = new long[2];
        boolean boolean0 = ArrayUtils.isEmpty(longArray0);
    }

    @Test(timeout = 4000)
    public void test233984() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((long[]) null);
    }

    @Test(timeout = 4000)
    public void test234985() throws Throwable {
        String[] stringArray0 = new String[5];
        boolean boolean0 = ArrayUtils.isEmpty(stringArray0);
    }

    @Test(timeout = 4000)
    public void test235987() throws Throwable {
        boolean boolean0 = ArrayUtils.isEmpty((Object[]) null);
    }

    @Test(timeout = 4000)
    public void test236988() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        booleanArray0[0] = true;
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test236991() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        booleanArray0[0] = true;
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
        Arrays.equals(new boolean[] { true, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test237992() throws Throwable {
        Boolean[] booleanArray0 = ArrayUtils.toObject((boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test238993() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test238996() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
        Arrays.equals(new boolean[] { false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test238997() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
        Object object0 = new Object();
    }

    @Test(timeout = 4000)
    public void test238998() throws Throwable {
        boolean[] booleanArray0 = new boolean[6];
        Boolean[] booleanArray1 = ArrayUtils.toObject(booleanArray0);
        Object object0 = new Object();
        ArrayUtils.add((Object[]) booleanArray1, object0);
    }

    @Test(timeout = 4000)
    public void test239999() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[11];
        booleanArray0[0] = (Boolean) false;
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test2401002() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test2401005() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0, false);
        Arrays.equals(new boolean[] {}, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test2411006() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.toPrimitive((Boolean[]) null, true);
    }

    @Test(timeout = 4000)
    public void test2421007() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[3];
        Boolean boolean0 = new Boolean("', is neither of type Map.Entry nor an Array");
    }

    @Test(timeout = 4000)
    public void test2421009() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[3];
        Boolean boolean0 = new Boolean("', is neither of type Map.Entry nor an Array");
        booleanArray0[0] = boolean0;
        booleanArray0[1] = booleanArray0[0];
        booleanArray0[2] = booleanArray0[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test2421012() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[3];
        Boolean boolean0 = new Boolean("', is neither of type Map.Entry nor an Array");
        booleanArray0[0] = boolean0;
        booleanArray0[1] = booleanArray0[0];
        booleanArray0[2] = booleanArray0[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
        Arrays.equals(new boolean[] { false, false, false }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test2431013() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test2431016() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[0];
        boolean[] booleanArray1 = ArrayUtils.toPrimitive(booleanArray0);
        Arrays.equals(new boolean[] {}, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test2441017() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.toPrimitive((Boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test2451018() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[3];
        ArrayUtils.toPrimitive(booleanArray0);
    }

    @Test(timeout = 4000)
    public void test2461019() throws Throwable {
        Float[] floatArray0 = ArrayUtils.toObject((float[]) null);
    }

    @Test(timeout = 4000)
    public void test2471020() throws Throwable {
        float[] floatArray0 = new float[6];
        Float[] floatArray1 = ArrayUtils.toObject(floatArray0);
    }

    @Test(timeout = 4000)
    public void test2481024() throws Throwable {
        Float[] floatArray0 = new Float[1];
        Float float0 = new Float((double) (-1L));
    }

    @Test(timeout = 4000)
    public void test2481026() throws Throwable {
        Float[] floatArray0 = new Float[1];
        Float float0 = new Float((double) (-1L));
        floatArray0[0] = float0;
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, (-1611.1229F));
    }

    @Test(timeout = 4000)
    public void test2491030() throws Throwable {
        Float[] floatArray0 = new Float[1];
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, 773.19F);
    }

    @Test(timeout = 4000)
    public void test2501034() throws Throwable {
        float[] floatArray0 = ArrayUtils.toPrimitive((Float[]) null, 773.19F);
    }

    @Test(timeout = 4000)
    public void test2511035() throws Throwable {
        Float[] floatArray0 = new Float[0];
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0);
    }

    @Test(timeout = 4000)
    public void test2521039() throws Throwable {
        float[] floatArray0 = ArrayUtils.toPrimitive((Float[]) null);
    }

    @Test(timeout = 4000)
    public void test2531040() throws Throwable {
        Float[] floatArray0 = new Float[7];
        ArrayUtils.toPrimitive(floatArray0);
    }

    @Test(timeout = 4000)
    public void test2541041() throws Throwable {
        double[] doubleArray0 = new double[0];
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test2541045() throws Throwable {
        double[] doubleArray0 = new double[0];
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
        Integer integer0 = new Integer(1);
    }

    @Test(timeout = 4000)
    public void test2541047() throws Throwable {
        double[] doubleArray0 = new double[0];
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
        Integer integer0 = new Integer(1);
        Object[] objectArray0 = ArrayUtils.removeElement((Object[]) doubleArray1, (Object) integer0);
    }

    @Test(timeout = 4000)
    public void test2551053() throws Throwable {
        Double[] doubleArray0 = ArrayUtils.toObject((double[]) null);
    }

    @Test(timeout = 4000)
    public void test2561054() throws Throwable {
        double[] doubleArray0 = new double[3];
        Double[] doubleArray1 = ArrayUtils.toObject(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test2571058() throws Throwable {
        Double[] doubleArray0 = new Double[6];
        Double double0 = new Double((-2688));
    }

    @Test(timeout = 4000)
    public void test2571060() throws Throwable {
        Double[] doubleArray0 = new Double[6];
        Double double0 = new Double((-2688));
        doubleArray0[3] = double0;
        double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0, (double) doubleArray0[3]);
    }

    @Test(timeout = 4000)
    public void test2581064() throws Throwable {
        double[] doubleArray0 = ArrayUtils.toPrimitive((Double[]) null, (-170.08209677487));
    }

    @Test(timeout = 4000)
    public void test2591065() throws Throwable {
        Double[] doubleArray0 = new Double[6];
        Double double0 = new Double(432.3);
    }

    @Test(timeout = 4000)
    public void test2591067() throws Throwable {
        Double[] doubleArray0 = new Double[6];
        Double double0 = new Double(432.3);
        doubleArray0[0] = double0;
        doubleArray0[1] = double0;
        doubleArray0[2] = double0;
        doubleArray0[3] = doubleArray0[0];
        doubleArray0[4] = doubleArray0[0];
        doubleArray0[5] = doubleArray0[1];
        double[] doubleArray1 = ArrayUtils.toPrimitive(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test2601071() throws Throwable {
        double[] doubleArray0 = ArrayUtils.toPrimitive((Double[]) null);
    }

    @Test(timeout = 4000)
    public void test2611072() throws Throwable {
        Double[] doubleArray0 = new Double[6];
        ArrayUtils.toPrimitive(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test2621073() throws Throwable {
        byte[] byteArray0 = new byte[7];
        Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2631077() throws Throwable {
        Byte[] byteArray0 = ArrayUtils.toObject((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test2641078() throws Throwable {
        byte[] byteArray0 = new byte[0];
        Byte[] byteArray1 = ArrayUtils.toObject(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2651082() throws Throwable {
        Byte[] byteArray0 = new Byte[1];
        byte byte0 = (byte) (-1);
        Byte byte1 = new Byte((byte) (-1));
    }

    @Test(timeout = 4000)
    public void test2651083() throws Throwable {
        Byte[] byteArray0 = new Byte[1];
        byte byte0 = (byte) (-1);
        Byte byte1 = new Byte((byte) (-1));
        byte1.equals((Object) byte0);
    }

    @Test(timeout = 4000)
    public void test2651085() throws Throwable {
        Byte[] byteArray0 = new Byte[1];
        byte byte0 = (byte) (-1);
        Byte byte1 = new Byte((byte) (-1));
        byteArray0[0] = byte1;
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    }

    @Test(timeout = 4000)
    public void test2661089() throws Throwable {
        Byte[] byteArray0 = new Byte[0];
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, (byte) 2);
    }

    @Test(timeout = 4000)
    public void test2671093() throws Throwable {
        byte[] byteArray0 = ArrayUtils.toPrimitive((Byte[]) null, (byte) (-101));
    }

    @Test(timeout = 4000)
    public void test2681094() throws Throwable {
        Byte[] byteArray0 = new Byte[6];
        Byte byte0 = new Byte((byte) (-16));
    }

    @Test(timeout = 4000)
    public void test2681096() throws Throwable {
        Byte[] byteArray0 = new Byte[6];
        Byte byte0 = new Byte((byte) (-16));
        byteArray0[0] = byte0;
        byteArray0[1] = byte0;
        byteArray0[2] = byteArray0[0];
        byteArray0[3] = byteArray0[1];
        byteArray0[4] = byteArray0[1];
        byteArray0[5] = byteArray0[1];
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2691100() throws Throwable {
        Byte[] byteArray0 = new Byte[0];
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2701104() throws Throwable {
        byte[] byteArray0 = ArrayUtils.toPrimitive((Byte[]) null);
    }

    @Test(timeout = 4000)
    public void test2711105() throws Throwable {
        Byte[] byteArray0 = new Byte[18];
        ArrayUtils.toPrimitive(byteArray0);
    }

    @Test(timeout = 4000)
    public void test2721106() throws Throwable {
        Short[] shortArray0 = ArrayUtils.toObject((short[]) null);
    }

    @Test(timeout = 4000)
    public void test2731107() throws Throwable {
        short[] shortArray0 = new short[4];
        Short[] shortArray1 = ArrayUtils.toObject(shortArray0);
    }

    @Test(timeout = 4000)
    public void test2741111() throws Throwable {
        short[] shortArray0 = new short[3];
        Short[] shortArray1 = new Short[5];
        shortArray1[0] = (Short) shortArray0[0];
        short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
    }

    @Test(timeout = 4000)
    public void test2741115() throws Throwable {
        short[] shortArray0 = new short[3];
        Short[] shortArray1 = new Short[5];
        shortArray1[0] = (Short) shortArray0[0];
        short[] shortArray2 = ArrayUtils.toPrimitive(shortArray1, (short) 0);
        shortArray2.equals((Object) shortArray0);
    }

    @Test(timeout = 4000)
    public void test2751117() throws Throwable {
        short[] shortArray0 = ArrayUtils.toPrimitive((Short[]) null, (short) 1137);
    }

    @Test(timeout = 4000)
    public void test2761118() throws Throwable {
        Short[] shortArray0 = new Short[7];
        shortArray0[0] = (Short) (short) 524;
        shortArray0[1] = (Short) (short) 2;
        shortArray0[2] = (Short) (short) 524;
        shortArray0[3] = (Short) (short) 524;
        shortArray0[4] = (Short) (short) 2;
        shortArray0[5] = (Short) (short) 4027;
        shortArray0[6] = (Short) (short) 2;
        short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    }

    @Test(timeout = 4000)
    public void test2771122() throws Throwable {
        Short[] shortArray0 = new Short[0];
        short[] shortArray1 = ArrayUtils.toPrimitive(shortArray0);
    }

    @Test(timeout = 4000)
    public void test2781126() throws Throwable {
        short[] shortArray0 = ArrayUtils.toPrimitive((Short[]) null);
    }

    @Test(timeout = 4000)
    public void test2791127() throws Throwable {
        Short[] shortArray0 = new Short[7];
        ArrayUtils.toPrimitive(shortArray0);
    }

    @Test(timeout = 4000)
    public void test2801128() throws Throwable {
        Integer[] integerArray0 = ArrayUtils.toObject((int[]) null);
    }

    @Test(timeout = 4000)
    public void test2811129() throws Throwable {
        int[] intArray0 = new int[5];
        Integer[] integerArray0 = ArrayUtils.toObject(intArray0);
    }

    @Test(timeout = 4000)
    public void test2821133() throws Throwable {
        double[] doubleArray0 = new double[3];
        int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
    }

    @Test(timeout = 4000)
    public void test2821136() throws Throwable {
        double[] doubleArray0 = new double[3];
        int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
        Integer[] integerArray0 = new Integer[8];
        Integer integer0 = new Integer((-3575));
    }

    @Test(timeout = 4000)
    public void test2821137() throws Throwable {
        double[] doubleArray0 = new double[3];
        int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
        Integer[] integerArray0 = new Integer[8];
        Integer integer0 = new Integer((-3575));
        integer0.equals((Object) int0);
    }

    @Test(timeout = 4000)
    public void test2821139() throws Throwable {
        double[] doubleArray0 = new double[3];
        int int0 = ArrayUtils.indexOf(doubleArray0, (-16.343852347137574));
        Integer[] integerArray0 = new Integer[8];
        Integer integer0 = new Integer((-3575));
        integerArray0[0] = integer0;
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, int0);
    }

    @Test(timeout = 4000)
    public void test2831145() throws Throwable {
        Integer[] integerArray0 = new Integer[0];
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0, (-2398));
    }

    @Test(timeout = 4000)
    public void test2841149() throws Throwable {
        int[] intArray0 = ArrayUtils.toPrimitive((Integer[]) null, 0);
    }

    @Test(timeout = 4000)
    public void test2851150() throws Throwable {
        Integer[] integerArray0 = new Integer[6];
        ArrayUtils.toPrimitive(integerArray0);
    }

    @Test(timeout = 4000)
    public void test2861151() throws Throwable {
        int[] intArray0 = ArrayUtils.toPrimitive((Integer[]) null);
    }

    @Test(timeout = 4000)
    public void test2871152() throws Throwable {
        Integer[] integerArray0 = new Integer[0];
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    }

    @Test(timeout = 4000)
    public void test2881156() throws Throwable {
        Long[] longArray0 = ArrayUtils.toObject((long[]) null);
    }

    @Test(timeout = 4000)
    public void test2891157() throws Throwable {
        Long[] longArray0 = new Long[9];
        longArray0[0] = (Long) 0L;
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0, 411L);
    }

    @Test(timeout = 4000)
    public void test2901161() throws Throwable {
        long[] longArray0 = ArrayUtils.toPrimitive((Long[]) null, (-3214L));
    }

    @Test(timeout = 4000)
    public void test2911162() throws Throwable {
        Long[] longArray0 = new Long[0];
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0, 3609L);
    }

    @Test(timeout = 4000)
    public void test2921166() throws Throwable {
        Long[] longArray0 = new Long[4];
        Long long0 = new Long(0);
    }

    @Test(timeout = 4000)
    public void test2921168() throws Throwable {
        Long[] longArray0 = new Long[4];
        Long long0 = new Long(0);
        longArray0[0] = long0;
        longArray0[1] = longArray0[0];
        longArray0[2] = long0;
        longArray0[3] = long0;
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    }

    @Test(timeout = 4000)
    public void test2931172() throws Throwable {
        Long[] longArray0 = new Long[5];
        ArrayUtils.toPrimitive(longArray0);
    }

    @Test(timeout = 4000)
    public void test2941173() throws Throwable {
        long[] longArray0 = ArrayUtils.toPrimitive((Long[]) null);
    }

    @Test(timeout = 4000)
    public void test2951174() throws Throwable {
        Long[] longArray0 = new Long[0];
        long[] longArray1 = ArrayUtils.toPrimitive(longArray0);
    }

    @Test(timeout = 4000)
    public void test2961178() throws Throwable {
        char[] charArray0 = new char[0];
        Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    }

    @Test(timeout = 4000)
    public void test2971182() throws Throwable {
        Character[] characterArray0 = ArrayUtils.toObject((char[]) null);
    }

    @Test(timeout = 4000)
    public void test2981183() throws Throwable {
        char[] charArray0 = new char[4];
        Character[] characterArray0 = ArrayUtils.toObject(charArray0);
    }

    @Test(timeout = 4000)
    public void test2991187() throws Throwable {
        char[] charArray0 = ArrayUtils.toPrimitive((Character[]) null, '(');
    }

    @Test(timeout = 4000)
    public void test3001188() throws Throwable {
        Character[] characterArray0 = new Character[6];
        Character character0 = new Character('+');
    }

    @Test(timeout = 4000)
    public void test3001190() throws Throwable {
        Character[] characterArray0 = new Character[6];
        Character character0 = new Character('+');
        characterArray0[3] = character0;
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0, (char) characterArray0[3]);
    }

    @Test(timeout = 4000)
    public void test3011194() throws Throwable {
        Character[] characterArray0 = new Character[1];
        Character character0 = new Character('X');
    }

    @Test(timeout = 4000)
    public void test3011196() throws Throwable {
        Character[] characterArray0 = new Character[1];
        Character character0 = new Character('X');
        characterArray0[0] = character0;
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    }

    @Test(timeout = 4000)
    public void test3021200() throws Throwable {
        Character[] characterArray0 = new Character[0];
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
    }

    @Test(timeout = 4000)
    public void test3021204() throws Throwable {
        Character[] characterArray0 = new Character[0];
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
        char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
    }

    @Test(timeout = 4000)
    public void test3021210() throws Throwable {
        Character[] characterArray0 = new Character[0];
        char[] charArray0 = ArrayUtils.toPrimitive(characterArray0);
        char[] charArray1 = ArrayUtils.addAll(charArray0, charArray0);
        charArray1.equals((Object) charArray0);
    }

    @Test(timeout = 4000)
    public void test3031213() throws Throwable {
        Character[] characterArray0 = new Character[4];
        ArrayUtils.toPrimitive(characterArray0);
    }

    @Test(timeout = 4000)
    public void test3041214() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean boolean0 = ArrayUtils.contains(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test3041216() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean boolean0 = ArrayUtils.contains(booleanArray0, false);
        Arrays.equals(new boolean[] {}, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test3051217() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        booleanArray0[1] = true;
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true);
    }

    @Test(timeout = 4000)
    public void test3051219() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        booleanArray0[1] = true;
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true);
        Arrays.equals(new boolean[] { false, true, false, false, false, false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test3061220() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, (-1976));
    }

    @Test(timeout = 4000)
    public void test3061222() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true, (-1976));
        Arrays.equals(new boolean[] { false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test3071223() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((boolean[]) null, false, (-921));
    }

    @Test(timeout = 4000)
    public void test3081224() throws Throwable {
        float[] floatArray0 = new float[7];
        floatArray0[5] = (float) (-1);
        boolean boolean0 = ArrayUtils.contains(floatArray0, (float) (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test3091227() throws Throwable {
        float[] floatArray0 = new float[9];
        floatArray0[1] = (-2418.9207F);
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (-2418.9207F), 1431655765);
    }

    @Test(timeout = 4000)
    public void test3101230() throws Throwable {
        float[] floatArray0 = new float[2];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, 2016.2957F, 0);
    }

    @Test(timeout = 4000)
    public void test3111233() throws Throwable {
        float[] floatArray0 = new float[9];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, 3137.0F, (-3040));
    }

    @Test(timeout = 4000)
    public void test3121236() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((float[]) null, (float) (-1), (-1));
    }

    @Test(timeout = 4000)
    public void test3131237() throws Throwable {
        float[] floatArray0 = new float[1];
        floatArray0[0] = (-860.273F);
        int int0 = ArrayUtils.indexOf(floatArray0, (-860.273F));
    }

    @Test(timeout = 4000)
    public void test3141240() throws Throwable {
        float[] floatArray0 = new float[9];
        int int0 = ArrayUtils.indexOf(floatArray0, (-1527.7157F), (-171));
    }

    @Test(timeout = 4000)
    public void test3151243() throws Throwable {
        float[] floatArray0 = new float[0];
        int int0 = ArrayUtils.indexOf(floatArray0, (float) Integer.MAX_VALUE, 0);
    }

    @Test(timeout = 4000)
    public void test3161246() throws Throwable {
        double[] doubleArray0 = new double[6];
        boolean boolean0 = ArrayUtils.contains(doubleArray0, 852.61459120328, 2918.5301702262213);
    }

    @Test(timeout = 4000)
    public void test3171249() throws Throwable {
        double[] doubleArray0 = new double[7];
        doubleArray0[6] = (double) 1;
        boolean boolean0 = ArrayUtils.contains(doubleArray0, (double) (short) 1);
    }

    @Test(timeout = 4000)
    public void test3181252() throws Throwable {
        double[] doubleArray0 = new double[5];
        boolean boolean0 = ArrayUtils.contains(doubleArray0, (-1508.771535));
    }

    @Test(timeout = 4000)
    public void test3191255() throws Throwable {
        double[] doubleArray0 = new double[6];
        doubleArray0[5] = 6485.40117429313;
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 1747.7, 7009, (-467.02517183));
    }

    @Test(timeout = 4000)
    public void test3201258() throws Throwable {
        double[] doubleArray0 = new double[8];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2900.31171079269, (-2481), (-1466.0));
    }

    @Test(timeout = 4000)
    public void test3211261() throws Throwable {
        double[] doubleArray0 = ArrayUtils.EMPTY_DOUBLE_ARRAY;
    }

    @Test(timeout = 4000)
    public void test3211264() throws Throwable {
        double[] doubleArray0 = ArrayUtils.EMPTY_DOUBLE_ARRAY;
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-449.04364), 2169, 2763.752662583577);
    }

    @Test(timeout = 4000)
    public void test3221267() throws Throwable {
        double[] doubleArray0 = new double[2];
        doubleArray0[0] = (-1.0);
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    }

    @Test(timeout = 4000)
    public void test3231270() throws Throwable {
        double[] doubleArray0 = new double[8];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, 2185.793, (-1));
    }

    @Test(timeout = 4000)
    public void test3241273() throws Throwable {
        double[] doubleArray0 = new double[0];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-532.94708536686), 2507);
    }

    @Test(timeout = 4000)
    public void test3251276() throws Throwable {
        double[] doubleArray0 = new double[1];
        doubleArray0[0] = 2921.217853;
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) 104.5F, (-1), (double) (-1118.4F));
    }

    @Test(timeout = 4000)
    public void test3261279() throws Throwable {
        double[] doubleArray0 = new double[8];
        int int0 = ArrayUtils.indexOf(doubleArray0, 0.0, 573.260065281386);
    }

    @Test(timeout = 4000)
    public void test3271282() throws Throwable {
        double[] doubleArray0 = new double[3];
        boolean boolean0 = ArrayUtils.contains(doubleArray0, 1.5, 0.0);
    }

    @Test(timeout = 4000)
    public void test3281285() throws Throwable {
        double[] doubleArray0 = new double[6];
        int int0 = ArrayUtils.indexOf(doubleArray0, (double) (short) 0, (int) (short) (-1289));
    }

    @Test(timeout = 4000)
    public void test3291288() throws Throwable {
        double[] doubleArray0 = new double[0];
        double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1947.0465044889506);
    }

    @Test(timeout = 4000)
    public void test3291293() throws Throwable {
        double[] doubleArray0 = new double[0];
        double[] doubleArray1 = ArrayUtils.removeElement(doubleArray0, 1947.0465044889506);
        doubleArray1.equals((Object) doubleArray0);
    }

    @Test(timeout = 4000)
    public void test3301296() throws Throwable {
        byte[] byteArray0 = new byte[3];
        byteArray0[0] = (byte) 55;
        boolean boolean0 = ArrayUtils.contains(byteArray0, (byte) 55);
    }

    @Test(timeout = 4000)
    public void test3311299() throws Throwable {
        byte[] byteArray0 = new byte[9];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) 0, (int) (byte) 0);
    }

    @Test(timeout = 4000)
    public void test3321302() throws Throwable {
        byte[] byteArray0 = new byte[3];
        int int0 = ArrayUtils.lastIndexOf(byteArray0, (byte) (-38), (int) (byte) (-119));
    }

    @Test(timeout = 4000)
    public void test3331305() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((byte[]) null, (byte) (-1));
    }

    @Test(timeout = 4000)
    public void test3341306() throws Throwable {
        Byte[] byteArray0 = new Byte[1];
        byte byte0 = (byte) (-1);
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
    }

    @Test(timeout = 4000)
    public void test3341310() throws Throwable {
        Byte[] byteArray0 = new Byte[1];
        byte byte0 = (byte) (-1);
        byte[] byteArray1 = ArrayUtils.toPrimitive(byteArray0, byte0);
        int int0 = ArrayUtils.indexOf(byteArray1, (byte) (-68), (int) (byte) (-127));
    }

    @Test(timeout = 4000)
    public void test3351314() throws Throwable {
        boolean boolean0 = ArrayUtils.contains((byte[]) null, (byte) (-57));
    }

    @Test(timeout = 4000)
    public void test3361315() throws Throwable {
        char[] charArray0 = new char[1];
        charArray0[0] = 'j';
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'j');
    }

    @Test(timeout = 4000)
    public void test3371318() throws Throwable {
        char[] charArray0 = new char[4];
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'N', (int) (byte) (-123));
    }

    @Test(timeout = 4000)
    public void test3381321() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((char[]) null, 'A', (int) (byte) (-124));
    }

    @Test(timeout = 4000)
    public void test3391322() throws Throwable {
        char[] charArray0 = new char[4];
        charArray0[1] = 'n';
        boolean boolean0 = ArrayUtils.contains(charArray0, 'n');
    }

    @Test(timeout = 4000)
    public void test3401325() throws Throwable {
        short[] shortArray0 = new short[7];
        shortArray0[1] = (short) 408;
        boolean boolean0 = ArrayUtils.contains(shortArray0, (short) 408);
    }

    @Test(timeout = 4000)
    public void test3411328() throws Throwable {
        short[] shortArray0 = new short[9];
        boolean boolean0 = ArrayUtils.contains(shortArray0, (short) (-997));
    }

    @Test(timeout = 4000)
    public void test3421331() throws Throwable {
        short[] shortArray0 = new short[1];
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 1, (int) (short) 0);
    }

    @Test(timeout = 4000)
    public void test3431334() throws Throwable {
        short[] shortArray0 = new short[3];
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) (-2595), (int) (short) (-922));
    }

    @Test(timeout = 4000)
    public void test3441337() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) 21845, 2103657451);
    }

    @Test(timeout = 4000)
    public void test3441338() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((short[]) null, (short) 21845, 2103657451);
        Integer[] integerArray0 = new Integer[6];
        integerArray0[0] = (Integer) 21845;
        integerArray0[1] = (Integer) 2103657451;
        integerArray0[2] = (Integer) int0;
        integerArray0[3] = (Integer) 21845;
        integerArray0[4] = (Integer) 21845;
        integerArray0[5] = (Integer) 2103657451;
        int[] intArray0 = ArrayUtils.toPrimitive(integerArray0);
    }

    @Test(timeout = 4000)
    public void test3451342() throws Throwable {
        short[] shortArray0 = new short[1];
        int int0 = ArrayUtils.indexOf(shortArray0, (short) (byte) 0, (-471));
    }

    @Test(timeout = 4000)
    public void test3461345() throws Throwable {
        int[] intArray0 = new int[6];
        intArray0[4] = (int) (short) 21845;
        boolean boolean0 = ArrayUtils.contains(intArray0, (int) (short) 21845);
    }

    @Test(timeout = 4000)
    public void test3471348() throws Throwable {
        int[] intArray0 = new int[5];
        int int0 = ArrayUtils.lastIndexOf(intArray0, 4, 63);
    }

    @Test(timeout = 4000)
    public void test3481349() throws Throwable {
        int[] intArray0 = new int[3];
        int int0 = ArrayUtils.lastIndexOf(intArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test3491350() throws Throwable {
        int[] intArray0 = new int[8];
        int int0 = ArrayUtils.lastIndexOf(intArray0, (-2283), (-4388));
    }

    @Test(timeout = 4000)
    public void test3501351() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((int[]) null, (-1), Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test3511352() throws Throwable {
        int[] intArray0 = new int[9];
        int int0 = ArrayUtils.indexOf(intArray0, 690, (-3296));
    }

    @Test(timeout = 4000)
    public void test3521353() throws Throwable {
        boolean boolean0 = ArrayUtils.contains((int[]) null, (-3259));
    }

    @Test(timeout = 4000)
    public void test3531354() throws Throwable {
        long[] longArray0 = new long[2];
        longArray0[0] = 2L;
        boolean boolean0 = ArrayUtils.contains(longArray0, 2L);
    }

    @Test(timeout = 4000)
    public void test3541355() throws Throwable {
        long[] longArray0 = new long[7];
        int int0 = ArrayUtils.lastIndexOf(longArray0, 0L, 0);
    }

    @Test(timeout = 4000)
    public void test3551356() throws Throwable {
        long[] longArray0 = new long[6];
        int int0 = ArrayUtils.lastIndexOf(longArray0, (-36L), (-2144778109));
    }

    @Test(timeout = 4000)
    public void test3561357() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((long[]) null, 184L, (-89));
    }

    @Test(timeout = 4000)
    public void test3571358() throws Throwable {
        long[] longArray0 = new long[8];
        longArray0[0] = (long) (short) (-1480);
        int int0 = ArrayUtils.indexOf(longArray0, (-1480L));
    }

    @Test(timeout = 4000)
    public void test3581359() throws Throwable {
        long[] longArray0 = new long[6];
        int int0 = ArrayUtils.indexOf(longArray0, (long) Integer.MAX_VALUE, (-1));
    }

    @Test(timeout = 4000)
    public void test3591360() throws Throwable {
        int int0 = ArrayUtils.indexOf((long[]) null, (long) (byte) (-109), (-1));
    }

    @Test(timeout = 4000)
    public void test3601361() throws Throwable {
        Object[] objectArray0 = new Object[4];
        boolean boolean0 = ArrayUtils.contains(objectArray0, objectArray0[1]);
    }

    @Test(timeout = 4000)
    public void test3611362() throws Throwable {
        Object[] objectArray0 = new Object[4];
        objectArray0[0] = (Object) (-221.0F);
        int int0 = ArrayUtils.lastIndexOf(objectArray0, objectArray0[0]);
    }

    @Test(timeout = 4000)
    public void test3621363() throws Throwable {
        Object[] objectArray0 = new Object[8];
        objectArray0[0] = (Object) (-2312L);
        objectArray0[1] = (Object) (-2312L);
        objectArray0[2] = (Object) (-2312L);
        objectArray0[3] = (Object) (-780L);
        objectArray0[4] = objectArray0[2];
        objectArray0[5] = (Object) (-2312L);
        objectArray0[6] = (Object) (-2312L);
        objectArray0[7] = (Object) (-780L);
        int int0 = ArrayUtils.lastIndexOf(objectArray0, (Object) null, 3937);
    }

    @Test(timeout = 4000)
    public void test3631364() throws Throwable {
        Object[] objectArray0 = new Object[1];
        int int0 = ArrayUtils.lastIndexOf(objectArray0, (Object) "e$VCh]x", 0);
    }

    @Test(timeout = 4000)
    public void test3641365() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[3];
        int int0 = ArrayUtils.lastIndexOf((Object[]) booleanArray0, (Object) "', is neither of type Map.Entry nor an Array", (-44));
    }

    @Test(timeout = 4000)
    public void test3651366() throws Throwable {
        int int0 = ArrayUtils.lastIndexOf((Object[]) null, (Object) "MZ&P", 36);
    }

    @Test(timeout = 4000)
    public void test3661367() throws Throwable {
        Object[] objectArray0 = new Object[9];
        objectArray0[2] = (Object) 'n';
        int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[2]);
    }

    @Test(timeout = 4000)
    public void test3671368() throws Throwable {
        Object[] objectArray0 = new Object[0];
        Object object0 = new Object();
        boolean boolean0 = ArrayUtils.contains(objectArray0, object0);
    }

    @Test(timeout = 4000)
    public void test3681369() throws Throwable {
        Object[] objectArray0 = new Object[1];
        objectArray0[0] = (Object) false;
        Object[] objectArray1 = ArrayUtils.removeElement(objectArray0, (Object) null);
    }

    @Test(timeout = 4000)
    public void test3691370() throws Throwable {
        Object[] objectArray0 = new Object[2];
        int int0 = ArrayUtils.indexOf(objectArray0, objectArray0[0], (-922));
    }

    @Test(timeout = 4000)
    public void test3701371() throws Throwable {
        ArrayUtils.reverse((boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test3711372() throws Throwable {
        boolean[] booleanArray0 = new boolean[4];
        ArrayUtils.reverse(booleanArray0);
        Arrays.equals(new boolean[] { false, false, false, false }, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test3721373() throws Throwable {
        ArrayUtils.reverse((float[]) null);
    }

    @Test(timeout = 4000)
    public void test3731374() throws Throwable {
        float[] floatArray0 = new float[9];
        ArrayUtils.reverse(floatArray0);
    }

    @Test(timeout = 4000)
    public void test3741375() throws Throwable {
        ArrayUtils.reverse((double[]) null);
    }

    @Test(timeout = 4000)
    public void test3751376() throws Throwable {
        double[] doubleArray0 = new double[3];
        ArrayUtils.reverse(doubleArray0);
    }

    @Test(timeout = 4000)
    public void test3761377() throws Throwable {
        ArrayUtils.reverse((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test3771378() throws Throwable {
        ArrayUtils.reverse((char[]) null);
    }

    @Test(timeout = 4000)
    public void test3781379() throws Throwable {
        char[] charArray0 = new char[4];
        ArrayUtils.reverse(charArray0);
    }

    @Test(timeout = 4000)
    public void test3791380() throws Throwable {
        ArrayUtils.reverse((short[]) null);
    }

    @Test(timeout = 4000)
    public void test3801381() throws Throwable {
        short[] shortArray0 = new short[3];
        ArrayUtils.reverse(shortArray0);
    }

    @Test(timeout = 4000)
    public void test3811382() throws Throwable {
        ArrayUtils.reverse((int[]) null);
    }

    @Test(timeout = 4000)
    public void test3821383() throws Throwable {
        int[] intArray0 = new int[3];
        ArrayUtils.reverse(intArray0);
    }

    @Test(timeout = 4000)
    public void test3831384() throws Throwable {
        ArrayUtils.reverse((long[]) null);
    }

    @Test(timeout = 4000)
    public void test3841385() throws Throwable {
        long[] longArray0 = new long[2];
        ArrayUtils.reverse(longArray0);
    }

    @Test(timeout = 4000)
    public void test3851386() throws Throwable {
        ArrayUtils.reverse((Object[]) null);
    }

    @Test(timeout = 4000)
    public void test3861387() throws Throwable {
        Object[] objectArray0 = new Object[5];
        ArrayUtils.reverse(objectArray0);
    }

    @Test(timeout = 4000)
    public void test3871388() throws Throwable {
        Object object0 = new Object();
        boolean boolean0 = ArrayUtils.isSameType(object0, "Mac");
    }

    @Test(timeout = 4000)
    public void test3881389() throws Throwable {
        ArrayUtils.isSameType((Object) null, (Object) null);
    }

    @Test(timeout = 4000)
    public void test3891390() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean[] booleanArray1 = new boolean[0];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test3901391() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((boolean[]) null, (boolean[]) null);
    }

    @Test(timeout = 4000)
    public void test3911392() throws Throwable {
        boolean[] booleanArray0 = new boolean[1];
        boolean boolean0 = ArrayUtils.isSameLength(booleanArray0, booleanArray0);
    }

    @Test(timeout = 4000)
    public void test3921393() throws Throwable {
        float[] floatArray0 = new float[9];
        float[] floatArray1 = ArrayUtils.addAll(floatArray0, floatArray0);
        boolean boolean0 = ArrayUtils.isSameLength(floatArray1, floatArray0);
    }

    @Test(timeout = 4000)
    public void test3931395() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((float[]) null, (float[]) null);
    }

    @Test(timeout = 4000)
    public void test3941396() throws Throwable {
        float[] floatArray0 = new float[0];
        boolean boolean0 = ArrayUtils.isSameLength((float[]) null, floatArray0);
    }

    @Test(timeout = 4000)
    public void test3951397() throws Throwable {
        float[] floatArray0 = new float[7];
        boolean boolean0 = ArrayUtils.isSameLength(floatArray0, floatArray0);
    }

    @Test(timeout = 4000)
    public void test3961398() throws Throwable {
        double[] doubleArray0 = new double[0];
        boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, (double[]) null);
    }

    @Test(timeout = 4000)
    public void test3971399() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((double[]) null, (double[]) null);
    }

    @Test(timeout = 4000)
    public void test3981400() throws Throwable {
        double[] doubleArray0 = new double[1];
        boolean boolean0 = ArrayUtils.isSameLength(doubleArray0, doubleArray0);
    }

    @Test(timeout = 4000)
    public void test3991401() throws Throwable {
        byte[] byteArray0 = new byte[0];
        byte[] byteArray1 = new byte[4];
        boolean boolean0 = ArrayUtils.isSameLength(byteArray0, byteArray1);
    }

    @Test(timeout = 4000)
    public void test4001402() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((byte[]) null, (byte[]) null);
    }

    @Test(timeout = 4000)
    public void test4011403() throws Throwable {
        byte[] byteArray0 = new byte[6];
        boolean boolean0 = ArrayUtils.isSameLength(byteArray0, byteArray0);
    }

    @Test(timeout = 4000)
    public void test4021404() throws Throwable {
        char[] charArray0 = new char[0];
        char[] charArray1 = new char[4];
        boolean boolean0 = ArrayUtils.isSameLength(charArray0, charArray1);
    }

    @Test(timeout = 4000)
    public void test4031405() throws Throwable {
        char[] charArray0 = new char[2];
        boolean boolean0 = ArrayUtils.isSameLength(charArray0, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test4041406() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((char[]) null, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test4051407() throws Throwable {
        char[] charArray0 = new char[2];
        boolean boolean0 = ArrayUtils.isSameLength(charArray0, charArray0);
    }

    @Test(timeout = 4000)
    public void test4061408() throws Throwable {
        short[] shortArray0 = new short[9];
        short[] shortArray1 = new short[2];
        boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray1);
    }

    @Test(timeout = 4000)
    public void test4071409() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((short[]) null, (short[]) null);
    }

    @Test(timeout = 4000)
    public void test4081410() throws Throwable {
        short[] shortArray0 = new short[3];
        boolean boolean0 = ArrayUtils.isSameLength(shortArray0, shortArray0);
    }

    @Test(timeout = 4000)
    public void test4091411() throws Throwable {
        int[] intArray0 = new int[3];
        boolean boolean0 = ArrayUtils.isSameLength((int[]) null, intArray0);
    }

    @Test(timeout = 4000)
    public void test4101412() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((int[]) null, (int[]) null);
    }

    @Test(timeout = 4000)
    public void test4111413() throws Throwable {
        int[] intArray0 = new int[5];
        boolean boolean0 = ArrayUtils.isSameLength(intArray0, intArray0);
    }

    @Test(timeout = 4000)
    public void test4121414() throws Throwable {
        long[] longArray0 = new long[4];
        long[] longArray1 = new long[2];
        boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray1);
    }

    @Test(timeout = 4000)
    public void test4131415() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((long[]) null, (long[]) null);
    }

    @Test(timeout = 4000)
    public void test4141416() throws Throwable {
        long[] longArray0 = new long[0];
        boolean boolean0 = ArrayUtils.isSameLength(longArray0, longArray0);
    }

    @Test(timeout = 4000)
    public void test4151417() throws Throwable {
        Object[] objectArray0 = new Object[7];
        Object[] objectArray1 = new Object[2];
        boolean boolean0 = ArrayUtils.isSameLength(objectArray0, objectArray1);
    }

    @Test(timeout = 4000)
    public void test4161418() throws Throwable {
        boolean boolean0 = ArrayUtils.isSameLength((Object[]) null, (Object[]) null);
    }

    @Test(timeout = 4000)
    public void test4171419() throws Throwable {
        Object[] objectArray0 = new Object[5];
        boolean boolean0 = ArrayUtils.isSameLength((Object[]) null, objectArray0);
    }

    @Test(timeout = 4000)
    public void test4181420() throws Throwable {
        long[] longArray0 = new long[3];
        Long[] longArray1 = ArrayUtils.toObject(longArray0);
    }

    @Test(timeout = 4000)
    public void test4181421() throws Throwable {
        long[] longArray0 = new long[3];
        Long[] longArray1 = ArrayUtils.toObject(longArray0);
        boolean boolean0 = ArrayUtils.isSameLength((Object[]) longArray1, (Object[]) longArray1);
    }

    @Test(timeout = 4000)
    public void test4191423() throws Throwable {
        boolean[] booleanArray0 = new boolean[2];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, 1, 2607);
    }

    @Test(timeout = 4000)
    public void test4201424() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.subarray((boolean[]) null, 1, 7);
    }

    @Test(timeout = 4000)
    public void test4211425() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.subarray(booleanArray0, (-963), 0);
        Arrays.equals(new boolean[] {}, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test4221426() throws Throwable {
        float[] floatArray0 = new float[4];
        float[] floatArray1 = ArrayUtils.subarray(floatArray0, 0, Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test4231428() throws Throwable {
        float[] floatArray0 = new float[7];
        float[] floatArray1 = ArrayUtils.subarray(floatArray0, (-2147), (-2147));
    }

    @Test(timeout = 4000)
    public void test4241429() throws Throwable {
        float[] floatArray0 = ArrayUtils.subarray((float[]) null, 2, 2);
    }

    @Test(timeout = 4000)
    public void test4251430() throws Throwable {
        float[] floatArray0 = new float[6];
        float[] floatArray1 = ArrayUtils.subarray(floatArray0, 57, (-416));
    }

    @Test(timeout = 4000)
    public void test4261431() throws Throwable {
        double[] doubleArray0 = new double[2];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, 1472, (-1));
    }

    @Test(timeout = 4000)
    public void test4271432() throws Throwable {
        double[] doubleArray0 = ArrayUtils.subarray((double[]) null, 2303, 3575);
    }

    @Test(timeout = 4000)
    public void test4281433() throws Throwable {
        double[] doubleArray0 = new double[2];
        double[] doubleArray1 = ArrayUtils.subarray(doubleArray0, (-1), 1472);
    }

    @Test(timeout = 4000)
    public void test4291436() throws Throwable {
        Short[] shortArray0 = new Short[5];
        Short short0 = new Short((short) 1588);
        shortArray0[0] = short0;
        shortArray0[1] = shortArray0[0];
        short short1 = (short) (-16);
        byte[] byteArray0 = new byte[2];
        byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) short1, (int) shortArray0[1]);
    }

    @Test(timeout = 4000)
    public void test4301438() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        byte[] byteArray0 = ArrayUtils.subarray(arrayUtils0.EMPTY_BYTE_ARRAY, 0, 1285);
    }

    @Test(timeout = 4000)
    public void test4311439() throws Throwable {
        byte[] byteArray0 = new byte[5];
        byte[] byteArray1 = ArrayUtils.subarray(byteArray0, (int) (byte) 1, (-1));
    }

    @Test(timeout = 4000)
    public void test4321440() throws Throwable {
        byte[] byteArray0 = ArrayUtils.subarray((byte[]) null, (-918), 672);
    }

    @Test(timeout = 4000)
    public void test4331441() throws Throwable {
        char[] charArray0 = new char[1];
        char[] charArray1 = ArrayUtils.subarray(charArray0, (-2083), Integer.MAX_VALUE);
    }

    @Test(timeout = 4000)
    public void test4341443() throws Throwable {
        char[] charArray0 = new char[4];
        char[] charArray1 = ArrayUtils.subarray(charArray0, (-3033), (int) (byte) 2);
    }

    @Test(timeout = 4000)
    public void test4351444() throws Throwable {
        char[] charArray0 = ArrayUtils.subarray((char[]) null, 3313, 1);
    }

    @Test(timeout = 4000)
    public void test4361445() throws Throwable {
        char[] charArray0 = new char[4];
        char[] charArray1 = ArrayUtils.subarray(charArray0, 0, 0);
    }

    @Test(timeout = 4000)
    public void test4371447() throws Throwable {
        short[] shortArray0 = ArrayUtils.subarray((short[]) null, 1, (-93));
    }

    @Test(timeout = 4000)
    public void test4381448() throws Throwable {
        short[] shortArray0 = new short[5];
        short[] shortArray1 = ArrayUtils.subarray(shortArray0, (int) (short) 1, 2197);
    }

    @Test(timeout = 4000)
    public void test4391450() throws Throwable {
        int[] intArray0 = new int[9];
        int[] intArray1 = ArrayUtils.subarray(intArray0, (-942), 0);
    }

    @Test(timeout = 4000)
    public void test4401451() throws Throwable {
        int[] intArray0 = new int[3];
        int[] intArray1 = ArrayUtils.subarray(intArray0, 297, 2146540524);
    }

    @Test(timeout = 4000)
    public void test4411452() throws Throwable {
        int[] intArray0 = ArrayUtils.subarray((int[]) null, 971, (-1525));
    }

    @Test(timeout = 4000)
    public void test4421453() throws Throwable {
        int[] intArray0 = new int[6];
        int[] intArray1 = ArrayUtils.subarray(intArray0, (-785), 2660);
    }

    @Test(timeout = 4000)
    public void test4431456() throws Throwable {
        long[] longArray0 = new long[1];
        long[] longArray1 = ArrayUtils.subarray(longArray0, (-1), (int) (short) (-2204));
    }

    @Test(timeout = 4000)
    public void test4441457() throws Throwable {
        long[] longArray0 = new long[6];
        long[] longArray1 = ArrayUtils.subarray(longArray0, 2146214317, 2146214317);
    }

    @Test(timeout = 4000)
    public void test4451458() throws Throwable {
        long[] longArray0 = ArrayUtils.subarray((long[]) null, 57, 2527);
    }

    @Test(timeout = 4000)
    public void test4461459() throws Throwable {
        long[] longArray0 = new long[6];
        long[] longArray1 = ArrayUtils.subarray(longArray0, (-416), 1264);
    }

    @Test(timeout = 4000)
    public void test4471462() throws Throwable {
        short[] shortArray0 = new short[3];
        Integer[] integerArray0 = new Integer[2];
        Integer[] integerArray1 = ArrayUtils.subarray(integerArray0, (int) shortArray0[0], (int) 0);
    }

    @Test(timeout = 4000)
    public void test4481463() throws Throwable {
        String[] stringArray0 = new String[5];
        String[] stringArray1 = ArrayUtils.subarray(stringArray0, 2169, 1731);
    }

    @Test(timeout = 4000)
    public void test4491464() throws Throwable {
        AbstractMap.SimpleImmutableEntry<String, Object>[] abstractMap_SimpleImmutableEntryArray0 = ArrayUtils.subarray((AbstractMap.SimpleImmutableEntry<String, Object>[]) null, (int) 2, 1);
    }

    @Test(timeout = 4000)
    public void test4501465() throws Throwable {
        AbstractMap.SimpleEntry<Integer, String>[] abstractMap_SimpleEntryArray0 = (AbstractMap.SimpleEntry<Integer, String>[]) Array.newInstance(AbstractMap.SimpleEntry.class, 7);
        AbstractMap.SimpleEntry<Integer, String>[] abstractMap_SimpleEntryArray1 = ArrayUtils.subarray(abstractMap_SimpleEntryArray0, (int) (-101), 3475);
    }

    @Test(timeout = 4000)
    public void test4511468() throws Throwable {
        boolean[] booleanArray0 = ArrayUtils.removeElement((boolean[]) null, true);
    }

    @Test(timeout = 4000)
    public void test4521469() throws Throwable {
        boolean[] booleanArray0 = new boolean[0];
        boolean[] booleanArray1 = ArrayUtils.removeElement(booleanArray0, true);
    }

    @Test(timeout = 4000)
    public void test4531470() throws Throwable {
        float[] floatArray0 = ArrayUtils.addAll((float[]) null, (float[]) null);
    }

    @Test(timeout = 4000)
    public void test4541471() throws Throwable {
        float[] floatArray0 = new float[3];
        float[] floatArray1 = ArrayUtils.clone(floatArray0);
    }

    @Test(timeout = 4000)
    public void test4551473() throws Throwable {
        double[] doubleArray0 = ArrayUtils.addAll((double[]) null, (double[]) null);
    }

    @Test(timeout = 4000)
    public void test4561474() throws Throwable {
        byte[] byteArray0 = ArrayUtils.clone((byte[]) null);
    }

    @Test(timeout = 4000)
    public void test4571475() throws Throwable {
        short[] shortArray0 = ArrayUtils.removeElement((short[]) null, (short) 0);
    }

    @Test(timeout = 4000)
    public void test4581476() throws Throwable {
        short[] shortArray0 = new short[0];
        short[] shortArray1 = ArrayUtils.clone(shortArray0);
    }

    @Test(timeout = 4000)
    public void test4591477() throws Throwable {
        int[] intArray0 = ArrayUtils.addAll((int[]) null, (int[]) null);
    }

    @Test(timeout = 4000)
    public void test4601478() throws Throwable {
        int[] intArray0 = new int[4];
        int[] intArray1 = ArrayUtils.removeElement(intArray0, (-951));
    }

    @Test(timeout = 4000)
    public void test4611480() throws Throwable {
        long[] longArray0 = ArrayUtils.clone((long[]) null);
    }

    @Test(timeout = 4000)
    public void test4621481() throws Throwable {
        long[] longArray0 = new long[0];
        long[] longArray1 = ArrayUtils.clone(longArray0);
    }

    @Test(timeout = 4000)
    public void test4631482() throws Throwable {
        Object[] objectArray0 = ArrayUtils.clone((Object[]) null);
    }

    @Test(timeout = 4000)
    public void test4641483() throws Throwable {
        Map<Object, Object> map0 = ArrayUtils.toMap((Object[]) null);
    }

    @Test(timeout = 4000)
    public void test4651484() throws Throwable {
        Object[] objectArray0 = new Object[7];
        ArrayUtils.toMap(objectArray0);
    }

    @Test(timeout = 4000)
    public void test4661485() throws Throwable {
        String string0 = ArrayUtils.toString((Object) null, (String) null);
    }

    @Test(timeout = 4000)
    public void test4671486() throws Throwable {
        short[] shortArray0 = new short[2];
        short[] shortArray1 = ArrayUtils.add(shortArray0, 1, (short) 3);
    }

    @Test(timeout = 4000)
    public void test4681487() throws Throwable {
        Float[] floatArray0 = new Float[0];
        float[] floatArray1 = ArrayUtils.toPrimitive(floatArray0, 773.19F);
        ArrayUtils.remove(floatArray1, (-5583));
    }

    @Test(timeout = 4000)
    public void test4691488() throws Throwable {
        byte[] byteArray0 = new byte[4];
        byteArray0[1] = (byte) 48;
        byte[] byteArray1 = ArrayUtils.removeElement(byteArray0, (byte) 48);
    }

    @Test(timeout = 4000)
    public void test4701490() throws Throwable {
        String[] stringArray0 = new String[0];
        ArrayUtils.remove(stringArray0, (-1));
    }

    @Test(timeout = 4000)
    public void test4711491() throws Throwable {
        double[] doubleArray0 = new double[3];
        double[] doubleArray1 = ArrayUtils.add(doubleArray0, (-1.0));
    }

    @Test(timeout = 4000)
    public void test4721492() throws Throwable {
        Integer integer0 = new Integer((byte) 0);
        boolean boolean0 = ArrayUtils.isEquals(integer0, integer0);
    }

    @Test(timeout = 4000)
    public void test4731493() throws Throwable {
        byte[] byteArray0 = new byte[2];
        ArrayUtils.add(byteArray0, (int) (byte) 6, (byte) 116);
    }

    @Test(timeout = 4000)
    public void test4741494() throws Throwable {
        char[] charArray0 = new char[9];
        ArrayUtils.add(charArray0, (-1), 'i');
    }

    @Test(timeout = 4000)
    public void test4751495() throws Throwable {
        int[] intArray0 = new int[7];
        ArrayUtils.add(intArray0, (-1), (-1));
    }

    @Test(timeout = 4000)
    public void test4761496() throws Throwable {
        short[] shortArray0 = ArrayUtils.add((short[]) null, (short) 365);
    }

    @Test(timeout = 4000)
    public void test4771498() throws Throwable {
        int[] intArray0 = new int[9];
        intArray0[1] = (int) '0';
        int[] intArray1 = ArrayUtils.removeElement(intArray0, 48);
    }

    @Test(timeout = 4000)
    public void test4781500() throws Throwable {
        ArrayUtils.add((boolean[]) null, 416, true);
    }

    @Test(timeout = 4000)
    public void test4791501() throws Throwable {
        boolean[] booleanArray0 = new boolean[9];
        int int0 = ArrayUtils.lastIndexOf(booleanArray0, true);
    }

    @Test(timeout = 4000)
    public void test4801502() throws Throwable {
        char[] charArray0 = ArrayUtils.removeElement((char[]) null, ')');
    }

    @Test(timeout = 4000)
    public void test4811503() throws Throwable {
        String string0 = ArrayUtils.toString((Object) "");
    }

    @Test(timeout = 4000)
    public void test4821504() throws Throwable {
        short[] shortArray0 = new short[2];
        int int0 = ArrayUtils.indexOf(shortArray0, (short) 2);
    }

    @Test(timeout = 4000)
    public void test4831505() throws Throwable {
        long[] longArray0 = new long[9];
        int int0 = ArrayUtils.lastIndexOf(longArray0, (long) (short) 3);
    }

    @Test(timeout = 4000)
    public void test4841506() throws Throwable {
        ArrayUtils.remove((long[]) null, 2147042647);
    }

    @Test(timeout = 4000)
    public void test4851507() throws Throwable {
        double[] doubleArray0 = new double[2];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (-1.0));
    }

    @Test(timeout = 4000)
    public void test4861508() throws Throwable {
        boolean[] booleanArray0 = new boolean[3];
        boolean[] booleanArray1 = ArrayUtils.remove(booleanArray0, 0);
    }

    @Test(timeout = 4000)
    public void test4871509() throws Throwable {
        float[] floatArray0 = new float[3];
        int int0 = ArrayUtils.lastIndexOf(floatArray0, (-1.0F));
    }

    @Test(timeout = 4000)
    public void test4881510() throws Throwable {
        double[] doubleArray0 = new double[2];
        ArrayUtils.remove(doubleArray0, 1742);
    }

    @Test(timeout = 4000)
    public void test4891511() throws Throwable {
        long[] longArray0 = new long[2];
        long[] longArray1 = ArrayUtils.add(longArray0, (long) (short) 0);
    }

    @Test(timeout = 4000)
    public void test4901512() throws Throwable {
        double[] doubleArray0 = new double[6];
        int int0 = ArrayUtils.lastIndexOf(doubleArray0, (double) 3313, 538.76239278);
    }

    @Test(timeout = 4000)
    public void test4911513() throws Throwable {
        float[] floatArray0 = new float[1];
        ArrayUtils.add(floatArray0, (-1278), 0.0F);
    }

    @Test(timeout = 4000)
    public void test4921514() throws Throwable {
        byte[] byteArray0 = ArrayUtils.add((byte[]) null, (byte) (-3));
    }

    @Test(timeout = 4000)
    public void test4931516() throws Throwable {
        boolean[] booleanArray0 = new boolean[7];
        boolean[] booleanArray1 = ArrayUtils.add(booleanArray0, false);
        Arrays.equals(new boolean[] { false, false, false, false, false, false, false, false }, booleanArray1);
    }

    @Test(timeout = 4000)
    public void test4941517() throws Throwable {
        double[] doubleArray0 = new double[3];
        double[] doubleArray1 = ArrayUtils.add(doubleArray0, 2, 0.0);
    }

    @Test(timeout = 4000)
    public void test4951518() throws Throwable {
        char[] charArray0 = new char[9];
        ArrayUtils.remove(charArray0, (-2879));
    }

    @Test(timeout = 4000)
    public void test4961519() throws Throwable {
        short[] shortArray0 = new short[3];
        int int0 = ArrayUtils.lastIndexOf(shortArray0, (short) 0);
    }

    @Test(timeout = 4000)
    public void test4971520() throws Throwable {
        long[] longArray0 = new long[2];
        boolean boolean0 = ArrayUtils.contains(longArray0, (long) (-1));
    }

    @Test(timeout = 4000)
    public void test4981521() throws Throwable {
        Boolean[] booleanArray0 = new Boolean[3];
        int int0 = ArrayUtils.lastIndexOf((Object[]) booleanArray0, (Object) "', is neither of type Map.Entry nor an Array");
    }

    @Test(timeout = 4000)
    public void test4991522() throws Throwable {
        ArrayUtils arrayUtils0 = new ArrayUtils();
        Map<Object, Object> map0 = ArrayUtils.toMap(arrayUtils0.EMPTY_SHORT_OBJECT_ARRAY);
        map0.isEmpty();
    }

    @Test(timeout = 4000)
    public void test5001523() throws Throwable {
        ArrayUtils.remove((short[]) null, (int) (short) (-467));
    }

    @Test(timeout = 4000)
    public void test5011524() throws Throwable {
        int[] intArray0 = new int[7];
        int[] intArray1 = ArrayUtils.add(intArray0, (int) (byte) (-121));
    }

    @Test(timeout = 4000)
    public void test5021525() throws Throwable {
        long[] longArray0 = new long[0];
        ArrayUtils.add(longArray0, 2790, (-1L));
    }

    @Test(timeout = 4000)
    public void test5031526() throws Throwable {
        float[] floatArray0 = new float[1];
        boolean boolean0 = ArrayUtils.contains(floatArray0, (-1372.3595F));
    }

    @Test(timeout = 4000)
    public void test5041527() throws Throwable {
        char[] charArray0 = ArrayUtils.add((char[]) null, 'D');
        char[] charArray1 = ArrayUtils.addAll(charArray0, (char[]) null);
    }

    @Test(timeout = 4000)
    public void test5051529() throws Throwable {
        boolean[] booleanArray0 = new boolean[4];
        boolean boolean0 = ArrayUtils.contains(booleanArray0, false);
    }

    @Test(timeout = 4000)
    public void test5061530() throws Throwable {
        char[] charArray0 = new char[1];
        int int0 = ArrayUtils.lastIndexOf(charArray0, 'j');
    }

    @Test(timeout = 4000)
    public void test5071531() throws Throwable {
        float[] floatArray0 = new float[0];
        float[] floatArray1 = ArrayUtils.add(floatArray0, (float) (-1));
    }

    @Test(timeout = 4000)
    public void test5081532() throws Throwable {
        int[] intArray0 = new int[2];
        int int0 = ArrayUtils.lastIndexOf(intArray0, 0);
    }

    @Test(timeout = 4000)
    public void test5091533() throws Throwable {
        int int0 = ArrayUtils.indexOf((double[]) null, 1.0, (double) (short) 0);
    }
}
