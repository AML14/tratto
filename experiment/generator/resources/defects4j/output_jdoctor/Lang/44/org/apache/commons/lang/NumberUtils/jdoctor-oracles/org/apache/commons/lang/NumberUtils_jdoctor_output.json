[
  {
    "signature": "org.apache.commons.lang.NumberUtils()",
    "name": "org.apache.commons.lang.NumberUtils",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "stringToInt(java.lang.String str)",
    "name": "stringToInt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the int represented by the string, or zero if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "stringToInt(java.lang.String str, int defaultValue)",
    "name": "stringToInt",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "defaultValue"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to convert.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "defaultValue"
        },
        "comment": "the default value.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the int represented by the string, or the default if conversion fails.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "createNumber(java.lang.String val)",
    "name": "createNumber",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Number",
      "name": "java.lang.Number",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "val"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "val"
        },
        "comment": "String containing a number.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "Number created from the string.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createFloat(java.lang.String val)",
    "name": "createFloat",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Float",
      "name": "java.lang.Float",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "val"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "val"
        },
        "comment": "a String to convert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted Float.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createDouble(java.lang.String val)",
    "name": "createDouble",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Double",
      "name": "java.lang.Double",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "val"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "val"
        },
        "comment": "a String to convert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted Double.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createInteger(java.lang.String val)",
    "name": "createInteger",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Integer",
      "name": "java.lang.Integer",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "val"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "val"
        },
        "comment": "a String to convert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted Integer.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createLong(java.lang.String val)",
    "name": "createLong",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.Long",
      "name": "java.lang.Long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "val"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "val"
        },
        "comment": "a String to convert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted Long.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createBigInteger(java.lang.String val)",
    "name": "createBigInteger",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.math.BigInteger",
      "name": "java.math.BigInteger",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "val"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "val"
        },
        "comment": "a String to convert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted BigInteger.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "createBigDecimal(java.lang.String val)",
    "name": "createBigDecimal",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.math.BigDecimal",
      "name": "java.math.BigDecimal",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "val"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "val"
        },
        "comment": "a String to convert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "converted BigDecimal.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the value cannot be converted.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "minimum(long a, long b, long c)",
    "name": "minimum",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "minimum(int a, int b, int c)",
    "name": "minimum",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the smallest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "maximum(long a, long b, long c)",
    "name": "maximum",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "long",
          "name": "long",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "long",
            "name": "long",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "maximum(int a, int b, int c)",
    "name": "maximum",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "a"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "b"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "c"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "a"
        },
        "comment": "value 1.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "b"
        },
        "comment": "value 2.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "c"
        },
        "comment": "value 3.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the largest of the values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compare(double lhs, double rhs)",
    "name": "compare",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is first. first double.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "the second double.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "-1 if lhs is less, +1 if greater, 0 if equal to rhs.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compare(float lhs, float rhs)",
    "name": "compare",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "lhs"
      },
      {
        "type": {
          "qualifiedName": "float",
          "name": "float",
          "isArray": false
        },
        "name": "rhs"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "lhs"
        },
        "comment": "lhs is first. first float.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "float",
            "name": "float",
            "isArray": false
          },
          "name": "rhs"
        },
        "comment": "the second float.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "-1 if lhs is less, +1 if greater, 0 if equal to rhs.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isDigits(java.lang.String str)",
    "name": "isDigits",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the String to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if str contains only unicode numeric.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "isNumber(java.lang.String str)",
    "name": "isNumber",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.NumberUtils",
      "name": "NumberUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.NumberUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the String to check.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if the string is a correctly formatted number.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]