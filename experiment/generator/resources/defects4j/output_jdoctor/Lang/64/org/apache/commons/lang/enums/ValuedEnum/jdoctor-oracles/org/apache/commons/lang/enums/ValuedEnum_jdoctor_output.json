[
  {
    "signature": "org.apache.commons.lang.enums.ValuedEnum(java.lang.String name, int value)",
    "name": "org.apache.commons.lang.enums.ValuedEnum",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.enums.ValuedEnum",
      "name": "ValuedEnum",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.enums.ValuedEnum",
    "isVarArgs": false,
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "name"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "name"
        },
        "comment": "the name of enum item.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value of enum item.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "throwsTags": []
  },
  {
    "signature": "getEnum(java.lang.Class enumClass, int value)",
    "name": "getEnum",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.enums.ValuedEnum",
      "name": "ValuedEnum",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.enums.ValuedEnum",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.enums.Enum",
      "name": "org.apache.commons.lang.enums.Enum",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Class",
          "name": "Class",
          "isArray": false
        },
        "name": "enumClass"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Class",
            "name": "Class",
            "isArray": false
          },
          "name": "enumClass"
        },
        "comment": "the class of the Enum to get.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "the value of the Enum to get.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the enum object, or null if the enum does not exist.",
      "kind": "RETURN",
      "condition": "(args[0].isEnum()) == false ? methodResultID==null"
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the enum class is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "getValue()",
    "name": "getValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.enums.ValuedEnum",
      "name": "ValuedEnum",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.enums.ValuedEnum",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the enum item's value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compareTo(java.lang.Object other)",
    "name": "compareTo",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.enums.ValuedEnum",
      "name": "ValuedEnum",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.enums.ValuedEnum",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "other"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "other"
        },
        "comment": "the other object to compare to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "-ve if this is less than the other object, +ve if greater than, 0 of equal.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "other is not an Enum.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "other is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.enums.ValuedEnum",
      "name": "ValuedEnum",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.enums.ValuedEnum",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "String in the form type[name=value], for example: JavaVersion[Java 1.0=100]. Note that the package name is stripped from the type name.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]