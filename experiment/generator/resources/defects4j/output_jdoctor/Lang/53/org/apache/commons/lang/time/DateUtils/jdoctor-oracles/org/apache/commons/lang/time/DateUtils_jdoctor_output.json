[
  {
    "signature": "org.apache.commons.lang.time.DateUtils()",
    "name": "org.apache.commons.lang.time.DateUtils",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "parameters": [],
    "paramTags": [],
    "throwsTags": []
  },
  {
    "signature": "isSameDay(java.util.Date date1, java.util.Date date2)",
    "name": "isSameDay",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date1"
        },
        "comment": "the first date not altered. date1 is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date2"
        },
        "comment": "the second date not altered. date2 is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "true if they represent the same day.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "isSameDay(java.util.Calendar cal1, java.util.Calendar cal2)",
    "name": "isSameDay",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Calendar",
          "name": "Calendar",
          "isArray": false
        },
        "name": "cal1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Calendar",
          "name": "Calendar",
          "isArray": false
        },
        "name": "cal2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Calendar",
            "name": "Calendar",
            "isArray": false
          },
          "name": "cal1"
        },
        "comment": "the first calendar not altered. cal1 is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Calendar",
            "name": "Calendar",
            "isArray": false
          },
          "name": "cal2"
        },
        "comment": "the second calendar not altered. cal2 is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "true if they represent the same day.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either calendar is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "isSameInstant(java.util.Date date1, java.util.Date date2)",
    "name": "isSameInstant",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date1"
        },
        "comment": "the first date not altered. date1 is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date2"
        },
        "comment": "the second date not altered. date2 is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "true if they represent the same millisecond instant.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      }
    ]
  },
  {
    "signature": "isSameInstant(java.util.Calendar cal1, java.util.Calendar cal2)",
    "name": "isSameInstant",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Calendar",
          "name": "Calendar",
          "isArray": false
        },
        "name": "cal1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Calendar",
          "name": "Calendar",
          "isArray": false
        },
        "name": "cal2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Calendar",
            "name": "Calendar",
            "isArray": false
          },
          "name": "cal1"
        },
        "comment": "the first calendar not altered. cal1 is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Calendar",
            "name": "Calendar",
            "isArray": false
          },
          "name": "cal2"
        },
        "comment": "the second calendar not altered. cal2 is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "true if they represent the same millisecond instant.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either date is null.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "isSameLocalTime(java.util.Calendar cal1, java.util.Calendar cal2)",
    "name": "isSameLocalTime",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Calendar",
          "name": "Calendar",
          "isArray": false
        },
        "name": "cal1"
      },
      {
        "type": {
          "qualifiedName": "java.util.Calendar",
          "name": "Calendar",
          "isArray": false
        },
        "name": "cal2"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Calendar",
            "name": "Calendar",
            "isArray": false
          },
          "name": "cal1"
        },
        "comment": "the first calendar not altered. cal1 is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Calendar",
            "name": "Calendar",
            "isArray": false
          },
          "name": "cal2"
        },
        "comment": "the second calendar not altered. cal2 is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "true if they represent the same millisecond instant.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "either date is null.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "parseDate(java.lang.String str, java.lang.String[] parsePatterns)",
    "name": "parseDate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      },
      {
        "type": {
          "qualifiedName": "[Ljava.lang.String;",
          "name": "String[]",
          "isArray": true
        },
        "name": "parsePatterns"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the date to parse. str is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "[Ljava.lang.String;",
            "name": "String[]",
            "isArray": true
          },
          "name": "parsePatterns"
        },
        "comment": "the date format patterns to use see SimpleDateFormat. parsePatterns is not null.",
        "kind": "PARAM",
        "condition": "(args[1]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the parsed date.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date string or pattern array is null.",
        "kind": "THROWS",
        "condition": "args[0]==null || args[1]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.text.ParseException",
          "name": "ParseException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "none of the date patterns were suitable.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "addYears(java.util.Date date, int amount)",
    "name": "addYears",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date. date is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new date object with the amount added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addMonths(java.util.Date date, int amount)",
    "name": "addMonths",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date. date is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new date object with the amount added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addWeeks(java.util.Date date, int amount)",
    "name": "addWeeks",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date. date is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new date object with the amount added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addDays(java.util.Date date, int amount)",
    "name": "addDays",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date. date is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new date object with the amount added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addHours(java.util.Date date, int amount)",
    "name": "addHours",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date. date is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new date object with the amount added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addMinutes(java.util.Date date, int amount)",
    "name": "addMinutes",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date. date is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new date object with the amount added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addSeconds(java.util.Date date, int amount)",
    "name": "addSeconds",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date. date is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new date object with the amount added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "addMilliseconds(java.util.Date date, int amount)",
    "name": "addMilliseconds",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date. date is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new date object with the amount added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "add(java.util.Date date, int calendarField, int amount)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "calendarField"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "amount"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date. date is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "calendarField"
        },
        "comment": "the calendar field to add to.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "amount"
        },
        "comment": "the amount to add negative.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the new date object with the amount added.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "round(java.util.Date date, int field)",
    "name": "round",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "field"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date to work with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field from Calendar or SEMI_MONTH.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the rounded date.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the year is over 280 million.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "round(java.util.Calendar date, int field)",
    "name": "round",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Calendar",
      "name": "java.util.Calendar",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Calendar",
          "name": "Calendar",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "field"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Calendar",
            "name": "Calendar",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date to work with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field from Calendar or SEMI_MONTH.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the rounded date (a different object).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the year is over 280 million.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "round(java.lang.Object date, int field)",
    "name": "round",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "field"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date to work with either Date or Calendar.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field from Calendar or SEMI_MONTH.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the rounded date.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the object type is not a Date or Calendar.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the year is over 280 million.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "truncate(java.util.Date date, int field)",
    "name": "truncate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "field"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date to work with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field from Calendar or SEMI_MONTH.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the rounded date.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the year is over 280 million.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "truncate(java.util.Calendar date, int field)",
    "name": "truncate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Calendar",
      "name": "java.util.Calendar",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Calendar",
          "name": "Calendar",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "field"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Calendar",
            "name": "Calendar",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date to work with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field from Calendar or SEMI_MONTH.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the rounded date (a different object).",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the year is over 280 million.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "truncate(java.lang.Object date, int field)",
    "name": "truncate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Date",
      "name": "java.util.Date",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "date"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "field"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "date"
        },
        "comment": "the date to work with either Date or Calendar.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "field"
        },
        "comment": "the field from Calendar or SEMI_MONTH.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "the rounded date.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the object type is not a Date or Calendar.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the year is over 280 million.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "iterator(java.util.Date focus, int rangeStyle)",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "java.util.Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Date",
          "name": "Date",
          "isArray": false
        },
        "name": "focus"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rangeStyle"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Date",
            "name": "Date",
            "isArray": false
          },
          "name": "focus"
        },
        "comment": "the date to work with. focus is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "rangeStyle"
        },
        "comment": "the style constant to use. . rangeStyle is one of DateUtils#RANGE_MONTH_SUNDAY DateUtils#RANGE_MONTH_MONDAY DateUtils#RANGE_WEEK_SUNDAY DateUtils#RANGE_WEEK_MONDAY DateUtils#RANGE_WEEK_RELATIVE DateUtils#RANGE_WEEK_CENTER.",
        "kind": "PARAM",
        "condition": "args[1]==1"
      }
    ],
    "returnTag": {
      "comment": "the date iterator, which always returns Calendar instances.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the rangeStyle is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "iterator(java.util.Calendar focus, int rangeStyle)",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "java.util.Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.util.Calendar",
          "name": "Calendar",
          "isArray": false
        },
        "name": "focus"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rangeStyle"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.util.Calendar",
            "name": "Calendar",
            "isArray": false
          },
          "name": "focus"
        },
        "comment": "the date to work with.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "rangeStyle"
        },
        "comment": "the style constant to use. . rangeStyle is one of DateUtils#RANGE_MONTH_SUNDAY DateUtils#RANGE_MONTH_MONDAY DateUtils#RANGE_WEEK_SUNDAY DateUtils#RANGE_WEEK_MONDAY DateUtils#RANGE_WEEK_RELATIVE DateUtils#RANGE_WEEK_CENTER.",
        "kind": "PARAM",
        "condition": "args[1]==1"
      }
    ],
    "returnTag": {
      "comment": "the date iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the rangeStyle is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "iterator(java.lang.Object focus, int rangeStyle)",
    "name": "iterator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.time.DateUtils",
      "name": "DateUtils",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.time.DateUtils",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.util.Iterator",
      "name": "java.util.Iterator",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "focus"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "rangeStyle"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "focus"
        },
        "comment": "the date to work with either Date or Calendar.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "rangeStyle"
        },
        "comment": "the style constant to use. . rangeStyle is one of the range styles listed for the iterator(Calendar int) method.",
        "kind": "PARAM",
        "condition": "args[1]==1"
      }
    ],
    "returnTag": {
      "comment": "the date iterator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the date is null.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the object type is not a Date or Calendar.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  }
]