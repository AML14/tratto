[
  {
    "signature": "getFraction(int numerator, int denominator)",
    "name": "getFraction",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numerator"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "denominator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "numerator"
        },
        "comment": "the numerator for example the three in 'three sevenths'.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "denominator"
        },
        "comment": "the denominator for example the seven in 'three sevenths'.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new fraction instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the denomiator is zero.",
        "kind": "THROWS",
        "condition": "args[1]==0"
      }
    ]
  },
  {
    "signature": "getFraction(int whole, int numerator, int denominator)",
    "name": "getFraction",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "whole"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numerator"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "denominator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "whole"
        },
        "comment": "the whole number for example the one in 'one and three sevenths'.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "numerator"
        },
        "comment": "the numerator for example the three in 'one and three sevenths'.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "denominator"
        },
        "comment": "the denominator for example the seven in 'one and three sevenths'.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new fraction instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the denomiator is zero.",
        "kind": "THROWS",
        "condition": "args[2]==0"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the denominator is negative.",
        "kind": "THROWS",
        "condition": "args[2]<0"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the numerator is negative.",
        "kind": "THROWS",
        "condition": "args[1]<0"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the resulting numerator exceeds Integer.MAX_VALUE.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getReducedFraction(int numerator, int denominator)",
    "name": "getReducedFraction",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "numerator"
      },
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "denominator"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "numerator"
        },
        "comment": "the numerator for example the three in 'three sevenths'.",
        "kind": "PARAM",
        "condition": ""
      },
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "denominator"
        },
        "comment": "the denominator for example the seven in 'three sevenths'.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new fraction instance, with the numerator and denominator reduced.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the denominator is zero.",
        "kind": "THROWS",
        "condition": "args[1]==0"
      }
    ]
  },
  {
    "signature": "getFraction(double value)",
    "name": "getFraction",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "double",
          "name": "double",
          "isArray": false
        },
        "name": "value"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "double",
            "name": "double",
            "isArray": false
          },
          "name": "value"
        },
        "comment": "value is double. double value to convert.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "a new fraction instance that is close to the value.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "|value| > Integer.MAX_VALUE or value = NaN.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the calculated denominator is zero.",
        "kind": "THROWS",
        "condition": "receiverObjectID.getDenominator()==0"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the the algorithm does not converge.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getFraction(java.lang.String str)",
    "name": "getFraction",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.String",
          "name": "String",
          "isArray": false
        },
        "name": "str"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.String",
            "name": "String",
            "isArray": false
          },
          "name": "str"
        },
        "comment": "the string to parse. str is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "the new Fraction instance.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the string is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NumberFormatException",
          "name": "NumberFormatException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the number format is invalid.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "getNumerator()",
    "name": "getNumerator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the numerator fraction part.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getDenominator()",
    "name": "getDenominator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the denominator fraction part.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getProperNumerator()",
    "name": "getProperNumerator",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the numerator fraction part of a proper fraction, always positive.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "getProperWhole()",
    "name": "getProperWhole",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the whole fraction part of a proper fraction, that includes the sign.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "intValue()",
    "name": "intValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the whole number fraction part.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "longValue()",
    "name": "longValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "long",
      "name": "long",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the whole number fraction part.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "floatValue()",
    "name": "floatValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "float",
      "name": "float",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the fraction as a float.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "doubleValue()",
    "name": "doubleValue",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "double",
      "name": "double",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "the fraction as a double.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "reduce()",
    "name": "reduce",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new reduced fraction instance, or this if no simplification possible.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "invert()",
    "name": "invert",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new fraction instance with the numerator and denominator inverted.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the fraction represents zero.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "negate()",
    "name": "negate",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a new fraction instance with the opposite signed numerator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "abs()",
    "name": "abs",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "this if fraction is positive, or a new positive fraction instance with the opposite signed numerator.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "pow(int power)",
    "name": "pow",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "int",
          "name": "int",
          "isArray": false
        },
        "name": "power"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "int",
            "name": "int",
            "isArray": false
          },
          "name": "power"
        },
        "comment": "the power to raise the fraction to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "this if the power is one, ONE if the power is zero (even if the fraction equals ZERO) or a new fraction instance raised to the appropriate power.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the resulting numerator or denominator exceeds Integer.MAX_VALUE.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "add(org.apache.commons.lang.math.Fraction fraction)",
    "name": "add",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.math.Fraction",
          "name": "Fraction",
          "isArray": false
        },
        "name": "fraction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.math.Fraction",
            "name": "Fraction",
            "isArray": false
          },
          "name": "fraction"
        },
        "comment": "the fraction to add. fraction is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a Fraction instance with the resulting values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the fraction is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the resulting numerator or denominator exceeds Integer.MAX_VALUE.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "subtract(org.apache.commons.lang.math.Fraction fraction)",
    "name": "subtract",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.math.Fraction",
          "name": "Fraction",
          "isArray": false
        },
        "name": "fraction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.math.Fraction",
            "name": "Fraction",
            "isArray": false
          },
          "name": "fraction"
        },
        "comment": "the fraction to subtract. fraction is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a Fraction instance with the resulting values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the fraction is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the resulting numerator or denominator cannot be represented in an int.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "multiplyBy(org.apache.commons.lang.math.Fraction fraction)",
    "name": "multiplyBy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.math.Fraction",
          "name": "Fraction",
          "isArray": false
        },
        "name": "fraction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.math.Fraction",
            "name": "Fraction",
            "isArray": false
          },
          "name": "fraction"
        },
        "comment": "the fraction to multiply by. fraction is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a Fraction instance with the resulting values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the fraction is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the resulting numerator or denominator exceeds Integer.MAX_VALUE.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "divideBy(org.apache.commons.lang.math.Fraction fraction)",
    "name": "divideBy",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "org.apache.commons.lang.math.Fraction",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "org.apache.commons.lang.math.Fraction",
          "name": "Fraction",
          "isArray": false
        },
        "name": "fraction"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "org.apache.commons.lang.math.Fraction",
            "name": "Fraction",
            "isArray": false
          },
          "name": "fraction"
        },
        "comment": "the fraction to divide by. fraction is not null.",
        "kind": "PARAM",
        "condition": "(args[0]==null) == false"
      }
    ],
    "returnTag": {
      "comment": "a Fraction instance with the resulting values.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.IllegalArgumentException",
          "name": "IllegalArgumentException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the fraction is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the fraction to divide by is zero.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ArithmeticException",
          "name": "ArithmeticException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the resulting numerator or denominator exceeds Integer.MAX_VALUE.",
        "kind": "THROWS",
        "condition": ""
      }
    ]
  },
  {
    "signature": "equals(java.lang.Object obj)",
    "name": "equals",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "boolean",
      "name": "boolean",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "obj"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "obj"
        },
        "comment": "the reference object with which to compare.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "true if this object is equal.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "hashCode()",
    "name": "hashCode",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a hash code value for this object.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "compareTo(java.lang.Object object)",
    "name": "compareTo",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "int",
      "name": "int",
      "isArray": false
    },
    "parameters": [
      {
        "type": {
          "qualifiedName": "java.lang.Object",
          "name": "Object",
          "isArray": false
        },
        "name": "object"
      }
    ],
    "paramTags": [
      {
        "parameter": {
          "type": {
            "qualifiedName": "java.lang.Object",
            "name": "Object",
            "isArray": false
          },
          "name": "object"
        },
        "comment": "the object to compare to.",
        "kind": "PARAM",
        "condition": ""
      }
    ],
    "returnTag": {
      "comment": "-1 if this is less, 0 if equal, +1 if greater.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": [
      {
        "exceptionType": {
          "qualifiedName": "java.lang.ClassCastException",
          "name": "ClassCastException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the object is not a Fraction.",
        "kind": "THROWS",
        "condition": ""
      },
      {
        "exceptionType": {
          "qualifiedName": "java.lang.NullPointerException",
          "name": "NullPointerException",
          "isArray": false
        },
        "codeTags": [],
        "comment": "the object is null.",
        "kind": "THROWS",
        "condition": "args[0]==null"
      }
    ]
  },
  {
    "signature": "toString()",
    "name": "toString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a String form of the fraction.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  },
  {
    "signature": "toProperString()",
    "name": "toProperString",
    "containingClass": {
      "qualifiedName": "org.apache.commons.lang.math.Fraction",
      "name": "Fraction",
      "isArray": false
    },
    "targetClass": "org.apache.commons.lang.math.Fraction",
    "isVarArgs": false,
    "returnType": {
      "qualifiedName": "java.lang.String",
      "name": "java.lang.String",
      "isArray": false
    },
    "parameters": [],
    "paramTags": [],
    "returnTag": {
      "comment": "a String form of the fraction.",
      "kind": "RETURN",
      "condition": ""
    },
    "throwsTags": []
  }
]